{"version":3,"sources":["webpack:///storaged/test-util.min.js","webpack:///webpack/bootstrap d64eac40bf421691453c?8a03","webpack:///../pkg/storaged/test-util.js","webpack:///external \"jQuery\"?0cb8","webpack:///external \"cockpit\"?478e","webpack:///../pkg/storaged/utils.js?e77e","webpack:///../pkg/lib/mustache.js?4126","webpack:///../bower_components/mustache/mustache.js?5583","webpack:///../pkg/lib/service.js?56c1","webpack:///../pkg/lib/qunit-tests.js","webpack:///../bower_components/qunit/qunit/qunit.js","webpack:///../~/process/browser.js","webpack:///../bower_components/qunit-tap/lib/qunit-tap.js","webpack:///../pkg/lib/qunit-config.js","webpack:///../~/webpack/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","utils","QUnit","assert","test","checks","expect","length","i","strictEqual","format_delay","sign","n","compare_versions","start","2","jQuery","3","cockpit","5","get_children","client","path","children","blocks_cleartext","push","blocks_ptable","blocks_partitions","forEach","part","IsContainer","blocks_part","ptable_path","Table","IsContained","vgroups","vgroups_lvols","lvol","lvols_block","sync","output","input","depth","na","nb","a","b","attrs","attr","seen","nodeType","nodeName","parentNode","replaceChild","removeChild","nodeValue","attributes","name","value","setAttribute","removeAttribute","firstChild","nextSibling","appendChild","$","mustache","service","_","gettext","C_","to_ints","str","split","map","s","parseInt","a_ints","b_ints","len","Math","min","hostnamed","dbus","proxy","array_find","array","pred","flatten","array_of_arrays","Array","prototype","concat","apply","decode_filename","encoded","utf8_decoder","decode","base64_decode","slice","encode_filename","decoded","base64_encode","utf8_encoder","encode","fmt_size","bytes","format_bytes","fmt_size_long","with_binary_unit","with_decimal_unit","fmt_rate","bytes_per_sec","format_bytes_per_sec","format_temperature","kelvin","celcius","fahrenheit","toFixed","format_fsys_usage","used","total","text","units","parts","join","d","seconds","round","minutes","floor","hours","validate_lvm2_name","match","search","format","block_name","block","PreferredDevice","mdraid_name","mdraid","Name","StaticHostname","host","lvol_name","type","Type","ThinPool","Origin","render","drive_name","drive","name_parts","Vendor","Model","Serial","WWN","get_block_link_target","fmt_part","link","is_lvol","is_crypt","is_part","blocks_crypto","blocks","CryptoBackingDevice","blocks_lvm2","lvols","LogicalVolume","target","mdraids","MDRaid","UUID","VolumeGroup","replace","drives","Drive","html","get_free_blockdevs","is_free","has_fs_label","IdUsage","IdType","block_pvol","is_mpath_member","drives_block","members","drives_multipath_blocks","block_ptable","block_part","blocks_pvol","HintIgnore","Size","make","Description","Object","keys","filter","sort","make_block_path_cmp","block_cmp","DeviceNumber","path_a","path_b","multipathd_service","get_multipathd_service","init_arming_zones","$top","on","was_active","this","hasClass","toggleClass","parents","reset_arming_zone","$btn","$zone","$arm_btn","find","removeClass","get_usage_alerts","fsys","blocks_fsys","pvol","usage","MountPoints","Message","MDRaidMember","fn","amend","data","options","each","el","hide","selector","element","document","querySelector","show_soon","ready","hasAttribute","val","getAttribute","window","clearTimeout","setTimeout","String","6","translate","template","cache","div","createElement","innerHTML","result","extend","view","partials","to_html","send","clearCache","7","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","testRegExp","re","string","RegExp_test","isWhitespace","nonSpaceRe","isFunction","object","escapeRegExp","escapeHtml","entityMap","escapeTags","tags","isArray","Error","RegExp","parseTemplate","stripSpace","hasTag","nonSpace","spaces","tokens","pop","spaceRe","chr","token","openSection","tagRes","scanner","Scanner","sections","eos","pos","scanUntil","charAt","scan","tagRe","whiteRe","eqRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","section","nestedTokens","collector","tail","Context","parentContext",".","parent","Writer","Object_toString","toString","&","<",">","\"","'","/","index","substring","lookup","context","indexOf","names","parse","renderTokens","originalTemplate","subRender","self","buffer","j","jlen","escape","version","defaultWriter","8","wait_valid","callback","wait","valid","with_systemd_manager","done","systemd_manager","systemd_client","superuser","Subscribe","fail","error","console","warn","update_from_unit","exists","unit","LoadState","ActiveState","state","UnitFileState","enabled","dispatchEvent","wait_callbacks","resolve","update_from_service","refresh","refresh_interface","iface","log","props","v","ifaces","notify","on_job_new_removed_refresh","event","number","unit_id","promise","then","call_manager","method","args","call_manager_with_job","dfd","defer","results","pending_jobs","reject","call_manager_with_reload","stop","restart","enable","disable","event_target","LoadUnit","addEventListener","reloading","52","qunitTap","53","process","config","autorun","previousModule","runLoggingCallbacks","failed","moduleStats","bad","passed","all","key","banner","tests","runtime","Date","started","stats","className","altertitle","defined","title","reorder","sessionStorage","removeItem","scrolltop","scrollTo","validTest","include","toLowerCase","fullName","testName","testNumber","inArray","extractStacktrace","e","offset","stack","stacktrace","shift","fileName","sourceURL","line","sourceFromStacktrace","escapeText","synchronize","last","queue","blocking","next","getTime","updateRate","saveGlobal","pollution","noglobals","hasOwn","checkPollution","newGlobals","deletedGlobals","old","diff","pushFailure","splice","prop","addEvent","elem","attachEvent","addEvents","elems","addClass","set","trim","getElementById","registerLoggingCallback","scope","callbacks","hasOwnProperty","Test","settings","assertions","count","onErrorFnPrev","testId","x","setItem","errorString","message","objectValues","obj","vals","is","testEnvironment","currentModule","currentModuleTestEnvironment","asyncTest","expected","arguments","async","nameHtml","moduleTestEnvironment","asserts","current","semaphore","begin","timeout","testTimeout","ok","F","constructor","hidepassed","requireExpects","urlConfig","label","tooltip","testStart","testDone","moduleStart","moduleDone","location","protocol","params","urlParams","decodeURIComponent","isLocal","init","autostart","qunit","insertBefore","reset","fixture","objectType","isNaN","actual","source","details","jsDump","url","querystring","encodeURIComponent","pathname","readyState","load","main","ol","toolbar","selection","urlConfigContainer","moduleFilter","userAgent","numModules","moduleNames","moduleFilterHtml","urlConfigHtml","oldconfig","localeCompare","navigator","tmp","checked","getItem","getElementsByTagName","srcElement","defaultValue","selectedIndex","lastChild","selectBox","selectedModule","onerror","filePath","linerNr","ret","ignoreGlobalErrors","li","href","setup","teardown","current_testEnvironment","notrycatch","run","running","callbackStarted","callbackRuntime","finish","assertion","time","good","collapsed","duration","msg","equal","notEqual","propEqual","equiv","notPropEqual","deepEqual","notDeepEqual","notStrictEqual","throws","expectedOutput","raises","equals","same","bindCallbacks","o","innerEquiv","callers","parentsB","getProto","getPrototypeOf","__proto__","useStrictEquality","boolean","null","nan","date","valueOf","regexp","global","ignoreCase","multiline","sticky","function","caller","loop","aCircular","bCircular","eq","aProperties","bProperties","quote","literal","pre","arr","post","separator","base","indent","inner","up","down","reName","inStack","res","parser","parsers","typeOf","setInterval","item","HTML","extra","indentChar","setParser","unknown","exec","nodelist","node","open","close","tag","functionArgs","l","fromCharCode","functionCode","attribute","ns","os","rows","row","out","oSpace","nSpace","54","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","noop","nextTick","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","55","ary","removeElement","isPlanRequired","conf","isPassed","isFailed","isAssertOkFailed","escapeLineEndings","ltrim","desc","fieldName","fieldValue","formatter","renderIf","shouldRender","formatTestLine","testLine","rest","qunitObject","printLikeFunction","isEnabled","configName","tap","formatDetails","explain","printPlanLine","toCount","puts","initialCount","unsubscribeEvent","eventName","listeners","targetEvents","qu","registeredCallbacks","unsubscribeEvents","eventNames","jsDumpExists","deprecateOption","optionName","fallback","showModuleNameOnFailure","showTestNameOnFailure","showExpectationOnFailure","showSourceOnFailure","flag","noPlan","VERSION","qunitTapVersion","expectedCount","note","diag","arg","unsubscribe","appendCallback","createCallbackAppenderFor","subject","observer","originalLoggingCallback","56","qunit_started","qunit_onerror","file","tap_regex","tests_included","57","webpackPolyfill","deprecate","paths","58"],"mappings":"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","file":"storaged/test-util.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2014 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar utils = __webpack_require__(5);\n\tvar QUnit = __webpack_require__(52);\n\tvar assert = QUnit;\n\t\n\tQUnit.test(\"format_delay\", function() {\n\t    var checks = [\n\t        [ 15550000, \"4 hours, 19 minutes, 10 seconds\" ]\n\t    ];\n\t\n\t    assert.expect(checks.length);\n\t    for (var i = 0; i < checks.length; i++) {\n\t        assert.strictEqual(utils.format_delay(checks[i][0]), checks[i][1],\n\t                           \"format_delay(\" + checks[i][0] + \") = \" + checks[i][1]);\n\t    }\n\t});\n\t\n\tQUnit.test(\"compare_versions\", function() {\n\t    var checks = [\n\t        [ \"\",      \"\",      0 ],\n\t        [ \"0\",     \"0\",     0 ],\n\t        [ \"1\",     \"0\",     1 ],\n\t        [ \"0\",     \"1\",    -1 ],\n\t        [ \"2\",     \"1.9\",   1 ],\n\t        [ \"2.0\",   \"2\",     1 ],\n\t        [ \"2.1.6\", \"2.5\",  -1 ],\n\t        [ \"2..6\",  \"2.0.6\", 0 ],\n\t    ];\n\t\n\t    function sign(n) {\n\t        return (n === 0) ? 0 : (n < 0)? -1 : 1;\n\t    }\n\t\n\t    assert.expect(checks.length);\n\t    for (var i = 0; i < checks.length; i++) {\n\t        assert.strictEqual(sign(utils.compare_versions(checks[i][0], checks[i][1])), checks[i][2],\n\t                           \"compare_versions(\" + checks[i][0] + \", \" + checks[i][1] + \") = \" + checks[i][2]);\n\t    }\n\t});\n\t\n\tQUnit.start();\n\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n\n/***/ 3:\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n\n/***/ 5:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(2);\n\t    var cockpit = __webpack_require__(3);\n\t\n\t    var mustache = __webpack_require__(6);\n\t    var service = __webpack_require__(8);\n\t\n\t    var _ = cockpit.gettext;\n\t    var C_ = cockpit.gettext;\n\t\n\t    /* UTILITIES\n\t     */\n\t\n\t    var utils = { };\n\t\n\t    utils.compare_versions = function compare_versions(a, b) {\n\t        function to_ints(str) {\n\t            return str.split(\".\").map(function (s) { return s ? parseInt(s, 10) : 0; });\n\t        }\n\t\n\t        var a_ints = to_ints(a);\n\t        var b_ints = to_ints(b);\n\t        var len = Math.min(a_ints.length, b_ints.length);\n\t        var i;\n\t\n\t        for (i = 0; i < len; i++) {\n\t            if (a_ints[i] == b_ints[i])\n\t                continue;\n\t            return a_ints[i] - b_ints[i];\n\t        }\n\t\n\t        return a_ints.length - b_ints.length;\n\t    };\n\t\n\t    var hostnamed = cockpit.dbus(\"org.freedesktop.hostname1\").proxy();\n\t\n\t    utils.array_find = function array_find(array, pred) {\n\t        for (var i = 0; i < array.length; i++)\n\t            if (pred(array[i]))\n\t                return array[i];\n\t        return undefined;\n\t    };\n\t\n\t    utils.flatten = function flatten(array_of_arrays) {\n\t        if (array_of_arrays.length > 0)\n\t            return Array.prototype.concat.apply([], array_of_arrays);\n\t        else\n\t            return [ ];\n\t    };\n\t\n\t    utils.decode_filename = function decode_filename(encoded) {\n\t        return cockpit.utf8_decoder().decode(cockpit.base64_decode(encoded).slice(0,-1));\n\t    };\n\t\n\t    utils.encode_filename = function encode_filename(decoded) {\n\t        return cockpit.base64_encode(cockpit.utf8_encoder().encode(decoded).concat([0]));\n\t    };\n\t\n\t    utils.fmt_size = function fmt_size(bytes) {\n\t        return cockpit.format_bytes(bytes, 1024);\n\t    };\n\t\n\t    utils.fmt_size_long = function fmt_size_long(bytes) {\n\t        var with_binary_unit = cockpit.format_bytes(bytes, 1024);\n\t        var with_decimal_unit = cockpit.format_bytes(bytes, 1000);\n\t        /* Translators: Used in \"...\" */\n\t        return with_binary_unit + \", \" + with_decimal_unit + \", \" + bytes + \" \" + C_(\"format-bytes\", \"bytes\");\n\t    };\n\t\n\t    utils.fmt_rate = function fmt_rate(bytes_per_sec) {\n\t        return cockpit.format_bytes_per_sec(bytes_per_sec, 1024);\n\t    };\n\t\n\t    utils.format_temperature = function format_temperature(kelvin) {\n\t        var celcius = kelvin - 273.15;\n\t        var fahrenheit = 9.0 * celcius / 5.0 + 32.0;\n\t        return celcius.toFixed(1) + \"° C / \" + fahrenheit.toFixed(1) + \"° F\";\n\t    };\n\t\n\t    utils.format_fsys_usage = function format_fsys_usage(used, total) {\n\t        var text = \"\";\n\t        var units = 1024;\n\t        var parts = cockpit.format_bytes(total, units, true);\n\t        text = \" / \" + parts.join(\" \");\n\t        units = parts[1];\n\t\n\t        parts = cockpit.format_bytes(used, units, true);\n\t        return parts[0] + text;\n\t    };\n\t\n\t    utils.format_delay = function format_delay(d) {\n\t        var seconds = Math.round(d/1000);\n\t        var minutes = Math.floor(seconds / 60);\n\t        var hours = Math.floor(minutes / 60);\n\t        seconds = seconds - minutes*60;\n\t        minutes = minutes - hours*60;\n\t\n\t        var s = seconds + \" seconds\";\n\t        if (minutes > 0)\n\t            s = minutes + \" minutes, \" + s;\n\t        if (hours > 0)\n\t            s = hours + \" hours, \" + s;\n\t        return s;\n\t    };\n\t\n\t    utils.validate_lvm2_name = function validate_lvm2_name(name) {\n\t        if (name === \"\")\n\t            return _(\"Name cannot be empty.\");\n\t        if (name.length > 127)\n\t            return _(\"Name cannot be longer than 127 characters.\");\n\t        var m = name.match(/[^a-zA-Z0-9+._-]/);\n\t        if (m) {\n\t            if (m[0].search(/\\s+/) === -1)\n\t                return cockpit.format(_(\"Name cannot contain the character '$0'.\"), m[0]);\n\t            else\n\t                    return cockpit.format(_(\"Name cannot contain whitespace.\"), m[0]);\n\t        }\n\t    };\n\t\n\t    utils.block_name = function block_name(block) {\n\t        return utils.decode_filename(block.PreferredDevice);\n\t    };\n\t\n\t    utils.mdraid_name = function mdraid_name(mdraid) {\n\t        if (!mdraid.Name)\n\t            return \"\";\n\t\n\t        var parts = mdraid.Name.split(\":\");\n\t\n\t        if (parts.length != 2)\n\t            return mdraid.Name;\n\t\n\t        if (parts[0] == hostnamed.StaticHostname)\n\t            return parts[1];\n\t        else\n\t            return cockpit.format(_(\"$name (from $host)\"),\n\t                                  { name: parts[1],\n\t                                    host: parts[0]\n\t                                  });\n\t    };\n\t\n\t    utils.lvol_name = function lvol_name(lvol) {\n\t        var type;\n\t        if (lvol.Type == \"pool\")\n\t            type = _(\"Pool for Thin Logical Volumes\");\n\t        else if (lvol.ThinPool != \"/\")\n\t            type =_(\"Thin Logical Volume\");\n\t        else if (lvol.Origin != \"/\")\n\t            type = _(\"Logical Volume (Snapshot)\");\n\t        else\n\t            type = _(\"Logical Volume\");\n\t        return mustache.render('{{Type}} \"{{Name}}\"', { Type: type, Name: lvol.Name });\n\t    };\n\t\n\t    utils.drive_name = function drive_name(drive) {\n\t        var name_parts = [ ];\n\t        if (drive.Vendor)\n\t            name_parts.push(drive.Vendor);\n\t        if (drive.Model)\n\t            name_parts.push(drive.Model);\n\t\n\t        var name = name_parts.join(\" \");\n\t        if (drive.Serial)\n\t            name += \" (\" + drive.Serial + \")\";\n\t        else if (drive.WWN)\n\t            name += \" (\" + drive.WWN + \")\";\n\t\n\t        return name;\n\t    };\n\t\n\t    utils.get_block_link_target = function get_block_link_target(client, path) {\n\t        var is_part, is_crypt, is_lvol;\n\t\n\t        while (true) {\n\t            if (client.blocks_part[path] && client.blocks_ptable[client.blocks_part[path].Table]) {\n\t                is_part = true;\n\t                path = client.blocks_part[path].Table;\n\t            } else if (client.blocks_crypto[path] && client.blocks[client.blocks_crypto[path].CryptoBackingDevice]) {\n\t                is_crypt = true;\n\t                path = client.blocks_crypto[path].CryptoBackingDevice;\n\t            } else\n\t                break;\n\t        }\n\t\n\t        if (client.blocks_lvm2[path] && client.lvols[client.blocks_lvm2[path].LogicalVolume])\n\t            is_lvol = true;\n\t\n\t        function fmt_part(link) {\n\t            // Partitions of logical volumes are shown as just logical volumes.\n\t            if (is_lvol && is_crypt)\n\t                return cockpit.format(_(\"<span>Encrypted Logical Volume of $0</span>\"), link);\n\t            else if (is_part && is_crypt)\n\t                return cockpit.format(_(\"<span>Encrypted Partition of $0</span>\"), link);\n\t            else if (is_lvol)\n\t                return cockpit.format(_(\"<span>Logical Volume of $0</span>\"), link);\n\t            else if (is_part)\n\t                return cockpit.format(_(\"<span>Partition of $0</span>\"), link);\n\t            else if (is_crypt)\n\t                return cockpit.format(_(\"<span>Encrypted $0</span>\"), link);\n\t            else\n\t                return link;\n\t        }\n\t\n\t        var block = client.blocks[path];\n\t        if (!block)\n\t            return;\n\t\n\t        var type, target, name;\n\t        if (client.mdraids[block.MDRaid]) {\n\t            type = \"mdraid\";\n\t            target = client.mdraids[block.MDRaid].UUID;\n\t            name = cockpit.format(_(\"RAID Device $0\"), utils.mdraid_name(client.mdraids[block.MDRaid]));\n\t        } else if (client.blocks_lvm2[path] &&\n\t                   client.lvols[client.blocks_lvm2[path].LogicalVolume] &&\n\t                   client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup]) {\n\t            type = \"vgroup\";\n\t            target = client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup].Name;\n\t            name = cockpit.format(_(\"Volume Group $0\"), target);\n\t        } else {\n\t            type = \"block\";\n\t            target = utils.block_name(block).replace(/^\\/dev\\//, \"\");\n\t            if (client.drives[block.Drive])\n\t                name = utils.drive_name(client.drives[block.Drive]);\n\t            else\n\t                name = utils.block_name(block);\n\t        }\n\t\n\t        return {\n\t            type: type,\n\t            target: target,\n\t            html: fmt_part(mustache.render('<a data-goto-{{type}}=\"{{target}}\">{{name}}</a>',\n\t                                           { type: type, target: target, name: name }))\n\t        };\n\t    };\n\t\n\t    utils.get_free_blockdevs = function get_free_blockdevs(client) {\n\t        function is_free(path) {\n\t            var block = client.blocks[path];\n\t            var block_ptable = client.blocks_ptable[path];\n\t            var block_part = client.blocks_part[path];\n\t            var block_pvol = client.blocks_pvol[path];\n\t\n\t            function has_fs_label() {\n\t                if (!block.IdUsage)\n\t                    return false;\n\t                // Devices with a LVM2_member label need to actually be\n\t                // associated with a volume group.\n\t                if (block.IdType == 'LVM2_member' && (!block_pvol || !client.vgroups[block_pvol.VolumeGroup]))\n\t                    return false;\n\t                return true;\n\t            }\n\t\n\t            function is_mpath_member() {\n\t                if (!client.drives[block.Drive])\n\t                    return false;\n\t                if (!client.drives_block[block.Drive]) {\n\t                    // Broken multipath drive\n\t                    return true;\n\t                }\n\t                var members = client.drives_multipath_blocks[block.Drive];\n\t                for (var i = 0; i < members.length; i++) {\n\t                    if (members[i] == block)\n\t                        return true;\n\t                }\n\t                return false;\n\t            }\n\t\n\t            return (!block.HintIgnore &&\n\t                    block.Size > 0 &&\n\t                    !has_fs_label() &&\n\t                    !is_mpath_member() &&\n\t                    !block_ptable &&\n\t                    !(block_part && block_part.IsContainer));\n\t        }\n\t\n\t        function make(path) {\n\t            var block = client.blocks[path];\n\t            var link = utils.get_block_link_target(client, path);\n\t            var text = $('<div>').html(link.html).text();\n\t\n\t            return {\n\t                path: path,\n\t                Name: utils.block_name(block),\n\t                Description: utils.fmt_size(block.Size) + \" \" + text\n\t            };\n\t        }\n\t\n\t        return Object.keys(client.blocks).filter(is_free).sort(utils.make_block_path_cmp(client)).map(make);\n\t    };\n\t\n\t    /* Comparison function for sorting lists of block devices.\n\t\n\t       We sort by major:minor numbers to get the expected order when\n\t       there are more than 10 devices of a kind.  For example, if you\n\t       have 20 loopback devices named loop0 to loop19, sorting them\n\t       alphabetically would put them in the wrong order\n\t\n\t           loop0, loop1, loop10, loop11, ..., loop2, ...\n\t\n\t       Sorting by major:minor is an easy way to do the right thing.\n\t    */\n\t\n\t    utils.block_cmp = function block_cmp(a, b) {\n\t        return a.DeviceNumber - b.DeviceNumber;\n\t    };\n\t\n\t    utils.make_block_path_cmp = function(client) {\n\t        return function(path_a, path_b) {\n\t            return utils.block_cmp(client.blocks[path_a], client.blocks[path_b]);\n\t        };\n\t    };\n\t\n\t    var multipathd_service;\n\t\n\t    utils.get_multipathd_service = function() {\n\t        if (!multipathd_service)\n\t            multipathd_service = service.proxy(\"multipathd\");\n\t        return multipathd_service;\n\t    };\n\t\n\t    utils.init_arming_zones = function init_arming_zones($top) {\n\t        $top.on('click', 'button.arm-button', function () {\n\t            var was_active = $(this).hasClass('active');\n\t            $(this).toggleClass('active', !was_active);\n\t            $(this).parents('.arming-zone').toggleClass('armed', !was_active);\n\t        });\n\t    };\n\t\n\t    utils.reset_arming_zone = function reset_arming_zone($btn) {\n\t        var $zone = $btn.parents('.arming-zone');\n\t        var $arm_btn = $zone.find('.arm-button');\n\t        $arm_btn.removeClass('active');\n\t        $zone.removeClass('armed');\n\t    };\n\t\n\t\n\t    function get_children(client, path) {\n\t        var children = [ ];\n\t\n\t        if (client.blocks_cleartext[path]) {\n\t            children.push(client.blocks_cleartext[path].path);\n\t        }\n\t\n\t        if (client.blocks_ptable[path]) {\n\t            client.blocks_partitions[path].forEach(function (part) {\n\t                if (!part.IsContainer)\n\t                    children.push(part.path);\n\t            });\n\t        }\n\t\n\t        if (client.blocks_part[path] && client.blocks_part[path].IsContainer) {\n\t            var ptable_path = client.blocks_part[path].Table;\n\t            client.blocks_partitions[ptable_path].forEach(function (part) {\n\t                if (part.IsContained)\n\t                    children.push(part.path);\n\t            });\n\t        }\n\t\n\t        if (client.vgroups[path]) {\n\t            client.vgroups_lvols[path].forEach(function (lvol) {\n\t                if (client.lvols_block[lvol.path])\n\t                    children.push(client.lvols_block[lvol.path].path);\n\t            });\n\t        }\n\t\n\t        return children;\n\t    }\n\t\n\t    utils.get_usage_alerts = function get_usage_alerts(client, path) {\n\t        var block = client.blocks[path];\n\t        var fsys = client.blocks_fsys[path];\n\t        var pvol = client.blocks_pvol[path];\n\t\n\t        var usage =\n\t            utils.flatten(get_children(client, path).map(\n\t                function (p) { return utils.get_usage_alerts (client, p); }));\n\t\n\t        if (fsys && fsys.MountPoints.length > 0)\n\t            usage.push({ usage: 'mounted',\n\t                         Message: cockpit.format(_(\"Device $0 is mounted on $1\"),\n\t                                                 utils.block_name(block),\n\t                                                 utils.decode_filename(fsys.MountPoints[0]))\n\t                       });\n\t        if (block && client.mdraids[block.MDRaidMember])\n\t            usage.push({ usage: 'mdraid-member',\n\t                         Message: cockpit.format(_(\"Device $0 is a member of RAID Array $1\"),\n\t                                                 utils.block_name(block),\n\t                                                 utils.mdraid_name(client.mdraids[block.MDRaidMember]))\n\t                       });\n\t        if (pvol && client.vgroups[pvol.VolumeGroup])\n\t            usage.push({ usage: 'pvol',\n\t                         Message: cockpit.format(_(\"Device $0 is a physical volume of $1\"),\n\t                                                 utils.block_name(block),\n\t                                                 client.vgroups[pvol.VolumeGroup].Name)\n\t                       });\n\t\n\t        return usage;\n\t    };\n\t\n\t    /* jQuery.amend function. This will be removed as we move towards React */\n\t\n\t    function sync(output, input, depth) {\n\t        var na, nb, a, b, i;\n\t        var attrs, attr, seen;\n\t\n\t        if (depth > 0) {\n\t            if (output.nodeType != input.nodeType ||\n\t                output.nodeName != input.nodeName ||\n\t                (output.nodeType != 1 && output.nodeType != 3)) {\n\t                output.parentNode.replaceChild(input.parentNode.removeChild(input), output);\n\t                return;\n\t\n\t            } else if (output.nodeType == 3) {\n\t                if (output.nodeValue != input.nodeValue)\n\t                    output.nodeValue = input.nodeValue;\n\t                return;\n\t            }\n\t        }\n\t\n\t        if (output.nodeType == 1) {\n\t\n\t            /* Sync attributes */\n\t            if (depth > 0) {\n\t                seen = { };\n\t                attrs = output.attributes;\n\t                for (i = attrs.length - 1; i >= 0; i--)\n\t                    seen[attrs[i].name] = attrs[i].value;\n\t                for (i = input.attributes.length - 1; i >= 0; i--) {\n\t                    attr = input.attributes[i];\n\t                    if (seen[attr.name] !== attr.value)\n\t                        output.setAttribute(attr.name, attr.value);\n\t                    delete seen[attr.name];\n\t                }\n\t                for (i in seen)\n\t                    output.removeAttribute(i);\n\t            }\n\t\n\t            /* Sync children */\n\t            na = output.firstChild;\n\t            nb = input.firstChild;\n\t            for(;;) {\n\t                a = na;\n\t                b = nb;\n\t                while (a && a.nodeType != 1 && a.nodeType != 3)\n\t                    a = a.nextSibling;\n\t                while (b && b.nodeType != 1 && b.nodeType != 3)\n\t                    b = b.nextSibling;\n\t                if (!a && !b) {\n\t                    break;\n\t                } else if (!a) {\n\t                    na = null;\n\t                    nb = b.nextSibling;\n\t                    output.appendChild(input.removeChild(b));\n\t                } else if (!b) {\n\t                    na = a.nextSibling;\n\t                    nb = null;\n\t                    output.removeChild(a);\n\t                } else {\n\t                    na = a.nextSibling;\n\t                    nb = b.nextSibling;\n\t                    sync(a, b, (depth || 0) + 1);\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    $.fn.amend = function amend(data, options) {\n\t        this.each(function() {\n\t            var el = $(\"<div>\").html(data);\n\t            sync(this, el[0], 0);\n\t        });\n\t        return this;\n\t    };\n\t\n\t    /* Prevent flicker due to the marriage of jQuery and React here */\n\t    utils.hide = function hide(selector) {\n\t        var element = document.querySelector(\"#storage-detail\");\n\t        element.setAttribute(\"hidden\", \"\");\n\t    };\n\t\n\t    utils.show_soon = function show_soon(selector, ready) {\n\t        var element = document.querySelector(selector);\n\t        if (!element.hasAttribute(\"hidden\"))\n\t            return;\n\t        var val = element.getAttribute(\"hidden\");\n\t        if (ready) {\n\t            element.removeAttribute(\"hidden\");\n\t            window.clearTimeout(parseInt(val, 10));\n\t        } else if (!val) {\n\t            val = window.setTimeout(function() {\n\t                show_soon(selector, true);\n\t            }, 2000);\n\t            element.setAttribute(\"hidden\", String(val));\n\t        }\n\t    };\n\t\n\t    module.exports = utils;\n\t}());\n\n\n/***/ },\n\n/***/ 6:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar cockpit = __webpack_require__(3);\n\tvar mustache = __webpack_require__(7);\n\t\n\t/*\n\t * Turns a mustache template into a translated mustache template\n\t * by preparsing it and translating it.\n\t */\n\tvar cache = { };\n\t\n\tfunction translate(template) {\n\t    if (template in cache)\n\t        return cache[template];\n\t    var div = document.createElement(\"div\");\n\t    div.innerHTML = template;\n\t    cockpit.translate(div);\n\t    var result = div.innerHTML;\n\t    cache[template] = result;\n\t    return result;\n\t}\n\t\n\t/* Just like the mustache object, except for translated */\n\tmodule.exports = cockpit.extend({ }, mustache, {\n\t    render: function render(template, view, partials) {\n\t        return translate(mustache.render(template, view, partials));\n\t    },\n\t    to_html: function to_html(template, view, partials, send) {\n\t        return translate(mustache.to_html(template, view, partials, send));\n\t    },\n\t    clearCache: function clearCache() {\n\t        cache = { };\n\t        return mustache.clearCache();\n\t    }\n\t});\n\n\n/***/ },\n\n/***/ 7:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * mustache.js - Logic-less {{mustache}} templates with JavaScript\n\t * http://github.com/janl/mustache.js\n\t */\n\t\n\t/*global define: false*/\n\t\n\t(function (root, factory) {\n\t  if (typeof exports === \"object\" && exports) {\n\t    factory(exports); // CommonJS\n\t  } else {\n\t    var mustache = {};\n\t    factory(mustache);\n\t    if (true) {\n\t      !(__WEBPACK_AMD_DEFINE_FACTORY__ = (mustache), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n\t    } else {\n\t      root.Mustache = mustache; // <script>\n\t    }\n\t  }\n\t}(this, function (mustache) {\n\t\n\t  var whiteRe = /\\s*/;\n\t  var spaceRe = /\\s+/;\n\t  var nonSpaceRe = /\\S/;\n\t  var eqRe = /\\s*=/;\n\t  var curlyRe = /\\s*\\}/;\n\t  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\t\n\t  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n\t  // See https://github.com/janl/mustache.js/issues/189\n\t  var RegExp_test = RegExp.prototype.test;\n\t  function testRegExp(re, string) {\n\t    return RegExp_test.call(re, string);\n\t  }\n\t\n\t  function isWhitespace(string) {\n\t    return !testRegExp(nonSpaceRe, string);\n\t  }\n\t\n\t  var Object_toString = Object.prototype.toString;\n\t  var isArray = Array.isArray || function (object) {\n\t    return Object_toString.call(object) === '[object Array]';\n\t  };\n\t\n\t  function isFunction(object) {\n\t    return typeof object === 'function';\n\t  }\n\t\n\t  function escapeRegExp(string) {\n\t    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n\t  }\n\t\n\t  var entityMap = {\n\t    \"&\": \"&amp;\",\n\t    \"<\": \"&lt;\",\n\t    \">\": \"&gt;\",\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    \"/\": '&#x2F;'\n\t  };\n\t\n\t  function escapeHtml(string) {\n\t    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n\t      return entityMap[s];\n\t    });\n\t  }\n\t\n\t  function escapeTags(tags) {\n\t    if (!isArray(tags) || tags.length !== 2) {\n\t      throw new Error('Invalid tags: ' + tags);\n\t    }\n\t\n\t    return [\n\t      new RegExp(escapeRegExp(tags[0]) + \"\\\\s*\"),\n\t      new RegExp(\"\\\\s*\" + escapeRegExp(tags[1]))\n\t    ];\n\t  }\n\t\n\t  /**\n\t   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n\t   * argument is given here it must be an array with two string values: the\n\t   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n\t   * course, the default is to use mustaches (i.e. mustache.tags).\n\t   *\n\t   * A token is an array with at least 4 elements. The first element is the\n\t   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n\t   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n\t   * all template text that appears outside a symbol this element is \"text\".\n\t   *\n\t   * The second element of a token is its \"value\". For mustache tags this is\n\t   * whatever else was inside the tag besides the opening symbol. For text tokens\n\t   * this is the text itself.\n\t   *\n\t   * The third and fourth elements of the token are the start and end indices\n\t   * in the original template of the token, respectively.\n\t   *\n\t   * Tokens that are the root node of a subtree contain two more elements: an\n\t   * array of tokens in the subtree and the index in the original template at which\n\t   * the closing tag for that section begins.\n\t   */\n\t  function parseTemplate(template, tags) {\n\t    tags = tags || mustache.tags;\n\t    template = template || '';\n\t\n\t    if (typeof tags === 'string') {\n\t      tags = tags.split(spaceRe);\n\t    }\n\t\n\t    var tagRes = escapeTags(tags);\n\t    var scanner = new Scanner(template);\n\t\n\t    var sections = [];     // Stack to hold section tokens\n\t    var tokens = [];       // Buffer to hold the tokens\n\t    var spaces = [];       // Indices of whitespace tokens on the current line\n\t    var hasTag = false;    // Is there a {{tag}} on the current line?\n\t    var nonSpace = false;  // Is there a non-space char on the current line?\n\t\n\t    // Strips all whitespace tokens array for the current line\n\t    // if there was a {{#tag}} on it and otherwise only space.\n\t    function stripSpace() {\n\t      if (hasTag && !nonSpace) {\n\t        while (spaces.length) {\n\t          delete tokens[spaces.pop()];\n\t        }\n\t      } else {\n\t        spaces = [];\n\t      }\n\t\n\t      hasTag = false;\n\t      nonSpace = false;\n\t    }\n\t\n\t    var start, type, value, chr, token, openSection;\n\t    while (!scanner.eos()) {\n\t      start = scanner.pos;\n\t\n\t      // Match any text between tags.\n\t      value = scanner.scanUntil(tagRes[0]);\n\t      if (value) {\n\t        for (var i = 0, len = value.length; i < len; ++i) {\n\t          chr = value.charAt(i);\n\t\n\t          if (isWhitespace(chr)) {\n\t            spaces.push(tokens.length);\n\t          } else {\n\t            nonSpace = true;\n\t          }\n\t\n\t          tokens.push(['text', chr, start, start + 1]);\n\t          start += 1;\n\t\n\t          // Check for whitespace on the current line.\n\t          if (chr === '\\n') {\n\t            stripSpace();\n\t          }\n\t        }\n\t      }\n\t\n\t      // Match the opening tag.\n\t      if (!scanner.scan(tagRes[0])) break;\n\t      hasTag = true;\n\t\n\t      // Get the tag type.\n\t      type = scanner.scan(tagRe) || 'name';\n\t      scanner.scan(whiteRe);\n\t\n\t      // Get the tag value.\n\t      if (type === '=') {\n\t        value = scanner.scanUntil(eqRe);\n\t        scanner.scan(eqRe);\n\t        scanner.scanUntil(tagRes[1]);\n\t      } else if (type === '{') {\n\t        value = scanner.scanUntil(new RegExp('\\\\s*' + escapeRegExp('}' + tags[1])));\n\t        scanner.scan(curlyRe);\n\t        scanner.scanUntil(tagRes[1]);\n\t        type = '&';\n\t      } else {\n\t        value = scanner.scanUntil(tagRes[1]);\n\t      }\n\t\n\t      // Match the closing tag.\n\t      if (!scanner.scan(tagRes[1])) {\n\t        throw new Error('Unclosed tag at ' + scanner.pos);\n\t      }\n\t\n\t      token = [ type, value, start, scanner.pos ];\n\t      tokens.push(token);\n\t\n\t      if (type === '#' || type === '^') {\n\t        sections.push(token);\n\t      } else if (type === '/') {\n\t        // Check section nesting.\n\t        openSection = sections.pop();\n\t\n\t        if (!openSection) {\n\t          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\t        }\n\t        if (openSection[1] !== value) {\n\t          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n\t        }\n\t      } else if (type === 'name' || type === '{' || type === '&') {\n\t        nonSpace = true;\n\t      } else if (type === '=') {\n\t        // Set the tags for the next time around.\n\t        tagRes = escapeTags(tags = value.split(spaceRe));\n\t      }\n\t    }\n\t\n\t    // Make sure there are no open sections when we're done.\n\t    openSection = sections.pop();\n\t    if (openSection) {\n\t      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\t    }\n\t\n\t    return nestTokens(squashTokens(tokens));\n\t  }\n\t\n\t  /**\n\t   * Combines the values of consecutive text tokens in the given `tokens` array\n\t   * to a single token.\n\t   */\n\t  function squashTokens(tokens) {\n\t    var squashedTokens = [];\n\t\n\t    var token, lastToken;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      if (token) {\n\t        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n\t          lastToken[1] += token[1];\n\t          lastToken[3] = token[3];\n\t        } else {\n\t          squashedTokens.push(token);\n\t          lastToken = token;\n\t        }\n\t      }\n\t    }\n\t\n\t    return squashedTokens;\n\t  }\n\t\n\t  /**\n\t   * Forms the given array of `tokens` into a nested tree structure where\n\t   * tokens that represent a section have two additional items: 1) an array of\n\t   * all tokens that appear in that section and 2) the index in the original\n\t   * template that represents the end of that section.\n\t   */\n\t  function nestTokens(tokens) {\n\t    var nestedTokens = [];\n\t    var collector = nestedTokens;\n\t    var sections = [];\n\t\n\t    var token, section;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      switch (token[0]) {\n\t      case '#':\n\t      case '^':\n\t        collector.push(token);\n\t        sections.push(token);\n\t        collector = token[4] = [];\n\t        break;\n\t      case '/':\n\t        section = sections.pop();\n\t        section[5] = token[2];\n\t        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n\t        break;\n\t      default:\n\t        collector.push(token);\n\t      }\n\t    }\n\t\n\t    return nestedTokens;\n\t  }\n\t\n\t  /**\n\t   * A simple string scanner that is used by the template parser to find\n\t   * tokens in template strings.\n\t   */\n\t  function Scanner(string) {\n\t    this.string = string;\n\t    this.tail = string;\n\t    this.pos = 0;\n\t  }\n\t\n\t  /**\n\t   * Returns `true` if the tail is empty (end of string).\n\t   */\n\t  Scanner.prototype.eos = function () {\n\t    return this.tail === \"\";\n\t  };\n\t\n\t  /**\n\t   * Tries to match the given regular expression at the current position.\n\t   * Returns the matched text if it can match, the empty string otherwise.\n\t   */\n\t  Scanner.prototype.scan = function (re) {\n\t    var match = this.tail.match(re);\n\t\n\t    if (match && match.index === 0) {\n\t      var string = match[0];\n\t      this.tail = this.tail.substring(string.length);\n\t      this.pos += string.length;\n\t      return string;\n\t    }\n\t\n\t    return \"\";\n\t  };\n\t\n\t  /**\n\t   * Skips all text until the given regular expression can be matched. Returns\n\t   * the skipped string, which is the entire tail if no match can be made.\n\t   */\n\t  Scanner.prototype.scanUntil = function (re) {\n\t    var index = this.tail.search(re), match;\n\t\n\t    switch (index) {\n\t    case -1:\n\t      match = this.tail;\n\t      this.tail = \"\";\n\t      break;\n\t    case 0:\n\t      match = \"\";\n\t      break;\n\t    default:\n\t      match = this.tail.substring(0, index);\n\t      this.tail = this.tail.substring(index);\n\t    }\n\t\n\t    this.pos += match.length;\n\t\n\t    return match;\n\t  };\n\t\n\t  /**\n\t   * Represents a rendering context by wrapping a view object and\n\t   * maintaining a reference to the parent context.\n\t   */\n\t  function Context(view, parentContext) {\n\t    this.view = view == null ? {} : view;\n\t    this.cache = { '.': this.view };\n\t    this.parent = parentContext;\n\t  }\n\t\n\t  /**\n\t   * Creates a new context using the given view with this context\n\t   * as the parent.\n\t   */\n\t  Context.prototype.push = function (view) {\n\t    return new Context(view, this);\n\t  };\n\t\n\t  /**\n\t   * Returns the value of the given name in this context, traversing\n\t   * up the context hierarchy if the value is absent in this context's view.\n\t   */\n\t  Context.prototype.lookup = function (name) {\n\t    var value;\n\t    if (name in this.cache) {\n\t      value = this.cache[name];\n\t    } else {\n\t      var context = this;\n\t\n\t      while (context) {\n\t        if (name.indexOf('.') > 0) {\n\t          value = context.view;\n\t\n\t          var names = name.split('.'), i = 0;\n\t          while (value != null && i < names.length) {\n\t            value = value[names[i++]];\n\t          }\n\t        } else {\n\t          value = context.view[name];\n\t        }\n\t\n\t        if (value != null) break;\n\t\n\t        context = context.parent;\n\t      }\n\t\n\t      this.cache[name] = value;\n\t    }\n\t\n\t    if (isFunction(value)) {\n\t      value = value.call(this.view);\n\t    }\n\t\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * A Writer knows how to take a stream of tokens and render them to a\n\t   * string, given a context. It also maintains a cache of templates to\n\t   * avoid the need to parse the same template twice.\n\t   */\n\t  function Writer() {\n\t    this.cache = {};\n\t  }\n\t\n\t  /**\n\t   * Clears all cached templates in this writer.\n\t   */\n\t  Writer.prototype.clearCache = function () {\n\t    this.cache = {};\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given `template` and returns the array of tokens\n\t   * that is generated from the parse.\n\t   */\n\t  Writer.prototype.parse = function (template, tags) {\n\t    var cache = this.cache;\n\t    var tokens = cache[template];\n\t\n\t    if (tokens == null) {\n\t      tokens = cache[template] = parseTemplate(template, tags);\n\t    }\n\t\n\t    return tokens;\n\t  };\n\t\n\t  /**\n\t   * High-level method that is used to render the given `template` with\n\t   * the given `view`.\n\t   *\n\t   * The optional `partials` argument may be an object that contains the\n\t   * names and templates of partials that are used in the template. It may\n\t   * also be a function that is used to load partial templates on the fly\n\t   * that takes a single argument: the name of the partial.\n\t   */\n\t  Writer.prototype.render = function (template, view, partials) {\n\t    var tokens = this.parse(template);\n\t    var context = (view instanceof Context) ? view : new Context(view);\n\t    return this.renderTokens(tokens, context, partials, template);\n\t  };\n\t\n\t  /**\n\t   * Low-level method that renders the given array of `tokens` using\n\t   * the given `context` and `partials`.\n\t   *\n\t   * Note: The `originalTemplate` is only ever used to extract the portion\n\t   * of the original template that was contained in a higher-order section.\n\t   * If the template doesn't use higher-order sections, this argument may\n\t   * be omitted.\n\t   */\n\t  Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {\n\t    var buffer = '';\n\t\n\t    // This function is used to render an arbitrary template\n\t    // in the current context by higher-order sections.\n\t    var self = this;\n\t    function subRender(template) {\n\t      return self.render(template, context, partials);\n\t    }\n\t\n\t    var token, value;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      switch (token[0]) {\n\t      case '#':\n\t        value = context.lookup(token[1]);\n\t        if (!value) continue;\n\t\n\t        if (isArray(value)) {\n\t          for (var j = 0, jlen = value.length; j < jlen; ++j) {\n\t            buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n\t          }\n\t        } else if (typeof value === 'object' || typeof value === 'string') {\n\t          buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n\t        } else if (isFunction(value)) {\n\t          if (typeof originalTemplate !== 'string') {\n\t            throw new Error('Cannot use higher-order sections without the original template');\n\t          }\n\t\n\t          // Extract the portion of the original template that the section contains.\n\t          value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\t\n\t          if (value != null) buffer += value;\n\t        } else {\n\t          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\t        }\n\t\n\t        break;\n\t      case '^':\n\t        value = context.lookup(token[1]);\n\t\n\t        // Use JavaScript's definition of falsy. Include empty arrays.\n\t        // See https://github.com/janl/mustache.js/issues/186\n\t        if (!value || (isArray(value) && value.length === 0)) {\n\t          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\t        }\n\t\n\t        break;\n\t      case '>':\n\t        if (!partials) continue;\n\t        value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n\t        if (value != null) buffer += this.renderTokens(this.parse(value), context, partials, value);\n\t        break;\n\t      case '&':\n\t        value = context.lookup(token[1]);\n\t        if (value != null) buffer += value;\n\t        break;\n\t      case 'name':\n\t        value = context.lookup(token[1]);\n\t        if (value != null) buffer += mustache.escape(value);\n\t        break;\n\t      case 'text':\n\t        buffer += token[1];\n\t        break;\n\t      }\n\t    }\n\t\n\t    return buffer;\n\t  };\n\t\n\t  mustache.name = \"mustache.js\";\n\t  mustache.version = \"0.8.1\";\n\t  mustache.tags = [ \"{{\", \"}}\" ];\n\t\n\t  // All high-level mustache.* functions use this writer.\n\t  var defaultWriter = new Writer();\n\t\n\t  /**\n\t   * Clears all cached templates in the default writer.\n\t   */\n\t  mustache.clearCache = function () {\n\t    return defaultWriter.clearCache();\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given template in the default writer and returns the\n\t   * array of tokens it contains. Doing this ahead of time avoids the need to\n\t   * parse templates on the fly as they are rendered.\n\t   */\n\t  mustache.parse = function (template, tags) {\n\t    return defaultWriter.parse(template, tags);\n\t  };\n\t\n\t  /**\n\t   * Renders the `template` with the given `view` and `partials` using the\n\t   * default writer.\n\t   */\n\t  mustache.render = function (template, view, partials) {\n\t    return defaultWriter.render(template, view, partials);\n\t  };\n\t\n\t  // This is here for backwards compatibility with 0.4.x.\n\t  mustache.to_html = function (template, view, partials, send) {\n\t    var result = mustache.render(template, view, partials);\n\t\n\t    if (isFunction(send)) {\n\t      send(result);\n\t    } else {\n\t      return result;\n\t    }\n\t  };\n\t\n\t  // Export the escaping function so that the user may override it.\n\t  // See https://github.com/janl/mustache.js/issues/244\n\t  mustache.escape = escapeHtml;\n\t\n\t  // Export these mainly for testing, but also for advanced usage.\n\t  mustache.Scanner = Scanner;\n\t  mustache.Context = Context;\n\t  mustache.Writer = Writer;\n\t\n\t}));\n\n\n/***/ },\n\n/***/ 8:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var cockpit = __webpack_require__(3);\n\t\n\t    /* SERVICE MANAGEMENT API\n\t     *\n\t     * The \"service\" module lets you monitor and manage a\n\t     * system service on localhost in a simple way.\n\t     *\n\t     * It mainly exists because talking to the systemd D-Bus API is\n\t     * not trivial enough to do it directly.\n\t     *\n\t     * - proxy = service.proxy(name)\n\t     *\n\t     * Create a proxy that represents the service named NAME.\n\t     *\n\t     * The proxy has properties and methods (described below) that\n\t     * allow you to monitor the state of the service, and perform\n\t     * simple actions on it.\n\t     *\n\t     * Initially, any of the properties can be \"null\" until their\n\t     * actual values have been retrieved in the background.\n\t     *\n\t     * - $(proxy).on('changed', function (event) { ... })\n\t     *\n\t     * The 'changed' event is emitted whenever one of the properties\n\t     * of the proxy changes.\n\t     *\n\t     * - proxy.exists\n\t     *\n\t     * A boolean that tells whether the service is known or not.  A\n\t     * proxy with 'exists == false' will have 'state == undefined' and\n\t     * 'enabled == undefined'.\n\t     *\n\t     * - proxy.state\n\t     *\n\t     * Either 'undefined' when the state can't be retrieved, or a\n\t     * string that has one of the values \"starting\", \"running\",\n\t     * \"stopping\", \"stopped\", or \"failed\".\n\t     *\n\t     * - proxy.enabled\n\t     *\n\t     * Either 'undefined' when the value can't be retrieved, or a\n\t     * boolean that tells whether the service is started 'enabled'.\n\t     * What it means exactly for a service to be enabled depends on\n\t     * the service, but a enabled service is usually started on boot,\n\t     * no matter wether other services need it or not.  A disabled\n\t     * service is usually only started when it is needed by some other\n\t     * service.\n\t     *\n\t     * - proxy.unit\n\t     * - proxy.service\n\t     *\n\t     * The raw org.freedesktop.systemd1.Unit and Service D-Bus\n\t     * interface proxies for the service.\n\t     *\n\t     * - promise = proxy.start()\n\t     *\n\t     * Start the service.  The return value is a standard jQuery\n\t     * promise as returned from DBusClient.call.\n\t     *\n\t     * - promise = proxy.stop()\n\t     *\n\t     * Stop the service.\n\t     *\n\t     * - promise = proxy.enable()\n\t     *\n\t     * Enable the service.\n\t     *\n\t     * - promise = proxy.disable()\n\t     *\n\t     * Disable the service.\n\t     */\n\t\n\t    var systemd_client;\n\t    var systemd_manager;\n\t\n\t    function wait_valid(proxy, callback) {\n\t        proxy.wait(function() {\n\t            if (proxy.valid)\n\t                callback();\n\t        });\n\t    }\n\t\n\t    function with_systemd_manager(done) {\n\t        if (!systemd_manager) {\n\t            systemd_client = cockpit.dbus(\"org.freedesktop.systemd1\", { superuser: \"try\" });\n\t            systemd_manager = systemd_client.proxy(\"org.freedesktop.systemd1.Manager\",\n\t                                                   \"/org/freedesktop/systemd1\");\n\t            wait_valid(systemd_manager, function() {\n\t                systemd_manager.Subscribe().\n\t                    fail(function (error) {\n\t                        if (error.name != \"org.freedesktop.systemd1.AlreadySubscribed\" &&\n\t                            error.name != \"org.freedesktop.DBus.Error.FileExists\")\n\t                            console.warn(\"Subscribing to systemd signals failed\", error);\n\t                    });\n\t            });\n\t        }\n\t        wait_valid(systemd_manager, done);\n\t    }\n\t\n\t    function proxy(name) {\n\t        var self = {\n\t            exists: null,\n\t            state: null,\n\t            enabled: null,\n\t\n\t            wait: wait,\n\t\n\t            start: start,\n\t            stop: stop,\n\t            restart: restart,\n\t\n\t            enable: enable,\n\t            disable: disable\n\t        };\n\t\n\t        cockpit.event_target(self);\n\t\n\t        var unit, service;\n\t        var wait_callbacks = cockpit.defer();\n\t\n\t        if (name.indexOf(\".\") == -1)\n\t            name = name + \".service\";\n\t\n\t        function update_from_unit() {\n\t            self.exists = (unit.LoadState != \"not-found\" || unit.ActiveState != \"inactive\");\n\t\n\t            if (unit.ActiveState == \"activating\")\n\t                self.state = \"starting\";\n\t            else if (unit.ActiveState == \"deactivating\")\n\t                self.state = \"stopping\";\n\t            else if (unit.ActiveState == \"active\" || unit.ActiveState == \"reloading\")\n\t                self.state = \"running\";\n\t            else if (unit.ActiveState == \"failed\")\n\t                self.state = \"failed\";\n\t            else if (unit.ActiveState == \"inactive\" && self.exists)\n\t                self.state = \"stopped\";\n\t            else\n\t                self.state = undefined;\n\t\n\t            if (unit.UnitFileState == \"enabled\" || unit.UnitFileState == \"linked\")\n\t                self.enabled = true;\n\t            else if (unit.UnitFileState == \"disabled\" || unit.UnitFileState == \"masked\")\n\t                self.enabled = false;\n\t            else\n\t                self.enabled = undefined;\n\t\n\t            self.unit = unit;\n\t\n\t            self.dispatchEvent(\"changed\");\n\t            wait_callbacks.resolve();\n\t        }\n\t\n\t        function update_from_service() {\n\t            self.service = service;\n\t            self.dispatchEvent(\"changed\");\n\t        }\n\t\n\t        with_systemd_manager(function () {\n\t            systemd_manager.LoadUnit(name).\n\t                done(function (path) {\n\t                    unit = systemd_client.proxy('org.freedesktop.systemd1.Unit', path);\n\t                    unit.addEventListener('changed', update_from_unit);\n\t                    wait_valid(unit, update_from_unit);\n\t\n\t                    service = systemd_client.proxy('org.freedesktop.systemd1.Service', path);\n\t                    service.addEventListener('changed', update_from_service);\n\t                    wait_valid(service, update_from_service);\n\t                }).\n\t                fail(function (error) {\n\t                    self.exists = false;\n\t                    self.dispatchEvent('changed');\n\t                });\n\t        });\n\t\n\t        function refresh() {\n\t            if (!unit || !service)\n\t                return;\n\t\n\t            function refresh_interface(path, iface) {\n\t                systemd_client.call(path,\n\t                                    \"org.freedesktop.DBus.Properties\", \"GetAll\", [ iface ]).\n\t                    fail(function (error) {\n\t                        console.log(error);\n\t                    }).\n\t                    done(function (result) {\n\t                        var props = { };\n\t                        for (var p in result[0])\n\t                            props[p] = result[0][p].v;\n\t                        var ifaces = { };\n\t                        ifaces[iface] = props;\n\t                        var data = { };\n\t                        data[unit.path] = ifaces;\n\t                        systemd_client.notify(data);\n\t                    });\n\t            }\n\t\n\t            refresh_interface(unit.path, \"org.freedesktop.systemd1.Unit\");\n\t            refresh_interface(service.path, \"org.freedesktop.systemd1.Service\");\n\t        }\n\t\n\t        function on_job_new_removed_refresh(event, number, path, unit_id, result) {\n\t            if (unit_id == name)\n\t                refresh();\n\t        }\n\t\n\t        /* HACK - https://bugs.freedesktop.org/show_bug.cgi?id=69575\n\t         *\n\t         * We need to explicitly get new property values when getting\n\t         * a UnitNew signal since UnitNew doesn't carry them.\n\t         * However, reacting to UnitNew with GetAll could lead to an\n\t         * infinite loop since systemd emits a UnitNew in reaction to\n\t         * GetAll for units that it doesn't want to keep loaded, such\n\t         * as units without unit files.\n\t         *\n\t         * So we ignore UnitNew and instead assume that the unit state\n\t         * only changes in interesting ways when there is a job for it\n\t         * or when the daemon is reloaded (or when we get a property\n\t         * change notification, of course).\n\t         */\n\t\n\t        if (false) {\n\t            // This is what we want to do.\n\t\n\t            systemd_manager.addEventListener(\"UnitNew\", function (event, unit_id, path) {\n\t                if (unit_id == name)\n\t                    refresh();\n\t            });\n\t        } else {\n\t            // This is what we have to do.\n\t\n\t            systemd_manager.addEventListener(\"Reloading\", function (event, reloading) {\n\t                if (!reloading)\n\t                    refresh();\n\t            });\n\t\n\t            systemd_manager.addEventListener(\"JobNew\", on_job_new_removed_refresh);\n\t            systemd_manager.addEventListener(\"JobRemoved\", on_job_new_removed_refresh);\n\t        }\n\t\n\t        function wait(callback) {\n\t            wait_callbacks.promise.then(callback);\n\t        }\n\t\n\t        /* Actions\n\t         *\n\t         * We don't call methods on the D-Bus proxies here since they\n\t         * might not be ready when these functions are called.\n\t         */\n\t\n\t        var pending_jobs = { };\n\t\n\t        systemd_manager.addEventListener(\"JobRemoved\", function (event, number, path, unit_id, result) {\n\t            if (pending_jobs[path]) {\n\t                if (result == \"done\")\n\t                    pending_jobs[path].resolve();\n\t                else\n\t                    pending_jobs[path].reject(result);\n\t                delete pending_jobs[path];\n\t            }\n\t        });\n\t\n\t        function call_manager(method, args) {\n\t            return systemd_client.call(\"/org/freedesktop/systemd1\",\n\t                                       \"org.freedesktop.systemd1.Manager\",\n\t                                       method, args);\n\t        }\n\t\n\t        function call_manager_with_job(method, args) {\n\t            var dfd = cockpit.defer();\n\t            call_manager(method, args).\n\t                done(function (results) {\n\t                    var path = results[0];\n\t                    pending_jobs[path] = dfd;\n\t                }).\n\t                fail(function (error) {\n\t                    dfd.reject(error);\n\t                });\n\t            return dfd.promise();\n\t        }\n\t\n\t        function call_manager_with_reload(method, args) {\n\t            return call_manager(method, args).then(function () {\n\t                return call_manager(\"Reload\", [ ]);\n\t            });\n\t        }\n\t\n\t        function start() {\n\t            return call_manager_with_job(\"StartUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function stop() {\n\t            return call_manager_with_job(\"StopUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function restart() {\n\t            return call_manager_with_job(\"RestartUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function enable() {\n\t            return call_manager_with_reload(\"EnableUnitFiles\", [ [ name ], false, false ]);\n\t        }\n\t\n\t        function disable() {\n\t            return call_manager_with_reload(\"DisableUnitFiles\", [ [ name ], false ]);\n\t        }\n\t\n\t        return self;\n\t    }\n\t\n\t    module.exports = {\n\t        proxy: proxy\n\t    };\n\t}());\n\n\n/***/ },\n\n/***/ 52:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2014 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    /* QUnit needs to have 'window' as 'this' in order to load */\n\t    window.QUnit = __webpack_require__(53);\n\t    window.qunitTap = __webpack_require__(55);\n\t\n\t    __webpack_require__(56);\n\t\n\t    __webpack_require__(58);\n\t\n\t    module.exports = window.QUnit;\n\t\n\t}());\n\n\n/***/ },\n\n/***/ 53:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/*!\n\t * QUnit 1.14.0\n\t * http://qunitjs.com/\n\t *\n\t * Copyright 2013 jQuery Foundation and other contributors\n\t * Released under the MIT license\n\t * http://jquery.org/license\n\t *\n\t * Date: 2014-01-31T16:40Z\n\t */\n\t\n\t(function( window ) {\n\t\n\tvar QUnit,\n\t\tassert,\n\t\tconfig,\n\t\tonErrorFnPrev,\n\t\ttestId = 0,\n\t\tfileName = (sourceFromStacktrace( 0 ) || \"\" ).replace(/(:\\d+)+\\)?/, \"\").replace(/.+\\//, \"\"),\n\t\ttoString = Object.prototype.toString,\n\t\thasOwn = Object.prototype.hasOwnProperty,\n\t\t// Keep a local reference to Date (GH-283)\n\t\tDate = window.Date,\n\t\tsetTimeout = window.setTimeout,\n\t\tclearTimeout = window.clearTimeout,\n\t\tdefined = {\n\t\t\tdocument: typeof window.document !== \"undefined\",\n\t\t\tsetTimeout: typeof window.setTimeout !== \"undefined\",\n\t\t\tsessionStorage: (function() {\n\t\t\t\tvar x = \"qunit-test-string\";\n\t\t\t\ttry {\n\t\t\t\t\tsessionStorage.setItem( x, x );\n\t\t\t\t\tsessionStorage.removeItem( x );\n\t\t\t\t\treturn true;\n\t\t\t\t} catch( e ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}())\n\t\t},\n\t\t/**\n\t\t * Provides a normalized error string, correcting an issue\n\t\t * with IE 7 (and prior) where Error.prototype.toString is\n\t\t * not properly implemented\n\t\t *\n\t\t * Based on http://es5.github.com/#x15.11.4.4\n\t\t *\n\t\t * @param {String|Error} error\n\t\t * @return {String} error message\n\t\t */\n\t\terrorString = function( error ) {\n\t\t\tvar name, message,\n\t\t\t\terrorString = error.toString();\n\t\t\tif ( errorString.substring( 0, 7 ) === \"[object\" ) {\n\t\t\t\tname = error.name ? error.name.toString() : \"Error\";\n\t\t\t\tmessage = error.message ? error.message.toString() : \"\";\n\t\t\t\tif ( name && message ) {\n\t\t\t\t\treturn name + \": \" + message;\n\t\t\t\t} else if ( name ) {\n\t\t\t\t\treturn name;\n\t\t\t\t} else if ( message ) {\n\t\t\t\t\treturn message;\n\t\t\t\t} else {\n\t\t\t\t\treturn \"Error\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn errorString;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Makes a clone of an object using only Array or Object as base,\n\t\t * and copies over the own enumerable properties.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @return {Object} New object with only the own properties (recursively).\n\t\t */\n\t\tobjectValues = function( obj ) {\n\t\t\t// Grunt 0.3.x uses an older version of jshint that still has jshint/jshint#392.\n\t\t\t/*jshint newcap: false */\n\t\t\tvar key, val,\n\t\t\t\tvals = QUnit.is( \"array\", obj ) ? [] : {};\n\t\t\tfor ( key in obj ) {\n\t\t\t\tif ( hasOwn.call( obj, key ) ) {\n\t\t\t\t\tval = obj[key];\n\t\t\t\t\tvals[key] = val === Object(val) ? objectValues(val) : val;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn vals;\n\t\t};\n\t\n\t\n\t// Root QUnit object.\n\t// `QUnit` initialized at top of scope\n\tQUnit = {\n\t\n\t\t// call on start of module test to prepend name to all tests\n\t\tmodule: function( name, testEnvironment ) {\n\t\t\tconfig.currentModule = name;\n\t\t\tconfig.currentModuleTestEnvironment = testEnvironment;\n\t\t\tconfig.modules[name] = true;\n\t\t},\n\t\n\t\tasyncTest: function( testName, expected, callback ) {\n\t\t\tif ( arguments.length === 2 ) {\n\t\t\t\tcallback = expected;\n\t\t\t\texpected = null;\n\t\t\t}\n\t\n\t\t\tQUnit.test( testName, expected, callback, true );\n\t\t},\n\t\n\t\ttest: function( testName, expected, callback, async ) {\n\t\t\tvar test,\n\t\t\t\tnameHtml = \"<span class='test-name'>\" + escapeText( testName ) + \"</span>\";\n\t\n\t\t\tif ( arguments.length === 2 ) {\n\t\t\t\tcallback = expected;\n\t\t\t\texpected = null;\n\t\t\t}\n\t\n\t\t\tif ( config.currentModule ) {\n\t\t\t\tnameHtml = \"<span class='module-name'>\" + escapeText( config.currentModule ) + \"</span>: \" + nameHtml;\n\t\t\t}\n\t\n\t\t\ttest = new Test({\n\t\t\t\tnameHtml: nameHtml,\n\t\t\t\ttestName: testName,\n\t\t\t\texpected: expected,\n\t\t\t\tasync: async,\n\t\t\t\tcallback: callback,\n\t\t\t\tmodule: config.currentModule,\n\t\t\t\tmoduleTestEnvironment: config.currentModuleTestEnvironment,\n\t\t\t\tstack: sourceFromStacktrace( 2 )\n\t\t\t});\n\t\n\t\t\tif ( !validTest( test ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\ttest.queue();\n\t\t},\n\t\n\t\t// Specify the number of expected assertions to guarantee that failed test (no assertions are run at all) don't slip through.\n\t\texpect: function( asserts ) {\n\t\t\tif (arguments.length === 1) {\n\t\t\t\tconfig.current.expected = asserts;\n\t\t\t} else {\n\t\t\t\treturn config.current.expected;\n\t\t\t}\n\t\t},\n\t\n\t\tstart: function( count ) {\n\t\t\t// QUnit hasn't been initialized yet.\n\t\t\t// Note: RequireJS (et al) may delay onLoad\n\t\t\tif ( config.semaphore === undefined ) {\n\t\t\t\tQUnit.begin(function() {\n\t\t\t\t\t// This is triggered at the top of QUnit.load, push start() to the event loop, to allow QUnit.load to finish first\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tQUnit.start( count );\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tconfig.semaphore -= count || 1;\n\t\t\t// don't start until equal number of stop-calls\n\t\t\tif ( config.semaphore > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// ignore if start is called more often then stop\n\t\t\tif ( config.semaphore < 0 ) {\n\t\t\t\tconfig.semaphore = 0;\n\t\t\t\tQUnit.pushFailure( \"Called start() while already started (QUnit.config.semaphore was 0 already)\", null, sourceFromStacktrace(2) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// A slight delay, to avoid any current callbacks\n\t\t\tif ( defined.setTimeout ) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tif ( config.semaphore > 0 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif ( config.timeout ) {\n\t\t\t\t\t\tclearTimeout( config.timeout );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tconfig.blocking = false;\n\t\t\t\t\tprocess( true );\n\t\t\t\t}, 13);\n\t\t\t} else {\n\t\t\t\tconfig.blocking = false;\n\t\t\t\tprocess( true );\n\t\t\t}\n\t\t},\n\t\n\t\tstop: function( count ) {\n\t\t\tconfig.semaphore += count || 1;\n\t\t\tconfig.blocking = true;\n\t\n\t\t\tif ( config.testTimeout && defined.setTimeout ) {\n\t\t\t\tclearTimeout( config.timeout );\n\t\t\t\tconfig.timeout = setTimeout(function() {\n\t\t\t\t\tQUnit.ok( false, \"Test timed out\" );\n\t\t\t\t\tconfig.semaphore = 1;\n\t\t\t\t\tQUnit.start();\n\t\t\t\t}, config.testTimeout );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// We use the prototype to distinguish between properties that should\n\t// be exposed as globals (and in exports) and those that shouldn't\n\t(function() {\n\t\tfunction F() {}\n\t\tF.prototype = QUnit;\n\t\tQUnit = new F();\n\t\t// Make F QUnit's constructor so that we can add to the prototype later\n\t\tQUnit.constructor = F;\n\t}());\n\t\n\t/**\n\t * Config object: Maintain internal state\n\t * Later exposed as QUnit.config\n\t * `config` initialized at top of scope\n\t */\n\tconfig = {\n\t\t// The queue of tests to run\n\t\tqueue: [],\n\t\n\t\t// block until document ready\n\t\tblocking: true,\n\t\n\t\t// when enabled, show only failing tests\n\t\t// gets persisted through sessionStorage and can be changed in UI via checkbox\n\t\thidepassed: false,\n\t\n\t\t// by default, run previously failed tests first\n\t\t// very useful in combination with \"Hide passed tests\" checked\n\t\treorder: true,\n\t\n\t\t// by default, modify document.title when suite is done\n\t\taltertitle: true,\n\t\n\t\t// by default, scroll to top of the page when suite is done\n\t\tscrolltop: true,\n\t\n\t\t// when enabled, all tests must call expect()\n\t\trequireExpects: false,\n\t\n\t\t// add checkboxes that are persisted in the query-string\n\t\t// when enabled, the id is set to `true` as a `QUnit.config` property\n\t\turlConfig: [\n\t\t\t{\n\t\t\t\tid: \"noglobals\",\n\t\t\t\tlabel: \"Check for Globals\",\n\t\t\t\ttooltip: \"Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings.\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"notrycatch\",\n\t\t\t\tlabel: \"No try-catch\",\n\t\t\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings.\"\n\t\t\t}\n\t\t],\n\t\n\t\t// Set of all modules.\n\t\tmodules: {},\n\t\n\t\t// logging callback queues\n\t\tbegin: [],\n\t\tdone: [],\n\t\tlog: [],\n\t\ttestStart: [],\n\t\ttestDone: [],\n\t\tmoduleStart: [],\n\t\tmoduleDone: []\n\t};\n\t\n\t// Initialize more QUnit.config and QUnit.urlParams\n\t(function() {\n\t\tvar i, current,\n\t\t\tlocation = window.location || { search: \"\", protocol: \"file:\" },\n\t\t\tparams = location.search.slice( 1 ).split( \"&\" ),\n\t\t\tlength = params.length,\n\t\t\turlParams = {};\n\t\n\t\tif ( params[ 0 ] ) {\n\t\t\tfor ( i = 0; i < length; i++ ) {\n\t\t\t\tcurrent = params[ i ].split( \"=\" );\n\t\t\t\tcurrent[ 0 ] = decodeURIComponent( current[ 0 ] );\n\t\n\t\t\t\t// allow just a key to turn on a flag, e.g., test.html?noglobals\n\t\t\t\tcurrent[ 1 ] = current[ 1 ] ? decodeURIComponent( current[ 1 ] ) : true;\n\t\t\t\tif ( urlParams[ current[ 0 ] ] ) {\n\t\t\t\t\turlParams[ current[ 0 ] ] = [].concat( urlParams[ current[ 0 ] ], current[ 1 ] );\n\t\t\t\t} else {\n\t\t\t\t\turlParams[ current[ 0 ] ] = current[ 1 ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tQUnit.urlParams = urlParams;\n\t\n\t\t// String search anywhere in moduleName+testName\n\t\tconfig.filter = urlParams.filter;\n\t\n\t\t// Exact match of the module name\n\t\tconfig.module = urlParams.module;\n\t\n\t\tconfig.testNumber = [];\n\t\tif ( urlParams.testNumber ) {\n\t\n\t\t\t// Ensure that urlParams.testNumber is an array\n\t\t\turlParams.testNumber = [].concat( urlParams.testNumber );\n\t\t\tfor ( i = 0; i < urlParams.testNumber.length; i++ ) {\n\t\t\t\tcurrent = urlParams.testNumber[ i ];\n\t\t\t\tconfig.testNumber.push( parseInt( current, 10 ) );\n\t\t\t}\n\t\t}\n\t\n\t\t// Figure out if we're running the tests from a server or not\n\t\tQUnit.isLocal = location.protocol === \"file:\";\n\t}());\n\t\n\textend( QUnit, {\n\t\n\t\tconfig: config,\n\t\n\t\t// Initialize the configuration options\n\t\tinit: function() {\n\t\t\textend( config, {\n\t\t\t\tstats: { all: 0, bad: 0 },\n\t\t\t\tmoduleStats: { all: 0, bad: 0 },\n\t\t\t\tstarted: +new Date(),\n\t\t\t\tupdateRate: 1000,\n\t\t\t\tblocking: false,\n\t\t\t\tautostart: true,\n\t\t\t\tautorun: false,\n\t\t\t\tfilter: \"\",\n\t\t\t\tqueue: [],\n\t\t\t\tsemaphore: 1\n\t\t\t});\n\t\n\t\t\tvar tests, banner, result,\n\t\t\t\tqunit = id( \"qunit\" );\n\t\n\t\t\tif ( qunit ) {\n\t\t\t\tqunit.innerHTML =\n\t\t\t\t\t\"<h1 id='qunit-header'>\" + escapeText( document.title ) + \"</h1>\" +\n\t\t\t\t\t\"<h2 id='qunit-banner'></h2>\" +\n\t\t\t\t\t\"<div id='qunit-testrunner-toolbar'></div>\" +\n\t\t\t\t\t\"<h2 id='qunit-userAgent'></h2>\" +\n\t\t\t\t\t\"<ol id='qunit-tests'></ol>\";\n\t\t\t}\n\t\n\t\t\ttests = id( \"qunit-tests\" );\n\t\t\tbanner = id( \"qunit-banner\" );\n\t\t\tresult = id( \"qunit-testresult\" );\n\t\n\t\t\tif ( tests ) {\n\t\t\t\ttests.innerHTML = \"\";\n\t\t\t}\n\t\n\t\t\tif ( banner ) {\n\t\t\t\tbanner.className = \"\";\n\t\t\t}\n\t\n\t\t\tif ( result ) {\n\t\t\t\tresult.parentNode.removeChild( result );\n\t\t\t}\n\t\n\t\t\tif ( tests ) {\n\t\t\t\tresult = document.createElement( \"p\" );\n\t\t\t\tresult.id = \"qunit-testresult\";\n\t\t\t\tresult.className = \"result\";\n\t\t\t\ttests.parentNode.insertBefore( result, tests );\n\t\t\t\tresult.innerHTML = \"Running...<br/>&nbsp;\";\n\t\t\t}\n\t\t},\n\t\n\t\t// Resets the test setup. Useful for tests that modify the DOM.\n\t\t/*\n\t\tDEPRECATED: Use multiple tests instead of resetting inside a test.\n\t\tUse testStart or testDone for custom cleanup.\n\t\tThis method will throw an error in 2.0, and will be removed in 2.1\n\t\t*/\n\t\treset: function() {\n\t\t\tvar fixture = id( \"qunit-fixture\" );\n\t\t\tif ( fixture ) {\n\t\t\t\tfixture.innerHTML = config.fixture;\n\t\t\t}\n\t\t},\n\t\n\t\t// Safe object type checking\n\t\tis: function( type, obj ) {\n\t\t\treturn QUnit.objectType( obj ) === type;\n\t\t},\n\t\n\t\tobjectType: function( obj ) {\n\t\t\tif ( typeof obj === \"undefined\" ) {\n\t\t\t\treturn \"undefined\";\n\t\t\t}\n\t\n\t\t\t// Consider: typeof null === object\n\t\t\tif ( obj === null ) {\n\t\t\t\treturn \"null\";\n\t\t\t}\n\t\n\t\t\tvar match = toString.call( obj ).match(/^\\[object\\s(.*)\\]$/),\n\t\t\t\ttype = match && match[1] || \"\";\n\t\n\t\t\tswitch ( type ) {\n\t\t\t\tcase \"Number\":\n\t\t\t\t\tif ( isNaN(obj) ) {\n\t\t\t\t\t\treturn \"nan\";\n\t\t\t\t\t}\n\t\t\t\t\treturn \"number\";\n\t\t\t\tcase \"String\":\n\t\t\t\tcase \"Boolean\":\n\t\t\t\tcase \"Array\":\n\t\t\t\tcase \"Date\":\n\t\t\t\tcase \"RegExp\":\n\t\t\t\tcase \"Function\":\n\t\t\t\t\treturn type.toLowerCase();\n\t\t\t}\n\t\t\tif ( typeof obj === \"object\" ) {\n\t\t\t\treturn \"object\";\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\t\n\t\tpush: function( result, actual, expected, message ) {\n\t\t\tif ( !config.current ) {\n\t\t\t\tthrow new Error( \"assertion outside test context, was \" + sourceFromStacktrace() );\n\t\t\t}\n\t\n\t\t\tvar output, source,\n\t\t\t\tdetails = {\n\t\t\t\t\tmodule: config.current.module,\n\t\t\t\t\tname: config.current.testName,\n\t\t\t\t\tresult: result,\n\t\t\t\t\tmessage: message,\n\t\t\t\t\tactual: actual,\n\t\t\t\t\texpected: expected\n\t\t\t\t};\n\t\n\t\t\tmessage = escapeText( message ) || ( result ? \"okay\" : \"failed\" );\n\t\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\t\toutput = message;\n\t\n\t\t\tif ( !result ) {\n\t\t\t\texpected = escapeText( QUnit.jsDump.parse(expected) );\n\t\t\t\tactual = escapeText( QUnit.jsDump.parse(actual) );\n\t\t\t\toutput += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" + expected + \"</pre></td></tr>\";\n\t\n\t\t\t\tif ( actual !== expected ) {\n\t\t\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + actual + \"</pre></td></tr>\";\n\t\t\t\t\toutput += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" + QUnit.diff( expected, actual ) + \"</pre></td></tr>\";\n\t\t\t\t}\n\t\n\t\t\t\tsource = sourceFromStacktrace();\n\t\n\t\t\t\tif ( source ) {\n\t\t\t\t\tdetails.source = source;\n\t\t\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr>\";\n\t\t\t\t}\n\t\n\t\t\t\toutput += \"</table>\";\n\t\t\t}\n\t\n\t\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\t\n\t\t\tconfig.current.assertions.push({\n\t\t\t\tresult: !!result,\n\t\t\t\tmessage: output\n\t\t\t});\n\t\t},\n\t\n\t\tpushFailure: function( message, source, actual ) {\n\t\t\tif ( !config.current ) {\n\t\t\t\tthrow new Error( \"pushFailure() assertion outside test context, was \" + sourceFromStacktrace(2) );\n\t\t\t}\n\t\n\t\t\tvar output,\n\t\t\t\tdetails = {\n\t\t\t\t\tmodule: config.current.module,\n\t\t\t\t\tname: config.current.testName,\n\t\t\t\t\tresult: false,\n\t\t\t\t\tmessage: message\n\t\t\t\t};\n\t\n\t\t\tmessage = escapeText( message ) || \"error\";\n\t\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\t\toutput = message;\n\t\n\t\t\toutput += \"<table>\";\n\t\n\t\t\tif ( actual ) {\n\t\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + escapeText( actual ) + \"</pre></td></tr>\";\n\t\t\t}\n\t\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr>\";\n\t\t\t}\n\t\n\t\t\toutput += \"</table>\";\n\t\n\t\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\t\n\t\t\tconfig.current.assertions.push({\n\t\t\t\tresult: false,\n\t\t\t\tmessage: output\n\t\t\t});\n\t\t},\n\t\n\t\turl: function( params ) {\n\t\t\tparams = extend( extend( {}, QUnit.urlParams ), params );\n\t\t\tvar key,\n\t\t\t\tquerystring = \"?\";\n\t\n\t\t\tfor ( key in params ) {\n\t\t\t\tif ( hasOwn.call( params, key ) ) {\n\t\t\t\t\tquerystring += encodeURIComponent( key ) + \"=\" +\n\t\t\t\t\t\tencodeURIComponent( params[ key ] ) + \"&\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn window.location.protocol + \"//\" + window.location.host +\n\t\t\t\twindow.location.pathname + querystring.slice( 0, -1 );\n\t\t},\n\t\n\t\textend: extend,\n\t\tid: id,\n\t\taddEvent: addEvent,\n\t\taddClass: addClass,\n\t\thasClass: hasClass,\n\t\tremoveClass: removeClass\n\t\t// load, equiv, jsDump, diff: Attached later\n\t});\n\t\n\t/**\n\t * @deprecated: Created for backwards compatibility with test runner that set the hook function\n\t * into QUnit.{hook}, instead of invoking it and passing the hook function.\n\t * QUnit.constructor is set to the empty F() above so that we can add to it's prototype here.\n\t * Doing this allows us to tell if the following methods have been overwritten on the actual\n\t * QUnit object.\n\t */\n\textend( QUnit.constructor.prototype, {\n\t\n\t\t// Logging callbacks; all receive a single argument with the listed properties\n\t\t// run test/logs.html for any related changes\n\t\tbegin: registerLoggingCallback( \"begin\" ),\n\t\n\t\t// done: { failed, passed, total, runtime }\n\t\tdone: registerLoggingCallback( \"done\" ),\n\t\n\t\t// log: { result, actual, expected, message }\n\t\tlog: registerLoggingCallback( \"log\" ),\n\t\n\t\t// testStart: { name }\n\t\ttestStart: registerLoggingCallback( \"testStart\" ),\n\t\n\t\t// testDone: { name, failed, passed, total, runtime }\n\t\ttestDone: registerLoggingCallback( \"testDone\" ),\n\t\n\t\t// moduleStart: { name }\n\t\tmoduleStart: registerLoggingCallback( \"moduleStart\" ),\n\t\n\t\t// moduleDone: { name, failed, passed, total }\n\t\tmoduleDone: registerLoggingCallback( \"moduleDone\" )\n\t});\n\t\n\tif ( !defined.document || document.readyState === \"complete\" ) {\n\t\tconfig.autorun = true;\n\t}\n\t\n\tQUnit.load = function() {\n\t\trunLoggingCallbacks( \"begin\", QUnit, {} );\n\t\n\t\t// Initialize the config, saving the execution queue\n\t\tvar banner, filter, i, j, label, len, main, ol, toolbar, val, selection,\n\t\t\turlConfigContainer, moduleFilter, userAgent,\n\t\t\tnumModules = 0,\n\t\t\tmoduleNames = [],\n\t\t\tmoduleFilterHtml = \"\",\n\t\t\turlConfigHtml = \"\",\n\t\t\toldconfig = extend( {}, config );\n\t\n\t\tQUnit.init();\n\t\textend(config, oldconfig);\n\t\n\t\tconfig.blocking = false;\n\t\n\t\tlen = config.urlConfig.length;\n\t\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = config.urlConfig[i];\n\t\t\tif ( typeof val === \"string\" ) {\n\t\t\t\tval = {\n\t\t\t\t\tid: val,\n\t\t\t\t\tlabel: val\n\t\t\t\t};\n\t\t\t}\n\t\t\tconfig[ val.id ] = QUnit.urlParams[ val.id ];\n\t\t\tif ( !val.value || typeof val.value === \"string\" ) {\n\t\t\t\turlConfigHtml += \"<input id='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\t\"' name='\" + escapeText( val.id ) +\n\t\t\t\t\t\"' type='checkbox'\" +\n\t\t\t\t\t( val.value ? \" value='\" + escapeText( val.value ) + \"'\" : \"\" ) +\n\t\t\t\t\t( config[ val.id ] ? \" checked='checked'\" : \"\" ) +\n\t\t\t\t\t\" title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\t\"'><label for='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\t\"' title='\" + escapeText( val.tooltip ) + \"'>\" + val.label + \"</label>\";\n\t\t\t} else {\n\t\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\t\"' title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\t\"'>\" + val.label +\n\t\t\t\t\t\": </label><select id='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\t\"' name='\" + escapeText( val.id ) +\n\t\t\t\t\t\"' title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\t\"'><option></option>\";\n\t\t\t\tselection = false;\n\t\t\t\tif ( QUnit.is( \"array\", val.value ) ) {\n\t\t\t\t\tfor ( j = 0; j < val.value.length; j++ ) {\n\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( val.value[j] ) + \"'\" +\n\t\t\t\t\t\t\t( config[ val.id ] === val.value[j] ?\n\t\t\t\t\t\t\t\t(selection = true) && \" selected='selected'\" :\n\t\t\t\t\t\t\t\t\"\" ) +\n\t\t\t\t\t\t\t\">\" + escapeText( val.value[j] ) + \"</option>\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( j in val.value ) {\n\t\t\t\t\t\tif ( hasOwn.call( val.value, j ) ) {\n\t\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( j ) + \"'\" +\n\t\t\t\t\t\t\t\t( config[ val.id ] === j ?\n\t\t\t\t\t\t\t\t\t(selection = true) && \" selected='selected'\" :\n\t\t\t\t\t\t\t\t\t\"\" ) +\n\t\t\t\t\t\t\t\t\">\" + escapeText( val.value[j] ) + \"</option>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( config[ val.id ] && !selection ) {\n\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( config[ val.id ] ) +\n\t\t\t\t\t\t\"' selected='selected' disabled='disabled'>\" +\n\t\t\t\t\t\tescapeText( config[ val.id ] ) +\n\t\t\t\t\t\t\"</option>\";\n\t\t\t\t}\n\t\t\t\turlConfigHtml += \"</select>\";\n\t\t\t}\n\t\t}\n\t\tfor ( i in config.modules ) {\n\t\t\tif ( config.modules.hasOwnProperty( i ) ) {\n\t\t\t\tmoduleNames.push(i);\n\t\t\t}\n\t\t}\n\t\tnumModules = moduleNames.length;\n\t\tmoduleNames.sort( function( a, b ) {\n\t\t\treturn a.localeCompare( b );\n\t\t});\n\t\tmoduleFilterHtml += \"<label for='qunit-modulefilter'>Module: </label><select id='qunit-modulefilter' name='modulefilter'><option value='' \" +\n\t\t\t( config.module === undefined  ? \"selected='selected'\" : \"\" ) +\n\t\t\t\">< All Modules ></option>\";\n\t\n\t\n\t\tfor ( i = 0; i < numModules; i++) {\n\t\t\t\tmoduleFilterHtml += \"<option value='\" + escapeText( encodeURIComponent(moduleNames[i]) ) + \"' \" +\n\t\t\t\t\t( config.module === moduleNames[i] ? \"selected='selected'\" : \"\" ) +\n\t\t\t\t\t\">\" + escapeText(moduleNames[i]) + \"</option>\";\n\t\t}\n\t\tmoduleFilterHtml += \"</select>\";\n\t\n\t\t// `userAgent` initialized at top of scope\n\t\tuserAgent = id( \"qunit-userAgent\" );\n\t\tif ( userAgent ) {\n\t\t\tuserAgent.innerHTML = navigator.userAgent;\n\t\t}\n\t\n\t\t// `banner` initialized at top of scope\n\t\tbanner = id( \"qunit-header\" );\n\t\tif ( banner ) {\n\t\t\tbanner.innerHTML = \"<a href='\" + QUnit.url({ filter: undefined, module: undefined, testNumber: undefined }) + \"'>\" + banner.innerHTML + \"</a> \";\n\t\t}\n\t\n\t\t// `toolbar` initialized at top of scope\n\t\ttoolbar = id( \"qunit-testrunner-toolbar\" );\n\t\tif ( toolbar ) {\n\t\t\t// `filter` initialized at top of scope\n\t\t\tfilter = document.createElement( \"input\" );\n\t\t\tfilter.type = \"checkbox\";\n\t\t\tfilter.id = \"qunit-filter-pass\";\n\t\n\t\t\taddEvent( filter, \"click\", function() {\n\t\t\t\tvar tmp,\n\t\t\t\t\tol = id( \"qunit-tests\" );\n\t\n\t\t\t\tif ( filter.checked ) {\n\t\t\t\t\tol.className = ol.className + \" hidepass\";\n\t\t\t\t} else {\n\t\t\t\t\ttmp = \" \" + ol.className.replace( /[\\n\\t\\r]/g, \" \" ) + \" \";\n\t\t\t\t\tol.className = tmp.replace( / hidepass /, \" \" );\n\t\t\t\t}\n\t\t\t\tif ( defined.sessionStorage ) {\n\t\t\t\t\tif (filter.checked) {\n\t\t\t\t\t\tsessionStorage.setItem( \"qunit-filter-passed-tests\", \"true\" );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsessionStorage.removeItem( \"qunit-filter-passed-tests\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tif ( config.hidepassed || defined.sessionStorage && sessionStorage.getItem( \"qunit-filter-passed-tests\" ) ) {\n\t\t\t\tfilter.checked = true;\n\t\t\t\t// `ol` initialized at top of scope\n\t\t\t\tol = id( \"qunit-tests\" );\n\t\t\t\tol.className = ol.className + \" hidepass\";\n\t\t\t}\n\t\t\ttoolbar.appendChild( filter );\n\t\n\t\t\t// `label` initialized at top of scope\n\t\t\tlabel = document.createElement( \"label\" );\n\t\t\tlabel.setAttribute( \"for\", \"qunit-filter-pass\" );\n\t\t\tlabel.setAttribute( \"title\", \"Only show tests and assertions that fail. Stored in sessionStorage.\" );\n\t\t\tlabel.innerHTML = \"Hide passed tests\";\n\t\t\ttoolbar.appendChild( label );\n\t\n\t\t\turlConfigContainer = document.createElement(\"span\");\n\t\t\turlConfigContainer.innerHTML = urlConfigHtml;\n\t\t\t// For oldIE support:\n\t\t\t// * Add handlers to the individual elements instead of the container\n\t\t\t// * Use \"click\" instead of \"change\" for checkboxes\n\t\t\t// * Fallback from event.target to event.srcElement\n\t\t\taddEvents( urlConfigContainer.getElementsByTagName(\"input\"), \"click\", function( event ) {\n\t\t\t\tvar params = {},\n\t\t\t\t\ttarget = event.target || event.srcElement;\n\t\t\t\tparams[ target.name ] = target.checked ?\n\t\t\t\t\ttarget.defaultValue || true :\n\t\t\t\t\tundefined;\n\t\t\t\twindow.location = QUnit.url( params );\n\t\t\t});\n\t\t\taddEvents( urlConfigContainer.getElementsByTagName(\"select\"), \"change\", function( event ) {\n\t\t\t\tvar params = {},\n\t\t\t\t\ttarget = event.target || event.srcElement;\n\t\t\t\tparams[ target.name ] = target.options[ target.selectedIndex ].value || undefined;\n\t\t\t\twindow.location = QUnit.url( params );\n\t\t\t});\n\t\t\ttoolbar.appendChild( urlConfigContainer );\n\t\n\t\t\tif (numModules > 1) {\n\t\t\t\tmoduleFilter = document.createElement( \"span\" );\n\t\t\t\tmoduleFilter.setAttribute( \"id\", \"qunit-modulefilter-container\" );\n\t\t\t\tmoduleFilter.innerHTML = moduleFilterHtml;\n\t\t\t\taddEvent( moduleFilter.lastChild, \"change\", function() {\n\t\t\t\t\tvar selectBox = moduleFilter.getElementsByTagName(\"select\")[0],\n\t\t\t\t\t\tselectedModule = decodeURIComponent(selectBox.options[selectBox.selectedIndex].value);\n\t\n\t\t\t\t\twindow.location = QUnit.url({\n\t\t\t\t\t\tmodule: ( selectedModule === \"\" ) ? undefined : selectedModule,\n\t\t\t\t\t\t// Remove any existing filters\n\t\t\t\t\t\tfilter: undefined,\n\t\t\t\t\t\ttestNumber: undefined\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\ttoolbar.appendChild(moduleFilter);\n\t\t\t}\n\t\t}\n\t\n\t\t// `main` initialized at top of scope\n\t\tmain = id( \"qunit-fixture\" );\n\t\tif ( main ) {\n\t\t\tconfig.fixture = main.innerHTML;\n\t\t}\n\t\n\t\tif ( config.autostart ) {\n\t\t\tQUnit.start();\n\t\t}\n\t};\n\t\n\tif ( defined.document ) {\n\t\taddEvent( window, \"load\", QUnit.load );\n\t}\n\t\n\t// `onErrorFnPrev` initialized at top of scope\n\t// Preserve other handlers\n\tonErrorFnPrev = window.onerror;\n\t\n\t// Cover uncaught exceptions\n\t// Returning true will suppress the default browser handler,\n\t// returning false will let it run.\n\twindow.onerror = function ( error, filePath, linerNr ) {\n\t\tvar ret = false;\n\t\tif ( onErrorFnPrev ) {\n\t\t\tret = onErrorFnPrev( error, filePath, linerNr );\n\t\t}\n\t\n\t\t// Treat return value as window.onerror itself does,\n\t\t// Only do our handling if not suppressed.\n\t\tif ( ret !== true ) {\n\t\t\tif ( QUnit.config.current ) {\n\t\t\t\tif ( QUnit.config.current.ignoreGlobalErrors ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t} else {\n\t\t\t\tQUnit.test( \"global failure\", extend( function() {\n\t\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t\t}, { validTest: validTest } ) );\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\n\t\treturn ret;\n\t};\n\t\n\tfunction done() {\n\t\tconfig.autorun = true;\n\t\n\t\t// Log the last module results\n\t\tif ( config.previousModule ) {\n\t\t\trunLoggingCallbacks( \"moduleDone\", QUnit, {\n\t\t\t\tname: config.previousModule,\n\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\ttotal: config.moduleStats.all\n\t\t\t});\n\t\t}\n\t\tdelete config.previousModule;\n\t\n\t\tvar i, key,\n\t\t\tbanner = id( \"qunit-banner\" ),\n\t\t\ttests = id( \"qunit-tests\" ),\n\t\t\truntime = +new Date() - config.started,\n\t\t\tpassed = config.stats.all - config.stats.bad,\n\t\t\thtml = [\n\t\t\t\t\"Tests completed in \",\n\t\t\t\truntime,\n\t\t\t\t\" milliseconds.<br/>\",\n\t\t\t\t\"<span class='passed'>\",\n\t\t\t\tpassed,\n\t\t\t\t\"</span> assertions of <span class='total'>\",\n\t\t\t\tconfig.stats.all,\n\t\t\t\t\"</span> passed, <span class='failed'>\",\n\t\t\t\tconfig.stats.bad,\n\t\t\t\t\"</span> failed.\"\n\t\t\t].join( \"\" );\n\t\n\t\tif ( banner ) {\n\t\t\tbanner.className = ( config.stats.bad ? \"qunit-fail\" : \"qunit-pass\" );\n\t\t}\n\t\n\t\tif ( tests ) {\n\t\t\tid( \"qunit-testresult\" ).innerHTML = html;\n\t\t}\n\t\n\t\tif ( config.altertitle && defined.document && document.title ) {\n\t\t\t// show ✖ for good, ✔ for bad suite result in title\n\t\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\n\t\t\tdocument.title = [\n\t\t\t\t( config.stats.bad ? \"\\u2716\" : \"\\u2714\" ),\n\t\t\t\tdocument.title.replace( /^[\\u2714\\u2716] /i, \"\" )\n\t\t\t].join( \" \" );\n\t\t}\n\t\n\t\t// clear own sessionStorage items if all tests passed\n\t\tif ( config.reorder && defined.sessionStorage && config.stats.bad === 0 ) {\n\t\t\t// `key` & `i` initialized at top of scope\n\t\t\tfor ( i = 0; i < sessionStorage.length; i++ ) {\n\t\t\t\tkey = sessionStorage.key( i++ );\n\t\t\t\tif ( key.indexOf( \"qunit-test-\" ) === 0 ) {\n\t\t\t\t\tsessionStorage.removeItem( key );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// scroll back to top to show results\n\t\tif ( config.scrolltop && window.scrollTo ) {\n\t\t\twindow.scrollTo(0, 0);\n\t\t}\n\t\n\t\trunLoggingCallbacks( \"done\", QUnit, {\n\t\t\tfailed: config.stats.bad,\n\t\t\tpassed: passed,\n\t\t\ttotal: config.stats.all,\n\t\t\truntime: runtime\n\t\t});\n\t}\n\t\n\t/** @return Boolean: true if this test should be ran */\n\tfunction validTest( test ) {\n\t\tvar include,\n\t\t\tfilter = config.filter && config.filter.toLowerCase(),\n\t\t\tmodule = config.module && config.module.toLowerCase(),\n\t\t\tfullName = ( test.module + \": \" + test.testName ).toLowerCase();\n\t\n\t\t// Internally-generated tests are always valid\n\t\tif ( test.callback && test.callback.validTest === validTest ) {\n\t\t\tdelete test.callback.validTest;\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( config.testNumber.length > 0 ) {\n\t\t\tif ( inArray( test.testNumber, config.testNumber ) < 0 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( module && ( !test.module || test.module.toLowerCase() !== module ) ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif ( !filter ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tinclude = filter.charAt( 0 ) !== \"!\";\n\t\tif ( !include ) {\n\t\t\tfilter = filter.slice( 1 );\n\t\t}\n\t\n\t\t// If the filter matches, we need to honour include\n\t\tif ( fullName.indexOf( filter ) !== -1 ) {\n\t\t\treturn include;\n\t\t}\n\t\n\t\t// Otherwise, do the opposite\n\t\treturn !include;\n\t}\n\t\n\t// so far supports only Firefox, Chrome and Opera (buggy), Safari (for real exceptions)\n\t// Later Safari and IE10 are supposed to support error.stack as well\n\t// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\n\tfunction extractStacktrace( e, offset ) {\n\t\toffset = offset === undefined ? 3 : offset;\n\t\n\t\tvar stack, include, i;\n\t\n\t\tif ( e.stacktrace ) {\n\t\t\t// Opera\n\t\t\treturn e.stacktrace.split( \"\\n\" )[ offset + 3 ];\n\t\t} else if ( e.stack ) {\n\t\t\t// Firefox, Chrome\n\t\t\tstack = e.stack.split( \"\\n\" );\n\t\t\tif (/^error$/i.test( stack[0] ) ) {\n\t\t\t\tstack.shift();\n\t\t\t}\n\t\t\tif ( fileName ) {\n\t\t\t\tinclude = [];\n\t\t\t\tfor ( i = offset; i < stack.length; i++ ) {\n\t\t\t\t\tif ( stack[ i ].indexOf( fileName ) !== -1 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tinclude.push( stack[ i ] );\n\t\t\t\t}\n\t\t\t\tif ( include.length ) {\n\t\t\t\t\treturn include.join( \"\\n\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stack[ offset ];\n\t\t} else if ( e.sourceURL ) {\n\t\t\t// Safari, PhantomJS\n\t\t\t// hopefully one day Safari provides actual stacktraces\n\t\t\t// exclude useless self-reference for generated Error objects\n\t\t\tif ( /qunit.js$/.test( e.sourceURL ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// for actual exceptions, this is useful\n\t\t\treturn e.sourceURL + \":\" + e.line;\n\t\t}\n\t}\n\tfunction sourceFromStacktrace( offset ) {\n\t\ttry {\n\t\t\tthrow new Error();\n\t\t} catch ( e ) {\n\t\t\treturn extractStacktrace( e, offset );\n\t\t}\n\t}\n\t\n\t/**\n\t * Escape text for attribute or text content.\n\t */\n\tfunction escapeText( s ) {\n\t\tif ( !s ) {\n\t\t\treturn \"\";\n\t\t}\n\t\ts = s + \"\";\n\t\t// Both single quotes and double quotes (for attributes)\n\t\treturn s.replace( /['\"<>&]/g, function( s ) {\n\t\t\tswitch( s ) {\n\t\t\t\tcase \"'\":\n\t\t\t\t\treturn \"&#039;\";\n\t\t\t\tcase \"\\\"\":\n\t\t\t\t\treturn \"&quot;\";\n\t\t\t\tcase \"<\":\n\t\t\t\t\treturn \"&lt;\";\n\t\t\t\tcase \">\":\n\t\t\t\t\treturn \"&gt;\";\n\t\t\t\tcase \"&\":\n\t\t\t\t\treturn \"&amp;\";\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction synchronize( callback, last ) {\n\t\tconfig.queue.push( callback );\n\t\n\t\tif ( config.autorun && !config.blocking ) {\n\t\t\tprocess( last );\n\t\t}\n\t}\n\t\n\tfunction process( last ) {\n\t\tfunction next() {\n\t\t\tprocess( last );\n\t\t}\n\t\tvar start = new Date().getTime();\n\t\tconfig.depth = config.depth ? config.depth + 1 : 1;\n\t\n\t\twhile ( config.queue.length && !config.blocking ) {\n\t\t\tif ( !defined.setTimeout || config.updateRate <= 0 || ( ( new Date().getTime() - start ) < config.updateRate ) ) {\n\t\t\t\tconfig.queue.shift()();\n\t\t\t} else {\n\t\t\t\tsetTimeout( next, 13 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconfig.depth--;\n\t\tif ( last && !config.blocking && !config.queue.length && config.depth === 0 ) {\n\t\t\tdone();\n\t\t}\n\t}\n\t\n\tfunction saveGlobal() {\n\t\tconfig.pollution = [];\n\t\n\t\tif ( config.noglobals ) {\n\t\t\tfor ( var key in window ) {\n\t\t\t\tif ( hasOwn.call( window, key ) ) {\n\t\t\t\t\t// in Opera sometimes DOM element ids show up here, ignore them\n\t\t\t\t\tif ( /^qunit-test-output/.test( key ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconfig.pollution.push( key );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction checkPollution() {\n\t\tvar newGlobals,\n\t\t\tdeletedGlobals,\n\t\t\told = config.pollution;\n\t\n\t\tsaveGlobal();\n\t\n\t\tnewGlobals = diff( config.pollution, old );\n\t\tif ( newGlobals.length > 0 ) {\n\t\t\tQUnit.pushFailure( \"Introduced global variable(s): \" + newGlobals.join(\", \") );\n\t\t}\n\t\n\t\tdeletedGlobals = diff( old, config.pollution );\n\t\tif ( deletedGlobals.length > 0 ) {\n\t\t\tQUnit.pushFailure( \"Deleted global variable(s): \" + deletedGlobals.join(\", \") );\n\t\t}\n\t}\n\t\n\t// returns a new Array with the elements that are in a but not in b\n\tfunction diff( a, b ) {\n\t\tvar i, j,\n\t\t\tresult = a.slice();\n\t\n\t\tfor ( i = 0; i < result.length; i++ ) {\n\t\t\tfor ( j = 0; j < b.length; j++ ) {\n\t\t\t\tif ( result[i] === b[j] ) {\n\t\t\t\t\tresult.splice( i, 1 );\n\t\t\t\t\ti--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tfunction extend( a, b ) {\n\t\tfor ( var prop in b ) {\n\t\t\tif ( hasOwn.call( b, prop ) ) {\n\t\t\t\t// Avoid \"Member not found\" error in IE8 caused by messing with window.constructor\n\t\t\t\tif ( !( prop === \"constructor\" && a === window ) ) {\n\t\t\t\t\tif ( b[ prop ] === undefined ) {\n\t\t\t\t\t\tdelete a[ prop ];\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta[ prop ] = b[ prop ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t}\n\t\n\t/**\n\t * @param {HTMLElement} elem\n\t * @param {string} type\n\t * @param {Function} fn\n\t */\n\tfunction addEvent( elem, type, fn ) {\n\t\tif ( elem.addEventListener ) {\n\t\n\t\t\t// Standards-based browsers\n\t\t\telem.addEventListener( type, fn, false );\n\t\t} else if ( elem.attachEvent ) {\n\t\n\t\t\t// support: IE <9\n\t\t\telem.attachEvent( \"on\" + type, fn );\n\t\t} else {\n\t\n\t\t\t// Caller must ensure support for event listeners is present\n\t\t\tthrow new Error( \"addEvent() was called in a context without event listener support\" );\n\t\t}\n\t}\n\t\n\t/**\n\t * @param {Array|NodeList} elems\n\t * @param {string} type\n\t * @param {Function} fn\n\t */\n\tfunction addEvents( elems, type, fn ) {\n\t\tvar i = elems.length;\n\t\twhile ( i-- ) {\n\t\t\taddEvent( elems[i], type, fn );\n\t\t}\n\t}\n\t\n\tfunction hasClass( elem, name ) {\n\t\treturn (\" \" + elem.className + \" \").indexOf(\" \" + name + \" \") > -1;\n\t}\n\t\n\tfunction addClass( elem, name ) {\n\t\tif ( !hasClass( elem, name ) ) {\n\t\t\telem.className += (elem.className ? \" \" : \"\") + name;\n\t\t}\n\t}\n\t\n\tfunction removeClass( elem, name ) {\n\t\tvar set = \" \" + elem.className + \" \";\n\t\t// Class name may appear multiple times\n\t\twhile ( set.indexOf(\" \" + name + \" \") > -1 ) {\n\t\t\tset = set.replace(\" \" + name + \" \" , \" \");\n\t\t}\n\t\t// If possible, trim it for prettiness, but not necessarily\n\t\telem.className = typeof set.trim === \"function\" ? set.trim() : set.replace(/^\\s+|\\s+$/g, \"\");\n\t}\n\t\n\tfunction id( name ) {\n\t\treturn defined.document && document.getElementById && document.getElementById( name );\n\t}\n\t\n\tfunction registerLoggingCallback( key ) {\n\t\treturn function( callback ) {\n\t\t\tconfig[key].push( callback );\n\t\t};\n\t}\n\t\n\t// Supports deprecated method of completely overwriting logging callbacks\n\tfunction runLoggingCallbacks( key, scope, args ) {\n\t\tvar i, callbacks;\n\t\tif ( QUnit.hasOwnProperty( key ) ) {\n\t\t\tQUnit[ key ].call(scope, args );\n\t\t} else {\n\t\t\tcallbacks = config[ key ];\n\t\t\tfor ( i = 0; i < callbacks.length; i++ ) {\n\t\t\t\tcallbacks[ i ].call( scope, args );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// from jquery.js\n\tfunction inArray( elem, array ) {\n\t\tif ( array.indexOf ) {\n\t\t\treturn array.indexOf( elem );\n\t\t}\n\t\n\t\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\t\tif ( array[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn -1;\n\t}\n\t\n\tfunction Test( settings ) {\n\t\textend( this, settings );\n\t\tthis.assertions = [];\n\t\tthis.testNumber = ++Test.count;\n\t}\n\t\n\tTest.count = 0;\n\t\n\tTest.prototype = {\n\t\tinit: function() {\n\t\t\tvar a, b, li,\n\t\t\t\ttests = id( \"qunit-tests\" );\n\t\n\t\t\tif ( tests ) {\n\t\t\t\tb = document.createElement( \"strong\" );\n\t\t\t\tb.innerHTML = this.nameHtml;\n\t\n\t\t\t\t// `a` initialized at top of scope\n\t\t\t\ta = document.createElement( \"a\" );\n\t\t\t\ta.innerHTML = \"Rerun\";\n\t\t\t\ta.href = QUnit.url({ testNumber: this.testNumber });\n\t\n\t\t\t\tli = document.createElement( \"li\" );\n\t\t\t\tli.appendChild( b );\n\t\t\t\tli.appendChild( a );\n\t\t\t\tli.className = \"running\";\n\t\t\t\tli.id = this.id = \"qunit-test-output\" + testId++;\n\t\n\t\t\t\ttests.appendChild( li );\n\t\t\t}\n\t\t},\n\t\tsetup: function() {\n\t\t\tif (\n\t\t\t\t// Emit moduleStart when we're switching from one module to another\n\t\t\t\tthis.module !== config.previousModule ||\n\t\t\t\t\t// They could be equal (both undefined) but if the previousModule property doesn't\n\t\t\t\t\t// yet exist it means this is the first test in a suite that isn't wrapped in a\n\t\t\t\t\t// module, in which case we'll just emit a moduleStart event for 'undefined'.\n\t\t\t\t\t// Without this, reporters can get testStart before moduleStart  which is a problem.\n\t\t\t\t\t!hasOwn.call( config, \"previousModule\" )\n\t\t\t) {\n\t\t\t\tif ( hasOwn.call( config, \"previousModule\" ) ) {\n\t\t\t\t\trunLoggingCallbacks( \"moduleDone\", QUnit, {\n\t\t\t\t\t\tname: config.previousModule,\n\t\t\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\t\t\ttotal: config.moduleStats.all\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconfig.previousModule = this.module;\n\t\t\t\tconfig.moduleStats = { all: 0, bad: 0 };\n\t\t\t\trunLoggingCallbacks( \"moduleStart\", QUnit, {\n\t\t\t\t\tname: this.module\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tconfig.current = this;\n\t\n\t\t\tthis.testEnvironment = extend({\n\t\t\t\tsetup: function() {},\n\t\t\t\tteardown: function() {}\n\t\t\t}, this.moduleTestEnvironment );\n\t\n\t\t\tthis.started = +new Date();\n\t\t\trunLoggingCallbacks( \"testStart\", QUnit, {\n\t\t\t\tname: this.testName,\n\t\t\t\tmodule: this.module\n\t\t\t});\n\t\n\t\t\t/*jshint camelcase:false */\n\t\n\t\n\t\t\t/**\n\t\t\t * Expose the current test environment.\n\t\t\t *\n\t\t\t * @deprecated since 1.12.0: Use QUnit.config.current.testEnvironment instead.\n\t\t\t */\n\t\t\tQUnit.current_testEnvironment = this.testEnvironment;\n\t\n\t\t\t/*jshint camelcase:true */\n\t\n\t\t\tif ( !config.pollution ) {\n\t\t\t\tsaveGlobal();\n\t\t\t}\n\t\t\tif ( config.notrycatch ) {\n\t\t\t\tthis.testEnvironment.setup.call( this.testEnvironment, QUnit.assert );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tthis.testEnvironment.setup.call( this.testEnvironment, QUnit.assert );\n\t\t\t} catch( e ) {\n\t\t\t\tQUnit.pushFailure( \"Setup failed on \" + this.testName + \": \" + ( e.message || e ), extractStacktrace( e, 1 ) );\n\t\t\t}\n\t\t},\n\t\trun: function() {\n\t\t\tconfig.current = this;\n\t\n\t\t\tvar running = id( \"qunit-testresult\" );\n\t\n\t\t\tif ( running ) {\n\t\t\t\trunning.innerHTML = \"Running: <br/>\" + this.nameHtml;\n\t\t\t}\n\t\n\t\t\tif ( this.async ) {\n\t\t\t\tQUnit.stop();\n\t\t\t}\n\t\n\t\t\tthis.callbackStarted = +new Date();\n\t\n\t\t\tif ( config.notrycatch ) {\n\t\t\t\tthis.callback.call( this.testEnvironment, QUnit.assert );\n\t\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\ttry {\n\t\t\t\tthis.callback.call( this.testEnvironment, QUnit.assert );\n\t\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t\t} catch( e ) {\n\t\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\n\t\t\t\tQUnit.pushFailure( \"Died on test #\" + (this.assertions.length + 1) + \" \" + this.stack + \": \" + ( e.message || e ), extractStacktrace( e, 0 ) );\n\t\t\t\t// else next test will carry the responsibility\n\t\t\t\tsaveGlobal();\n\t\n\t\t\t\t// Restart the tests if they're blocking\n\t\t\t\tif ( config.blocking ) {\n\t\t\t\t\tQUnit.start();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tteardown: function() {\n\t\t\tconfig.current = this;\n\t\t\tif ( config.notrycatch ) {\n\t\t\t\tif ( typeof this.callbackRuntime === \"undefined\" ) {\n\t\t\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t\t\t}\n\t\t\t\tthis.testEnvironment.teardown.call( this.testEnvironment, QUnit.assert );\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tthis.testEnvironment.teardown.call( this.testEnvironment, QUnit.assert );\n\t\t\t\t} catch( e ) {\n\t\t\t\t\tQUnit.pushFailure( \"Teardown failed on \" + this.testName + \": \" + ( e.message || e ), extractStacktrace( e, 1 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\tcheckPollution();\n\t\t},\n\t\tfinish: function() {\n\t\t\tconfig.current = this;\n\t\t\tif ( config.requireExpects && this.expected === null ) {\n\t\t\t\tQUnit.pushFailure( \"Expected number of assertions to be defined, but expect() was not called.\", this.stack );\n\t\t\t} else if ( this.expected !== null && this.expected !== this.assertions.length ) {\n\t\t\t\tQUnit.pushFailure( \"Expected \" + this.expected + \" assertions, but \" + this.assertions.length + \" were run\", this.stack );\n\t\t\t} else if ( this.expected === null && !this.assertions.length ) {\n\t\t\t\tQUnit.pushFailure( \"Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.\", this.stack );\n\t\t\t}\n\t\n\t\t\tvar i, assertion, a, b, time, li, ol,\n\t\t\t\ttest = this,\n\t\t\t\tgood = 0,\n\t\t\t\tbad = 0,\n\t\t\t\ttests = id( \"qunit-tests\" );\n\t\n\t\t\tthis.runtime = +new Date() - this.started;\n\t\t\tconfig.stats.all += this.assertions.length;\n\t\t\tconfig.moduleStats.all += this.assertions.length;\n\t\n\t\t\tif ( tests ) {\n\t\t\t\tol = document.createElement( \"ol\" );\n\t\t\t\tol.className = \"qunit-assert-list\";\n\t\n\t\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\t\tassertion = this.assertions[i];\n\t\n\t\t\t\t\tli = document.createElement( \"li\" );\n\t\t\t\t\tli.className = assertion.result ? \"pass\" : \"fail\";\n\t\t\t\t\tli.innerHTML = assertion.message || ( assertion.result ? \"okay\" : \"failed\" );\n\t\t\t\t\tol.appendChild( li );\n\t\n\t\t\t\t\tif ( assertion.result ) {\n\t\t\t\t\t\tgood++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbad++;\n\t\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// store result when possible\n\t\t\t\tif ( QUnit.config.reorder && defined.sessionStorage ) {\n\t\t\t\t\tif ( bad ) {\n\t\t\t\t\t\tsessionStorage.setItem( \"qunit-test-\" + this.module + \"-\" + this.testName, bad );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsessionStorage.removeItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif ( bad === 0 ) {\n\t\t\t\t\taddClass( ol, \"qunit-collapsed\" );\n\t\t\t\t}\n\t\n\t\t\t\t// `b` initialized at top of scope\n\t\t\t\tb = document.createElement( \"strong\" );\n\t\t\t\tb.innerHTML = this.nameHtml + \" <b class='counts'>(<b class='failed'>\" + bad + \"</b>, <b class='passed'>\" + good + \"</b>, \" + this.assertions.length + \")</b>\";\n\t\n\t\t\t\taddEvent(b, \"click\", function() {\n\t\t\t\t\tvar next = b.parentNode.lastChild,\n\t\t\t\t\t\tcollapsed = hasClass( next, \"qunit-collapsed\" );\n\t\t\t\t\t( collapsed ? removeClass : addClass )( next, \"qunit-collapsed\" );\n\t\t\t\t});\n\t\n\t\t\t\taddEvent(b, \"dblclick\", function( e ) {\n\t\t\t\t\tvar target = e && e.target ? e.target : window.event.srcElement;\n\t\t\t\t\tif ( target.nodeName.toLowerCase() === \"span\" || target.nodeName.toLowerCase() === \"b\" ) {\n\t\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t\t}\n\t\t\t\t\tif ( window.location && target.nodeName.toLowerCase() === \"strong\" ) {\n\t\t\t\t\t\twindow.location = QUnit.url({ testNumber: test.testNumber });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t// `time` initialized at top of scope\n\t\t\t\ttime = document.createElement( \"span\" );\n\t\t\t\ttime.className = \"runtime\";\n\t\t\t\ttime.innerHTML = this.runtime + \" ms\";\n\t\n\t\t\t\t// `li` initialized at top of scope\n\t\t\t\tli = id( this.id );\n\t\t\t\tli.className = bad ? \"fail\" : \"pass\";\n\t\t\t\tli.removeChild( li.firstChild );\n\t\t\t\ta = li.firstChild;\n\t\t\t\tli.appendChild( b );\n\t\t\t\tli.appendChild( a );\n\t\t\t\tli.appendChild( time );\n\t\t\t\tli.appendChild( ol );\n\t\n\t\t\t} else {\n\t\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\t\tif ( !this.assertions[i].result ) {\n\t\t\t\t\t\tbad++;\n\t\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\trunLoggingCallbacks( \"testDone\", QUnit, {\n\t\t\t\tname: this.testName,\n\t\t\t\tmodule: this.module,\n\t\t\t\tfailed: bad,\n\t\t\t\tpassed: this.assertions.length - bad,\n\t\t\t\ttotal: this.assertions.length,\n\t\t\t\truntime: this.runtime,\n\t\t\t\t// DEPRECATED: this property will be removed in 2.0.0, use runtime instead\n\t\t\t\tduration: this.runtime\n\t\t\t});\n\t\n\t\t\tQUnit.reset();\n\t\n\t\t\tconfig.current = undefined;\n\t\t},\n\t\n\t\tqueue: function() {\n\t\t\tvar bad,\n\t\t\t\ttest = this;\n\t\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.init();\n\t\t\t});\n\t\t\tfunction run() {\n\t\t\t\t// each of these can by async\n\t\t\t\tsynchronize(function() {\n\t\t\t\t\ttest.setup();\n\t\t\t\t});\n\t\t\t\tsynchronize(function() {\n\t\t\t\t\ttest.run();\n\t\t\t\t});\n\t\t\t\tsynchronize(function() {\n\t\t\t\t\ttest.teardown();\n\t\t\t\t});\n\t\t\t\tsynchronize(function() {\n\t\t\t\t\ttest.finish();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// `bad` initialized at top of scope\n\t\t\t// defer when previous test run passed, if storage is available\n\t\t\tbad = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t\t\t\t\t+sessionStorage.getItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\t\n\t\t\tif ( bad ) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tsynchronize( run, true );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// `assert` initialized at top of scope\n\t// Assert helpers\n\t// All of these must either call QUnit.push() or manually do:\n\t// - runLoggingCallbacks( \"log\", .. );\n\t// - config.current.assertions.push({ .. });\n\tassert = QUnit.assert = {\n\t\t/**\n\t\t * Asserts rough true-ish result.\n\t\t * @name ok\n\t\t * @function\n\t\t * @example ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" );\n\t\t */\n\t\tok: function( result, msg ) {\n\t\t\tif ( !config.current ) {\n\t\t\t\tthrow new Error( \"ok() assertion outside test context, was \" + sourceFromStacktrace(2) );\n\t\t\t}\n\t\t\tresult = !!result;\n\t\t\tmsg = msg || ( result ? \"okay\" : \"failed\" );\n\t\n\t\t\tvar source,\n\t\t\t\tdetails = {\n\t\t\t\t\tmodule: config.current.module,\n\t\t\t\t\tname: config.current.testName,\n\t\t\t\t\tresult: result,\n\t\t\t\t\tmessage: msg\n\t\t\t\t};\n\t\n\t\t\tmsg = \"<span class='test-message'>\" + escapeText( msg ) + \"</span>\";\n\t\n\t\t\tif ( !result ) {\n\t\t\t\tsource = sourceFromStacktrace( 2 );\n\t\t\t\tif ( source ) {\n\t\t\t\t\tdetails.source = source;\n\t\t\t\t\tmsg += \"<table><tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\t\t\t\tescapeText( source ) +\n\t\t\t\t\t\t\"</pre></td></tr></table>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\t\t\tconfig.current.assertions.push({\n\t\t\t\tresult: result,\n\t\t\t\tmessage: msg\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Assert that the first two arguments are equal, with an optional message.\n\t\t * Prints out both actual and expected values.\n\t\t * @name equal\n\t\t * @function\n\t\t * @example equal( format( \"Received {0} bytes.\", 2), \"Received 2 bytes.\", \"format() replaces {0} with next argument\" );\n\t\t */\n\t\tequal: function( actual, expected, message ) {\n\t\t\t/*jshint eqeqeq:false */\n\t\t\tQUnit.push( expected == actual, actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name notEqual\n\t\t * @function\n\t\t */\n\t\tnotEqual: function( actual, expected, message ) {\n\t\t\t/*jshint eqeqeq:false */\n\t\t\tQUnit.push( expected != actual, actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name propEqual\n\t\t * @function\n\t\t */\n\t\tpropEqual: function( actual, expected, message ) {\n\t\t\tactual = objectValues(actual);\n\t\t\texpected = objectValues(expected);\n\t\t\tQUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name notPropEqual\n\t\t * @function\n\t\t */\n\t\tnotPropEqual: function( actual, expected, message ) {\n\t\t\tactual = objectValues(actual);\n\t\t\texpected = objectValues(expected);\n\t\t\tQUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name deepEqual\n\t\t * @function\n\t\t */\n\t\tdeepEqual: function( actual, expected, message ) {\n\t\t\tQUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name notDeepEqual\n\t\t * @function\n\t\t */\n\t\tnotDeepEqual: function( actual, expected, message ) {\n\t\t\tQUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name strictEqual\n\t\t * @function\n\t\t */\n\t\tstrictEqual: function( actual, expected, message ) {\n\t\t\tQUnit.push( expected === actual, actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name notStrictEqual\n\t\t * @function\n\t\t */\n\t\tnotStrictEqual: function( actual, expected, message ) {\n\t\t\tQUnit.push( expected !== actual, actual, expected, message );\n\t\t},\n\t\n\t\t\"throws\": function( block, expected, message ) {\n\t\t\tvar actual,\n\t\t\t\texpectedOutput = expected,\n\t\t\t\tok = false;\n\t\n\t\t\t// 'expected' is optional\n\t\t\tif ( !message && typeof expected === \"string\" ) {\n\t\t\t\tmessage = expected;\n\t\t\t\texpected = null;\n\t\t\t}\n\t\n\t\t\tconfig.current.ignoreGlobalErrors = true;\n\t\t\ttry {\n\t\t\t\tblock.call( config.current.testEnvironment );\n\t\t\t} catch (e) {\n\t\t\t\tactual = e;\n\t\t\t}\n\t\t\tconfig.current.ignoreGlobalErrors = false;\n\t\n\t\t\tif ( actual ) {\n\t\n\t\t\t\t// we don't want to validate thrown error\n\t\t\t\tif ( !expected ) {\n\t\t\t\t\tok = true;\n\t\t\t\t\texpectedOutput = null;\n\t\n\t\t\t\t// expected is an Error object\n\t\t\t\t} else if ( expected instanceof Error ) {\n\t\t\t\t\tok = actual instanceof Error &&\n\t\t\t\t\t\t actual.name === expected.name &&\n\t\t\t\t\t\t actual.message === expected.message;\n\t\n\t\t\t\t// expected is a regexp\n\t\t\t\t} else if ( QUnit.objectType( expected ) === \"regexp\" ) {\n\t\t\t\t\tok = expected.test( errorString( actual ) );\n\t\n\t\t\t\t// expected is a string\n\t\t\t\t} else if ( QUnit.objectType( expected ) === \"string\" ) {\n\t\t\t\t\tok = expected === errorString( actual );\n\t\n\t\t\t\t// expected is a constructor\n\t\t\t\t} else if ( actual instanceof expected ) {\n\t\t\t\t\tok = true;\n\t\n\t\t\t\t// expected is a validation function which returns true is validation passed\n\t\t\t\t} else if ( expected.call( {}, actual ) === true ) {\n\t\t\t\t\texpectedOutput = null;\n\t\t\t\t\tok = true;\n\t\t\t\t}\n\t\n\t\t\t\tQUnit.push( ok, actual, expectedOutput, message );\n\t\t\t} else {\n\t\t\t\tQUnit.pushFailure( message, null, \"No exception was thrown.\" );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * @deprecated since 1.8.0\n\t * Kept assertion helpers in root for backwards compatibility.\n\t */\n\textend( QUnit.constructor.prototype, assert );\n\t\n\t/**\n\t * @deprecated since 1.9.0\n\t * Kept to avoid TypeErrors for undefined methods.\n\t */\n\tQUnit.constructor.prototype.raises = function() {\n\t\tQUnit.push( false, false, false, \"QUnit.raises has been deprecated since 2012 (fad3c1ea), use QUnit.throws instead\" );\n\t};\n\t\n\t/**\n\t * @deprecated since 1.0.0, replaced with error pushes since 1.3.0\n\t * Kept to avoid TypeErrors for undefined methods.\n\t */\n\tQUnit.constructor.prototype.equals = function() {\n\t\tQUnit.push( false, false, false, \"QUnit.equals has been deprecated since 2009 (e88049a0), use QUnit.equal instead\" );\n\t};\n\tQUnit.constructor.prototype.same = function() {\n\t\tQUnit.push( false, false, false, \"QUnit.same has been deprecated since 2009 (e88049a0), use QUnit.deepEqual instead\" );\n\t};\n\t\n\t// Test for equality any JavaScript type.\n\t// Author: Philippe Rathé <prathe@gmail.com>\n\tQUnit.equiv = (function() {\n\t\n\t\t// Call the o related callback with the given arguments.\n\t\tfunction bindCallbacks( o, callbacks, args ) {\n\t\t\tvar prop = QUnit.objectType( o );\n\t\t\tif ( prop ) {\n\t\t\t\tif ( QUnit.objectType( callbacks[ prop ] ) === \"function\" ) {\n\t\t\t\t\treturn callbacks[ prop ].apply( callbacks, args );\n\t\t\t\t} else {\n\t\t\t\t\treturn callbacks[ prop ]; // or undefined\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// the real equiv function\n\t\tvar innerEquiv,\n\t\t\t// stack to decide between skip/abort functions\n\t\t\tcallers = [],\n\t\t\t// stack to avoiding loops from circular referencing\n\t\t\tparents = [],\n\t\t\tparentsB = [],\n\t\n\t\t\tgetProto = Object.getPrototypeOf || function ( obj ) {\n\t\t\t\t/*jshint camelcase:false */\n\t\t\t\treturn obj.__proto__;\n\t\t\t},\n\t\t\tcallbacks = (function () {\n\t\n\t\t\t\t// for string, boolean, number and null\n\t\t\t\tfunction useStrictEquality( b, a ) {\n\t\t\t\t\t/*jshint eqeqeq:false */\n\t\t\t\t\tif ( b instanceof a.constructor || a instanceof b.constructor ) {\n\t\t\t\t\t\t// to catch short annotation VS 'new' annotation of a\n\t\t\t\t\t\t// declaration\n\t\t\t\t\t\t// e.g. var i = 1;\n\t\t\t\t\t\t// var j = new Number(1);\n\t\t\t\t\t\treturn a == b;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn a === b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn {\n\t\t\t\t\t\"string\": useStrictEquality,\n\t\t\t\t\t\"boolean\": useStrictEquality,\n\t\t\t\t\t\"number\": useStrictEquality,\n\t\t\t\t\t\"null\": useStrictEquality,\n\t\t\t\t\t\"undefined\": useStrictEquality,\n\t\n\t\t\t\t\t\"nan\": function( b ) {\n\t\t\t\t\t\treturn isNaN( b );\n\t\t\t\t\t},\n\t\n\t\t\t\t\t\"date\": function( b, a ) {\n\t\t\t\t\t\treturn QUnit.objectType( b ) === \"date\" && a.valueOf() === b.valueOf();\n\t\t\t\t\t},\n\t\n\t\t\t\t\t\"regexp\": function( b, a ) {\n\t\t\t\t\t\treturn QUnit.objectType( b ) === \"regexp\" &&\n\t\t\t\t\t\t\t// the regex itself\n\t\t\t\t\t\t\ta.source === b.source &&\n\t\t\t\t\t\t\t// and its modifiers\n\t\t\t\t\t\t\ta.global === b.global &&\n\t\t\t\t\t\t\t// (gmi) ...\n\t\t\t\t\t\t\ta.ignoreCase === b.ignoreCase &&\n\t\t\t\t\t\t\ta.multiline === b.multiline &&\n\t\t\t\t\t\t\ta.sticky === b.sticky;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// - skip when the property is a method of an instance (OOP)\n\t\t\t\t\t// - abort otherwise,\n\t\t\t\t\t// initial === would have catch identical references anyway\n\t\t\t\t\t\"function\": function() {\n\t\t\t\t\t\tvar caller = callers[callers.length - 1];\n\t\t\t\t\t\treturn caller !== Object && typeof caller !== \"undefined\";\n\t\t\t\t\t},\n\t\n\t\t\t\t\t\"array\": function( b, a ) {\n\t\t\t\t\t\tvar i, j, len, loop, aCircular, bCircular;\n\t\n\t\t\t\t\t\t// b could be an object literal here\n\t\t\t\t\t\tif ( QUnit.objectType( b ) !== \"array\" ) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tlen = a.length;\n\t\t\t\t\t\tif ( len !== b.length ) {\n\t\t\t\t\t\t\t// safe and faster\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\t\tparents.push( a );\n\t\t\t\t\t\tparentsB.push( b );\n\t\t\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\t\t\taCircular = parents[j] === a[i];\n\t\t\t\t\t\t\t\tbCircular = parentsB[j] === b[i];\n\t\t\t\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\t\t\t\tif ( a[i] === b[i] || aCircular && bCircular ) {\n\t\t\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( !loop && !innerEquiv(a[i], b[i]) ) {\n\t\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t\"object\": function( b, a ) {\n\t\t\t\t\t\t/*jshint forin:false */\n\t\t\t\t\t\tvar i, j, loop, aCircular, bCircular,\n\t\t\t\t\t\t\t// Default to true\n\t\t\t\t\t\t\teq = true,\n\t\t\t\t\t\t\taProperties = [],\n\t\t\t\t\t\t\tbProperties = [];\n\t\n\t\t\t\t\t\t// comparing constructors is more strict than using\n\t\t\t\t\t\t// instanceof\n\t\t\t\t\t\tif ( a.constructor !== b.constructor ) {\n\t\t\t\t\t\t\t// Allow objects with no prototype to be equivalent to\n\t\t\t\t\t\t\t// objects with Object as their constructor.\n\t\t\t\t\t\t\tif ( !(( getProto(a) === null && getProto(b) === Object.prototype ) ||\n\t\t\t\t\t\t\t\t( getProto(b) === null && getProto(a) === Object.prototype ) ) ) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// stack constructor before traversing properties\n\t\t\t\t\t\tcallers.push( a.constructor );\n\t\n\t\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\t\tparents.push( a );\n\t\t\t\t\t\tparentsB.push( b );\n\t\n\t\t\t\t\t\t// be strict: don't ensure hasOwnProperty and go deep\n\t\t\t\t\t\tfor ( i in a ) {\n\t\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\t\t\taCircular = parents[j] === a[i];\n\t\t\t\t\t\t\t\tbCircular = parentsB[j] === b[i];\n\t\t\t\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\t\t\t\tif ( a[i] === b[i] || aCircular && bCircular ) {\n\t\t\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taProperties.push(i);\n\t\t\t\t\t\t\tif ( !loop && !innerEquiv(a[i], b[i]) ) {\n\t\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\tcallers.pop(); // unstack, we are done\n\t\n\t\t\t\t\t\tfor ( i in b ) {\n\t\t\t\t\t\t\tbProperties.push( i ); // collect b's properties\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Ensures identical properties name\n\t\t\t\t\t\treturn eq && innerEquiv( aProperties.sort(), bProperties.sort() );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}());\n\t\n\t\tinnerEquiv = function() { // can take multiple arguments\n\t\t\tvar args = [].slice.apply( arguments );\n\t\t\tif ( args.length < 2 ) {\n\t\t\t\treturn true; // end transition\n\t\t\t}\n\t\n\t\t\treturn (function( a, b ) {\n\t\t\t\tif ( a === b ) {\n\t\t\t\t\treturn true; // catch the most you can\n\t\t\t\t} else if ( a === null || b === null || typeof a === \"undefined\" ||\n\t\t\t\t\t\ttypeof b === \"undefined\" ||\n\t\t\t\t\t\tQUnit.objectType(a) !== QUnit.objectType(b) ) {\n\t\t\t\t\treturn false; // don't lose time with error prone cases\n\t\t\t\t} else {\n\t\t\t\t\treturn bindCallbacks(a, callbacks, [ b, a ]);\n\t\t\t\t}\n\t\n\t\t\t\t// apply transition with (1..n) arguments\n\t\t\t}( args[0], args[1] ) && innerEquiv.apply( this, args.splice(1, args.length - 1 )) );\n\t\t};\n\t\n\t\treturn innerEquiv;\n\t}());\n\t\n\t/**\n\t * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n\t * http://flesler.blogspot.com Licensed under BSD\n\t * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n\t *\n\t * @projectDescription Advanced and extensible data dumping for Javascript.\n\t * @version 1.0.0\n\t * @author Ariel Flesler\n\t * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n\t */\n\tQUnit.jsDump = (function() {\n\t\tfunction quote( str ) {\n\t\t\treturn \"\\\"\" + str.toString().replace( /\"/g, \"\\\\\\\"\" ) + \"\\\"\";\n\t\t}\n\t\tfunction literal( o ) {\n\t\t\treturn o + \"\";\n\t\t}\n\t\tfunction join( pre, arr, post ) {\n\t\t\tvar s = jsDump.separator(),\n\t\t\t\tbase = jsDump.indent(),\n\t\t\t\tinner = jsDump.indent(1);\n\t\t\tif ( arr.join ) {\n\t\t\t\tarr = arr.join( \",\" + s + inner );\n\t\t\t}\n\t\t\tif ( !arr ) {\n\t\t\t\treturn pre + post;\n\t\t\t}\n\t\t\treturn [ pre, inner + arr, base + post ].join(s);\n\t\t}\n\t\tfunction array( arr, stack ) {\n\t\t\tvar i = arr.length, ret = new Array(i);\n\t\t\tthis.up();\n\t\t\twhile ( i-- ) {\n\t\t\t\tret[i] = this.parse( arr[i] , undefined , stack);\n\t\t\t}\n\t\t\tthis.down();\n\t\t\treturn join( \"[\", ret, \"]\" );\n\t\t}\n\t\n\t\tvar reName = /^function (\\w+)/,\n\t\t\tjsDump = {\n\t\t\t\t// type is used mostly internally, you can fix a (custom)type in advance\n\t\t\t\tparse: function( obj, type, stack ) {\n\t\t\t\t\tstack = stack || [ ];\n\t\t\t\t\tvar inStack, res,\n\t\t\t\t\t\tparser = this.parsers[ type || this.typeOf(obj) ];\n\t\n\t\t\t\t\ttype = typeof parser;\n\t\t\t\t\tinStack = inArray( obj, stack );\n\t\n\t\t\t\t\tif ( inStack !== -1 ) {\n\t\t\t\t\t\treturn \"recursion(\" + (inStack - stack.length) + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tif ( type === \"function\" )  {\n\t\t\t\t\t\tstack.push( obj );\n\t\t\t\t\t\tres = parser.call( this, obj, stack );\n\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t\treturn ( type === \"string\" ) ? parser : this.parsers.error;\n\t\t\t\t},\n\t\t\t\ttypeOf: function( obj ) {\n\t\t\t\t\tvar type;\n\t\t\t\t\tif ( obj === null ) {\n\t\t\t\t\t\ttype = \"null\";\n\t\t\t\t\t} else if ( typeof obj === \"undefined\" ) {\n\t\t\t\t\t\ttype = \"undefined\";\n\t\t\t\t\t} else if ( QUnit.is( \"regexp\", obj) ) {\n\t\t\t\t\t\ttype = \"regexp\";\n\t\t\t\t\t} else if ( QUnit.is( \"date\", obj) ) {\n\t\t\t\t\t\ttype = \"date\";\n\t\t\t\t\t} else if ( QUnit.is( \"function\", obj) ) {\n\t\t\t\t\t\ttype = \"function\";\n\t\t\t\t\t} else if ( typeof obj.setInterval !== undefined && typeof obj.document !== \"undefined\" && typeof obj.nodeType === \"undefined\" ) {\n\t\t\t\t\t\ttype = \"window\";\n\t\t\t\t\t} else if ( obj.nodeType === 9 ) {\n\t\t\t\t\t\ttype = \"document\";\n\t\t\t\t\t} else if ( obj.nodeType ) {\n\t\t\t\t\t\ttype = \"node\";\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// native arrays\n\t\t\t\t\t\ttoString.call( obj ) === \"[object Array]\" ||\n\t\t\t\t\t\t// NodeList objects\n\t\t\t\t\t\t( typeof obj.length === \"number\" && typeof obj.item !== \"undefined\" && ( obj.length ? obj.item(0) === obj[0] : ( obj.item( 0 ) === null && typeof obj[0] === \"undefined\" ) ) )\n\t\t\t\t\t) {\n\t\t\t\t\t\ttype = \"array\";\n\t\t\t\t\t} else if ( obj.constructor === Error.prototype.constructor ) {\n\t\t\t\t\t\ttype = \"error\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = typeof obj;\n\t\t\t\t\t}\n\t\t\t\t\treturn type;\n\t\t\t\t},\n\t\t\t\tseparator: function() {\n\t\t\t\t\treturn this.multiline ?\tthis.HTML ? \"<br />\" : \"\\n\" : this.HTML ? \"&nbsp;\" : \" \";\n\t\t\t\t},\n\t\t\t\t// extra can be a number, shortcut for increasing-calling-decreasing\n\t\t\t\tindent: function( extra ) {\n\t\t\t\t\tif ( !this.multiline ) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\t\t\t\t\tvar chr = this.indentChar;\n\t\t\t\t\tif ( this.HTML ) {\n\t\t\t\t\t\tchr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&nbsp;\" );\n\t\t\t\t\t}\n\t\t\t\t\treturn new Array( this.depth + ( extra || 0 ) ).join(chr);\n\t\t\t\t},\n\t\t\t\tup: function( a ) {\n\t\t\t\t\tthis.depth += a || 1;\n\t\t\t\t},\n\t\t\t\tdown: function( a ) {\n\t\t\t\t\tthis.depth -= a || 1;\n\t\t\t\t},\n\t\t\t\tsetParser: function( name, parser ) {\n\t\t\t\t\tthis.parsers[name] = parser;\n\t\t\t\t},\n\t\t\t\t// The next 3 are exposed so you can use them\n\t\t\t\tquote: quote,\n\t\t\t\tliteral: literal,\n\t\t\t\tjoin: join,\n\t\t\t\t//\n\t\t\t\tdepth: 1,\n\t\t\t\t// This is the list of parsers, to modify them, use jsDump.setParser\n\t\t\t\tparsers: {\n\t\t\t\t\twindow: \"[Window]\",\n\t\t\t\t\tdocument: \"[Document]\",\n\t\t\t\t\terror: function(error) {\n\t\t\t\t\t\treturn \"Error(\\\"\" + error.message + \"\\\")\";\n\t\t\t\t\t},\n\t\t\t\t\tunknown: \"[Unknown]\",\n\t\t\t\t\t\"null\": \"null\",\n\t\t\t\t\t\"undefined\": \"undefined\",\n\t\t\t\t\t\"function\": function( fn ) {\n\t\t\t\t\t\tvar ret = \"function\",\n\t\t\t\t\t\t\t// functions never have name in IE\n\t\t\t\t\t\t\tname = \"name\" in fn ? fn.name : (reName.exec(fn) || [])[1];\n\t\n\t\t\t\t\t\tif ( name ) {\n\t\t\t\t\t\t\tret += \" \" + name;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret += \"( \";\n\t\n\t\t\t\t\t\tret = [ ret, QUnit.jsDump.parse( fn, \"functionArgs\" ), \"){\" ].join( \"\" );\n\t\t\t\t\t\treturn join( ret, QUnit.jsDump.parse(fn,\"functionCode\" ), \"}\" );\n\t\t\t\t\t},\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnodelist: array,\n\t\t\t\t\t\"arguments\": array,\n\t\t\t\t\tobject: function( map, stack ) {\n\t\t\t\t\t\t/*jshint forin:false */\n\t\t\t\t\t\tvar ret = [ ], keys, key, val, i;\n\t\t\t\t\t\tQUnit.jsDump.up();\n\t\t\t\t\t\tkeys = [];\n\t\t\t\t\t\tfor ( key in map ) {\n\t\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkeys.sort();\n\t\t\t\t\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t\t\t\t\tkey = keys[ i ];\n\t\t\t\t\t\t\tval = map[ key ];\n\t\t\t\t\t\t\tret.push( QUnit.jsDump.parse( key, \"key\" ) + \": \" + QUnit.jsDump.parse( val, undefined, stack ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tQUnit.jsDump.down();\n\t\t\t\t\t\treturn join( \"{\", ret, \"}\" );\n\t\t\t\t\t},\n\t\t\t\t\tnode: function( node ) {\n\t\t\t\t\t\tvar len, i, val,\n\t\t\t\t\t\t\topen = QUnit.jsDump.HTML ? \"&lt;\" : \"<\",\n\t\t\t\t\t\t\tclose = QUnit.jsDump.HTML ? \"&gt;\" : \">\",\n\t\t\t\t\t\t\ttag = node.nodeName.toLowerCase(),\n\t\t\t\t\t\t\tret = open + tag,\n\t\t\t\t\t\t\tattrs = node.attributes;\n\t\n\t\t\t\t\t\tif ( attrs ) {\n\t\t\t\t\t\t\tfor ( i = 0, len = attrs.length; i < len; i++ ) {\n\t\t\t\t\t\t\t\tval = attrs[i].nodeValue;\n\t\t\t\t\t\t\t\t// IE6 includes all attributes in .attributes, even ones not explicitly set.\n\t\t\t\t\t\t\t\t// Those have values like undefined, null, 0, false, \"\" or \"inherit\".\n\t\t\t\t\t\t\t\tif ( val && val !== \"inherit\" ) {\n\t\t\t\t\t\t\t\t\tret += \" \" + attrs[i].nodeName + \"=\" + QUnit.jsDump.parse( val, \"attribute\" );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret += close;\n\t\n\t\t\t\t\t\t// Show content of TextNode or CDATASection\n\t\t\t\t\t\tif ( node.nodeType === 3 || node.nodeType === 4 ) {\n\t\t\t\t\t\t\tret += node.nodeValue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn ret + open + \"/\" + tag + close;\n\t\t\t\t\t},\n\t\t\t\t\t// function calls it internally, it's the arguments part of the function\n\t\t\t\t\tfunctionArgs: function( fn ) {\n\t\t\t\t\t\tvar args,\n\t\t\t\t\t\t\tl = fn.length;\n\t\n\t\t\t\t\t\tif ( !l ) {\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\targs = new Array(l);\n\t\t\t\t\t\twhile ( l-- ) {\n\t\t\t\t\t\t\t// 97 is 'a'\n\t\t\t\t\t\t\targs[l] = String.fromCharCode(97+l);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \" \" + args.join( \", \" ) + \" \";\n\t\t\t\t\t},\n\t\t\t\t\t// object calls it internally, the key part of an item in a map\n\t\t\t\t\tkey: quote,\n\t\t\t\t\t// function calls it internally, it's the content of the function\n\t\t\t\t\tfunctionCode: \"[code]\",\n\t\t\t\t\t// node calls it internally, it's an html attribute value\n\t\t\t\t\tattribute: quote,\n\t\t\t\t\tstring: quote,\n\t\t\t\t\tdate: quote,\n\t\t\t\t\tregexp: literal,\n\t\t\t\t\tnumber: literal,\n\t\t\t\t\t\"boolean\": literal\n\t\t\t\t},\n\t\t\t\t// if true, entities are escaped ( <, >, \\t, space and \\n )\n\t\t\t\tHTML: false,\n\t\t\t\t// indentation unit\n\t\t\t\tindentChar: \"  \",\n\t\t\t\t// if true, items in a collection, are separated by a \\n, else just a space.\n\t\t\t\tmultiline: true\n\t\t\t};\n\t\n\t\treturn jsDump;\n\t}());\n\t\n\t/*\n\t * Javascript Diff Algorithm\n\t *  By John Resig (http://ejohn.org/)\n\t *  Modified by Chu Alan \"sprite\"\n\t *\n\t * Released under the MIT license.\n\t *\n\t * More Info:\n\t *  http://ejohn.org/projects/javascript-diff-algorithm/\n\t *\n\t * Usage: QUnit.diff(expected, actual)\n\t *\n\t * QUnit.diff( \"the quick brown fox jumped over\", \"the quick fox jumps over\" ) == \"the  quick <del>brown </del> fox <del>jumped </del><ins>jumps </ins> over\"\n\t */\n\tQUnit.diff = (function() {\n\t\t/*jshint eqeqeq:false, eqnull:true */\n\t\tfunction diff( o, n ) {\n\t\t\tvar i,\n\t\t\t\tns = {},\n\t\t\t\tos = {};\n\t\n\t\t\tfor ( i = 0; i < n.length; i++ ) {\n\t\t\t\tif ( !hasOwn.call( ns, n[i] ) ) {\n\t\t\t\t\tns[ n[i] ] = {\n\t\t\t\t\t\trows: [],\n\t\t\t\t\t\to: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tns[ n[i] ].rows.push( i );\n\t\t\t}\n\t\n\t\t\tfor ( i = 0; i < o.length; i++ ) {\n\t\t\t\tif ( !hasOwn.call( os, o[i] ) ) {\n\t\t\t\t\tos[ o[i] ] = {\n\t\t\t\t\t\trows: [],\n\t\t\t\t\t\tn: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tos[ o[i] ].rows.push( i );\n\t\t\t}\n\t\n\t\t\tfor ( i in ns ) {\n\t\t\t\tif ( hasOwn.call( ns, i ) ) {\n\t\t\t\t\tif ( ns[i].rows.length === 1 && hasOwn.call( os, i ) && os[i].rows.length === 1 ) {\n\t\t\t\t\t\tn[ ns[i].rows[0] ] = {\n\t\t\t\t\t\t\ttext: n[ ns[i].rows[0] ],\n\t\t\t\t\t\t\trow: os[i].rows[0]\n\t\t\t\t\t\t};\n\t\t\t\t\t\to[ os[i].rows[0] ] = {\n\t\t\t\t\t\t\ttext: o[ os[i].rows[0] ],\n\t\t\t\t\t\t\trow: ns[i].rows[0]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( i = 0; i < n.length - 1; i++ ) {\n\t\t\t\tif ( n[i].text != null && n[ i + 1 ].text == null && n[i].row + 1 < o.length && o[ n[i].row + 1 ].text == null &&\n\t\t\t\t\t\t\tn[ i + 1 ] == o[ n[i].row + 1 ] ) {\n\t\n\t\t\t\t\tn[ i + 1 ] = {\n\t\t\t\t\t\ttext: n[ i + 1 ],\n\t\t\t\t\t\trow: n[i].row + 1\n\t\t\t\t\t};\n\t\t\t\t\to[ n[i].row + 1 ] = {\n\t\t\t\t\t\ttext: o[ n[i].row + 1 ],\n\t\t\t\t\t\trow: i + 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( i = n.length - 1; i > 0; i-- ) {\n\t\t\t\tif ( n[i].text != null && n[ i - 1 ].text == null && n[i].row > 0 && o[ n[i].row - 1 ].text == null &&\n\t\t\t\t\t\t\tn[ i - 1 ] == o[ n[i].row - 1 ]) {\n\t\n\t\t\t\t\tn[ i - 1 ] = {\n\t\t\t\t\t\ttext: n[ i - 1 ],\n\t\t\t\t\t\trow: n[i].row - 1\n\t\t\t\t\t};\n\t\t\t\t\to[ n[i].row - 1 ] = {\n\t\t\t\t\t\ttext: o[ n[i].row - 1 ],\n\t\t\t\t\t\trow: i - 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\to: o,\n\t\t\t\tn: n\n\t\t\t};\n\t\t}\n\t\n\t\treturn function( o, n ) {\n\t\t\to = o.replace( /\\s+$/, \"\" );\n\t\t\tn = n.replace( /\\s+$/, \"\" );\n\t\n\t\t\tvar i, pre,\n\t\t\t\tstr = \"\",\n\t\t\t\tout = diff( o === \"\" ? [] : o.split(/\\s+/), n === \"\" ? [] : n.split(/\\s+/) ),\n\t\t\t\toSpace = o.match(/\\s+/g),\n\t\t\t\tnSpace = n.match(/\\s+/g);\n\t\n\t\t\tif ( oSpace == null ) {\n\t\t\t\toSpace = [ \" \" ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\toSpace.push( \" \" );\n\t\t\t}\n\t\n\t\t\tif ( nSpace == null ) {\n\t\t\t\tnSpace = [ \" \" ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnSpace.push( \" \" );\n\t\t\t}\n\t\n\t\t\tif ( out.n.length === 0 ) {\n\t\t\t\tfor ( i = 0; i < out.o.length; i++ ) {\n\t\t\t\t\tstr += \"<del>\" + out.o[i] + oSpace[i] + \"</del>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( out.n[0].text == null ) {\n\t\t\t\t\tfor ( n = 0; n < out.o.length && out.o[n].text == null; n++ ) {\n\t\t\t\t\t\tstr += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfor ( i = 0; i < out.n.length; i++ ) {\n\t\t\t\t\tif (out.n[i].text == null) {\n\t\t\t\t\t\tstr += \"<ins>\" + out.n[i] + nSpace[i] + \"</ins>\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// `pre` initialized at top of scope\n\t\t\t\t\t\tpre = \"\";\n\t\n\t\t\t\t\t\tfor ( n = out.n[i].row + 1; n < out.o.length && out.o[n].text == null; n++ ) {\n\t\t\t\t\t\t\tpre += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += \" \" + out.n[i].text + nSpace[i] + pre;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn str;\n\t\t};\n\t}());\n\t\n\t// For browser, export only select globals\n\tif ( typeof window !== \"undefined\" ) {\n\t\textend( window, QUnit.constructor.prototype );\n\t\twindow.QUnit = QUnit;\n\t}\n\t\n\t// For CommonJS environments, export everything\n\tif ( typeof module !== \"undefined\" && module.exports ) {\n\t\tmodule.exports = QUnit;\n\t}\n\t\n\t\n\t// Get a reference to the global object, like window in browsers\n\t}( (function() {\n\t\treturn this;\n\t})() ));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(54)))\n\n/***/ },\n\n/***/ 54:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 55:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n\t *\n\t * https://github.com/twada/qunit-tap\n\t * version: 1.5.0\n\t *\n\t * Copyright (c) 2010-2014 Takuto Wada\n\t * Dual licensed under the MIT and GPLv2 licenses.\n\t *   https://raw.github.com/twada/qunit-tap/master/MIT-LICENSE.txt\n\t *   https://raw.github.com/twada/qunit-tap/master/GPL-LICENSE.txt\n\t *\n\t * A part of extend function is:\n\t *   Copyright 2012 jQuery Foundation and other contributors\n\t *   Released under the MIT license.\n\t *   http://jquery.org/license\n\t */\n\t(function (root, factory) {\n\t    'use strict';\n\t\n\t    // using returnExports UMD pattern\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory();\n\t    } else {\n\t        root.qunitTap = factory();\n\t    }\n\t}(this, function () {\n\t    'use strict';\n\t\n\t    var qunitTapVersion = '1.5.0',\n\t        slice = Array.prototype.slice;\n\t\n\t    // borrowed from qunit.js\n\t    function extend (a, b) {\n\t        var prop;\n\t        for (prop in b) {\n\t            if (b.hasOwnProperty(prop)) {\n\t                if (typeof b[prop] === 'undefined') {\n\t                    delete a[prop];\n\t                } else {\n\t                    a[prop] = b[prop];\n\t                }\n\t            }\n\t        }\n\t        return a;\n\t    }\n\t\n\t    function indexOf (ary, element) {\n\t        var i;\n\t        for (i = 0; i < ary.length; i += 1) {\n\t            if (ary[i] === element) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    }\n\t\n\t    function removeElement (ary, element) {\n\t        var index = indexOf(ary, element);\n\t        if (index !== -1) {\n\t            return ary.splice(index, 1);\n\t        } else {\n\t            return [];\n\t        }\n\t    }\n\t\n\t    function isPlanRequired (conf) {\n\t        return (typeof conf !== 'undefined' && typeof conf.requireExpects !== 'undefined' && conf.requireExpects);\n\t    }\n\t\n\t    function isPassed (details) {\n\t        return !!(details.result);\n\t    }\n\t\n\t    function isFailed (details) {\n\t        return !(isPassed(details));\n\t    }\n\t\n\t    function isAssertOkFailed (details) {\n\t        return isFailed(details) && typeof details.expected === 'undefined' && typeof details.actual === 'undefined';\n\t    }\n\t\n\t    function escapeLineEndings (str) {\n\t        return str.replace(/(\\r?\\n)/g, '$&# ');\n\t    }\n\t\n\t    function ltrim (str) {\n\t        return str.replace(/^\\s+/, '');\n\t    }\n\t\n\t    function noop (obj) {\n\t        return obj;\n\t    }\n\t\n\t    function render (desc, fieldName, fieldValue, formatter) {\n\t        desc.push(fieldName + ': ' + formatter(fieldValue));\n\t    }\n\t\n\t    function renderIf (shouldRender, desc, fieldName, fieldValue, formatter) {\n\t        if (!shouldRender || typeof fieldValue === 'undefined') {\n\t            return;\n\t        }\n\t        render(desc, fieldName, fieldValue, formatter);\n\t    }\n\t\n\t    function formatTestLine (testLine, rest) {\n\t        if (!rest) {\n\t            return testLine;\n\t        }\n\t        return testLine + ' - ' + escapeLineEndings(rest);\n\t    }\n\t\n\t    var createCallbackAppenderFor = function (qu) {\n\t        return function (subject, observer, event) {\n\t            var originalLoggingCallback = subject[event],\n\t                callback = function () {\n\t                    // make listener methods (moduleStart,testStart,log, ...) overridable.\n\t                    observer[event].apply(observer, slice.apply(arguments));\n\t                };\n\t            originalLoggingCallback(callback);\n\t            return callback;\n\t        };\n\t    };\n\t\n\t\n\t    /**\n\t     * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n\t     * @param qunitObject QUnit object reference.\n\t     * @param printLikeFunction print-like function for TAP output (assumes line-separator is added by this function for each call).\n\t     * @param options configuration options to customize default behavior.\n\t     * @return object to provide QUnit-TAP API and customization subject.\n\t     */\n\t    function qunitTap(qunitObject, printLikeFunction, options) {\n\t        if (!qunitObject) {\n\t            throw new Error('should pass QUnit object reference. Please check QUnit\\'s \"require\" path if you are using Node.js (or any CommonJS env).');\n\t        } else if (typeof printLikeFunction !== 'function') {\n\t            throw new Error('should pass print-like function');\n\t        }\n\t\n\t        var qu = qunitObject,\n\t            tap = {},\n\t            jsDumpExists = (typeof qu.jsDump !== 'undefined' && typeof qu.jsDump.parse === 'function'),\n\t            explain = (jsDumpExists ? function explain (obj) { return qu.jsDump.parse(obj); } : noop),\n\t            deprecateOption = function deprecateOption (optionName, fallback) {\n\t                // option deprecation and fallback function\n\t                if (!options || typeof options !== 'object') {\n\t                    return;\n\t                }\n\t                if (typeof options[optionName] === 'undefined') {\n\t                    return;\n\t                }\n\t                printLikeFunction('# WARNING: Option \"' + optionName + '\" is deprecated and will be removed in future version.');\n\t                fallback(options[optionName]);\n\t            },\n\t            targetEvents = [\n\t                'moduleStart',\n\t                'testStart',\n\t                'log',\n\t                'testDone',\n\t                'done'\n\t            ],\n\t            registeredCallbacks = {};\n\t\n\t\n\t        tap.config = extend(\n\t            {\n\t                initialCount: 1,\n\t                showModuleNameOnFailure: true,\n\t                showTestNameOnFailure: true,\n\t                showExpectationOnFailure: true,\n\t                showSourceOnFailure: true\n\t            },\n\t            options\n\t        );\n\t        deprecateOption('noPlan', function (flag) {\n\t            printLikeFunction('# Now QUnit-TAP works as with \"noPlan: true\" by default. If you want to delare plan explicitly, please use \"QUnit.config.requireExpects\" option instead.');\n\t            tap.config.noPlan = flag;\n\t        });\n\t        deprecateOption('count', function (count) {\n\t            tap.config.initialCount = (count + 1);\n\t        });\n\t        deprecateOption('showDetailsOnFailure', function (flag) {\n\t            tap.config.showModuleNameOnFailure = flag;\n\t            tap.config.showTestNameOnFailure = flag;\n\t            tap.config.showExpectationOnFailure = flag;\n\t            tap.config.showSourceOnFailure = flag;\n\t        });\n\t        tap.VERSION = qunitTapVersion;\n\t        tap.puts = printLikeFunction;\n\t        tap.count = tap.config.initialCount - 1;\n\t        tap.expectedCount = tap.config.initialCount - 1;\n\t\n\t        function isEnabled (configName) {\n\t            return tap.config[configName];\n\t        }\n\t\n\t        function formatDetails (details) {\n\t            if (isPassed(details)) {\n\t                return details.message;\n\t            }\n\t            var desc = [];\n\t            if (details.message) {\n\t                desc.push(details.message);\n\t            }\n\t            if (isEnabled('showExpectationOnFailure') && !(isAssertOkFailed(details))) {\n\t                render(desc, 'expected', details.expected, explain);\n\t                render(desc, 'got', details.actual, explain);\n\t            }\n\t            renderIf(isEnabled('showTestNameOnFailure'), desc, 'test', details.name, noop);\n\t            renderIf(isEnabled('showModuleNameOnFailure'), desc, 'module', details.module, noop);\n\t            renderIf(isEnabled('showSourceOnFailure'), desc, 'source', details.source, ltrim);\n\t            return desc.join(', ');\n\t        }\n\t\n\t        function printPlanLine (toCount) {\n\t            tap.puts(tap.config.initialCount + '..' + toCount);\n\t        }\n\t\n\t        function unsubscribeEvent (eventName) {\n\t            var listeners;\n\t            if (indexOf(targetEvents, eventName) === -1) {\n\t                return;\n\t            }\n\t            listeners = qu.config[eventName];\n\t            if (typeof listeners === 'undefined') {\n\t                return;\n\t            }\n\t            removeElement(listeners, registeredCallbacks[eventName]);\n\t        }\n\t\n\t        function unsubscribeEvents (eventNames) {\n\t            var i;\n\t            for (i = 0; i < eventNames.length; i += 1) {\n\t                unsubscribeEvent(eventNames[i]);\n\t            }\n\t        }\n\t\n\t        tap.explain = explain;\n\t\n\t        tap.note = function note (obj) {\n\t            tap.puts(escapeLineEndings('# ' + obj));\n\t        };\n\t\n\t        tap.diag = function diag (obj) {\n\t            tap.note(obj);\n\t            return false;\n\t        };\n\t\n\t        tap.moduleStart = function moduleStart (arg) {\n\t            var name = (typeof arg === 'string') ? arg : arg.name;\n\t            tap.note('module: ' + name);\n\t        };\n\t\n\t        tap.testStart = function testStart (arg) {\n\t            var name = (typeof arg === 'string') ? arg : arg.name;\n\t            tap.note('test: ' + name);\n\t        };\n\t\n\t        tap.log = function log (details) {\n\t            var testLine = '';\n\t            tap.count += 1;\n\t            if (isFailed(details)) {\n\t                testLine += 'not ';\n\t            }\n\t            testLine += ('ok ' + tap.count);\n\t            tap.puts(formatTestLine(testLine, formatDetails(details)));\n\t        };\n\t\n\t        tap.testDone = function testDone () {\n\t            if (isPlanRequired(qu.config)) {\n\t                tap.expectedCount += qu.config.current.expected;\n\t            }\n\t        };\n\t\n\t        tap.done = function done () {\n\t            if (typeof tap.config.noPlan !== 'undefined' && !(tap.config.noPlan)) {\n\t                // Do nothing until removal of 'noPlan' option.\n\t            } else if (isPlanRequired(qu.config)) {\n\t                printPlanLine(tap.expectedCount);\n\t            } else {\n\t                printPlanLine(tap.count);\n\t            }\n\t        };\n\t\n\t        tap.unsubscribe = function unsubscribe () {\n\t            if (typeof qu.config === 'undefined') {\n\t                return;\n\t            }\n\t            if (arguments.length === 0) {\n\t                unsubscribeEvents(targetEvents);\n\t            } else {\n\t                unsubscribeEvents(slice.apply(arguments));\n\t            }\n\t        };\n\t\n\t        (function () {\n\t            var appendCallback = createCallbackAppenderFor(qu),\n\t                eventName, i, callback;\n\t            for (i = 0; i < targetEvents.length; i += 1) {\n\t                eventName = targetEvents[i];\n\t                callback = appendCallback(qu, tap, eventName);\n\t                registeredCallbacks[eventName] = callback;\n\t            }\n\t        })();\n\t\n\t        return tap;\n\t    }\n\t\n\t    qunitTap.qunitTap = function () {\n\t        throw new Error('[BC BREAK] Since 1.4.0, QUnit-TAP exports single qunitTap function as module.exports. Therefore, require(\"qunit-tap\") returns qunitTap function itself. Please fix your code if you are using Node.js (or any CommonJS env).');\n\t    };\n\t\n\t    // using substack pattern (export single function)\n\t    return qunitTap;\n\t}));\n\n\n/***/ },\n\n/***/ 56:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\t/* global QUnit, qunitTap */\n\t\n\tvar qunit_started = false;\n\t\n\t/* Always use explicit start */\n\tQUnit.config.autostart = false;\n\t\n\t/*\n\t * HACK: phantomjs doesn't handle uncaught exceptions as it should if\n\t * window.onerror is non-null, even when that handler returns false\n\t * (expecting that the browser default behavior will occur).\n\t *\n\t * So remove the qunit window.onerror handler until the tests actually\n\t * start, and any errors become part of the test suite results.\n\t */\n\tvar qunit_onerror = window.onerror;\n\twindow.onerror = null;\n\tQUnit.begin(function() {\n\t    window.onerror = function(error, file, line) {\n\t        var ret = false;\n\t        if (qunit_onerror)\n\t            ret = qunit_onerror(error, file, line);\n\t\n\t        /*\n\t         * If a global exception happens during an async test\n\t         * then that test won't be able to call the start() function\n\t         * to move to the next test, so call it here.\n\t         */\n\t        if (QUnit.config.current && QUnit.config.current.async)\n\t            QUnit.start();\n\t\n\t        return ret;\n\t    };\n\t});\n\t\n\tQUnit.moduleStart(function() {\n\t    qunit_started = true;\n\t});\n\t\n\tQUnit.done(function() {\n\t    console.log(\"phantom-tap-done\");\n\t    window.onerror = null;\n\t});\n\t/*\n\t * Now initialize qunit-tap\n\t *\n\t * When not running under tap-phantom this stuff will just show up in\n\t * the console. We print out a special canary at the end of the tests\n\t * so that tap-phantom can know when the testing is done.\n\t *\n\t * In addition double check for a test file that doesn't properly call\n\t * QUnit.start() after its done setting up its tests.\n\t *\n\t * We also want to insert the current test name into all tap lines.\n\t */\n\tvar tap_regex = /^((not )?ok [0-9]+ (- )?)(.*)$/;\n\tqunitTap(QUnit, function() {\n\t    if (arguments.length == 1 && QUnit.config.current) {\n\t        var match = tap_regex.exec(arguments[0]);\n\t        if (match) {\n\t            console.log(match[1] + QUnit.config.current.testName + \": \" + match[4]);\n\t            return;\n\t        }\n\t    }\n\t    console.log.apply(console, arguments);\n\t});\n\t\n\twindow.setTimeout(function() {\n\t    if (!qunit_started) {\n\t        console.log(\"QUnit not started by test\");\n\t        console.log(\"phantom-tap-error\");\n\t    }\n\t}, 20000);\n\t\n\twindow.tests_included = true;\n\t\n\tif (module && module.exports)\n\t    module.exports = QUnit;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(57)(module)))\n\n/***/ },\n\n/***/ 57:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n\n/***/ 58:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// storaged/test-util.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d64eac40bf421691453c","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar utils = require(\"./utils\");\nvar QUnit = require(\"qunit-tests\");\nvar assert = QUnit;\n\nQUnit.test(\"format_delay\", function() {\n    var checks = [\n        [ 15550000, \"4 hours, 19 minutes, 10 seconds\" ]\n    ];\n\n    assert.expect(checks.length);\n    for (var i = 0; i < checks.length; i++) {\n        assert.strictEqual(utils.format_delay(checks[i][0]), checks[i][1],\n                           \"format_delay(\" + checks[i][0] + \") = \" + checks[i][1]);\n    }\n});\n\nQUnit.test(\"compare_versions\", function() {\n    var checks = [\n        [ \"\",      \"\",      0 ],\n        [ \"0\",     \"0\",     0 ],\n        [ \"1\",     \"0\",     1 ],\n        [ \"0\",     \"1\",    -1 ],\n        [ \"2\",     \"1.9\",   1 ],\n        [ \"2.0\",   \"2\",     1 ],\n        [ \"2.1.6\", \"2.5\",  -1 ],\n        [ \"2..6\",  \"2.0.6\", 0 ],\n    ];\n\n    function sign(n) {\n        return (n === 0) ? 0 : (n < 0)? -1 : 1;\n    }\n\n    assert.expect(checks.length);\n    for (var i = 0; i < checks.length; i++) {\n        assert.strictEqual(sign(utils.compare_versions(checks[i][0], checks[i][1])), checks[i][2],\n                           \"compare_versions(\" + checks[i][0] + \", \" + checks[i][1] + \") = \" + checks[i][2]);\n    }\n});\n\nQUnit.start();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/storaged/test-util.js\n// module id = 0\n// module chunks = 1","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 2\n// module chunks = 0 1","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 3\n// module chunks = 0 1","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var mustache = require(\"mustache\");\n    var service = require(\"service\");\n\n    var _ = cockpit.gettext;\n    var C_ = cockpit.gettext;\n\n    /* UTILITIES\n     */\n\n    var utils = { };\n\n    utils.compare_versions = function compare_versions(a, b) {\n        function to_ints(str) {\n            return str.split(\".\").map(function (s) { return s ? parseInt(s, 10) : 0; });\n        }\n\n        var a_ints = to_ints(a);\n        var b_ints = to_ints(b);\n        var len = Math.min(a_ints.length, b_ints.length);\n        var i;\n\n        for (i = 0; i < len; i++) {\n            if (a_ints[i] == b_ints[i])\n                continue;\n            return a_ints[i] - b_ints[i];\n        }\n\n        return a_ints.length - b_ints.length;\n    };\n\n    var hostnamed = cockpit.dbus(\"org.freedesktop.hostname1\").proxy();\n\n    utils.array_find = function array_find(array, pred) {\n        for (var i = 0; i < array.length; i++)\n            if (pred(array[i]))\n                return array[i];\n        return undefined;\n    };\n\n    utils.flatten = function flatten(array_of_arrays) {\n        if (array_of_arrays.length > 0)\n            return Array.prototype.concat.apply([], array_of_arrays);\n        else\n            return [ ];\n    };\n\n    utils.decode_filename = function decode_filename(encoded) {\n        return cockpit.utf8_decoder().decode(cockpit.base64_decode(encoded).slice(0,-1));\n    };\n\n    utils.encode_filename = function encode_filename(decoded) {\n        return cockpit.base64_encode(cockpit.utf8_encoder().encode(decoded).concat([0]));\n    };\n\n    utils.fmt_size = function fmt_size(bytes) {\n        return cockpit.format_bytes(bytes, 1024);\n    };\n\n    utils.fmt_size_long = function fmt_size_long(bytes) {\n        var with_binary_unit = cockpit.format_bytes(bytes, 1024);\n        var with_decimal_unit = cockpit.format_bytes(bytes, 1000);\n        /* Translators: Used in \"...\" */\n        return with_binary_unit + \", \" + with_decimal_unit + \", \" + bytes + \" \" + C_(\"format-bytes\", \"bytes\");\n    };\n\n    utils.fmt_rate = function fmt_rate(bytes_per_sec) {\n        return cockpit.format_bytes_per_sec(bytes_per_sec, 1024);\n    };\n\n    utils.format_temperature = function format_temperature(kelvin) {\n        var celcius = kelvin - 273.15;\n        var fahrenheit = 9.0 * celcius / 5.0 + 32.0;\n        return celcius.toFixed(1) + \"° C / \" + fahrenheit.toFixed(1) + \"° F\";\n    };\n\n    utils.format_fsys_usage = function format_fsys_usage(used, total) {\n        var text = \"\";\n        var units = 1024;\n        var parts = cockpit.format_bytes(total, units, true);\n        text = \" / \" + parts.join(\" \");\n        units = parts[1];\n\n        parts = cockpit.format_bytes(used, units, true);\n        return parts[0] + text;\n    };\n\n    utils.format_delay = function format_delay(d) {\n        var seconds = Math.round(d/1000);\n        var minutes = Math.floor(seconds / 60);\n        var hours = Math.floor(minutes / 60);\n        seconds = seconds - minutes*60;\n        minutes = minutes - hours*60;\n\n        var s = seconds + \" seconds\";\n        if (minutes > 0)\n            s = minutes + \" minutes, \" + s;\n        if (hours > 0)\n            s = hours + \" hours, \" + s;\n        return s;\n    };\n\n    utils.validate_lvm2_name = function validate_lvm2_name(name) {\n        if (name === \"\")\n            return _(\"Name cannot be empty.\");\n        if (name.length > 127)\n            return _(\"Name cannot be longer than 127 characters.\");\n        var m = name.match(/[^a-zA-Z0-9+._-]/);\n        if (m) {\n            if (m[0].search(/\\s+/) === -1)\n                return cockpit.format(_(\"Name cannot contain the character '$0'.\"), m[0]);\n            else\n                    return cockpit.format(_(\"Name cannot contain whitespace.\"), m[0]);\n        }\n    };\n\n    utils.block_name = function block_name(block) {\n        return utils.decode_filename(block.PreferredDevice);\n    };\n\n    utils.mdraid_name = function mdraid_name(mdraid) {\n        if (!mdraid.Name)\n            return \"\";\n\n        var parts = mdraid.Name.split(\":\");\n\n        if (parts.length != 2)\n            return mdraid.Name;\n\n        if (parts[0] == hostnamed.StaticHostname)\n            return parts[1];\n        else\n            return cockpit.format(_(\"$name (from $host)\"),\n                                  { name: parts[1],\n                                    host: parts[0]\n                                  });\n    };\n\n    utils.lvol_name = function lvol_name(lvol) {\n        var type;\n        if (lvol.Type == \"pool\")\n            type = _(\"Pool for Thin Logical Volumes\");\n        else if (lvol.ThinPool != \"/\")\n            type =_(\"Thin Logical Volume\");\n        else if (lvol.Origin != \"/\")\n            type = _(\"Logical Volume (Snapshot)\");\n        else\n            type = _(\"Logical Volume\");\n        return mustache.render('{{Type}} \"{{Name}}\"', { Type: type, Name: lvol.Name });\n    };\n\n    utils.drive_name = function drive_name(drive) {\n        var name_parts = [ ];\n        if (drive.Vendor)\n            name_parts.push(drive.Vendor);\n        if (drive.Model)\n            name_parts.push(drive.Model);\n\n        var name = name_parts.join(\" \");\n        if (drive.Serial)\n            name += \" (\" + drive.Serial + \")\";\n        else if (drive.WWN)\n            name += \" (\" + drive.WWN + \")\";\n\n        return name;\n    };\n\n    utils.get_block_link_target = function get_block_link_target(client, path) {\n        var is_part, is_crypt, is_lvol;\n\n        while (true) {\n            if (client.blocks_part[path] && client.blocks_ptable[client.blocks_part[path].Table]) {\n                is_part = true;\n                path = client.blocks_part[path].Table;\n            } else if (client.blocks_crypto[path] && client.blocks[client.blocks_crypto[path].CryptoBackingDevice]) {\n                is_crypt = true;\n                path = client.blocks_crypto[path].CryptoBackingDevice;\n            } else\n                break;\n        }\n\n        if (client.blocks_lvm2[path] && client.lvols[client.blocks_lvm2[path].LogicalVolume])\n            is_lvol = true;\n\n        function fmt_part(link) {\n            // Partitions of logical volumes are shown as just logical volumes.\n            if (is_lvol && is_crypt)\n                return cockpit.format(_(\"<span>Encrypted Logical Volume of $0</span>\"), link);\n            else if (is_part && is_crypt)\n                return cockpit.format(_(\"<span>Encrypted Partition of $0</span>\"), link);\n            else if (is_lvol)\n                return cockpit.format(_(\"<span>Logical Volume of $0</span>\"), link);\n            else if (is_part)\n                return cockpit.format(_(\"<span>Partition of $0</span>\"), link);\n            else if (is_crypt)\n                return cockpit.format(_(\"<span>Encrypted $0</span>\"), link);\n            else\n                return link;\n        }\n\n        var block = client.blocks[path];\n        if (!block)\n            return;\n\n        var type, target, name;\n        if (client.mdraids[block.MDRaid]) {\n            type = \"mdraid\";\n            target = client.mdraids[block.MDRaid].UUID;\n            name = cockpit.format(_(\"RAID Device $0\"), utils.mdraid_name(client.mdraids[block.MDRaid]));\n        } else if (client.blocks_lvm2[path] &&\n                   client.lvols[client.blocks_lvm2[path].LogicalVolume] &&\n                   client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup]) {\n            type = \"vgroup\";\n            target = client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup].Name;\n            name = cockpit.format(_(\"Volume Group $0\"), target);\n        } else {\n            type = \"block\";\n            target = utils.block_name(block).replace(/^\\/dev\\//, \"\");\n            if (client.drives[block.Drive])\n                name = utils.drive_name(client.drives[block.Drive]);\n            else\n                name = utils.block_name(block);\n        }\n\n        return {\n            type: type,\n            target: target,\n            html: fmt_part(mustache.render('<a data-goto-{{type}}=\"{{target}}\">{{name}}</a>',\n                                           { type: type, target: target, name: name }))\n        };\n    };\n\n    utils.get_free_blockdevs = function get_free_blockdevs(client) {\n        function is_free(path) {\n            var block = client.blocks[path];\n            var block_ptable = client.blocks_ptable[path];\n            var block_part = client.blocks_part[path];\n            var block_pvol = client.blocks_pvol[path];\n\n            function has_fs_label() {\n                if (!block.IdUsage)\n                    return false;\n                // Devices with a LVM2_member label need to actually be\n                // associated with a volume group.\n                if (block.IdType == 'LVM2_member' && (!block_pvol || !client.vgroups[block_pvol.VolumeGroup]))\n                    return false;\n                return true;\n            }\n\n            function is_mpath_member() {\n                if (!client.drives[block.Drive])\n                    return false;\n                if (!client.drives_block[block.Drive]) {\n                    // Broken multipath drive\n                    return true;\n                }\n                var members = client.drives_multipath_blocks[block.Drive];\n                for (var i = 0; i < members.length; i++) {\n                    if (members[i] == block)\n                        return true;\n                }\n                return false;\n            }\n\n            return (!block.HintIgnore &&\n                    block.Size > 0 &&\n                    !has_fs_label() &&\n                    !is_mpath_member() &&\n                    !block_ptable &&\n                    !(block_part && block_part.IsContainer));\n        }\n\n        function make(path) {\n            var block = client.blocks[path];\n            var link = utils.get_block_link_target(client, path);\n            var text = $('<div>').html(link.html).text();\n\n            return {\n                path: path,\n                Name: utils.block_name(block),\n                Description: utils.fmt_size(block.Size) + \" \" + text\n            };\n        }\n\n        return Object.keys(client.blocks).filter(is_free).sort(utils.make_block_path_cmp(client)).map(make);\n    };\n\n    /* Comparison function for sorting lists of block devices.\n\n       We sort by major:minor numbers to get the expected order when\n       there are more than 10 devices of a kind.  For example, if you\n       have 20 loopback devices named loop0 to loop19, sorting them\n       alphabetically would put them in the wrong order\n\n           loop0, loop1, loop10, loop11, ..., loop2, ...\n\n       Sorting by major:minor is an easy way to do the right thing.\n    */\n\n    utils.block_cmp = function block_cmp(a, b) {\n        return a.DeviceNumber - b.DeviceNumber;\n    };\n\n    utils.make_block_path_cmp = function(client) {\n        return function(path_a, path_b) {\n            return utils.block_cmp(client.blocks[path_a], client.blocks[path_b]);\n        };\n    };\n\n    var multipathd_service;\n\n    utils.get_multipathd_service = function() {\n        if (!multipathd_service)\n            multipathd_service = service.proxy(\"multipathd\");\n        return multipathd_service;\n    };\n\n    utils.init_arming_zones = function init_arming_zones($top) {\n        $top.on('click', 'button.arm-button', function () {\n            var was_active = $(this).hasClass('active');\n            $(this).toggleClass('active', !was_active);\n            $(this).parents('.arming-zone').toggleClass('armed', !was_active);\n        });\n    };\n\n    utils.reset_arming_zone = function reset_arming_zone($btn) {\n        var $zone = $btn.parents('.arming-zone');\n        var $arm_btn = $zone.find('.arm-button');\n        $arm_btn.removeClass('active');\n        $zone.removeClass('armed');\n    };\n\n\n    function get_children(client, path) {\n        var children = [ ];\n\n        if (client.blocks_cleartext[path]) {\n            children.push(client.blocks_cleartext[path].path);\n        }\n\n        if (client.blocks_ptable[path]) {\n            client.blocks_partitions[path].forEach(function (part) {\n                if (!part.IsContainer)\n                    children.push(part.path);\n            });\n        }\n\n        if (client.blocks_part[path] && client.blocks_part[path].IsContainer) {\n            var ptable_path = client.blocks_part[path].Table;\n            client.blocks_partitions[ptable_path].forEach(function (part) {\n                if (part.IsContained)\n                    children.push(part.path);\n            });\n        }\n\n        if (client.vgroups[path]) {\n            client.vgroups_lvols[path].forEach(function (lvol) {\n                if (client.lvols_block[lvol.path])\n                    children.push(client.lvols_block[lvol.path].path);\n            });\n        }\n\n        return children;\n    }\n\n    utils.get_usage_alerts = function get_usage_alerts(client, path) {\n        var block = client.blocks[path];\n        var fsys = client.blocks_fsys[path];\n        var pvol = client.blocks_pvol[path];\n\n        var usage =\n            utils.flatten(get_children(client, path).map(\n                function (p) { return utils.get_usage_alerts (client, p); }));\n\n        if (fsys && fsys.MountPoints.length > 0)\n            usage.push({ usage: 'mounted',\n                         Message: cockpit.format(_(\"Device $0 is mounted on $1\"),\n                                                 utils.block_name(block),\n                                                 utils.decode_filename(fsys.MountPoints[0]))\n                       });\n        if (block && client.mdraids[block.MDRaidMember])\n            usage.push({ usage: 'mdraid-member',\n                         Message: cockpit.format(_(\"Device $0 is a member of RAID Array $1\"),\n                                                 utils.block_name(block),\n                                                 utils.mdraid_name(client.mdraids[block.MDRaidMember]))\n                       });\n        if (pvol && client.vgroups[pvol.VolumeGroup])\n            usage.push({ usage: 'pvol',\n                         Message: cockpit.format(_(\"Device $0 is a physical volume of $1\"),\n                                                 utils.block_name(block),\n                                                 client.vgroups[pvol.VolumeGroup].Name)\n                       });\n\n        return usage;\n    };\n\n    /* jQuery.amend function. This will be removed as we move towards React */\n\n    function sync(output, input, depth) {\n        var na, nb, a, b, i;\n        var attrs, attr, seen;\n\n        if (depth > 0) {\n            if (output.nodeType != input.nodeType ||\n                output.nodeName != input.nodeName ||\n                (output.nodeType != 1 && output.nodeType != 3)) {\n                output.parentNode.replaceChild(input.parentNode.removeChild(input), output);\n                return;\n\n            } else if (output.nodeType == 3) {\n                if (output.nodeValue != input.nodeValue)\n                    output.nodeValue = input.nodeValue;\n                return;\n            }\n        }\n\n        if (output.nodeType == 1) {\n\n            /* Sync attributes */\n            if (depth > 0) {\n                seen = { };\n                attrs = output.attributes;\n                for (i = attrs.length - 1; i >= 0; i--)\n                    seen[attrs[i].name] = attrs[i].value;\n                for (i = input.attributes.length - 1; i >= 0; i--) {\n                    attr = input.attributes[i];\n                    if (seen[attr.name] !== attr.value)\n                        output.setAttribute(attr.name, attr.value);\n                    delete seen[attr.name];\n                }\n                for (i in seen)\n                    output.removeAttribute(i);\n            }\n\n            /* Sync children */\n            na = output.firstChild;\n            nb = input.firstChild;\n            for(;;) {\n                a = na;\n                b = nb;\n                while (a && a.nodeType != 1 && a.nodeType != 3)\n                    a = a.nextSibling;\n                while (b && b.nodeType != 1 && b.nodeType != 3)\n                    b = b.nextSibling;\n                if (!a && !b) {\n                    break;\n                } else if (!a) {\n                    na = null;\n                    nb = b.nextSibling;\n                    output.appendChild(input.removeChild(b));\n                } else if (!b) {\n                    na = a.nextSibling;\n                    nb = null;\n                    output.removeChild(a);\n                } else {\n                    na = a.nextSibling;\n                    nb = b.nextSibling;\n                    sync(a, b, (depth || 0) + 1);\n                }\n            }\n        }\n    }\n\n    $.fn.amend = function amend(data, options) {\n        this.each(function() {\n            var el = $(\"<div>\").html(data);\n            sync(this, el[0], 0);\n        });\n        return this;\n    };\n\n    /* Prevent flicker due to the marriage of jQuery and React here */\n    utils.hide = function hide(selector) {\n        var element = document.querySelector(\"#storage-detail\");\n        element.setAttribute(\"hidden\", \"\");\n    };\n\n    utils.show_soon = function show_soon(selector, ready) {\n        var element = document.querySelector(selector);\n        if (!element.hasAttribute(\"hidden\"))\n            return;\n        var val = element.getAttribute(\"hidden\");\n        if (ready) {\n            element.removeAttribute(\"hidden\");\n            window.clearTimeout(parseInt(val, 10));\n        } else if (!val) {\n            val = window.setTimeout(function() {\n                show_soon(selector, true);\n            }, 2000);\n            element.setAttribute(\"hidden\", String(val));\n        }\n    };\n\n    module.exports = utils;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/storaged/utils.js\n// module id = 5\n// module chunks = 0 1","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar cockpit = require(\"cockpit\");\nvar mustache = require(\"mustache/mustache\");\n\n/*\n * Turns a mustache template into a translated mustache template\n * by preparsing it and translating it.\n */\nvar cache = { };\n\nfunction translate(template) {\n    if (template in cache)\n        return cache[template];\n    var div = document.createElement(\"div\");\n    div.innerHTML = template;\n    cockpit.translate(div);\n    var result = div.innerHTML;\n    cache[template] = result;\n    return result;\n}\n\n/* Just like the mustache object, except for translated */\nmodule.exports = cockpit.extend({ }, mustache, {\n    render: function render(template, view, partials) {\n        return translate(mustache.render(template, view, partials));\n    },\n    to_html: function to_html(template, view, partials, send) {\n        return translate(mustache.to_html(template, view, partials, send));\n    },\n    clearCache: function clearCache() {\n        cache = { };\n        return mustache.clearCache();\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/mustache.js\n// module id = 6\n// module chunks = 0 1","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false*/\n\n(function (root, factory) {\n  if (typeof exports === \"object\" && exports) {\n    factory(exports); // CommonJS\n  } else {\n    var mustache = {};\n    factory(mustache);\n    if (typeof define === \"function\" && define.amd) {\n      define(mustache); // AMD\n    } else {\n      root.Mustache = mustache; // <script>\n    }\n  }\n}(this, function (mustache) {\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var nonSpaceRe = /\\S/;\n  var eqRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var RegExp_test = RegExp.prototype.test;\n  function testRegExp(re, string) {\n    return RegExp_test.call(re, string);\n  }\n\n  function isWhitespace(string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var Object_toString = Object.prototype.toString;\n  var isArray = Array.isArray || function (object) {\n    return Object_toString.call(object) === '[object Array]';\n  };\n\n  function isFunction(object) {\n    return typeof object === 'function';\n  }\n\n  function escapeRegExp(string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  var entityMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    \"/\": '&#x2F;'\n  };\n\n  function escapeHtml(string) {\n    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n      return entityMap[s];\n    });\n  }\n\n  function escapeTags(tags) {\n    if (!isArray(tags) || tags.length !== 2) {\n      throw new Error('Invalid tags: ' + tags);\n    }\n\n    return [\n      new RegExp(escapeRegExp(tags[0]) + \"\\\\s*\"),\n      new RegExp(\"\\\\s*\" + escapeRegExp(tags[1]))\n    ];\n  }\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all template text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices\n   * in the original template of the token, respectively.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: an\n   * array of tokens in the subtree and the index in the original template at which\n   * the closing tag for that section begins.\n   */\n  function parseTemplate(template, tags) {\n    tags = tags || mustache.tags;\n    template = template || '';\n\n    if (typeof tags === 'string') {\n      tags = tags.split(spaceRe);\n    }\n\n    var tagRes = escapeTags(tags);\n    var scanner = new Scanner(template);\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace() {\n      if (hasTag && !nonSpace) {\n        while (spaces.length) {\n          delete tokens[spaces.pop()];\n        }\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(tagRes[0]);\n      if (value) {\n        for (var i = 0, len = value.length; i < len; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push(['text', chr, start, start + 1]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(tagRes[0])) break;\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(eqRe);\n        scanner.scan(eqRe);\n        scanner.scanUntil(tagRes[1]);\n      } else if (type === '{') {\n        value = scanner.scanUntil(new RegExp('\\\\s*' + escapeRegExp('}' + tags[1])));\n        scanner.scan(curlyRe);\n        scanner.scanUntil(tagRes[1]);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(tagRes[1]);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(tagRes[1])) {\n        throw new Error('Unclosed tag at ' + scanner.pos);\n      }\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection) {\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n        }\n        if (openSection[1] !== value) {\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n        }\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        tagRes = escapeTags(tags = value.split(spaceRe));\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n    if (openSection) {\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n    }\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens(tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens(tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n      case '#':\n      case '^':\n        collector.push(token);\n        sections.push(token);\n        collector = token[4] = [];\n        break;\n      case '/':\n        section = sections.pop();\n        section[5] = token[2];\n        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n        break;\n      default:\n        collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner(string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function () {\n    return this.tail === \"\";\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function (re) {\n    var match = this.tail.match(re);\n\n    if (match && match.index === 0) {\n      var string = match[0];\n      this.tail = this.tail.substring(string.length);\n      this.pos += string.length;\n      return string;\n    }\n\n    return \"\";\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n    case -1:\n      match = this.tail;\n      this.tail = \"\";\n      break;\n    case 0:\n      match = \"\";\n      break;\n    default:\n      match = this.tail.substring(0, index);\n      this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context(view, parentContext) {\n    this.view = view == null ? {} : view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function (name) {\n    var value;\n    if (name in this.cache) {\n      value = this.cache[name];\n    } else {\n      var context = this;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n\n          var names = name.split('.'), i = 0;\n          while (value != null && i < names.length) {\n            value = value[names[i++]];\n          }\n        } else {\n          value = context.view[name];\n        }\n\n        if (value != null) break;\n\n        context = context.parent;\n      }\n\n      this.cache[name] = value;\n    }\n\n    if (isFunction(value)) {\n      value = value.call(this.view);\n    }\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer() {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null) {\n      tokens = cache[template] = parseTemplate(template, tags);\n    }\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    var self = this;\n    function subRender(template) {\n      return self.render(template, context, partials);\n    }\n\n    var token, value;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n      case '#':\n        value = context.lookup(token[1]);\n        if (!value) continue;\n\n        if (isArray(value)) {\n          for (var j = 0, jlen = value.length; j < jlen; ++j) {\n            buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n          }\n        } else if (typeof value === 'object' || typeof value === 'string') {\n          buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n        } else if (isFunction(value)) {\n          if (typeof originalTemplate !== 'string') {\n            throw new Error('Cannot use higher-order sections without the original template');\n          }\n\n          // Extract the portion of the original template that the section contains.\n          value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n          if (value != null) buffer += value;\n        } else {\n          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n\n        break;\n      case '^':\n        value = context.lookup(token[1]);\n\n        // Use JavaScript's definition of falsy. Include empty arrays.\n        // See https://github.com/janl/mustache.js/issues/186\n        if (!value || (isArray(value) && value.length === 0)) {\n          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n\n        break;\n      case '>':\n        if (!partials) continue;\n        value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n        if (value != null) buffer += this.renderTokens(this.parse(value), context, partials, value);\n        break;\n      case '&':\n        value = context.lookup(token[1]);\n        if (value != null) buffer += value;\n        break;\n      case 'name':\n        value = context.lookup(token[1]);\n        if (value != null) buffer += mustache.escape(value);\n        break;\n      case 'text':\n        buffer += token[1];\n        break;\n      }\n    }\n\n    return buffer;\n  };\n\n  mustache.name = \"mustache.js\";\n  mustache.version = \"0.8.1\";\n  mustache.tags = [ \"{{\", \"}}\" ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function (template, view, partials) {\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.\n  mustache.to_html = function (template, view, partials, send) {\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/mustache/mustache.js\n// module id = 7\n// module chunks = 0 1","'use strict';\n\n(function() {\n    \"use strict\";\n\n    var cockpit = require(\"cockpit\");\n\n    /* SERVICE MANAGEMENT API\n     *\n     * The \"service\" module lets you monitor and manage a\n     * system service on localhost in a simple way.\n     *\n     * It mainly exists because talking to the systemd D-Bus API is\n     * not trivial enough to do it directly.\n     *\n     * - proxy = service.proxy(name)\n     *\n     * Create a proxy that represents the service named NAME.\n     *\n     * The proxy has properties and methods (described below) that\n     * allow you to monitor the state of the service, and perform\n     * simple actions on it.\n     *\n     * Initially, any of the properties can be \"null\" until their\n     * actual values have been retrieved in the background.\n     *\n     * - $(proxy).on('changed', function (event) { ... })\n     *\n     * The 'changed' event is emitted whenever one of the properties\n     * of the proxy changes.\n     *\n     * - proxy.exists\n     *\n     * A boolean that tells whether the service is known or not.  A\n     * proxy with 'exists == false' will have 'state == undefined' and\n     * 'enabled == undefined'.\n     *\n     * - proxy.state\n     *\n     * Either 'undefined' when the state can't be retrieved, or a\n     * string that has one of the values \"starting\", \"running\",\n     * \"stopping\", \"stopped\", or \"failed\".\n     *\n     * - proxy.enabled\n     *\n     * Either 'undefined' when the value can't be retrieved, or a\n     * boolean that tells whether the service is started 'enabled'.\n     * What it means exactly for a service to be enabled depends on\n     * the service, but a enabled service is usually started on boot,\n     * no matter wether other services need it or not.  A disabled\n     * service is usually only started when it is needed by some other\n     * service.\n     *\n     * - proxy.unit\n     * - proxy.service\n     *\n     * The raw org.freedesktop.systemd1.Unit and Service D-Bus\n     * interface proxies for the service.\n     *\n     * - promise = proxy.start()\n     *\n     * Start the service.  The return value is a standard jQuery\n     * promise as returned from DBusClient.call.\n     *\n     * - promise = proxy.stop()\n     *\n     * Stop the service.\n     *\n     * - promise = proxy.enable()\n     *\n     * Enable the service.\n     *\n     * - promise = proxy.disable()\n     *\n     * Disable the service.\n     */\n\n    var systemd_client;\n    var systemd_manager;\n\n    function wait_valid(proxy, callback) {\n        proxy.wait(function() {\n            if (proxy.valid)\n                callback();\n        });\n    }\n\n    function with_systemd_manager(done) {\n        if (!systemd_manager) {\n            systemd_client = cockpit.dbus(\"org.freedesktop.systemd1\", { superuser: \"try\" });\n            systemd_manager = systemd_client.proxy(\"org.freedesktop.systemd1.Manager\",\n                                                   \"/org/freedesktop/systemd1\");\n            wait_valid(systemd_manager, function() {\n                systemd_manager.Subscribe().\n                    fail(function (error) {\n                        if (error.name != \"org.freedesktop.systemd1.AlreadySubscribed\" &&\n                            error.name != \"org.freedesktop.DBus.Error.FileExists\")\n                            console.warn(\"Subscribing to systemd signals failed\", error);\n                    });\n            });\n        }\n        wait_valid(systemd_manager, done);\n    }\n\n    function proxy(name) {\n        var self = {\n            exists: null,\n            state: null,\n            enabled: null,\n\n            wait: wait,\n\n            start: start,\n            stop: stop,\n            restart: restart,\n\n            enable: enable,\n            disable: disable\n        };\n\n        cockpit.event_target(self);\n\n        var unit, service;\n        var wait_callbacks = cockpit.defer();\n\n        if (name.indexOf(\".\") == -1)\n            name = name + \".service\";\n\n        function update_from_unit() {\n            self.exists = (unit.LoadState != \"not-found\" || unit.ActiveState != \"inactive\");\n\n            if (unit.ActiveState == \"activating\")\n                self.state = \"starting\";\n            else if (unit.ActiveState == \"deactivating\")\n                self.state = \"stopping\";\n            else if (unit.ActiveState == \"active\" || unit.ActiveState == \"reloading\")\n                self.state = \"running\";\n            else if (unit.ActiveState == \"failed\")\n                self.state = \"failed\";\n            else if (unit.ActiveState == \"inactive\" && self.exists)\n                self.state = \"stopped\";\n            else\n                self.state = undefined;\n\n            if (unit.UnitFileState == \"enabled\" || unit.UnitFileState == \"linked\")\n                self.enabled = true;\n            else if (unit.UnitFileState == \"disabled\" || unit.UnitFileState == \"masked\")\n                self.enabled = false;\n            else\n                self.enabled = undefined;\n\n            self.unit = unit;\n\n            self.dispatchEvent(\"changed\");\n            wait_callbacks.resolve();\n        }\n\n        function update_from_service() {\n            self.service = service;\n            self.dispatchEvent(\"changed\");\n        }\n\n        with_systemd_manager(function () {\n            systemd_manager.LoadUnit(name).\n                done(function (path) {\n                    unit = systemd_client.proxy('org.freedesktop.systemd1.Unit', path);\n                    unit.addEventListener('changed', update_from_unit);\n                    wait_valid(unit, update_from_unit);\n\n                    service = systemd_client.proxy('org.freedesktop.systemd1.Service', path);\n                    service.addEventListener('changed', update_from_service);\n                    wait_valid(service, update_from_service);\n                }).\n                fail(function (error) {\n                    self.exists = false;\n                    self.dispatchEvent('changed');\n                });\n        });\n\n        function refresh() {\n            if (!unit || !service)\n                return;\n\n            function refresh_interface(path, iface) {\n                systemd_client.call(path,\n                                    \"org.freedesktop.DBus.Properties\", \"GetAll\", [ iface ]).\n                    fail(function (error) {\n                        console.log(error);\n                    }).\n                    done(function (result) {\n                        var props = { };\n                        for (var p in result[0])\n                            props[p] = result[0][p].v;\n                        var ifaces = { };\n                        ifaces[iface] = props;\n                        var data = { };\n                        data[unit.path] = ifaces;\n                        systemd_client.notify(data);\n                    });\n            }\n\n            refresh_interface(unit.path, \"org.freedesktop.systemd1.Unit\");\n            refresh_interface(service.path, \"org.freedesktop.systemd1.Service\");\n        }\n\n        function on_job_new_removed_refresh(event, number, path, unit_id, result) {\n            if (unit_id == name)\n                refresh();\n        }\n\n        /* HACK - https://bugs.freedesktop.org/show_bug.cgi?id=69575\n         *\n         * We need to explicitly get new property values when getting\n         * a UnitNew signal since UnitNew doesn't carry them.\n         * However, reacting to UnitNew with GetAll could lead to an\n         * infinite loop since systemd emits a UnitNew in reaction to\n         * GetAll for units that it doesn't want to keep loaded, such\n         * as units without unit files.\n         *\n         * So we ignore UnitNew and instead assume that the unit state\n         * only changes in interesting ways when there is a job for it\n         * or when the daemon is reloaded (or when we get a property\n         * change notification, of course).\n         */\n\n        if (false) {\n            // This is what we want to do.\n\n            systemd_manager.addEventListener(\"UnitNew\", function (event, unit_id, path) {\n                if (unit_id == name)\n                    refresh();\n            });\n        } else {\n            // This is what we have to do.\n\n            systemd_manager.addEventListener(\"Reloading\", function (event, reloading) {\n                if (!reloading)\n                    refresh();\n            });\n\n            systemd_manager.addEventListener(\"JobNew\", on_job_new_removed_refresh);\n            systemd_manager.addEventListener(\"JobRemoved\", on_job_new_removed_refresh);\n        }\n\n        function wait(callback) {\n            wait_callbacks.promise.then(callback);\n        }\n\n        /* Actions\n         *\n         * We don't call methods on the D-Bus proxies here since they\n         * might not be ready when these functions are called.\n         */\n\n        var pending_jobs = { };\n\n        systemd_manager.addEventListener(\"JobRemoved\", function (event, number, path, unit_id, result) {\n            if (pending_jobs[path]) {\n                if (result == \"done\")\n                    pending_jobs[path].resolve();\n                else\n                    pending_jobs[path].reject(result);\n                delete pending_jobs[path];\n            }\n        });\n\n        function call_manager(method, args) {\n            return systemd_client.call(\"/org/freedesktop/systemd1\",\n                                       \"org.freedesktop.systemd1.Manager\",\n                                       method, args);\n        }\n\n        function call_manager_with_job(method, args) {\n            var dfd = cockpit.defer();\n            call_manager(method, args).\n                done(function (results) {\n                    var path = results[0];\n                    pending_jobs[path] = dfd;\n                }).\n                fail(function (error) {\n                    dfd.reject(error);\n                });\n            return dfd.promise();\n        }\n\n        function call_manager_with_reload(method, args) {\n            return call_manager(method, args).then(function () {\n                return call_manager(\"Reload\", [ ]);\n            });\n        }\n\n        function start() {\n            return call_manager_with_job(\"StartUnit\", [ name, \"replace\" ]);\n        }\n\n        function stop() {\n            return call_manager_with_job(\"StopUnit\", [ name, \"replace\" ]);\n        }\n\n        function restart() {\n            return call_manager_with_job(\"RestartUnit\", [ name, \"replace\" ]);\n        }\n\n        function enable() {\n            return call_manager_with_reload(\"EnableUnitFiles\", [ [ name ], false, false ]);\n        }\n\n        function disable() {\n            return call_manager_with_reload(\"DisableUnitFiles\", [ [ name ], false ]);\n        }\n\n        return self;\n    }\n\n    module.exports = {\n        proxy: proxy\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/service.js\n// module id = 8\n// module chunks = 0 1","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    /* QUnit needs to have 'window' as 'this' in order to load */\n    window.QUnit = require(\"qunit/qunit/qunit.js\");\n    window.qunitTap = require(\"qunit-tap/lib/qunit-tap.js\");\n\n    require(\"./qunit-config.js\");\n\n    require(\"qunit/qunit/qunit.css\");\n\n    module.exports = window.QUnit;\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/qunit-tests.js\n// module id = 52\n// module chunks = 1","/*!\n * QUnit 1.14.0\n * http://qunitjs.com/\n *\n * Copyright 2013 jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-01-31T16:40Z\n */\n\n(function( window ) {\n\nvar QUnit,\n\tassert,\n\tconfig,\n\tonErrorFnPrev,\n\ttestId = 0,\n\tfileName = (sourceFromStacktrace( 0 ) || \"\" ).replace(/(:\\d+)+\\)?/, \"\").replace(/.+\\//, \"\"),\n\ttoString = Object.prototype.toString,\n\thasOwn = Object.prototype.hasOwnProperty,\n\t// Keep a local reference to Date (GH-283)\n\tDate = window.Date,\n\tsetTimeout = window.setTimeout,\n\tclearTimeout = window.clearTimeout,\n\tdefined = {\n\t\tdocument: typeof window.document !== \"undefined\",\n\t\tsetTimeout: typeof window.setTimeout !== \"undefined\",\n\t\tsessionStorage: (function() {\n\t\t\tvar x = \"qunit-test-string\";\n\t\t\ttry {\n\t\t\t\tsessionStorage.setItem( x, x );\n\t\t\t\tsessionStorage.removeItem( x );\n\t\t\t\treturn true;\n\t\t\t} catch( e ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}())\n\t},\n\t/**\n\t * Provides a normalized error string, correcting an issue\n\t * with IE 7 (and prior) where Error.prototype.toString is\n\t * not properly implemented\n\t *\n\t * Based on http://es5.github.com/#x15.11.4.4\n\t *\n\t * @param {String|Error} error\n\t * @return {String} error message\n\t */\n\terrorString = function( error ) {\n\t\tvar name, message,\n\t\t\terrorString = error.toString();\n\t\tif ( errorString.substring( 0, 7 ) === \"[object\" ) {\n\t\t\tname = error.name ? error.name.toString() : \"Error\";\n\t\t\tmessage = error.message ? error.message.toString() : \"\";\n\t\t\tif ( name && message ) {\n\t\t\t\treturn name + \": \" + message;\n\t\t\t} else if ( name ) {\n\t\t\t\treturn name;\n\t\t\t} else if ( message ) {\n\t\t\t\treturn message;\n\t\t\t} else {\n\t\t\t\treturn \"Error\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn errorString;\n\t\t}\n\t},\n\t/**\n\t * Makes a clone of an object using only Array or Object as base,\n\t * and copies over the own enumerable properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object} New object with only the own properties (recursively).\n\t */\n\tobjectValues = function( obj ) {\n\t\t// Grunt 0.3.x uses an older version of jshint that still has jshint/jshint#392.\n\t\t/*jshint newcap: false */\n\t\tvar key, val,\n\t\t\tvals = QUnit.is( \"array\", obj ) ? [] : {};\n\t\tfor ( key in obj ) {\n\t\t\tif ( hasOwn.call( obj, key ) ) {\n\t\t\t\tval = obj[key];\n\t\t\t\tvals[key] = val === Object(val) ? objectValues(val) : val;\n\t\t\t}\n\t\t}\n\t\treturn vals;\n\t};\n\n\n// Root QUnit object.\n// `QUnit` initialized at top of scope\nQUnit = {\n\n\t// call on start of module test to prepend name to all tests\n\tmodule: function( name, testEnvironment ) {\n\t\tconfig.currentModule = name;\n\t\tconfig.currentModuleTestEnvironment = testEnvironment;\n\t\tconfig.modules[name] = true;\n\t},\n\n\tasyncTest: function( testName, expected, callback ) {\n\t\tif ( arguments.length === 2 ) {\n\t\t\tcallback = expected;\n\t\t\texpected = null;\n\t\t}\n\n\t\tQUnit.test( testName, expected, callback, true );\n\t},\n\n\ttest: function( testName, expected, callback, async ) {\n\t\tvar test,\n\t\t\tnameHtml = \"<span class='test-name'>\" + escapeText( testName ) + \"</span>\";\n\n\t\tif ( arguments.length === 2 ) {\n\t\t\tcallback = expected;\n\t\t\texpected = null;\n\t\t}\n\n\t\tif ( config.currentModule ) {\n\t\t\tnameHtml = \"<span class='module-name'>\" + escapeText( config.currentModule ) + \"</span>: \" + nameHtml;\n\t\t}\n\n\t\ttest = new Test({\n\t\t\tnameHtml: nameHtml,\n\t\t\ttestName: testName,\n\t\t\texpected: expected,\n\t\t\tasync: async,\n\t\t\tcallback: callback,\n\t\t\tmodule: config.currentModule,\n\t\t\tmoduleTestEnvironment: config.currentModuleTestEnvironment,\n\t\t\tstack: sourceFromStacktrace( 2 )\n\t\t});\n\n\t\tif ( !validTest( test ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttest.queue();\n\t},\n\n\t// Specify the number of expected assertions to guarantee that failed test (no assertions are run at all) don't slip through.\n\texpect: function( asserts ) {\n\t\tif (arguments.length === 1) {\n\t\t\tconfig.current.expected = asserts;\n\t\t} else {\n\t\t\treturn config.current.expected;\n\t\t}\n\t},\n\n\tstart: function( count ) {\n\t\t// QUnit hasn't been initialized yet.\n\t\t// Note: RequireJS (et al) may delay onLoad\n\t\tif ( config.semaphore === undefined ) {\n\t\t\tQUnit.begin(function() {\n\t\t\t\t// This is triggered at the top of QUnit.load, push start() to the event loop, to allow QUnit.load to finish first\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tQUnit.start( count );\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconfig.semaphore -= count || 1;\n\t\t// don't start until equal number of stop-calls\n\t\tif ( config.semaphore > 0 ) {\n\t\t\treturn;\n\t\t}\n\t\t// ignore if start is called more often then stop\n\t\tif ( config.semaphore < 0 ) {\n\t\t\tconfig.semaphore = 0;\n\t\t\tQUnit.pushFailure( \"Called start() while already started (QUnit.config.semaphore was 0 already)\", null, sourceFromStacktrace(2) );\n\t\t\treturn;\n\t\t}\n\t\t// A slight delay, to avoid any current callbacks\n\t\tif ( defined.setTimeout ) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tif ( config.semaphore > 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( config.timeout ) {\n\t\t\t\t\tclearTimeout( config.timeout );\n\t\t\t\t}\n\n\t\t\t\tconfig.blocking = false;\n\t\t\t\tprocess( true );\n\t\t\t}, 13);\n\t\t} else {\n\t\t\tconfig.blocking = false;\n\t\t\tprocess( true );\n\t\t}\n\t},\n\n\tstop: function( count ) {\n\t\tconfig.semaphore += count || 1;\n\t\tconfig.blocking = true;\n\n\t\tif ( config.testTimeout && defined.setTimeout ) {\n\t\t\tclearTimeout( config.timeout );\n\t\t\tconfig.timeout = setTimeout(function() {\n\t\t\t\tQUnit.ok( false, \"Test timed out\" );\n\t\t\t\tconfig.semaphore = 1;\n\t\t\t\tQUnit.start();\n\t\t\t}, config.testTimeout );\n\t\t}\n\t}\n};\n\n// We use the prototype to distinguish between properties that should\n// be exposed as globals (and in exports) and those that shouldn't\n(function() {\n\tfunction F() {}\n\tF.prototype = QUnit;\n\tQUnit = new F();\n\t// Make F QUnit's constructor so that we can add to the prototype later\n\tQUnit.constructor = F;\n}());\n\n/**\n * Config object: Maintain internal state\n * Later exposed as QUnit.config\n * `config` initialized at top of scope\n */\nconfig = {\n\t// The queue of tests to run\n\tqueue: [],\n\n\t// block until document ready\n\tblocking: true,\n\n\t// when enabled, show only failing tests\n\t// gets persisted through sessionStorage and can be changed in UI via checkbox\n\thidepassed: false,\n\n\t// by default, run previously failed tests first\n\t// very useful in combination with \"Hide passed tests\" checked\n\treorder: true,\n\n\t// by default, modify document.title when suite is done\n\taltertitle: true,\n\n\t// by default, scroll to top of the page when suite is done\n\tscrolltop: true,\n\n\t// when enabled, all tests must call expect()\n\trequireExpects: false,\n\n\t// add checkboxes that are persisted in the query-string\n\t// when enabled, the id is set to `true` as a `QUnit.config` property\n\turlConfig: [\n\t\t{\n\t\t\tid: \"noglobals\",\n\t\t\tlabel: \"Check for Globals\",\n\t\t\ttooltip: \"Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings.\"\n\t\t},\n\t\t{\n\t\t\tid: \"notrycatch\",\n\t\t\tlabel: \"No try-catch\",\n\t\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings.\"\n\t\t}\n\t],\n\n\t// Set of all modules.\n\tmodules: {},\n\n\t// logging callback queues\n\tbegin: [],\n\tdone: [],\n\tlog: [],\n\ttestStart: [],\n\ttestDone: [],\n\tmoduleStart: [],\n\tmoduleDone: []\n};\n\n// Initialize more QUnit.config and QUnit.urlParams\n(function() {\n\tvar i, current,\n\t\tlocation = window.location || { search: \"\", protocol: \"file:\" },\n\t\tparams = location.search.slice( 1 ).split( \"&\" ),\n\t\tlength = params.length,\n\t\turlParams = {};\n\n\tif ( params[ 0 ] ) {\n\t\tfor ( i = 0; i < length; i++ ) {\n\t\t\tcurrent = params[ i ].split( \"=\" );\n\t\t\tcurrent[ 0 ] = decodeURIComponent( current[ 0 ] );\n\n\t\t\t// allow just a key to turn on a flag, e.g., test.html?noglobals\n\t\t\tcurrent[ 1 ] = current[ 1 ] ? decodeURIComponent( current[ 1 ] ) : true;\n\t\t\tif ( urlParams[ current[ 0 ] ] ) {\n\t\t\t\turlParams[ current[ 0 ] ] = [].concat( urlParams[ current[ 0 ] ], current[ 1 ] );\n\t\t\t} else {\n\t\t\t\turlParams[ current[ 0 ] ] = current[ 1 ];\n\t\t\t}\n\t\t}\n\t}\n\n\tQUnit.urlParams = urlParams;\n\n\t// String search anywhere in moduleName+testName\n\tconfig.filter = urlParams.filter;\n\n\t// Exact match of the module name\n\tconfig.module = urlParams.module;\n\n\tconfig.testNumber = [];\n\tif ( urlParams.testNumber ) {\n\n\t\t// Ensure that urlParams.testNumber is an array\n\t\turlParams.testNumber = [].concat( urlParams.testNumber );\n\t\tfor ( i = 0; i < urlParams.testNumber.length; i++ ) {\n\t\t\tcurrent = urlParams.testNumber[ i ];\n\t\t\tconfig.testNumber.push( parseInt( current, 10 ) );\n\t\t}\n\t}\n\n\t// Figure out if we're running the tests from a server or not\n\tQUnit.isLocal = location.protocol === \"file:\";\n}());\n\nextend( QUnit, {\n\n\tconfig: config,\n\n\t// Initialize the configuration options\n\tinit: function() {\n\t\textend( config, {\n\t\t\tstats: { all: 0, bad: 0 },\n\t\t\tmoduleStats: { all: 0, bad: 0 },\n\t\t\tstarted: +new Date(),\n\t\t\tupdateRate: 1000,\n\t\t\tblocking: false,\n\t\t\tautostart: true,\n\t\t\tautorun: false,\n\t\t\tfilter: \"\",\n\t\t\tqueue: [],\n\t\t\tsemaphore: 1\n\t\t});\n\n\t\tvar tests, banner, result,\n\t\t\tqunit = id( \"qunit\" );\n\n\t\tif ( qunit ) {\n\t\t\tqunit.innerHTML =\n\t\t\t\t\"<h1 id='qunit-header'>\" + escapeText( document.title ) + \"</h1>\" +\n\t\t\t\t\"<h2 id='qunit-banner'></h2>\" +\n\t\t\t\t\"<div id='qunit-testrunner-toolbar'></div>\" +\n\t\t\t\t\"<h2 id='qunit-userAgent'></h2>\" +\n\t\t\t\t\"<ol id='qunit-tests'></ol>\";\n\t\t}\n\n\t\ttests = id( \"qunit-tests\" );\n\t\tbanner = id( \"qunit-banner\" );\n\t\tresult = id( \"qunit-testresult\" );\n\n\t\tif ( tests ) {\n\t\t\ttests.innerHTML = \"\";\n\t\t}\n\n\t\tif ( banner ) {\n\t\t\tbanner.className = \"\";\n\t\t}\n\n\t\tif ( result ) {\n\t\t\tresult.parentNode.removeChild( result );\n\t\t}\n\n\t\tif ( tests ) {\n\t\t\tresult = document.createElement( \"p\" );\n\t\t\tresult.id = \"qunit-testresult\";\n\t\t\tresult.className = \"result\";\n\t\t\ttests.parentNode.insertBefore( result, tests );\n\t\t\tresult.innerHTML = \"Running...<br/>&nbsp;\";\n\t\t}\n\t},\n\n\t// Resets the test setup. Useful for tests that modify the DOM.\n\t/*\n\tDEPRECATED: Use multiple tests instead of resetting inside a test.\n\tUse testStart or testDone for custom cleanup.\n\tThis method will throw an error in 2.0, and will be removed in 2.1\n\t*/\n\treset: function() {\n\t\tvar fixture = id( \"qunit-fixture\" );\n\t\tif ( fixture ) {\n\t\t\tfixture.innerHTML = config.fixture;\n\t\t}\n\t},\n\n\t// Safe object type checking\n\tis: function( type, obj ) {\n\t\treturn QUnit.objectType( obj ) === type;\n\t},\n\n\tobjectType: function( obj ) {\n\t\tif ( typeof obj === \"undefined\" ) {\n\t\t\treturn \"undefined\";\n\t\t}\n\n\t\t// Consider: typeof null === object\n\t\tif ( obj === null ) {\n\t\t\treturn \"null\";\n\t\t}\n\n\t\tvar match = toString.call( obj ).match(/^\\[object\\s(.*)\\]$/),\n\t\t\ttype = match && match[1] || \"\";\n\n\t\tswitch ( type ) {\n\t\t\tcase \"Number\":\n\t\t\t\tif ( isNaN(obj) ) {\n\t\t\t\t\treturn \"nan\";\n\t\t\t\t}\n\t\t\t\treturn \"number\";\n\t\t\tcase \"String\":\n\t\t\tcase \"Boolean\":\n\t\t\tcase \"Array\":\n\t\t\tcase \"Date\":\n\t\t\tcase \"RegExp\":\n\t\t\tcase \"Function\":\n\t\t\t\treturn type.toLowerCase();\n\t\t}\n\t\tif ( typeof obj === \"object\" ) {\n\t\t\treturn \"object\";\n\t\t}\n\t\treturn undefined;\n\t},\n\n\tpush: function( result, actual, expected, message ) {\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"assertion outside test context, was \" + sourceFromStacktrace() );\n\t\t}\n\n\t\tvar output, source,\n\t\t\tdetails = {\n\t\t\t\tmodule: config.current.module,\n\t\t\t\tname: config.current.testName,\n\t\t\t\tresult: result,\n\t\t\t\tmessage: message,\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected\n\t\t\t};\n\n\t\tmessage = escapeText( message ) || ( result ? \"okay\" : \"failed\" );\n\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\toutput = message;\n\n\t\tif ( !result ) {\n\t\t\texpected = escapeText( QUnit.jsDump.parse(expected) );\n\t\t\tactual = escapeText( QUnit.jsDump.parse(actual) );\n\t\t\toutput += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" + expected + \"</pre></td></tr>\";\n\n\t\t\tif ( actual !== expected ) {\n\t\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + actual + \"</pre></td></tr>\";\n\t\t\t\toutput += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" + QUnit.diff( expected, actual ) + \"</pre></td></tr>\";\n\t\t\t}\n\n\t\t\tsource = sourceFromStacktrace();\n\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr>\";\n\t\t\t}\n\n\t\t\toutput += \"</table>\";\n\t\t}\n\n\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\n\t\tconfig.current.assertions.push({\n\t\t\tresult: !!result,\n\t\t\tmessage: output\n\t\t});\n\t},\n\n\tpushFailure: function( message, source, actual ) {\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"pushFailure() assertion outside test context, was \" + sourceFromStacktrace(2) );\n\t\t}\n\n\t\tvar output,\n\t\t\tdetails = {\n\t\t\t\tmodule: config.current.module,\n\t\t\t\tname: config.current.testName,\n\t\t\t\tresult: false,\n\t\t\t\tmessage: message\n\t\t\t};\n\n\t\tmessage = escapeText( message ) || \"error\";\n\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\toutput = message;\n\n\t\toutput += \"<table>\";\n\n\t\tif ( actual ) {\n\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + escapeText( actual ) + \"</pre></td></tr>\";\n\t\t}\n\n\t\tif ( source ) {\n\t\t\tdetails.source = source;\n\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr>\";\n\t\t}\n\n\t\toutput += \"</table>\";\n\n\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\n\t\tconfig.current.assertions.push({\n\t\t\tresult: false,\n\t\t\tmessage: output\n\t\t});\n\t},\n\n\turl: function( params ) {\n\t\tparams = extend( extend( {}, QUnit.urlParams ), params );\n\t\tvar key,\n\t\t\tquerystring = \"?\";\n\n\t\tfor ( key in params ) {\n\t\t\tif ( hasOwn.call( params, key ) ) {\n\t\t\t\tquerystring += encodeURIComponent( key ) + \"=\" +\n\t\t\t\t\tencodeURIComponent( params[ key ] ) + \"&\";\n\t\t\t}\n\t\t}\n\t\treturn window.location.protocol + \"//\" + window.location.host +\n\t\t\twindow.location.pathname + querystring.slice( 0, -1 );\n\t},\n\n\textend: extend,\n\tid: id,\n\taddEvent: addEvent,\n\taddClass: addClass,\n\thasClass: hasClass,\n\tremoveClass: removeClass\n\t// load, equiv, jsDump, diff: Attached later\n});\n\n/**\n * @deprecated: Created for backwards compatibility with test runner that set the hook function\n * into QUnit.{hook}, instead of invoking it and passing the hook function.\n * QUnit.constructor is set to the empty F() above so that we can add to it's prototype here.\n * Doing this allows us to tell if the following methods have been overwritten on the actual\n * QUnit object.\n */\nextend( QUnit.constructor.prototype, {\n\n\t// Logging callbacks; all receive a single argument with the listed properties\n\t// run test/logs.html for any related changes\n\tbegin: registerLoggingCallback( \"begin\" ),\n\n\t// done: { failed, passed, total, runtime }\n\tdone: registerLoggingCallback( \"done\" ),\n\n\t// log: { result, actual, expected, message }\n\tlog: registerLoggingCallback( \"log\" ),\n\n\t// testStart: { name }\n\ttestStart: registerLoggingCallback( \"testStart\" ),\n\n\t// testDone: { name, failed, passed, total, runtime }\n\ttestDone: registerLoggingCallback( \"testDone\" ),\n\n\t// moduleStart: { name }\n\tmoduleStart: registerLoggingCallback( \"moduleStart\" ),\n\n\t// moduleDone: { name, failed, passed, total }\n\tmoduleDone: registerLoggingCallback( \"moduleDone\" )\n});\n\nif ( !defined.document || document.readyState === \"complete\" ) {\n\tconfig.autorun = true;\n}\n\nQUnit.load = function() {\n\trunLoggingCallbacks( \"begin\", QUnit, {} );\n\n\t// Initialize the config, saving the execution queue\n\tvar banner, filter, i, j, label, len, main, ol, toolbar, val, selection,\n\t\turlConfigContainer, moduleFilter, userAgent,\n\t\tnumModules = 0,\n\t\tmoduleNames = [],\n\t\tmoduleFilterHtml = \"\",\n\t\turlConfigHtml = \"\",\n\t\toldconfig = extend( {}, config );\n\n\tQUnit.init();\n\textend(config, oldconfig);\n\n\tconfig.blocking = false;\n\n\tlen = config.urlConfig.length;\n\n\tfor ( i = 0; i < len; i++ ) {\n\t\tval = config.urlConfig[i];\n\t\tif ( typeof val === \"string\" ) {\n\t\t\tval = {\n\t\t\t\tid: val,\n\t\t\t\tlabel: val\n\t\t\t};\n\t\t}\n\t\tconfig[ val.id ] = QUnit.urlParams[ val.id ];\n\t\tif ( !val.value || typeof val.value === \"string\" ) {\n\t\t\turlConfigHtml += \"<input id='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\"' name='\" + escapeText( val.id ) +\n\t\t\t\t\"' type='checkbox'\" +\n\t\t\t\t( val.value ? \" value='\" + escapeText( val.value ) + \"'\" : \"\" ) +\n\t\t\t\t( config[ val.id ] ? \" checked='checked'\" : \"\" ) +\n\t\t\t\t\" title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\"'><label for='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\"' title='\" + escapeText( val.tooltip ) + \"'>\" + val.label + \"</label>\";\n\t\t} else {\n\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\"' title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\"'>\" + val.label +\n\t\t\t\t\": </label><select id='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\"' name='\" + escapeText( val.id ) +\n\t\t\t\t\"' title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\"'><option></option>\";\n\t\t\tselection = false;\n\t\t\tif ( QUnit.is( \"array\", val.value ) ) {\n\t\t\t\tfor ( j = 0; j < val.value.length; j++ ) {\n\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( val.value[j] ) + \"'\" +\n\t\t\t\t\t\t( config[ val.id ] === val.value[j] ?\n\t\t\t\t\t\t\t(selection = true) && \" selected='selected'\" :\n\t\t\t\t\t\t\t\"\" ) +\n\t\t\t\t\t\t\">\" + escapeText( val.value[j] ) + \"</option>\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( j in val.value ) {\n\t\t\t\t\tif ( hasOwn.call( val.value, j ) ) {\n\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( j ) + \"'\" +\n\t\t\t\t\t\t\t( config[ val.id ] === j ?\n\t\t\t\t\t\t\t\t(selection = true) && \" selected='selected'\" :\n\t\t\t\t\t\t\t\t\"\" ) +\n\t\t\t\t\t\t\t\">\" + escapeText( val.value[j] ) + \"</option>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( config[ val.id ] && !selection ) {\n\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( config[ val.id ] ) +\n\t\t\t\t\t\"' selected='selected' disabled='disabled'>\" +\n\t\t\t\t\tescapeText( config[ val.id ] ) +\n\t\t\t\t\t\"</option>\";\n\t\t\t}\n\t\t\turlConfigHtml += \"</select>\";\n\t\t}\n\t}\n\tfor ( i in config.modules ) {\n\t\tif ( config.modules.hasOwnProperty( i ) ) {\n\t\t\tmoduleNames.push(i);\n\t\t}\n\t}\n\tnumModules = moduleNames.length;\n\tmoduleNames.sort( function( a, b ) {\n\t\treturn a.localeCompare( b );\n\t});\n\tmoduleFilterHtml += \"<label for='qunit-modulefilter'>Module: </label><select id='qunit-modulefilter' name='modulefilter'><option value='' \" +\n\t\t( config.module === undefined  ? \"selected='selected'\" : \"\" ) +\n\t\t\">< All Modules ></option>\";\n\n\n\tfor ( i = 0; i < numModules; i++) {\n\t\t\tmoduleFilterHtml += \"<option value='\" + escapeText( encodeURIComponent(moduleNames[i]) ) + \"' \" +\n\t\t\t\t( config.module === moduleNames[i] ? \"selected='selected'\" : \"\" ) +\n\t\t\t\t\">\" + escapeText(moduleNames[i]) + \"</option>\";\n\t}\n\tmoduleFilterHtml += \"</select>\";\n\n\t// `userAgent` initialized at top of scope\n\tuserAgent = id( \"qunit-userAgent\" );\n\tif ( userAgent ) {\n\t\tuserAgent.innerHTML = navigator.userAgent;\n\t}\n\n\t// `banner` initialized at top of scope\n\tbanner = id( \"qunit-header\" );\n\tif ( banner ) {\n\t\tbanner.innerHTML = \"<a href='\" + QUnit.url({ filter: undefined, module: undefined, testNumber: undefined }) + \"'>\" + banner.innerHTML + \"</a> \";\n\t}\n\n\t// `toolbar` initialized at top of scope\n\ttoolbar = id( \"qunit-testrunner-toolbar\" );\n\tif ( toolbar ) {\n\t\t// `filter` initialized at top of scope\n\t\tfilter = document.createElement( \"input\" );\n\t\tfilter.type = \"checkbox\";\n\t\tfilter.id = \"qunit-filter-pass\";\n\n\t\taddEvent( filter, \"click\", function() {\n\t\t\tvar tmp,\n\t\t\t\tol = id( \"qunit-tests\" );\n\n\t\t\tif ( filter.checked ) {\n\t\t\t\tol.className = ol.className + \" hidepass\";\n\t\t\t} else {\n\t\t\t\ttmp = \" \" + ol.className.replace( /[\\n\\t\\r]/g, \" \" ) + \" \";\n\t\t\t\tol.className = tmp.replace( / hidepass /, \" \" );\n\t\t\t}\n\t\t\tif ( defined.sessionStorage ) {\n\t\t\t\tif (filter.checked) {\n\t\t\t\t\tsessionStorage.setItem( \"qunit-filter-passed-tests\", \"true\" );\n\t\t\t\t} else {\n\t\t\t\t\tsessionStorage.removeItem( \"qunit-filter-passed-tests\" );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif ( config.hidepassed || defined.sessionStorage && sessionStorage.getItem( \"qunit-filter-passed-tests\" ) ) {\n\t\t\tfilter.checked = true;\n\t\t\t// `ol` initialized at top of scope\n\t\t\tol = id( \"qunit-tests\" );\n\t\t\tol.className = ol.className + \" hidepass\";\n\t\t}\n\t\ttoolbar.appendChild( filter );\n\n\t\t// `label` initialized at top of scope\n\t\tlabel = document.createElement( \"label\" );\n\t\tlabel.setAttribute( \"for\", \"qunit-filter-pass\" );\n\t\tlabel.setAttribute( \"title\", \"Only show tests and assertions that fail. Stored in sessionStorage.\" );\n\t\tlabel.innerHTML = \"Hide passed tests\";\n\t\ttoolbar.appendChild( label );\n\n\t\turlConfigContainer = document.createElement(\"span\");\n\t\turlConfigContainer.innerHTML = urlConfigHtml;\n\t\t// For oldIE support:\n\t\t// * Add handlers to the individual elements instead of the container\n\t\t// * Use \"click\" instead of \"change\" for checkboxes\n\t\t// * Fallback from event.target to event.srcElement\n\t\taddEvents( urlConfigContainer.getElementsByTagName(\"input\"), \"click\", function( event ) {\n\t\t\tvar params = {},\n\t\t\t\ttarget = event.target || event.srcElement;\n\t\t\tparams[ target.name ] = target.checked ?\n\t\t\t\ttarget.defaultValue || true :\n\t\t\t\tundefined;\n\t\t\twindow.location = QUnit.url( params );\n\t\t});\n\t\taddEvents( urlConfigContainer.getElementsByTagName(\"select\"), \"change\", function( event ) {\n\t\t\tvar params = {},\n\t\t\t\ttarget = event.target || event.srcElement;\n\t\t\tparams[ target.name ] = target.options[ target.selectedIndex ].value || undefined;\n\t\t\twindow.location = QUnit.url( params );\n\t\t});\n\t\ttoolbar.appendChild( urlConfigContainer );\n\n\t\tif (numModules > 1) {\n\t\t\tmoduleFilter = document.createElement( \"span\" );\n\t\t\tmoduleFilter.setAttribute( \"id\", \"qunit-modulefilter-container\" );\n\t\t\tmoduleFilter.innerHTML = moduleFilterHtml;\n\t\t\taddEvent( moduleFilter.lastChild, \"change\", function() {\n\t\t\t\tvar selectBox = moduleFilter.getElementsByTagName(\"select\")[0],\n\t\t\t\t\tselectedModule = decodeURIComponent(selectBox.options[selectBox.selectedIndex].value);\n\n\t\t\t\twindow.location = QUnit.url({\n\t\t\t\t\tmodule: ( selectedModule === \"\" ) ? undefined : selectedModule,\n\t\t\t\t\t// Remove any existing filters\n\t\t\t\t\tfilter: undefined,\n\t\t\t\t\ttestNumber: undefined\n\t\t\t\t});\n\t\t\t});\n\t\t\ttoolbar.appendChild(moduleFilter);\n\t\t}\n\t}\n\n\t// `main` initialized at top of scope\n\tmain = id( \"qunit-fixture\" );\n\tif ( main ) {\n\t\tconfig.fixture = main.innerHTML;\n\t}\n\n\tif ( config.autostart ) {\n\t\tQUnit.start();\n\t}\n};\n\nif ( defined.document ) {\n\taddEvent( window, \"load\", QUnit.load );\n}\n\n// `onErrorFnPrev` initialized at top of scope\n// Preserve other handlers\nonErrorFnPrev = window.onerror;\n\n// Cover uncaught exceptions\n// Returning true will suppress the default browser handler,\n// returning false will let it run.\nwindow.onerror = function ( error, filePath, linerNr ) {\n\tvar ret = false;\n\tif ( onErrorFnPrev ) {\n\t\tret = onErrorFnPrev( error, filePath, linerNr );\n\t}\n\n\t// Treat return value as window.onerror itself does,\n\t// Only do our handling if not suppressed.\n\tif ( ret !== true ) {\n\t\tif ( QUnit.config.current ) {\n\t\t\tif ( QUnit.config.current.ignoreGlobalErrors ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t} else {\n\t\t\tQUnit.test( \"global failure\", extend( function() {\n\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t}, { validTest: validTest } ) );\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn ret;\n};\n\nfunction done() {\n\tconfig.autorun = true;\n\n\t// Log the last module results\n\tif ( config.previousModule ) {\n\t\trunLoggingCallbacks( \"moduleDone\", QUnit, {\n\t\t\tname: config.previousModule,\n\t\t\tfailed: config.moduleStats.bad,\n\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\ttotal: config.moduleStats.all\n\t\t});\n\t}\n\tdelete config.previousModule;\n\n\tvar i, key,\n\t\tbanner = id( \"qunit-banner\" ),\n\t\ttests = id( \"qunit-tests\" ),\n\t\truntime = +new Date() - config.started,\n\t\tpassed = config.stats.all - config.stats.bad,\n\t\thtml = [\n\t\t\t\"Tests completed in \",\n\t\t\truntime,\n\t\t\t\" milliseconds.<br/>\",\n\t\t\t\"<span class='passed'>\",\n\t\t\tpassed,\n\t\t\t\"</span> assertions of <span class='total'>\",\n\t\t\tconfig.stats.all,\n\t\t\t\"</span> passed, <span class='failed'>\",\n\t\t\tconfig.stats.bad,\n\t\t\t\"</span> failed.\"\n\t\t].join( \"\" );\n\n\tif ( banner ) {\n\t\tbanner.className = ( config.stats.bad ? \"qunit-fail\" : \"qunit-pass\" );\n\t}\n\n\tif ( tests ) {\n\t\tid( \"qunit-testresult\" ).innerHTML = html;\n\t}\n\n\tif ( config.altertitle && defined.document && document.title ) {\n\t\t// show ✖ for good, ✔ for bad suite result in title\n\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\n\t\tdocument.title = [\n\t\t\t( config.stats.bad ? \"\\u2716\" : \"\\u2714\" ),\n\t\t\tdocument.title.replace( /^[\\u2714\\u2716] /i, \"\" )\n\t\t].join( \" \" );\n\t}\n\n\t// clear own sessionStorage items if all tests passed\n\tif ( config.reorder && defined.sessionStorage && config.stats.bad === 0 ) {\n\t\t// `key` & `i` initialized at top of scope\n\t\tfor ( i = 0; i < sessionStorage.length; i++ ) {\n\t\t\tkey = sessionStorage.key( i++ );\n\t\t\tif ( key.indexOf( \"qunit-test-\" ) === 0 ) {\n\t\t\t\tsessionStorage.removeItem( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t// scroll back to top to show results\n\tif ( config.scrolltop && window.scrollTo ) {\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\trunLoggingCallbacks( \"done\", QUnit, {\n\t\tfailed: config.stats.bad,\n\t\tpassed: passed,\n\t\ttotal: config.stats.all,\n\t\truntime: runtime\n\t});\n}\n\n/** @return Boolean: true if this test should be ran */\nfunction validTest( test ) {\n\tvar include,\n\t\tfilter = config.filter && config.filter.toLowerCase(),\n\t\tmodule = config.module && config.module.toLowerCase(),\n\t\tfullName = ( test.module + \": \" + test.testName ).toLowerCase();\n\n\t// Internally-generated tests are always valid\n\tif ( test.callback && test.callback.validTest === validTest ) {\n\t\tdelete test.callback.validTest;\n\t\treturn true;\n\t}\n\n\tif ( config.testNumber.length > 0 ) {\n\t\tif ( inArray( test.testNumber, config.testNumber ) < 0 ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif ( module && ( !test.module || test.module.toLowerCase() !== module ) ) {\n\t\treturn false;\n\t}\n\n\tif ( !filter ) {\n\t\treturn true;\n\t}\n\n\tinclude = filter.charAt( 0 ) !== \"!\";\n\tif ( !include ) {\n\t\tfilter = filter.slice( 1 );\n\t}\n\n\t// If the filter matches, we need to honour include\n\tif ( fullName.indexOf( filter ) !== -1 ) {\n\t\treturn include;\n\t}\n\n\t// Otherwise, do the opposite\n\treturn !include;\n}\n\n// so far supports only Firefox, Chrome and Opera (buggy), Safari (for real exceptions)\n// Later Safari and IE10 are supposed to support error.stack as well\n// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\nfunction extractStacktrace( e, offset ) {\n\toffset = offset === undefined ? 3 : offset;\n\n\tvar stack, include, i;\n\n\tif ( e.stacktrace ) {\n\t\t// Opera\n\t\treturn e.stacktrace.split( \"\\n\" )[ offset + 3 ];\n\t} else if ( e.stack ) {\n\t\t// Firefox, Chrome\n\t\tstack = e.stack.split( \"\\n\" );\n\t\tif (/^error$/i.test( stack[0] ) ) {\n\t\t\tstack.shift();\n\t\t}\n\t\tif ( fileName ) {\n\t\t\tinclude = [];\n\t\t\tfor ( i = offset; i < stack.length; i++ ) {\n\t\t\t\tif ( stack[ i ].indexOf( fileName ) !== -1 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tinclude.push( stack[ i ] );\n\t\t\t}\n\t\t\tif ( include.length ) {\n\t\t\t\treturn include.join( \"\\n\" );\n\t\t\t}\n\t\t}\n\t\treturn stack[ offset ];\n\t} else if ( e.sourceURL ) {\n\t\t// Safari, PhantomJS\n\t\t// hopefully one day Safari provides actual stacktraces\n\t\t// exclude useless self-reference for generated Error objects\n\t\tif ( /qunit.js$/.test( e.sourceURL ) ) {\n\t\t\treturn;\n\t\t}\n\t\t// for actual exceptions, this is useful\n\t\treturn e.sourceURL + \":\" + e.line;\n\t}\n}\nfunction sourceFromStacktrace( offset ) {\n\ttry {\n\t\tthrow new Error();\n\t} catch ( e ) {\n\t\treturn extractStacktrace( e, offset );\n\t}\n}\n\n/**\n * Escape text for attribute or text content.\n */\nfunction escapeText( s ) {\n\tif ( !s ) {\n\t\treturn \"\";\n\t}\n\ts = s + \"\";\n\t// Both single quotes and double quotes (for attributes)\n\treturn s.replace( /['\"<>&]/g, function( s ) {\n\t\tswitch( s ) {\n\t\t\tcase \"'\":\n\t\t\t\treturn \"&#039;\";\n\t\t\tcase \"\\\"\":\n\t\t\t\treturn \"&quot;\";\n\t\t\tcase \"<\":\n\t\t\t\treturn \"&lt;\";\n\t\t\tcase \">\":\n\t\t\t\treturn \"&gt;\";\n\t\t\tcase \"&\":\n\t\t\t\treturn \"&amp;\";\n\t\t}\n\t});\n}\n\nfunction synchronize( callback, last ) {\n\tconfig.queue.push( callback );\n\n\tif ( config.autorun && !config.blocking ) {\n\t\tprocess( last );\n\t}\n}\n\nfunction process( last ) {\n\tfunction next() {\n\t\tprocess( last );\n\t}\n\tvar start = new Date().getTime();\n\tconfig.depth = config.depth ? config.depth + 1 : 1;\n\n\twhile ( config.queue.length && !config.blocking ) {\n\t\tif ( !defined.setTimeout || config.updateRate <= 0 || ( ( new Date().getTime() - start ) < config.updateRate ) ) {\n\t\t\tconfig.queue.shift()();\n\t\t} else {\n\t\t\tsetTimeout( next, 13 );\n\t\t\tbreak;\n\t\t}\n\t}\n\tconfig.depth--;\n\tif ( last && !config.blocking && !config.queue.length && config.depth === 0 ) {\n\t\tdone();\n\t}\n}\n\nfunction saveGlobal() {\n\tconfig.pollution = [];\n\n\tif ( config.noglobals ) {\n\t\tfor ( var key in window ) {\n\t\t\tif ( hasOwn.call( window, key ) ) {\n\t\t\t\t// in Opera sometimes DOM element ids show up here, ignore them\n\t\t\t\tif ( /^qunit-test-output/.test( key ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconfig.pollution.push( key );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction checkPollution() {\n\tvar newGlobals,\n\t\tdeletedGlobals,\n\t\told = config.pollution;\n\n\tsaveGlobal();\n\n\tnewGlobals = diff( config.pollution, old );\n\tif ( newGlobals.length > 0 ) {\n\t\tQUnit.pushFailure( \"Introduced global variable(s): \" + newGlobals.join(\", \") );\n\t}\n\n\tdeletedGlobals = diff( old, config.pollution );\n\tif ( deletedGlobals.length > 0 ) {\n\t\tQUnit.pushFailure( \"Deleted global variable(s): \" + deletedGlobals.join(\", \") );\n\t}\n}\n\n// returns a new Array with the elements that are in a but not in b\nfunction diff( a, b ) {\n\tvar i, j,\n\t\tresult = a.slice();\n\n\tfor ( i = 0; i < result.length; i++ ) {\n\t\tfor ( j = 0; j < b.length; j++ ) {\n\t\t\tif ( result[i] === b[j] ) {\n\t\t\t\tresult.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction extend( a, b ) {\n\tfor ( var prop in b ) {\n\t\tif ( hasOwn.call( b, prop ) ) {\n\t\t\t// Avoid \"Member not found\" error in IE8 caused by messing with window.constructor\n\t\t\tif ( !( prop === \"constructor\" && a === window ) ) {\n\t\t\t\tif ( b[ prop ] === undefined ) {\n\t\t\t\t\tdelete a[ prop ];\n\t\t\t\t} else {\n\t\t\t\t\ta[ prop ] = b[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n}\n\n/**\n * @param {HTMLElement} elem\n * @param {string} type\n * @param {Function} fn\n */\nfunction addEvent( elem, type, fn ) {\n\tif ( elem.addEventListener ) {\n\n\t\t// Standards-based browsers\n\t\telem.addEventListener( type, fn, false );\n\t} else if ( elem.attachEvent ) {\n\n\t\t// support: IE <9\n\t\telem.attachEvent( \"on\" + type, fn );\n\t} else {\n\n\t\t// Caller must ensure support for event listeners is present\n\t\tthrow new Error( \"addEvent() was called in a context without event listener support\" );\n\t}\n}\n\n/**\n * @param {Array|NodeList} elems\n * @param {string} type\n * @param {Function} fn\n */\nfunction addEvents( elems, type, fn ) {\n\tvar i = elems.length;\n\twhile ( i-- ) {\n\t\taddEvent( elems[i], type, fn );\n\t}\n}\n\nfunction hasClass( elem, name ) {\n\treturn (\" \" + elem.className + \" \").indexOf(\" \" + name + \" \") > -1;\n}\n\nfunction addClass( elem, name ) {\n\tif ( !hasClass( elem, name ) ) {\n\t\telem.className += (elem.className ? \" \" : \"\") + name;\n\t}\n}\n\nfunction removeClass( elem, name ) {\n\tvar set = \" \" + elem.className + \" \";\n\t// Class name may appear multiple times\n\twhile ( set.indexOf(\" \" + name + \" \") > -1 ) {\n\t\tset = set.replace(\" \" + name + \" \" , \" \");\n\t}\n\t// If possible, trim it for prettiness, but not necessarily\n\telem.className = typeof set.trim === \"function\" ? set.trim() : set.replace(/^\\s+|\\s+$/g, \"\");\n}\n\nfunction id( name ) {\n\treturn defined.document && document.getElementById && document.getElementById( name );\n}\n\nfunction registerLoggingCallback( key ) {\n\treturn function( callback ) {\n\t\tconfig[key].push( callback );\n\t};\n}\n\n// Supports deprecated method of completely overwriting logging callbacks\nfunction runLoggingCallbacks( key, scope, args ) {\n\tvar i, callbacks;\n\tif ( QUnit.hasOwnProperty( key ) ) {\n\t\tQUnit[ key ].call(scope, args );\n\t} else {\n\t\tcallbacks = config[ key ];\n\t\tfor ( i = 0; i < callbacks.length; i++ ) {\n\t\t\tcallbacks[ i ].call( scope, args );\n\t\t}\n\t}\n}\n\n// from jquery.js\nfunction inArray( elem, array ) {\n\tif ( array.indexOf ) {\n\t\treturn array.indexOf( elem );\n\t}\n\n\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\tif ( array[ i ] === elem ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nfunction Test( settings ) {\n\textend( this, settings );\n\tthis.assertions = [];\n\tthis.testNumber = ++Test.count;\n}\n\nTest.count = 0;\n\nTest.prototype = {\n\tinit: function() {\n\t\tvar a, b, li,\n\t\t\ttests = id( \"qunit-tests\" );\n\n\t\tif ( tests ) {\n\t\t\tb = document.createElement( \"strong\" );\n\t\t\tb.innerHTML = this.nameHtml;\n\n\t\t\t// `a` initialized at top of scope\n\t\t\ta = document.createElement( \"a\" );\n\t\t\ta.innerHTML = \"Rerun\";\n\t\t\ta.href = QUnit.url({ testNumber: this.testNumber });\n\n\t\t\tli = document.createElement( \"li\" );\n\t\t\tli.appendChild( b );\n\t\t\tli.appendChild( a );\n\t\t\tli.className = \"running\";\n\t\t\tli.id = this.id = \"qunit-test-output\" + testId++;\n\n\t\t\ttests.appendChild( li );\n\t\t}\n\t},\n\tsetup: function() {\n\t\tif (\n\t\t\t// Emit moduleStart when we're switching from one module to another\n\t\t\tthis.module !== config.previousModule ||\n\t\t\t\t// They could be equal (both undefined) but if the previousModule property doesn't\n\t\t\t\t// yet exist it means this is the first test in a suite that isn't wrapped in a\n\t\t\t\t// module, in which case we'll just emit a moduleStart event for 'undefined'.\n\t\t\t\t// Without this, reporters can get testStart before moduleStart  which is a problem.\n\t\t\t\t!hasOwn.call( config, \"previousModule\" )\n\t\t) {\n\t\t\tif ( hasOwn.call( config, \"previousModule\" ) ) {\n\t\t\t\trunLoggingCallbacks( \"moduleDone\", QUnit, {\n\t\t\t\t\tname: config.previousModule,\n\t\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\t\ttotal: config.moduleStats.all\n\t\t\t\t});\n\t\t\t}\n\t\t\tconfig.previousModule = this.module;\n\t\t\tconfig.moduleStats = { all: 0, bad: 0 };\n\t\t\trunLoggingCallbacks( \"moduleStart\", QUnit, {\n\t\t\t\tname: this.module\n\t\t\t});\n\t\t}\n\n\t\tconfig.current = this;\n\n\t\tthis.testEnvironment = extend({\n\t\t\tsetup: function() {},\n\t\t\tteardown: function() {}\n\t\t}, this.moduleTestEnvironment );\n\n\t\tthis.started = +new Date();\n\t\trunLoggingCallbacks( \"testStart\", QUnit, {\n\t\t\tname: this.testName,\n\t\t\tmodule: this.module\n\t\t});\n\n\t\t/*jshint camelcase:false */\n\n\n\t\t/**\n\t\t * Expose the current test environment.\n\t\t *\n\t\t * @deprecated since 1.12.0: Use QUnit.config.current.testEnvironment instead.\n\t\t */\n\t\tQUnit.current_testEnvironment = this.testEnvironment;\n\n\t\t/*jshint camelcase:true */\n\n\t\tif ( !config.pollution ) {\n\t\t\tsaveGlobal();\n\t\t}\n\t\tif ( config.notrycatch ) {\n\t\t\tthis.testEnvironment.setup.call( this.testEnvironment, QUnit.assert );\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tthis.testEnvironment.setup.call( this.testEnvironment, QUnit.assert );\n\t\t} catch( e ) {\n\t\t\tQUnit.pushFailure( \"Setup failed on \" + this.testName + \": \" + ( e.message || e ), extractStacktrace( e, 1 ) );\n\t\t}\n\t},\n\trun: function() {\n\t\tconfig.current = this;\n\n\t\tvar running = id( \"qunit-testresult\" );\n\n\t\tif ( running ) {\n\t\t\trunning.innerHTML = \"Running: <br/>\" + this.nameHtml;\n\t\t}\n\n\t\tif ( this.async ) {\n\t\t\tQUnit.stop();\n\t\t}\n\n\t\tthis.callbackStarted = +new Date();\n\n\t\tif ( config.notrycatch ) {\n\t\t\tthis.callback.call( this.testEnvironment, QUnit.assert );\n\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.callback.call( this.testEnvironment, QUnit.assert );\n\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t} catch( e ) {\n\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\n\t\t\tQUnit.pushFailure( \"Died on test #\" + (this.assertions.length + 1) + \" \" + this.stack + \": \" + ( e.message || e ), extractStacktrace( e, 0 ) );\n\t\t\t// else next test will carry the responsibility\n\t\t\tsaveGlobal();\n\n\t\t\t// Restart the tests if they're blocking\n\t\t\tif ( config.blocking ) {\n\t\t\t\tQUnit.start();\n\t\t\t}\n\t\t}\n\t},\n\tteardown: function() {\n\t\tconfig.current = this;\n\t\tif ( config.notrycatch ) {\n\t\t\tif ( typeof this.callbackRuntime === \"undefined\" ) {\n\t\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t\t}\n\t\t\tthis.testEnvironment.teardown.call( this.testEnvironment, QUnit.assert );\n\t\t\treturn;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tthis.testEnvironment.teardown.call( this.testEnvironment, QUnit.assert );\n\t\t\t} catch( e ) {\n\t\t\t\tQUnit.pushFailure( \"Teardown failed on \" + this.testName + \": \" + ( e.message || e ), extractStacktrace( e, 1 ) );\n\t\t\t}\n\t\t}\n\t\tcheckPollution();\n\t},\n\tfinish: function() {\n\t\tconfig.current = this;\n\t\tif ( config.requireExpects && this.expected === null ) {\n\t\t\tQUnit.pushFailure( \"Expected number of assertions to be defined, but expect() was not called.\", this.stack );\n\t\t} else if ( this.expected !== null && this.expected !== this.assertions.length ) {\n\t\t\tQUnit.pushFailure( \"Expected \" + this.expected + \" assertions, but \" + this.assertions.length + \" were run\", this.stack );\n\t\t} else if ( this.expected === null && !this.assertions.length ) {\n\t\t\tQUnit.pushFailure( \"Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.\", this.stack );\n\t\t}\n\n\t\tvar i, assertion, a, b, time, li, ol,\n\t\t\ttest = this,\n\t\t\tgood = 0,\n\t\t\tbad = 0,\n\t\t\ttests = id( \"qunit-tests\" );\n\n\t\tthis.runtime = +new Date() - this.started;\n\t\tconfig.stats.all += this.assertions.length;\n\t\tconfig.moduleStats.all += this.assertions.length;\n\n\t\tif ( tests ) {\n\t\t\tol = document.createElement( \"ol\" );\n\t\t\tol.className = \"qunit-assert-list\";\n\n\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\tassertion = this.assertions[i];\n\n\t\t\t\tli = document.createElement( \"li\" );\n\t\t\t\tli.className = assertion.result ? \"pass\" : \"fail\";\n\t\t\t\tli.innerHTML = assertion.message || ( assertion.result ? \"okay\" : \"failed\" );\n\t\t\t\tol.appendChild( li );\n\n\t\t\t\tif ( assertion.result ) {\n\t\t\t\t\tgood++;\n\t\t\t\t} else {\n\t\t\t\t\tbad++;\n\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// store result when possible\n\t\t\tif ( QUnit.config.reorder && defined.sessionStorage ) {\n\t\t\t\tif ( bad ) {\n\t\t\t\t\tsessionStorage.setItem( \"qunit-test-\" + this.module + \"-\" + this.testName, bad );\n\t\t\t\t} else {\n\t\t\t\t\tsessionStorage.removeItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( bad === 0 ) {\n\t\t\t\taddClass( ol, \"qunit-collapsed\" );\n\t\t\t}\n\n\t\t\t// `b` initialized at top of scope\n\t\t\tb = document.createElement( \"strong\" );\n\t\t\tb.innerHTML = this.nameHtml + \" <b class='counts'>(<b class='failed'>\" + bad + \"</b>, <b class='passed'>\" + good + \"</b>, \" + this.assertions.length + \")</b>\";\n\n\t\t\taddEvent(b, \"click\", function() {\n\t\t\t\tvar next = b.parentNode.lastChild,\n\t\t\t\t\tcollapsed = hasClass( next, \"qunit-collapsed\" );\n\t\t\t\t( collapsed ? removeClass : addClass )( next, \"qunit-collapsed\" );\n\t\t\t});\n\n\t\t\taddEvent(b, \"dblclick\", function( e ) {\n\t\t\t\tvar target = e && e.target ? e.target : window.event.srcElement;\n\t\t\t\tif ( target.nodeName.toLowerCase() === \"span\" || target.nodeName.toLowerCase() === \"b\" ) {\n\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t}\n\t\t\t\tif ( window.location && target.nodeName.toLowerCase() === \"strong\" ) {\n\t\t\t\t\twindow.location = QUnit.url({ testNumber: test.testNumber });\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// `time` initialized at top of scope\n\t\t\ttime = document.createElement( \"span\" );\n\t\t\ttime.className = \"runtime\";\n\t\t\ttime.innerHTML = this.runtime + \" ms\";\n\n\t\t\t// `li` initialized at top of scope\n\t\t\tli = id( this.id );\n\t\t\tli.className = bad ? \"fail\" : \"pass\";\n\t\t\tli.removeChild( li.firstChild );\n\t\t\ta = li.firstChild;\n\t\t\tli.appendChild( b );\n\t\t\tli.appendChild( a );\n\t\t\tli.appendChild( time );\n\t\t\tli.appendChild( ol );\n\n\t\t} else {\n\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\tif ( !this.assertions[i].result ) {\n\t\t\t\t\tbad++;\n\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trunLoggingCallbacks( \"testDone\", QUnit, {\n\t\t\tname: this.testName,\n\t\t\tmodule: this.module,\n\t\t\tfailed: bad,\n\t\t\tpassed: this.assertions.length - bad,\n\t\t\ttotal: this.assertions.length,\n\t\t\truntime: this.runtime,\n\t\t\t// DEPRECATED: this property will be removed in 2.0.0, use runtime instead\n\t\t\tduration: this.runtime\n\t\t});\n\n\t\tQUnit.reset();\n\n\t\tconfig.current = undefined;\n\t},\n\n\tqueue: function() {\n\t\tvar bad,\n\t\t\ttest = this;\n\n\t\tsynchronize(function() {\n\t\t\ttest.init();\n\t\t});\n\t\tfunction run() {\n\t\t\t// each of these can by async\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.setup();\n\t\t\t});\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.run();\n\t\t\t});\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.teardown();\n\t\t\t});\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.finish();\n\t\t\t});\n\t\t}\n\n\t\t// `bad` initialized at top of scope\n\t\t// defer when previous test run passed, if storage is available\n\t\tbad = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t\t\t\t+sessionStorage.getItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\n\t\tif ( bad ) {\n\t\t\trun();\n\t\t} else {\n\t\t\tsynchronize( run, true );\n\t\t}\n\t}\n};\n\n// `assert` initialized at top of scope\n// Assert helpers\n// All of these must either call QUnit.push() or manually do:\n// - runLoggingCallbacks( \"log\", .. );\n// - config.current.assertions.push({ .. });\nassert = QUnit.assert = {\n\t/**\n\t * Asserts rough true-ish result.\n\t * @name ok\n\t * @function\n\t * @example ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" );\n\t */\n\tok: function( result, msg ) {\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"ok() assertion outside test context, was \" + sourceFromStacktrace(2) );\n\t\t}\n\t\tresult = !!result;\n\t\tmsg = msg || ( result ? \"okay\" : \"failed\" );\n\n\t\tvar source,\n\t\t\tdetails = {\n\t\t\t\tmodule: config.current.module,\n\t\t\t\tname: config.current.testName,\n\t\t\t\tresult: result,\n\t\t\t\tmessage: msg\n\t\t\t};\n\n\t\tmsg = \"<span class='test-message'>\" + escapeText( msg ) + \"</span>\";\n\n\t\tif ( !result ) {\n\t\t\tsource = sourceFromStacktrace( 2 );\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t\tmsg += \"<table><tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\t\t\tescapeText( source ) +\n\t\t\t\t\t\"</pre></td></tr></table>\";\n\t\t\t}\n\t\t}\n\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\t\tconfig.current.assertions.push({\n\t\t\tresult: result,\n\t\t\tmessage: msg\n\t\t});\n\t},\n\n\t/**\n\t * Assert that the first two arguments are equal, with an optional message.\n\t * Prints out both actual and expected values.\n\t * @name equal\n\t * @function\n\t * @example equal( format( \"Received {0} bytes.\", 2), \"Received 2 bytes.\", \"format() replaces {0} with next argument\" );\n\t */\n\tequal: function( actual, expected, message ) {\n\t\t/*jshint eqeqeq:false */\n\t\tQUnit.push( expected == actual, actual, expected, message );\n\t},\n\n\t/**\n\t * @name notEqual\n\t * @function\n\t */\n\tnotEqual: function( actual, expected, message ) {\n\t\t/*jshint eqeqeq:false */\n\t\tQUnit.push( expected != actual, actual, expected, message );\n\t},\n\n\t/**\n\t * @name propEqual\n\t * @function\n\t */\n\tpropEqual: function( actual, expected, message ) {\n\t\tactual = objectValues(actual);\n\t\texpected = objectValues(expected);\n\t\tQUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n\t},\n\n\t/**\n\t * @name notPropEqual\n\t * @function\n\t */\n\tnotPropEqual: function( actual, expected, message ) {\n\t\tactual = objectValues(actual);\n\t\texpected = objectValues(expected);\n\t\tQUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n\t},\n\n\t/**\n\t * @name deepEqual\n\t * @function\n\t */\n\tdeepEqual: function( actual, expected, message ) {\n\t\tQUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n\t},\n\n\t/**\n\t * @name notDeepEqual\n\t * @function\n\t */\n\tnotDeepEqual: function( actual, expected, message ) {\n\t\tQUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n\t},\n\n\t/**\n\t * @name strictEqual\n\t * @function\n\t */\n\tstrictEqual: function( actual, expected, message ) {\n\t\tQUnit.push( expected === actual, actual, expected, message );\n\t},\n\n\t/**\n\t * @name notStrictEqual\n\t * @function\n\t */\n\tnotStrictEqual: function( actual, expected, message ) {\n\t\tQUnit.push( expected !== actual, actual, expected, message );\n\t},\n\n\t\"throws\": function( block, expected, message ) {\n\t\tvar actual,\n\t\t\texpectedOutput = expected,\n\t\t\tok = false;\n\n\t\t// 'expected' is optional\n\t\tif ( !message && typeof expected === \"string\" ) {\n\t\t\tmessage = expected;\n\t\t\texpected = null;\n\t\t}\n\n\t\tconfig.current.ignoreGlobalErrors = true;\n\t\ttry {\n\t\t\tblock.call( config.current.testEnvironment );\n\t\t} catch (e) {\n\t\t\tactual = e;\n\t\t}\n\t\tconfig.current.ignoreGlobalErrors = false;\n\n\t\tif ( actual ) {\n\n\t\t\t// we don't want to validate thrown error\n\t\t\tif ( !expected ) {\n\t\t\t\tok = true;\n\t\t\t\texpectedOutput = null;\n\n\t\t\t// expected is an Error object\n\t\t\t} else if ( expected instanceof Error ) {\n\t\t\t\tok = actual instanceof Error &&\n\t\t\t\t\t actual.name === expected.name &&\n\t\t\t\t\t actual.message === expected.message;\n\n\t\t\t// expected is a regexp\n\t\t\t} else if ( QUnit.objectType( expected ) === \"regexp\" ) {\n\t\t\t\tok = expected.test( errorString( actual ) );\n\n\t\t\t// expected is a string\n\t\t\t} else if ( QUnit.objectType( expected ) === \"string\" ) {\n\t\t\t\tok = expected === errorString( actual );\n\n\t\t\t// expected is a constructor\n\t\t\t} else if ( actual instanceof expected ) {\n\t\t\t\tok = true;\n\n\t\t\t// expected is a validation function which returns true is validation passed\n\t\t\t} else if ( expected.call( {}, actual ) === true ) {\n\t\t\t\texpectedOutput = null;\n\t\t\t\tok = true;\n\t\t\t}\n\n\t\t\tQUnit.push( ok, actual, expectedOutput, message );\n\t\t} else {\n\t\t\tQUnit.pushFailure( message, null, \"No exception was thrown.\" );\n\t\t}\n\t}\n};\n\n/**\n * @deprecated since 1.8.0\n * Kept assertion helpers in root for backwards compatibility.\n */\nextend( QUnit.constructor.prototype, assert );\n\n/**\n * @deprecated since 1.9.0\n * Kept to avoid TypeErrors for undefined methods.\n */\nQUnit.constructor.prototype.raises = function() {\n\tQUnit.push( false, false, false, \"QUnit.raises has been deprecated since 2012 (fad3c1ea), use QUnit.throws instead\" );\n};\n\n/**\n * @deprecated since 1.0.0, replaced with error pushes since 1.3.0\n * Kept to avoid TypeErrors for undefined methods.\n */\nQUnit.constructor.prototype.equals = function() {\n\tQUnit.push( false, false, false, \"QUnit.equals has been deprecated since 2009 (e88049a0), use QUnit.equal instead\" );\n};\nQUnit.constructor.prototype.same = function() {\n\tQUnit.push( false, false, false, \"QUnit.same has been deprecated since 2009 (e88049a0), use QUnit.deepEqual instead\" );\n};\n\n// Test for equality any JavaScript type.\n// Author: Philippe Rathé <prathe@gmail.com>\nQUnit.equiv = (function() {\n\n\t// Call the o related callback with the given arguments.\n\tfunction bindCallbacks( o, callbacks, args ) {\n\t\tvar prop = QUnit.objectType( o );\n\t\tif ( prop ) {\n\t\t\tif ( QUnit.objectType( callbacks[ prop ] ) === \"function\" ) {\n\t\t\t\treturn callbacks[ prop ].apply( callbacks, args );\n\t\t\t} else {\n\t\t\t\treturn callbacks[ prop ]; // or undefined\n\t\t\t}\n\t\t}\n\t}\n\n\t// the real equiv function\n\tvar innerEquiv,\n\t\t// stack to decide between skip/abort functions\n\t\tcallers = [],\n\t\t// stack to avoiding loops from circular referencing\n\t\tparents = [],\n\t\tparentsB = [],\n\n\t\tgetProto = Object.getPrototypeOf || function ( obj ) {\n\t\t\t/*jshint camelcase:false */\n\t\t\treturn obj.__proto__;\n\t\t},\n\t\tcallbacks = (function () {\n\n\t\t\t// for string, boolean, number and null\n\t\t\tfunction useStrictEquality( b, a ) {\n\t\t\t\t/*jshint eqeqeq:false */\n\t\t\t\tif ( b instanceof a.constructor || a instanceof b.constructor ) {\n\t\t\t\t\t// to catch short annotation VS 'new' annotation of a\n\t\t\t\t\t// declaration\n\t\t\t\t\t// e.g. var i = 1;\n\t\t\t\t\t// var j = new Number(1);\n\t\t\t\t\treturn a == b;\n\t\t\t\t} else {\n\t\t\t\t\treturn a === b;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t\"string\": useStrictEquality,\n\t\t\t\t\"boolean\": useStrictEquality,\n\t\t\t\t\"number\": useStrictEquality,\n\t\t\t\t\"null\": useStrictEquality,\n\t\t\t\t\"undefined\": useStrictEquality,\n\n\t\t\t\t\"nan\": function( b ) {\n\t\t\t\t\treturn isNaN( b );\n\t\t\t\t},\n\n\t\t\t\t\"date\": function( b, a ) {\n\t\t\t\t\treturn QUnit.objectType( b ) === \"date\" && a.valueOf() === b.valueOf();\n\t\t\t\t},\n\n\t\t\t\t\"regexp\": function( b, a ) {\n\t\t\t\t\treturn QUnit.objectType( b ) === \"regexp\" &&\n\t\t\t\t\t\t// the regex itself\n\t\t\t\t\t\ta.source === b.source &&\n\t\t\t\t\t\t// and its modifiers\n\t\t\t\t\t\ta.global === b.global &&\n\t\t\t\t\t\t// (gmi) ...\n\t\t\t\t\t\ta.ignoreCase === b.ignoreCase &&\n\t\t\t\t\t\ta.multiline === b.multiline &&\n\t\t\t\t\t\ta.sticky === b.sticky;\n\t\t\t\t},\n\n\t\t\t\t// - skip when the property is a method of an instance (OOP)\n\t\t\t\t// - abort otherwise,\n\t\t\t\t// initial === would have catch identical references anyway\n\t\t\t\t\"function\": function() {\n\t\t\t\t\tvar caller = callers[callers.length - 1];\n\t\t\t\t\treturn caller !== Object && typeof caller !== \"undefined\";\n\t\t\t\t},\n\n\t\t\t\t\"array\": function( b, a ) {\n\t\t\t\t\tvar i, j, len, loop, aCircular, bCircular;\n\n\t\t\t\t\t// b could be an object literal here\n\t\t\t\t\tif ( QUnit.objectType( b ) !== \"array\" ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tlen = a.length;\n\t\t\t\t\tif ( len !== b.length ) {\n\t\t\t\t\t\t// safe and faster\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\tparents.push( a );\n\t\t\t\t\tparentsB.push( b );\n\t\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\t\taCircular = parents[j] === a[i];\n\t\t\t\t\t\t\tbCircular = parentsB[j] === b[i];\n\t\t\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\t\t\tif ( a[i] === b[i] || aCircular && bCircular ) {\n\t\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( !loop && !innerEquiv(a[i], b[i]) ) {\n\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tparents.pop();\n\t\t\t\t\tparentsB.pop();\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\n\t\t\t\t\"object\": function( b, a ) {\n\t\t\t\t\t/*jshint forin:false */\n\t\t\t\t\tvar i, j, loop, aCircular, bCircular,\n\t\t\t\t\t\t// Default to true\n\t\t\t\t\t\teq = true,\n\t\t\t\t\t\taProperties = [],\n\t\t\t\t\t\tbProperties = [];\n\n\t\t\t\t\t// comparing constructors is more strict than using\n\t\t\t\t\t// instanceof\n\t\t\t\t\tif ( a.constructor !== b.constructor ) {\n\t\t\t\t\t\t// Allow objects with no prototype to be equivalent to\n\t\t\t\t\t\t// objects with Object as their constructor.\n\t\t\t\t\t\tif ( !(( getProto(a) === null && getProto(b) === Object.prototype ) ||\n\t\t\t\t\t\t\t( getProto(b) === null && getProto(a) === Object.prototype ) ) ) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// stack constructor before traversing properties\n\t\t\t\t\tcallers.push( a.constructor );\n\n\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\tparents.push( a );\n\t\t\t\t\tparentsB.push( b );\n\n\t\t\t\t\t// be strict: don't ensure hasOwnProperty and go deep\n\t\t\t\t\tfor ( i in a ) {\n\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\t\taCircular = parents[j] === a[i];\n\t\t\t\t\t\t\tbCircular = parentsB[j] === b[i];\n\t\t\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\t\t\tif ( a[i] === b[i] || aCircular && bCircular ) {\n\t\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taProperties.push(i);\n\t\t\t\t\t\tif ( !loop && !innerEquiv(a[i], b[i]) ) {\n\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tparents.pop();\n\t\t\t\t\tparentsB.pop();\n\t\t\t\t\tcallers.pop(); // unstack, we are done\n\n\t\t\t\t\tfor ( i in b ) {\n\t\t\t\t\t\tbProperties.push( i ); // collect b's properties\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ensures identical properties name\n\t\t\t\t\treturn eq && innerEquiv( aProperties.sort(), bProperties.sort() );\n\t\t\t\t}\n\t\t\t};\n\t\t}());\n\n\tinnerEquiv = function() { // can take multiple arguments\n\t\tvar args = [].slice.apply( arguments );\n\t\tif ( args.length < 2 ) {\n\t\t\treturn true; // end transition\n\t\t}\n\n\t\treturn (function( a, b ) {\n\t\t\tif ( a === b ) {\n\t\t\t\treturn true; // catch the most you can\n\t\t\t} else if ( a === null || b === null || typeof a === \"undefined\" ||\n\t\t\t\t\ttypeof b === \"undefined\" ||\n\t\t\t\t\tQUnit.objectType(a) !== QUnit.objectType(b) ) {\n\t\t\t\treturn false; // don't lose time with error prone cases\n\t\t\t} else {\n\t\t\t\treturn bindCallbacks(a, callbacks, [ b, a ]);\n\t\t\t}\n\n\t\t\t// apply transition with (1..n) arguments\n\t\t}( args[0], args[1] ) && innerEquiv.apply( this, args.splice(1, args.length - 1 )) );\n\t};\n\n\treturn innerEquiv;\n}());\n\n/**\n * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n * http://flesler.blogspot.com Licensed under BSD\n * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n *\n * @projectDescription Advanced and extensible data dumping for Javascript.\n * @version 1.0.0\n * @author Ariel Flesler\n * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n */\nQUnit.jsDump = (function() {\n\tfunction quote( str ) {\n\t\treturn \"\\\"\" + str.toString().replace( /\"/g, \"\\\\\\\"\" ) + \"\\\"\";\n\t}\n\tfunction literal( o ) {\n\t\treturn o + \"\";\n\t}\n\tfunction join( pre, arr, post ) {\n\t\tvar s = jsDump.separator(),\n\t\t\tbase = jsDump.indent(),\n\t\t\tinner = jsDump.indent(1);\n\t\tif ( arr.join ) {\n\t\t\tarr = arr.join( \",\" + s + inner );\n\t\t}\n\t\tif ( !arr ) {\n\t\t\treturn pre + post;\n\t\t}\n\t\treturn [ pre, inner + arr, base + post ].join(s);\n\t}\n\tfunction array( arr, stack ) {\n\t\tvar i = arr.length, ret = new Array(i);\n\t\tthis.up();\n\t\twhile ( i-- ) {\n\t\t\tret[i] = this.parse( arr[i] , undefined , stack);\n\t\t}\n\t\tthis.down();\n\t\treturn join( \"[\", ret, \"]\" );\n\t}\n\n\tvar reName = /^function (\\w+)/,\n\t\tjsDump = {\n\t\t\t// type is used mostly internally, you can fix a (custom)type in advance\n\t\t\tparse: function( obj, type, stack ) {\n\t\t\t\tstack = stack || [ ];\n\t\t\t\tvar inStack, res,\n\t\t\t\t\tparser = this.parsers[ type || this.typeOf(obj) ];\n\n\t\t\t\ttype = typeof parser;\n\t\t\t\tinStack = inArray( obj, stack );\n\n\t\t\t\tif ( inStack !== -1 ) {\n\t\t\t\t\treturn \"recursion(\" + (inStack - stack.length) + \")\";\n\t\t\t\t}\n\t\t\t\tif ( type === \"function\" )  {\n\t\t\t\t\tstack.push( obj );\n\t\t\t\t\tres = parser.call( this, obj, stack );\n\t\t\t\t\tstack.pop();\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t\treturn ( type === \"string\" ) ? parser : this.parsers.error;\n\t\t\t},\n\t\t\ttypeOf: function( obj ) {\n\t\t\t\tvar type;\n\t\t\t\tif ( obj === null ) {\n\t\t\t\t\ttype = \"null\";\n\t\t\t\t} else if ( typeof obj === \"undefined\" ) {\n\t\t\t\t\ttype = \"undefined\";\n\t\t\t\t} else if ( QUnit.is( \"regexp\", obj) ) {\n\t\t\t\t\ttype = \"regexp\";\n\t\t\t\t} else if ( QUnit.is( \"date\", obj) ) {\n\t\t\t\t\ttype = \"date\";\n\t\t\t\t} else if ( QUnit.is( \"function\", obj) ) {\n\t\t\t\t\ttype = \"function\";\n\t\t\t\t} else if ( typeof obj.setInterval !== undefined && typeof obj.document !== \"undefined\" && typeof obj.nodeType === \"undefined\" ) {\n\t\t\t\t\ttype = \"window\";\n\t\t\t\t} else if ( obj.nodeType === 9 ) {\n\t\t\t\t\ttype = \"document\";\n\t\t\t\t} else if ( obj.nodeType ) {\n\t\t\t\t\ttype = \"node\";\n\t\t\t\t} else if (\n\t\t\t\t\t// native arrays\n\t\t\t\t\ttoString.call( obj ) === \"[object Array]\" ||\n\t\t\t\t\t// NodeList objects\n\t\t\t\t\t( typeof obj.length === \"number\" && typeof obj.item !== \"undefined\" && ( obj.length ? obj.item(0) === obj[0] : ( obj.item( 0 ) === null && typeof obj[0] === \"undefined\" ) ) )\n\t\t\t\t) {\n\t\t\t\t\ttype = \"array\";\n\t\t\t\t} else if ( obj.constructor === Error.prototype.constructor ) {\n\t\t\t\t\ttype = \"error\";\n\t\t\t\t} else {\n\t\t\t\t\ttype = typeof obj;\n\t\t\t\t}\n\t\t\t\treturn type;\n\t\t\t},\n\t\t\tseparator: function() {\n\t\t\t\treturn this.multiline ?\tthis.HTML ? \"<br />\" : \"\\n\" : this.HTML ? \"&nbsp;\" : \" \";\n\t\t\t},\n\t\t\t// extra can be a number, shortcut for increasing-calling-decreasing\n\t\t\tindent: function( extra ) {\n\t\t\t\tif ( !this.multiline ) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\tvar chr = this.indentChar;\n\t\t\t\tif ( this.HTML ) {\n\t\t\t\t\tchr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&nbsp;\" );\n\t\t\t\t}\n\t\t\t\treturn new Array( this.depth + ( extra || 0 ) ).join(chr);\n\t\t\t},\n\t\t\tup: function( a ) {\n\t\t\t\tthis.depth += a || 1;\n\t\t\t},\n\t\t\tdown: function( a ) {\n\t\t\t\tthis.depth -= a || 1;\n\t\t\t},\n\t\t\tsetParser: function( name, parser ) {\n\t\t\t\tthis.parsers[name] = parser;\n\t\t\t},\n\t\t\t// The next 3 are exposed so you can use them\n\t\t\tquote: quote,\n\t\t\tliteral: literal,\n\t\t\tjoin: join,\n\t\t\t//\n\t\t\tdepth: 1,\n\t\t\t// This is the list of parsers, to modify them, use jsDump.setParser\n\t\t\tparsers: {\n\t\t\t\twindow: \"[Window]\",\n\t\t\t\tdocument: \"[Document]\",\n\t\t\t\terror: function(error) {\n\t\t\t\t\treturn \"Error(\\\"\" + error.message + \"\\\")\";\n\t\t\t\t},\n\t\t\t\tunknown: \"[Unknown]\",\n\t\t\t\t\"null\": \"null\",\n\t\t\t\t\"undefined\": \"undefined\",\n\t\t\t\t\"function\": function( fn ) {\n\t\t\t\t\tvar ret = \"function\",\n\t\t\t\t\t\t// functions never have name in IE\n\t\t\t\t\t\tname = \"name\" in fn ? fn.name : (reName.exec(fn) || [])[1];\n\n\t\t\t\t\tif ( name ) {\n\t\t\t\t\t\tret += \" \" + name;\n\t\t\t\t\t}\n\t\t\t\t\tret += \"( \";\n\n\t\t\t\t\tret = [ ret, QUnit.jsDump.parse( fn, \"functionArgs\" ), \"){\" ].join( \"\" );\n\t\t\t\t\treturn join( ret, QUnit.jsDump.parse(fn,\"functionCode\" ), \"}\" );\n\t\t\t\t},\n\t\t\t\tarray: array,\n\t\t\t\tnodelist: array,\n\t\t\t\t\"arguments\": array,\n\t\t\t\tobject: function( map, stack ) {\n\t\t\t\t\t/*jshint forin:false */\n\t\t\t\t\tvar ret = [ ], keys, key, val, i;\n\t\t\t\t\tQUnit.jsDump.up();\n\t\t\t\t\tkeys = [];\n\t\t\t\t\tfor ( key in map ) {\n\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t}\n\t\t\t\t\tkeys.sort();\n\t\t\t\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t\t\t\tkey = keys[ i ];\n\t\t\t\t\t\tval = map[ key ];\n\t\t\t\t\t\tret.push( QUnit.jsDump.parse( key, \"key\" ) + \": \" + QUnit.jsDump.parse( val, undefined, stack ) );\n\t\t\t\t\t}\n\t\t\t\t\tQUnit.jsDump.down();\n\t\t\t\t\treturn join( \"{\", ret, \"}\" );\n\t\t\t\t},\n\t\t\t\tnode: function( node ) {\n\t\t\t\t\tvar len, i, val,\n\t\t\t\t\t\topen = QUnit.jsDump.HTML ? \"&lt;\" : \"<\",\n\t\t\t\t\t\tclose = QUnit.jsDump.HTML ? \"&gt;\" : \">\",\n\t\t\t\t\t\ttag = node.nodeName.toLowerCase(),\n\t\t\t\t\t\tret = open + tag,\n\t\t\t\t\t\tattrs = node.attributes;\n\n\t\t\t\t\tif ( attrs ) {\n\t\t\t\t\t\tfor ( i = 0, len = attrs.length; i < len; i++ ) {\n\t\t\t\t\t\t\tval = attrs[i].nodeValue;\n\t\t\t\t\t\t\t// IE6 includes all attributes in .attributes, even ones not explicitly set.\n\t\t\t\t\t\t\t// Those have values like undefined, null, 0, false, \"\" or \"inherit\".\n\t\t\t\t\t\t\tif ( val && val !== \"inherit\" ) {\n\t\t\t\t\t\t\t\tret += \" \" + attrs[i].nodeName + \"=\" + QUnit.jsDump.parse( val, \"attribute\" );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tret += close;\n\n\t\t\t\t\t// Show content of TextNode or CDATASection\n\t\t\t\t\tif ( node.nodeType === 3 || node.nodeType === 4 ) {\n\t\t\t\t\t\tret += node.nodeValue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret + open + \"/\" + tag + close;\n\t\t\t\t},\n\t\t\t\t// function calls it internally, it's the arguments part of the function\n\t\t\t\tfunctionArgs: function( fn ) {\n\t\t\t\t\tvar args,\n\t\t\t\t\t\tl = fn.length;\n\n\t\t\t\t\tif ( !l ) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\n\t\t\t\t\targs = new Array(l);\n\t\t\t\t\twhile ( l-- ) {\n\t\t\t\t\t\t// 97 is 'a'\n\t\t\t\t\t\targs[l] = String.fromCharCode(97+l);\n\t\t\t\t\t}\n\t\t\t\t\treturn \" \" + args.join( \", \" ) + \" \";\n\t\t\t\t},\n\t\t\t\t// object calls it internally, the key part of an item in a map\n\t\t\t\tkey: quote,\n\t\t\t\t// function calls it internally, it's the content of the function\n\t\t\t\tfunctionCode: \"[code]\",\n\t\t\t\t// node calls it internally, it's an html attribute value\n\t\t\t\tattribute: quote,\n\t\t\t\tstring: quote,\n\t\t\t\tdate: quote,\n\t\t\t\tregexp: literal,\n\t\t\t\tnumber: literal,\n\t\t\t\t\"boolean\": literal\n\t\t\t},\n\t\t\t// if true, entities are escaped ( <, >, \\t, space and \\n )\n\t\t\tHTML: false,\n\t\t\t// indentation unit\n\t\t\tindentChar: \"  \",\n\t\t\t// if true, items in a collection, are separated by a \\n, else just a space.\n\t\t\tmultiline: true\n\t\t};\n\n\treturn jsDump;\n}());\n\n/*\n * Javascript Diff Algorithm\n *  By John Resig (http://ejohn.org/)\n *  Modified by Chu Alan \"sprite\"\n *\n * Released under the MIT license.\n *\n * More Info:\n *  http://ejohn.org/projects/javascript-diff-algorithm/\n *\n * Usage: QUnit.diff(expected, actual)\n *\n * QUnit.diff( \"the quick brown fox jumped over\", \"the quick fox jumps over\" ) == \"the  quick <del>brown </del> fox <del>jumped </del><ins>jumps </ins> over\"\n */\nQUnit.diff = (function() {\n\t/*jshint eqeqeq:false, eqnull:true */\n\tfunction diff( o, n ) {\n\t\tvar i,\n\t\t\tns = {},\n\t\t\tos = {};\n\n\t\tfor ( i = 0; i < n.length; i++ ) {\n\t\t\tif ( !hasOwn.call( ns, n[i] ) ) {\n\t\t\t\tns[ n[i] ] = {\n\t\t\t\t\trows: [],\n\t\t\t\t\to: null\n\t\t\t\t};\n\t\t\t}\n\t\t\tns[ n[i] ].rows.push( i );\n\t\t}\n\n\t\tfor ( i = 0; i < o.length; i++ ) {\n\t\t\tif ( !hasOwn.call( os, o[i] ) ) {\n\t\t\t\tos[ o[i] ] = {\n\t\t\t\t\trows: [],\n\t\t\t\t\tn: null\n\t\t\t\t};\n\t\t\t}\n\t\t\tos[ o[i] ].rows.push( i );\n\t\t}\n\n\t\tfor ( i in ns ) {\n\t\t\tif ( hasOwn.call( ns, i ) ) {\n\t\t\t\tif ( ns[i].rows.length === 1 && hasOwn.call( os, i ) && os[i].rows.length === 1 ) {\n\t\t\t\t\tn[ ns[i].rows[0] ] = {\n\t\t\t\t\t\ttext: n[ ns[i].rows[0] ],\n\t\t\t\t\t\trow: os[i].rows[0]\n\t\t\t\t\t};\n\t\t\t\t\to[ os[i].rows[0] ] = {\n\t\t\t\t\t\ttext: o[ os[i].rows[0] ],\n\t\t\t\t\t\trow: ns[i].rows[0]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor ( i = 0; i < n.length - 1; i++ ) {\n\t\t\tif ( n[i].text != null && n[ i + 1 ].text == null && n[i].row + 1 < o.length && o[ n[i].row + 1 ].text == null &&\n\t\t\t\t\t\tn[ i + 1 ] == o[ n[i].row + 1 ] ) {\n\n\t\t\t\tn[ i + 1 ] = {\n\t\t\t\t\ttext: n[ i + 1 ],\n\t\t\t\t\trow: n[i].row + 1\n\t\t\t\t};\n\t\t\t\to[ n[i].row + 1 ] = {\n\t\t\t\t\ttext: o[ n[i].row + 1 ],\n\t\t\t\t\trow: i + 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tfor ( i = n.length - 1; i > 0; i-- ) {\n\t\t\tif ( n[i].text != null && n[ i - 1 ].text == null && n[i].row > 0 && o[ n[i].row - 1 ].text == null &&\n\t\t\t\t\t\tn[ i - 1 ] == o[ n[i].row - 1 ]) {\n\n\t\t\t\tn[ i - 1 ] = {\n\t\t\t\t\ttext: n[ i - 1 ],\n\t\t\t\t\trow: n[i].row - 1\n\t\t\t\t};\n\t\t\t\to[ n[i].row - 1 ] = {\n\t\t\t\t\ttext: o[ n[i].row - 1 ],\n\t\t\t\t\trow: i - 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\to: o,\n\t\t\tn: n\n\t\t};\n\t}\n\n\treturn function( o, n ) {\n\t\to = o.replace( /\\s+$/, \"\" );\n\t\tn = n.replace( /\\s+$/, \"\" );\n\n\t\tvar i, pre,\n\t\t\tstr = \"\",\n\t\t\tout = diff( o === \"\" ? [] : o.split(/\\s+/), n === \"\" ? [] : n.split(/\\s+/) ),\n\t\t\toSpace = o.match(/\\s+/g),\n\t\t\tnSpace = n.match(/\\s+/g);\n\n\t\tif ( oSpace == null ) {\n\t\t\toSpace = [ \" \" ];\n\t\t}\n\t\telse {\n\t\t\toSpace.push( \" \" );\n\t\t}\n\n\t\tif ( nSpace == null ) {\n\t\t\tnSpace = [ \" \" ];\n\t\t}\n\t\telse {\n\t\t\tnSpace.push( \" \" );\n\t\t}\n\n\t\tif ( out.n.length === 0 ) {\n\t\t\tfor ( i = 0; i < out.o.length; i++ ) {\n\t\t\t\tstr += \"<del>\" + out.o[i] + oSpace[i] + \"</del>\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( out.n[0].text == null ) {\n\t\t\t\tfor ( n = 0; n < out.o.length && out.o[n].text == null; n++ ) {\n\t\t\t\t\tstr += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( i = 0; i < out.n.length; i++ ) {\n\t\t\t\tif (out.n[i].text == null) {\n\t\t\t\t\tstr += \"<ins>\" + out.n[i] + nSpace[i] + \"</ins>\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// `pre` initialized at top of scope\n\t\t\t\t\tpre = \"\";\n\n\t\t\t\t\tfor ( n = out.n[i].row + 1; n < out.o.length && out.o[n].text == null; n++ ) {\n\t\t\t\t\t\tpre += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t\t}\n\t\t\t\t\tstr += \" \" + out.n[i].text + nSpace[i] + pre;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn str;\n\t};\n}());\n\n// For browser, export only select globals\nif ( typeof window !== \"undefined\" ) {\n\textend( window, QUnit.constructor.prototype );\n\twindow.QUnit = QUnit;\n}\n\n// For CommonJS environments, export everything\nif ( typeof module !== \"undefined\" && module.exports ) {\n\tmodule.exports = QUnit;\n}\n\n\n// Get a reference to the global object, like window in browsers\n}( (function() {\n\treturn this;\n})() ));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/qunit/qunit/qunit.js\n// module id = 53\n// module chunks = 1","'use strict';\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/process/browser.js\n// module id = 54\n// module chunks = 1","/**\n * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n *\n * https://github.com/twada/qunit-tap\n * version: 1.5.0\n *\n * Copyright (c) 2010-2014 Takuto Wada\n * Dual licensed under the MIT and GPLv2 licenses.\n *   https://raw.github.com/twada/qunit-tap/master/MIT-LICENSE.txt\n *   https://raw.github.com/twada/qunit-tap/master/GPL-LICENSE.txt\n *\n * A part of extend function is:\n *   Copyright 2012 jQuery Foundation and other contributors\n *   Released under the MIT license.\n *   http://jquery.org/license\n */\n(function (root, factory) {\n    'use strict';\n\n    // using returnExports UMD pattern\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.qunitTap = factory();\n    }\n}(this, function () {\n    'use strict';\n\n    var qunitTapVersion = '1.5.0',\n        slice = Array.prototype.slice;\n\n    // borrowed from qunit.js\n    function extend (a, b) {\n        var prop;\n        for (prop in b) {\n            if (b.hasOwnProperty(prop)) {\n                if (typeof b[prop] === 'undefined') {\n                    delete a[prop];\n                } else {\n                    a[prop] = b[prop];\n                }\n            }\n        }\n        return a;\n    }\n\n    function indexOf (ary, element) {\n        var i;\n        for (i = 0; i < ary.length; i += 1) {\n            if (ary[i] === element) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function removeElement (ary, element) {\n        var index = indexOf(ary, element);\n        if (index !== -1) {\n            return ary.splice(index, 1);\n        } else {\n            return [];\n        }\n    }\n\n    function isPlanRequired (conf) {\n        return (typeof conf !== 'undefined' && typeof conf.requireExpects !== 'undefined' && conf.requireExpects);\n    }\n\n    function isPassed (details) {\n        return !!(details.result);\n    }\n\n    function isFailed (details) {\n        return !(isPassed(details));\n    }\n\n    function isAssertOkFailed (details) {\n        return isFailed(details) && typeof details.expected === 'undefined' && typeof details.actual === 'undefined';\n    }\n\n    function escapeLineEndings (str) {\n        return str.replace(/(\\r?\\n)/g, '$&# ');\n    }\n\n    function ltrim (str) {\n        return str.replace(/^\\s+/, '');\n    }\n\n    function noop (obj) {\n        return obj;\n    }\n\n    function render (desc, fieldName, fieldValue, formatter) {\n        desc.push(fieldName + ': ' + formatter(fieldValue));\n    }\n\n    function renderIf (shouldRender, desc, fieldName, fieldValue, formatter) {\n        if (!shouldRender || typeof fieldValue === 'undefined') {\n            return;\n        }\n        render(desc, fieldName, fieldValue, formatter);\n    }\n\n    function formatTestLine (testLine, rest) {\n        if (!rest) {\n            return testLine;\n        }\n        return testLine + ' - ' + escapeLineEndings(rest);\n    }\n\n    var createCallbackAppenderFor = function (qu) {\n        return function (subject, observer, event) {\n            var originalLoggingCallback = subject[event],\n                callback = function () {\n                    // make listener methods (moduleStart,testStart,log, ...) overridable.\n                    observer[event].apply(observer, slice.apply(arguments));\n                };\n            originalLoggingCallback(callback);\n            return callback;\n        };\n    };\n\n\n    /**\n     * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n     * @param qunitObject QUnit object reference.\n     * @param printLikeFunction print-like function for TAP output (assumes line-separator is added by this function for each call).\n     * @param options configuration options to customize default behavior.\n     * @return object to provide QUnit-TAP API and customization subject.\n     */\n    function qunitTap(qunitObject, printLikeFunction, options) {\n        if (!qunitObject) {\n            throw new Error('should pass QUnit object reference. Please check QUnit\\'s \"require\" path if you are using Node.js (or any CommonJS env).');\n        } else if (typeof printLikeFunction !== 'function') {\n            throw new Error('should pass print-like function');\n        }\n\n        var qu = qunitObject,\n            tap = {},\n            jsDumpExists = (typeof qu.jsDump !== 'undefined' && typeof qu.jsDump.parse === 'function'),\n            explain = (jsDumpExists ? function explain (obj) { return qu.jsDump.parse(obj); } : noop),\n            deprecateOption = function deprecateOption (optionName, fallback) {\n                // option deprecation and fallback function\n                if (!options || typeof options !== 'object') {\n                    return;\n                }\n                if (typeof options[optionName] === 'undefined') {\n                    return;\n                }\n                printLikeFunction('# WARNING: Option \"' + optionName + '\" is deprecated and will be removed in future version.');\n                fallback(options[optionName]);\n            },\n            targetEvents = [\n                'moduleStart',\n                'testStart',\n                'log',\n                'testDone',\n                'done'\n            ],\n            registeredCallbacks = {};\n\n\n        tap.config = extend(\n            {\n                initialCount: 1,\n                showModuleNameOnFailure: true,\n                showTestNameOnFailure: true,\n                showExpectationOnFailure: true,\n                showSourceOnFailure: true\n            },\n            options\n        );\n        deprecateOption('noPlan', function (flag) {\n            printLikeFunction('# Now QUnit-TAP works as with \"noPlan: true\" by default. If you want to delare plan explicitly, please use \"QUnit.config.requireExpects\" option instead.');\n            tap.config.noPlan = flag;\n        });\n        deprecateOption('count', function (count) {\n            tap.config.initialCount = (count + 1);\n        });\n        deprecateOption('showDetailsOnFailure', function (flag) {\n            tap.config.showModuleNameOnFailure = flag;\n            tap.config.showTestNameOnFailure = flag;\n            tap.config.showExpectationOnFailure = flag;\n            tap.config.showSourceOnFailure = flag;\n        });\n        tap.VERSION = qunitTapVersion;\n        tap.puts = printLikeFunction;\n        tap.count = tap.config.initialCount - 1;\n        tap.expectedCount = tap.config.initialCount - 1;\n\n        function isEnabled (configName) {\n            return tap.config[configName];\n        }\n\n        function formatDetails (details) {\n            if (isPassed(details)) {\n                return details.message;\n            }\n            var desc = [];\n            if (details.message) {\n                desc.push(details.message);\n            }\n            if (isEnabled('showExpectationOnFailure') && !(isAssertOkFailed(details))) {\n                render(desc, 'expected', details.expected, explain);\n                render(desc, 'got', details.actual, explain);\n            }\n            renderIf(isEnabled('showTestNameOnFailure'), desc, 'test', details.name, noop);\n            renderIf(isEnabled('showModuleNameOnFailure'), desc, 'module', details.module, noop);\n            renderIf(isEnabled('showSourceOnFailure'), desc, 'source', details.source, ltrim);\n            return desc.join(', ');\n        }\n\n        function printPlanLine (toCount) {\n            tap.puts(tap.config.initialCount + '..' + toCount);\n        }\n\n        function unsubscribeEvent (eventName) {\n            var listeners;\n            if (indexOf(targetEvents, eventName) === -1) {\n                return;\n            }\n            listeners = qu.config[eventName];\n            if (typeof listeners === 'undefined') {\n                return;\n            }\n            removeElement(listeners, registeredCallbacks[eventName]);\n        }\n\n        function unsubscribeEvents (eventNames) {\n            var i;\n            for (i = 0; i < eventNames.length; i += 1) {\n                unsubscribeEvent(eventNames[i]);\n            }\n        }\n\n        tap.explain = explain;\n\n        tap.note = function note (obj) {\n            tap.puts(escapeLineEndings('# ' + obj));\n        };\n\n        tap.diag = function diag (obj) {\n            tap.note(obj);\n            return false;\n        };\n\n        tap.moduleStart = function moduleStart (arg) {\n            var name = (typeof arg === 'string') ? arg : arg.name;\n            tap.note('module: ' + name);\n        };\n\n        tap.testStart = function testStart (arg) {\n            var name = (typeof arg === 'string') ? arg : arg.name;\n            tap.note('test: ' + name);\n        };\n\n        tap.log = function log (details) {\n            var testLine = '';\n            tap.count += 1;\n            if (isFailed(details)) {\n                testLine += 'not ';\n            }\n            testLine += ('ok ' + tap.count);\n            tap.puts(formatTestLine(testLine, formatDetails(details)));\n        };\n\n        tap.testDone = function testDone () {\n            if (isPlanRequired(qu.config)) {\n                tap.expectedCount += qu.config.current.expected;\n            }\n        };\n\n        tap.done = function done () {\n            if (typeof tap.config.noPlan !== 'undefined' && !(tap.config.noPlan)) {\n                // Do nothing until removal of 'noPlan' option.\n            } else if (isPlanRequired(qu.config)) {\n                printPlanLine(tap.expectedCount);\n            } else {\n                printPlanLine(tap.count);\n            }\n        };\n\n        tap.unsubscribe = function unsubscribe () {\n            if (typeof qu.config === 'undefined') {\n                return;\n            }\n            if (arguments.length === 0) {\n                unsubscribeEvents(targetEvents);\n            } else {\n                unsubscribeEvents(slice.apply(arguments));\n            }\n        };\n\n        (function () {\n            var appendCallback = createCallbackAppenderFor(qu),\n                eventName, i, callback;\n            for (i = 0; i < targetEvents.length; i += 1) {\n                eventName = targetEvents[i];\n                callback = appendCallback(qu, tap, eventName);\n                registeredCallbacks[eventName] = callback;\n            }\n        })();\n\n        return tap;\n    }\n\n    qunitTap.qunitTap = function () {\n        throw new Error('[BC BREAK] Since 1.4.0, QUnit-TAP exports single qunitTap function as module.exports. Therefore, require(\"qunit-tap\") returns qunitTap function itself. Please fix your code if you are using Node.js (or any CommonJS env).');\n    };\n\n    // using substack pattern (export single function)\n    return qunitTap;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/qunit-tap/lib/qunit-tap.js\n// module id = 55\n// module chunks = 1","'use strict';\n\n/* global QUnit, qunitTap */\n\nvar qunit_started = false;\n\n/* Always use explicit start */\nQUnit.config.autostart = false;\n\n/*\n * HACK: phantomjs doesn't handle uncaught exceptions as it should if\n * window.onerror is non-null, even when that handler returns false\n * (expecting that the browser default behavior will occur).\n *\n * So remove the qunit window.onerror handler until the tests actually\n * start, and any errors become part of the test suite results.\n */\nvar qunit_onerror = window.onerror;\nwindow.onerror = null;\nQUnit.begin(function() {\n    window.onerror = function(error, file, line) {\n        var ret = false;\n        if (qunit_onerror)\n            ret = qunit_onerror(error, file, line);\n\n        /*\n         * If a global exception happens during an async test\n         * then that test won't be able to call the start() function\n         * to move to the next test, so call it here.\n         */\n        if (QUnit.config.current && QUnit.config.current.async)\n            QUnit.start();\n\n        return ret;\n    };\n});\n\nQUnit.moduleStart(function() {\n    qunit_started = true;\n});\n\nQUnit.done(function() {\n    console.log(\"phantom-tap-done\");\n    window.onerror = null;\n});\n/*\n * Now initialize qunit-tap\n *\n * When not running under tap-phantom this stuff will just show up in\n * the console. We print out a special canary at the end of the tests\n * so that tap-phantom can know when the testing is done.\n *\n * In addition double check for a test file that doesn't properly call\n * QUnit.start() after its done setting up its tests.\n *\n * We also want to insert the current test name into all tap lines.\n */\nvar tap_regex = /^((not )?ok [0-9]+ (- )?)(.*)$/;\nqunitTap(QUnit, function() {\n    if (arguments.length == 1 && QUnit.config.current) {\n        var match = tap_regex.exec(arguments[0]);\n        if (match) {\n            console.log(match[1] + QUnit.config.current.testName + \": \" + match[4]);\n            return;\n        }\n    }\n    console.log.apply(console, arguments);\n});\n\nwindow.setTimeout(function() {\n    if (!qunit_started) {\n        console.log(\"QUnit not started by test\");\n        console.log(\"phantom-tap-error\");\n    }\n}, 20000);\n\nwindow.tests_included = true;\n\nif (module && module.exports)\n    module.exports = QUnit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/qunit-config.js\n// module id = 56\n// module chunks = 1","'use strict';\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/module.js\n// module id = 57\n// module chunks = 1"],"sourceRoot":""}