!function(e) {
    function t(i) {
        if (n[i]) return n[i].exports;
        var o = n[i] = {
            exports: {},
            id: i,
            loaded: !1
        };
        return e[i].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports;
    }
    var n = {};
    return t.m = e, t.c = n, t.p = "", t(0);
}([ function(e, t, n) {
    e.exports = n(5);
}, , , , , function(e, t, n) {
    "use strict";
    !function() {
        function e() {
            function e() {
                var e = i.location.path;
                0 === e.length ? (p.hide(), d.show()) : 1 == e.length ? (d.hide(), p.show("block", e[0])) : 2 == e.length && "mdraid" == e[0] ? (d.hide(), 
                p.show("mdraid", e[1])) : 2 == e.length && "vg" == e[0] ? (d.hide(), p.show("vgroup", e[1])) : (console.warn("not a init location: " + e), 
                i.location = ""), t("body").show();
            }
            function n() {
                var e = !f.state || "running" === f.state, n = o.broken_multipath_present === !0;
                t("#multipath-broken").toggle(n && !e);
            }
            var u, d, p;
            t("body").on("click", "[data-goto-block]", function() {
                i.location.go([ t(this).attr("data-goto-block") ]);
            }), t("body").on("click", "[data-goto-mdraid]", function() {
                i.location.go([ "mdraid", t(this).attr("data-goto-mdraid") ]);
            }), t("body").on("click", "[data-goto-vgroup]", function() {
                i.location.go([ "vg", t(this).attr("data-goto-vgroup") ]);
            }), l.init_arming_zones(t("body")), o.init(function() {
                i.translate(), o.features === !1 ? (t("#unsupported").show(), t("body").show()) : (u = r.init(o), 
                d = a.init(o, u), p = s.init(o, u), t(i).on("locationchanged", e), e());
            });
            var f = l.get_multipathd_service();
            t(f).on("changed", n), t(o).on("changed", n), n(), t("#activate-multipath").on("click", function() {
                i.spawn([ "mpathconf", "--enable", "--with_multipathd", "y" ], {
                    superuser: "try"
                }).fail(function(e) {
                    t("#error-popup-title").text(c("Error")), t("#error-popup-message").text(e.toString()), 
                    t("#error-popup").modal("show");
                });
            });
        }
        var t = n(6), i = n(7), o = n(8), r = n(13), a = n(14), s = n(26), l = n(9);
        n(44), n(45), n(46), n(47), n(48);
        var c = i.gettext;
        t(e);
    }();
}, function(e, t) {
    e.exports = jQuery;
}, function(e, t) {
    e.exports = cockpit;
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e, t) {
            function n(e) {
                a.data = {}, r = [];
                for (var t = 0; t < e.metrics.length; t++) {
                    r[t] = e.metrics[t].instances;
                    for (var n = 0; n < r[t].length; n++) a.data[r[t][n]] = [];
                }
            }
            function i(e) {
                for (var t = !1, n = 0; n < e.length; n++) for (var i = e[n], o = 0; o < i.length; o++) for (var s = i[o], l = 0; l < s.length; l++) null !== s[l] && (t = !0, 
                a.data[r[o][l]][o] = s[l]);
                t && u(a).triggerHandler("changed");
            }
            function o() {
                s.close();
            }
            var r, a = {
                data: {},
                close: o
            }, s = d.channel({
                payload: "metrics1",
                source: t || "internal",
                metrics: e
            });
            return u(s).on("closed", function(e, t) {
                console.log("closed", t);
            }), u(s).on("message", function(e, t) {
                var o = JSON.parse(t);
                o.length ? i(o) : n(o);
            }), a;
        }
        function i(e, t) {
            return g.storaged_client.proxy(v + "." + e, h + "/" + t, {
                watch: !0
            });
        }
        function o(e) {
            return g.storaged_client.proxies(v + "." + e, h, {
                watch: !1
            });
        }
        function r() {
            g.storaged_client.watch({
                path_namespace: h
            }), g.mdraids = o("MDRaid"), g.vgroups = o("VolumeGroup"), g.lvols = o("LogicalVolume"), 
            g.drives = o("Drive"), g.drives_ata = o("Drive.Ata"), g.blocks = o("Block"), g.blocks_ptable = o("PartitionTable"), 
            g.blocks_part = o("Partition"), g.blocks_lvm2 = o("Block.LVM2"), g.blocks_pvol = o("PhysicalVolume"), 
            g.blocks_fsys = o("Filesystem"), g.blocks_crypto = o("Encrypted"), g.blocks_swap = o("Swapspace"), 
            g.iscsi_sessions = o("ISCSI.Session"), g.storaged_jobs = o("Job"), "org.freedesktop.UDisks2" != m ? (g.udisks_client = d.dbus("org.freedesktop.UDisks2"), 
            g.udisks_jobs = g.udisks_client.proxies("org.freedesktop.UDisks2.Job", "/org/freedesktop/UDisks2")) : (g.udisks_client = null, 
            g.udisks_jobs = {});
        }
        function a(e) {
            if (e.Symlinks && e.Symlinks.length) for (var t = 0; t < e.Symlinks.length; t++) if (0 === p.decode_filename(e.Symlinks[t]).indexOf("/dev/disk/by-id/dm-uuid-mpath-")) return !0;
            return !1;
        }
        function s() {
            function e(e, t) {
                g.slashdevs_block[p.decode_filename(t).replace(/^\/dev\//, "")] = e;
            }
            function t(e, t) {
                return p.block_cmp(g.blocks[e.path], g.blocks[t.path]);
            }
            var n, i, o, r, s, l, c, u;
            g.broken_multipath_present = !1, g.drives_multipath_blocks = {}, g.drives_block = {};
            for (n in g.drives) g.drives_multipath_blocks[n] = [];
            for (n in g.blocks) i = g.blocks[n], g.blocks_part[n] || void 0 === g.drives_multipath_blocks[i.Drive] || (a(i) ? g.drives_block[i.Drive] = i : g.drives_multipath_blocks[i.Drive].push(i));
            for (n in g.drives_multipath_blocks) g.drives_block[n] || 1 != g.drives_multipath_blocks[n].length ? (g.drives_multipath_blocks[n].sort(p.block_cmp), 
            g.drives_block[n] || (g.broken_multipath_present = !0)) : (g.drives_block[n] = g.drives_multipath_blocks[n][0], 
            g.drives_multipath_blocks[n] = []);
            g.mdraids_block = {};
            for (n in g.blocks) i = g.blocks[n], "/" != i.MDRaid && (g.mdraids_block[i.MDRaid] = i);
            g.mdraids_members = {};
            for (n in g.mdraids) g.mdraids_members[n] = [];
            for (n in g.blocks) i = g.blocks[n], void 0 !== g.mdraids_members[i.MDRaidMember] && g.mdraids_members[i.MDRaidMember].push(i);
            for (n in g.mdraids_members) g.mdraids_members[n].sort(p.block_cmp);
            g.slashdevs_block = {};
            for (n in g.blocks) for (i = g.blocks[n], e(i, i.Device), e(i, i.PreferredDevice), 
            u = 0; u < i.Symlinks.length; u++) e(i, i.Symlinks[u]);
            g.uuids_mdraid = {};
            for (n in g.mdraids) o = g.mdraids[n], g.uuids_mdraid[o.UUID] = o;
            g.vgnames_vgroup = {};
            for (n in g.vgroups) r = g.vgroups[n], g.vgnames_vgroup[r.Name] = r;
            g.vgroups_pvols = {};
            for (n in g.vgroups) g.vgroups_pvols[n] = [];
            for (n in g.blocks_pvol) s = g.blocks_pvol[n], void 0 !== g.vgroups_pvols[s.VolumeGroup] && g.vgroups_pvols[s.VolumeGroup].push(s);
            for (n in g.vgroups_pvols) g.vgroups_pvols[n].sort(t);
            g.vgroups_lvols = {};
            for (n in g.vgroups) g.vgroups_lvols[n] = [];
            for (n in g.lvols) l = g.lvols[n], void 0 !== g.vgroups_lvols[l.VolumeGroup] && g.vgroups_lvols[l.VolumeGroup].push(l);
            for (n in g.vgroups_lvols) g.vgroups_lvols[n].sort(function(e, t) {
                return e.Name.localeCompare(t.Name);
            });
            g.lvols_block = {};
            for (n in g.blocks_lvm2) g.lvols_block[g.blocks_lvm2[n].LogicalVolume] = g.blocks[n];
            g.lvols_pool_members = {};
            for (n in g.lvols) "pool" == g.lvols[n].Type && (g.lvols_pool_members[n] = []);
            for (n in g.lvols) l = g.lvols[n], void 0 !== g.lvols_pool_members[l.ThinPool] && g.lvols_pool_members[l.ThinPool].push(l);
            for (n in g.lvols_pool_members) g.lvols_pool_members[n].sort(function(e, t) {
                return e.Name.localeCompare(t.Name);
            });
            g.blocks_cleartext = {};
            for (n in g.blocks) i = g.blocks[n], "/" != i.CryptoBackingDevice && (g.blocks_cleartext[i.CryptoBackingDevice] = i);
            g.blocks_partitions = {};
            for (n in g.blocks_ptable) g.blocks_partitions[n] = [];
            for (n in g.blocks_part) c = g.blocks_part[n], void 0 !== g.blocks_partitions[c.Table] && g.blocks_partitions[c.Table].push(c);
            for (n in g.blocks_partitions) g.blocks_partitions[n].sort(function(e, t) {
                return e.Offset - t.Offset;
            });
        }
        function l(e) {
            function t(e, n) {
                var i = e.pop();
                i ? i.wait(function() {
                    t(e, n);
                }) : n();
            }
            function n() {
                return d.spawn([ "date", "+%s" ]).then(function(e) {
                    g.time_offset = 1e3 * parseInt(e, 10) - new Date().getTime();
                });
            }
            function o() {
                return g.manager.valid ? g.manager.EnableModules ? g.manager.EnableModules(!0).then(function() {
                    var e = d.defer();
                    return g.manager_lvm2 = i("Manager.LVM2", "Manager"), g.manager_iscsi = i("Manager.ISCSI.Initiator", "Manager"), 
                    t([ g.manager_lvm2, g.manager_iscsi ], function() {
                        var t = "no" != f.with_storaged_iscsi_sessions && g.manager_iscsi.valid && g.manager_iscsi.SessionsSupported !== !1;
                        e.resolve({
                            lvm2: g.manager_lvm2.valid,
                            iscsi: t
                        });
                    }), e.promise;
                }, function(e) {
                    return console.warn("Can't enable storaged modules", e.toString()), d.resolve({});
                }) : d.resolve({}) : d.resolve(!1);
            }
            t([ g.manager, g.mdraids, g.vgroups, g.drives, g.blocks, g.blocks_ptable, g.blocks_lvm2, g.blocks_fsys ], function() {
                n().then(function() {
                    o().then(function(t) {
                        g.features = t, e();
                    }), u(g.storaged_client).on("notify", function() {
                        s(), u(g).triggerHandler("changed");
                    }), u(g.udisks_jobs).on("added removed changed", function() {
                        u(g).triggerHandler("changed");
                    }), s();
                });
            });
        }
        function c() {
            function e() {
                m = "org.freedesktop.UDisks2", h = "/org/freedesktop/UDisks2", v = "org.freedesktop.UDisks2";
                var e = d.dbus(m), t = e.proxy(v + ".Manager", h + "/Manager", {
                    watch: !0
                });
                return t.wait().then(function() {
                    return t;
                });
            }
            var t = "org.storaged.Storaged", n = "/org/storaged/Storaged", i = "org.storaged.Storaged", o = d.dbus(t), r = o.proxy(i + ".Manager", n + "/Manager", {
                watch: !0
            });
            return r.wait().then(function() {
                return r.valid ? (console.log("Using older 'storaged' API: " + t), m = t, h = n, 
                v = i, r) : e();
            }, e);
        }
        var u = n(6), d = n(7), p = n(9), f = {};
        d.manifests.storage && d.manifests.storage.hacks && (f = d.manifests.storage.hacks);
        var m, h, v, g = {};
        g.time_offset = void 0, g.features = void 0, g.storaged_client = void 0, g.call = function(e, t, n, i, o) {
            return g.storaged_client.call(e, v + "." + t, n, i, o);
        }, g.fsys_sizes = t([ {
            name: "mount.used"
        }, {
            name: "mount.total"
        } ]), g.swap_sizes = t([ {
            name: "swapdev.length"
        }, {
            name: "swapdev.free"
        } ], "direct"), g.blockdev_io = t([ {
            name: "block.device.read",
            derive: "rate"
        }, {
            name: "block.device.written",
            derive: "rate"
        } ]), g.older_than = function(e) {
            return p.compare_versions(this.manager.Version, e) < 0;
        }, g.init = function(e) {
            c().then(function(t) {
                g.storaged_client = t.client, g.manager = t, g.is_old_udisks2 = "org.freedesktop.UDisks2" == m && g.older_than("2.6"), 
                g.is_old_udisks2 && console.log("Using older 'udisks2' implementation: " + t.Version), 
                r(), l(e);
            }, function() {
                g.features = !1, e();
            });
        }, e.exports = g;
    }();
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e, t) {
            var n = [];
            if (e.blocks_cleartext[t] && n.push(e.blocks_cleartext[t].path), e.blocks_ptable[t] && e.blocks_partitions[t].forEach(function(e) {
                e.IsContainer || n.push(e.path);
            }), e.blocks_part[t] && e.blocks_part[t].IsContainer) {
                var i = e.blocks_part[t].Table;
                e.blocks_partitions[i].forEach(function(e) {
                    e.IsContained && n.push(e.path);
                });
            }
            return e.vgroups[t] && e.vgroups_lvols[t].forEach(function(t) {
                e.lvols_block[t.path] && n.push(e.lvols_block[t.path].path);
            }), n;
        }
        function i(e, t, n) {
            var o, r, a, s, l, c, u, d;
            if (n > 0) {
                if (e.nodeType != t.nodeType || e.nodeName != t.nodeName || 1 != e.nodeType && 3 != e.nodeType) return void e.parentNode.replaceChild(t.parentNode.removeChild(t), e);
                if (3 == e.nodeType) return void (e.nodeValue != t.nodeValue && (e.nodeValue = t.nodeValue));
            }
            if (1 == e.nodeType) {
                if (n > 0) {
                    for (d = {}, c = e.attributes, l = c.length - 1; l >= 0; l--) d[c[l].name] = c[l].value;
                    for (l = t.attributes.length - 1; l >= 0; l--) u = t.attributes[l], d[u.name] !== u.value && e.setAttribute(u.name, u.value), 
                    delete d[u.name];
                    for (l in d) e.removeAttribute(l);
                }
                for (o = e.firstChild, r = t.firstChild; ;) {
                    for (a = o, s = r; a && 1 != a.nodeType && 3 != a.nodeType; ) a = a.nextSibling;
                    for (;s && 1 != s.nodeType && 3 != s.nodeType; ) s = s.nextSibling;
                    if (!a && !s) break;
                    a ? s ? (o = a.nextSibling, r = s.nextSibling, i(a, s, (n || 0) + 1)) : (o = a.nextSibling, 
                    r = null, e.removeChild(a)) : (o = null, r = s.nextSibling, e.appendChild(t.removeChild(s)));
                }
            }
        }
        var o = n(6), r = n(7), a = n(10), s = n(12), l = r.gettext, c = r.gettext, u = {};
        u.compare_versions = function(e, t) {
            function n(e) {
                return e.split(".").map(function(e) {
                    return e ? parseInt(e, 10) : 0;
                });
            }
            var i, o = n(e), r = n(t), a = Math.min(o.length, r.length);
            for (i = 0; i < a; i++) if (o[i] != r[i]) return o[i] - r[i];
            return o.length - r.length;
        }, u.hostnamed = r.dbus("org.freedesktop.hostname1").proxy(), u.array_find = function(e, t) {
            for (var n = 0; n < e.length; n++) if (t(e[n])) return e[n];
        }, u.flatten = function(e) {
            return e.length > 0 ? Array.prototype.concat.apply([], e) : [];
        }, u.decode_filename = function(e) {
            return r.utf8_decoder().decode(r.base64_decode(e).slice(0, -1));
        }, u.encode_filename = function(e) {
            return r.base64_encode(r.utf8_encoder().encode(e).concat([ 0 ]));
        }, u.fmt_size = function(e) {
            return r.format_bytes(e, 1024);
        }, u.fmt_size_long = function(e) {
            var t = r.format_bytes(e, 1024), n = r.format_bytes(e, 1e3);
            return t + ", " + n + ", " + e + " " + c("format-bytes", "bytes");
        }, u.fmt_rate = function(e) {
            return r.format_bytes_per_sec(e, 1024);
        }, u.format_temperature = function(e) {
            var t = e - 273.15, n = 9 * t / 5 + 32;
            return t.toFixed(1) + "° C / " + n.toFixed(1) + "° F";
        }, u.format_fsys_usage = function(e, t) {
            var n = "", i = 1024, o = r.format_bytes(t, i, !0);
            return n = " / " + o.join(" "), i = o[1], o = r.format_bytes(e, i, !0), o[0] + n;
        }, u.format_delay = function(e) {
            var t = Math.round(e / 1e3), n = Math.floor(t / 60), i = Math.floor(n / 60);
            t -= 60 * n, n -= 60 * i;
            var o = t + " seconds";
            return n > 0 && (o = n + " minutes, " + o), i > 0 && (o = i + " hours, " + o), o;
        }, u.format_size_and_text = function(e, t) {
            return r.format(l("${size} ${desc}"), {
                size: u.fmt_size(e),
                desc: t
            });
        }, u.validate_lvm2_name = function(e) {
            if ("" === e) return l("Name cannot be empty.");
            if (e.length > 127) return l("Name cannot be longer than 127 characters.");
            var t = e.match(/[^a-zA-Z0-9+._-]/);
            return t ? t[0].search(/\s+/) === -1 ? r.format(l("Name cannot contain the character '$0'."), t[0]) : r.format(l("Name cannot contain whitespace."), t[0]) : void 0;
        }, u.block_name = function(e) {
            return u.decode_filename(e.PreferredDevice);
        }, u.mdraid_name = function(e) {
            if (!e.Name) return "";
            var t = e.Name.split(":");
            return 2 != t.length ? e.Name : void 0 === u.hostnamed.StaticHostname || t[0] == u.hostnamed.StaticHostname ? t[1] : r.format(l("$name (from $host)"), {
                name: t[1],
                host: t[0]
            });
        }, u.lvol_name = function(e) {
            var t;
            return t = l("pool" == e.Type ? "Pool for Thin Logical Volumes" : "/" != e.ThinPool ? "Thin Logical Volume" : "/" != e.Origin ? "Logical Volume (Snapshot)" : "Logical Volume"), 
            a.render('{{Type}} "{{Name}}"', {
                Type: t,
                Name: e.Name
            });
        }, u.drive_name = function(e) {
            var t = [];
            e.Vendor && t.push(e.Vendor), e.Model && t.push(e.Model);
            var n = t.join(" ");
            return e.Serial ? n += " (" + e.Serial + ")" : e.WWN && (n += " (" + e.WWN + ")"), 
            n;
        }, u.get_block_link_target = function(e, t) {
            function n(e) {
                return s && o ? r.format(l("<span>Encrypted Logical Volume of $0</span>"), e) : i && o ? r.format(l("<span>Encrypted Partition of $0</span>"), e) : s ? r.format(l("<span>Logical Volume of $0</span>"), e) : i ? r.format(l("<span>Partition of $0</span>"), e) : o ? r.format(l("<span>Encrypted $0</span>"), e) : e;
            }
            for (var i, o, s; ;) if (e.blocks_part[t] && e.blocks_ptable[e.blocks_part[t].Table]) i = !0, 
            t = e.blocks_part[t].Table; else {
                if (!e.blocks_crypto[t] || !e.blocks[e.blocks_crypto[t].CryptoBackingDevice]) break;
                o = !0, t = e.blocks_crypto[t].CryptoBackingDevice;
            }
            e.blocks_lvm2[t] && e.lvols[e.blocks_lvm2[t].LogicalVolume] && (s = !0);
            var c = e.blocks[t];
            if (c) {
                var d, p, f;
                return e.mdraids[c.MDRaid] ? (d = "mdraid", p = e.mdraids[c.MDRaid].UUID, f = r.format(l("RAID Device $0"), u.mdraid_name(e.mdraids[c.MDRaid]))) : e.blocks_lvm2[t] && e.lvols[e.blocks_lvm2[t].LogicalVolume] && e.vgroups[e.lvols[e.blocks_lvm2[t].LogicalVolume].VolumeGroup] ? (d = "vgroup", 
                p = e.vgroups[e.lvols[e.blocks_lvm2[t].LogicalVolume].VolumeGroup].Name, f = r.format(l("Volume Group $0"), p)) : (d = "block", 
                p = u.block_name(c).replace(/^\/dev\//, ""), f = e.drives[c.Drive] ? u.drive_name(e.drives[c.Drive]) : u.block_name(c)), 
                {
                    type: d,
                    target: p,
                    html: n(a.render('<a data-goto-{{type}}="{{target}}">{{name}}</a>', {
                        type: d,
                        target: p,
                        name: f
                    }))
                };
            }
        }, u.get_partitions = function(e, t) {
            function n(t, o, r) {
                function a(e, t) {
                    t >= 3145728 && h.push({
                        type: "free",
                        start: e,
                        size: t
                    });
                }
                var s, l, c, u, d, p, f = o, m = o + r, h = [];
                for (s = 0; s < i.length; s++) l = e.blocks[i[s].path], c = i[s].Offset, u = i[s].Size, 
                d = i[s].IsContainer, p = i[s].IsContained, null !== l && (0 === t && p || (1 != t || p) && (c < o || c + u > o + r || (a(f, c - f), 
                d ? h.push({
                    type: "container",
                    block: l,
                    size: u,
                    partitions: n(t + 1, c, u)
                }) : h.push({
                    type: "block",
                    block: l
                }), f = c + u)));
                return a(f, m - f), h;
            }
            var i = e.blocks_partitions[t.path];
            return n(0, 0, t.Size);
        }, u.get_available_spaces = function(e) {
            function t(t) {
                function n() {
                    return !!o.IdUsage && !!("LVM2_member" != o.IdType || s && e.vgroups[s.VolumeGroup]);
                }
                function i() {
                    if (!e.drives[o.Drive]) return !1;
                    if (!e.drives_block[o.Drive]) return !0;
                    for (var t = e.drives_multipath_blocks[o.Drive], n = 0; n < t.length; n++) if (t[n] == o) return !0;
                    return !1;
                }
                var o = e.blocks[t], r = e.blocks_ptable[t], a = e.blocks_part[t], s = e.blocks_pvol[t];
                return !(o.HintIgnore || !(o.Size > 0) || n() || i() || r || a && a.IsContainer);
            }
            function n(t) {
                var n = e.blocks[t], i = u.get_block_link_target(e, t), r = o("<div>").html(i.html).text();
                return {
                    type: "block",
                    block: n,
                    size: n.Size,
                    desc: r
                };
            }
            function i(t) {
                var n, i, s, c, d = u.get_partitions(e, t);
                for (n in d) i = d[n], "free" == i.type && (s = u.get_block_link_target(e, t.path), 
                c = o("<div>").html(s.html).text(), a.push({
                    type: "free",
                    block: t,
                    start: i.start,
                    size: i.size,
                    desc: r.format(l("unpartitioned space on $0"), c)
                }));
            }
            var a = Object.keys(e.blocks).filter(t).sort(u.make_block_path_cmp(e)).map(n);
            for (var s in e.blocks_ptable) i(e.blocks[s]);
            return a;
        }, u.available_space_to_option = function(e) {
            return {
                value: e,
                Title: u.format_size_and_text(e.size, e.desc),
                Label: u.block_name(e.block)
            };
        }, u.prepare_available_spaces = function(e, t) {
            function n(t) {
                if ("block" == t.type) return r.resolve(t.block.path);
                if ("free" == t.type) {
                    var n = e.blocks_ptable[t.block.path];
                    return n.CreatePartition(t.start, t.size, "", "", {});
                }
            }
            return r.all(t.map(n));
        }, u.block_cmp = function(e, t) {
            return e.DeviceNumber - t.DeviceNumber;
        }, u.make_block_path_cmp = function(e) {
            return function(t, n) {
                return u.block_cmp(e.blocks[t], e.blocks[n]);
            };
        };
        var d;
        u.get_multipathd_service = function() {
            return d || (d = s.proxy("multipathd")), d;
        }, u.init_arming_zones = function(e) {
            e.on("click", "button.arm-button", function() {
                var e = o(this).hasClass("active");
                o(this).toggleClass("active", !e), o(this).parents(".arming-zone").toggleClass("armed", !e);
            });
        }, u.reset_arming_zone = function(e) {
            var t = e.parents(".arming-zone"), n = t.find(".arm-button");
            n.removeClass("active"), t.removeClass("armed");
        }, u.get_active_usage = function(e, n) {
            function i(n) {
                var o = e.blocks[n], r = e.blocks_fsys[n], a = o && e.mdraids[o.MDRaidMember], s = e.blocks_pvol[n], l = s && e.vgroups[s.VolumeGroup], c = u.flatten(t(e, n).map(i));
                return r && r.MountPoints.length > 0 && c.push({
                    usage: "mounted",
                    block: o,
                    fsys: r
                }), a && c.push({
                    usage: "mdraid-member",
                    block: o,
                    mdraid: a
                }), l && c.push({
                    usage: "pvol",
                    block: o,
                    pvol: s,
                    vgroup: l
                }), c;
            }
            var o = i(n), r = {
                raw: o,
                Teardown: {
                    Mounts: [],
                    MDRaidMembers: [],
                    PhysicalVolumes: []
                },
                Blocking: {
                    Mounts: [],
                    MDRaidMembers: [],
                    PhysicalVolumes: []
                }
            };
            return o.forEach(function(e) {
                var t, n;
                "mounted" == e.usage ? r.Teardown.Mounts.push({
                    Name: u.block_name(e.block),
                    MountPoint: u.decode_filename(e.fsys.MountPoints[0])
                }) : "mdraid-member" == e.usage ? (t = {
                    Name: u.block_name(e.block),
                    MDRaid: u.mdraid_name(e.mdraid)
                }, n = u.array_find(e.mdraid.ActiveDevices, function(t) {
                    return t[0] == e.block.path;
                }), n && n[1] < 0 ? r.Teardown.MDRaidMembers.push(t) : r.Blocking.MDRaidMembers.push(t)) : "pvol" == e.usage && (t = {
                    Name: u.block_name(e.block),
                    VGroup: e.vgroup.Name
                }, e.pvol.FreeSize == e.pvol.Size ? r.Teardown.PhysicalVolumes.push(t) : r.Blocking.PhysicalVolumes.push(t));
            }), r.Teardown.HasMounts = r.Teardown.Mounts.length > 0, r.Teardown.HasMDRaidMembers = r.Teardown.MDRaidMembers.length > 0, 
            r.Teardown.HasPhysicalVolumes = r.Teardown.PhysicalVolumes.length > 0, r.Blocking.HasMounts = r.Blocking.Mounts.length > 0, 
            r.Blocking.HasMDRaidMembers = r.Blocking.MDRaidMembers.length > 0, r.Blocking.HasPhysicalVolumes = r.Blocking.PhysicalVolumes.length > 0, 
            r.Blocking.HasMounts || r.Blocking.HasMDRaidMembers || r.Blocking.HasPhysicalVolumes || (r.Blocking = null), 
            r;
        }, u.teardown_active_usage = function(e, t) {
            function n(e) {
                return r.all(e.map(function(e) {
                    return e.fsys.Unmount({});
                }));
            }
            function i(e) {
                return r.all(e.map(function(e) {
                    return e.mdraid.RemoveDevice(e.block.path, {
                        wipe: {
                            t: "b",
                            v: !0
                        }
                    });
                }));
            }
            function o(t) {
                function n(t) {
                    var n = e.vgroups[t], i = o[t];
                    return i.length == e.vgroups_pvols[t].length ? n.Delete({
                        "tear-down": {
                            t: "b",
                            v: !0
                        }
                    }) : r.all(i.map(function(e) {
                        return n.RemoveDevice(e.path, !0, {});
                    }));
                }
                var i, o = {};
                t.forEach(function(e) {
                    o[e.vgroup.path] || (o[e.vgroup.path] = []), o[e.vgroup.path].push(e.block);
                });
                for (i in o) n(i);
            }
            return r.all([ n(t.raw.filter(function(e) {
                return "mounted" == e.usage;
            })), i(t.raw.filter(function(e) {
                return "mdraid-member" == e.usage;
            })), o(t.raw.filter(function(e) {
                return "pvol" == e.usage;
            })) ]);
        }, o.fn.amend = function(e, t) {
            return this.each(function() {
                var t = o("<div>").html(e);
                i(this, t[0], 0);
            }), this;
        }, u.hide = function(e) {
            var t = document.querySelector("#storage-detail");
            t.setAttribute("hidden", "");
        }, u.show_soon = function e(t, n) {
            var i = document.querySelector(t);
            if (i.hasAttribute("hidden")) {
                var o = i.getAttribute("hidden");
                n ? (i.removeAttribute("hidden"), window.clearTimeout(parseInt(o, 10))) : o || (o = window.setTimeout(function() {
                    e(t, !0);
                }, 2e3), i.setAttribute("hidden", String(o)));
            }
        }, e.exports = u;
    }();
}, function(e, t, n) {
    "use strict";
    function i(e) {
        if (e in a) return a[e];
        var t = document.createElement("div");
        t.innerHTML = e, o.translate(t);
        var n = t.innerHTML;
        return a[e] = n, n;
    }
    var o = n(7), r = n(11), a = {};
    e.exports = o.extend({}, r, {
        render: function(e, t, n) {
            return i(r.render(e, t, n));
        },
        to_html: function(e, t, n, o) {
            return i(r.to_html(e, t, n, o));
        },
        clearCache: function() {
            return a = {}, r.clearCache();
        }
    });
}, function(e, t, n) {
    var i, o;
    /*!
	 * mustache.js - Logic-less {{mustache}} templates with JavaScript
	 * http://github.com/janl/mustache.js
	 */
    !function(r, a) {
        if ("object" == typeof t && t) a(t); else {
            var s = {};
            a(s), i = s, o = "function" == typeof i ? i.call(t, n, t, e) : i, !(void 0 !== o && (e.exports = o));
        }
    }(this, function(e) {
        function t(e, t) {
            return f.call(e, t);
        }
        function n(e) {
            return !t(m, e);
        }
        function i(e) {
            return "function" == typeof e;
        }
        function o(e) {
            return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        }
        function r(e) {
            return String(e).replace(/[&<>"'\/]/g, function(e) {
                return g[e];
            });
        }
        function a(e) {
            if (!v(e) || 2 !== e.length) throw new Error("Invalid tags: " + e);
            return [ new RegExp(o(e[0]) + "\\s*"), new RegExp("\\s*" + o(e[1])) ];
        }
        function s(t, i) {
            function r() {
                if (C && !E) for (;S.length; ) delete T[S.pop()]; else S = [];
                C = !1, E = !1;
            }
            i = i || e.tags, t = t || "", "string" == typeof i && (i = i.split(k));
            for (var s, d, p, f, m, h, v = a(i), g = new u(t), w = [], T = [], S = [], C = !1, E = !1; !g.eos(); ) {
                if (s = g.pos, p = g.scanUntil(v[0])) for (var M = 0, D = p.length; M < D; ++M) f = p.charAt(M), 
                n(f) ? S.push(T.length) : E = !0, T.push([ "text", f, s, s + 1 ]), s += 1, "\n" === f && r();
                if (!g.scan(v[0])) break;
                if (C = !0, d = g.scan(_) || "name", g.scan(b), "=" === d ? (p = g.scanUntil(y), 
                g.scan(y), g.scanUntil(v[1])) : "{" === d ? (p = g.scanUntil(new RegExp("\\s*" + o("}" + i[1]))), 
                g.scan(x), g.scanUntil(v[1]), d = "&") : p = g.scanUntil(v[1]), !g.scan(v[1])) throw new Error("Unclosed tag at " + g.pos);
                if (m = [ d, p, s, g.pos ], T.push(m), "#" === d || "^" === d) w.push(m); else if ("/" === d) {
                    if (h = w.pop(), !h) throw new Error('Unopened section "' + p + '" at ' + s);
                    if (h[1] !== p) throw new Error('Unclosed section "' + h[1] + '" at ' + s);
                } else "name" === d || "{" === d || "&" === d ? E = !0 : "=" === d && (v = a(i = p.split(k)));
            }
            if (h = w.pop()) throw new Error('Unclosed section "' + h[1] + '" at ' + g.pos);
            return c(l(T));
        }
        function l(e) {
            for (var t, n, i = [], o = 0, r = e.length; o < r; ++o) t = e[o], t && ("text" === t[0] && n && "text" === n[0] ? (n[1] += t[1], 
            n[3] = t[3]) : (i.push(t), n = t));
            return i;
        }
        function c(e) {
            for (var t, n, i = [], o = i, r = [], a = 0, s = e.length; a < s; ++a) switch (t = e[a], 
            t[0]) {
              case "#":
              case "^":
                o.push(t), r.push(t), o = t[4] = [];
                break;

              case "/":
                n = r.pop(), n[5] = t[2], o = r.length > 0 ? r[r.length - 1][4] : i;
                break;

              default:
                o.push(t);
            }
            return i;
        }
        function u(e) {
            this.string = e, this.tail = e, this.pos = 0;
        }
        function d(e, t) {
            this.view = null == e ? {} : e, this.cache = {
                ".": this.view
            }, this.parent = t;
        }
        function p() {
            this.cache = {};
        }
        var f = RegExp.prototype.test, m = /\S/, h = Object.prototype.toString, v = Array.isArray || function(e) {
            return "[object Array]" === h.call(e);
        }, g = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;"
        }, b = /\s*/, k = /\s+/, y = /\s*=/, x = /\s*\}/, _ = /#|\^|\/|>|\{|&|=|!/;
        u.prototype.eos = function() {
            return "" === this.tail;
        }, u.prototype.scan = function(e) {
            var t = this.tail.match(e);
            if (t && 0 === t.index) {
                var n = t[0];
                return this.tail = this.tail.substring(n.length), this.pos += n.length, n;
            }
            return "";
        }, u.prototype.scanUntil = function(e) {
            var t, n = this.tail.search(e);
            switch (n) {
              case -1:
                t = this.tail, this.tail = "";
                break;

              case 0:
                t = "";
                break;

              default:
                t = this.tail.substring(0, n), this.tail = this.tail.substring(n);
            }
            return this.pos += t.length, t;
        }, d.prototype.push = function(e) {
            return new d(e, this);
        }, d.prototype.lookup = function(e) {
            var t;
            if (e in this.cache) t = this.cache[e]; else {
                for (var n = this; n; ) {
                    if (e.indexOf(".") > 0) {
                        t = n.view;
                        for (var o = e.split("."), r = 0; null != t && r < o.length; ) t = t[o[r++]];
                    } else t = n.view[e];
                    if (null != t) break;
                    n = n.parent;
                }
                this.cache[e] = t;
            }
            return i(t) && (t = t.call(this.view)), t;
        }, p.prototype.clearCache = function() {
            this.cache = {};
        }, p.prototype.parse = function(e, t) {
            var n = this.cache, i = n[e];
            return null == i && (i = n[e] = s(e, t)), i;
        }, p.prototype.render = function(e, t, n) {
            var i = this.parse(e), o = t instanceof d ? t : new d(t);
            return this.renderTokens(i, o, n, e);
        }, p.prototype.renderTokens = function(t, n, o, r) {
            function a(e) {
                return u.render(e, n, o);
            }
            for (var s, l, c = "", u = this, d = 0, p = t.length; d < p; ++d) switch (s = t[d], 
            s[0]) {
              case "#":
                if (l = n.lookup(s[1]), !l) continue;
                if (v(l)) for (var f = 0, m = l.length; f < m; ++f) c += this.renderTokens(s[4], n.push(l[f]), o, r); else if ("object" == typeof l || "string" == typeof l) c += this.renderTokens(s[4], n.push(l), o, r); else if (i(l)) {
                    if ("string" != typeof r) throw new Error("Cannot use higher-order sections without the original template");
                    l = l.call(n.view, r.slice(s[3], s[5]), a), null != l && (c += l);
                } else c += this.renderTokens(s[4], n, o, r);
                break;

              case "^":
                l = n.lookup(s[1]), (!l || v(l) && 0 === l.length) && (c += this.renderTokens(s[4], n, o, r));
                break;

              case ">":
                if (!o) continue;
                l = i(o) ? o(s[1]) : o[s[1]], null != l && (c += this.renderTokens(this.parse(l), n, o, l));
                break;

              case "&":
                l = n.lookup(s[1]), null != l && (c += l);
                break;

              case "name":
                l = n.lookup(s[1]), null != l && (c += e.escape(l));
                break;

              case "text":
                c += s[1];
            }
            return c;
        }, e.name = "mustache.js", e.version = "0.8.1", e.tags = [ "{{", "}}" ];
        var w = new p();
        e.clearCache = function() {
            return w.clearCache();
        }, e.parse = function(e, t) {
            return w.parse(e, t);
        }, e.render = function(e, t, n) {
            return w.render(e, t, n);
        }, e.to_html = function(t, n, o, r) {
            var a = e.render(t, n, o);
            return i(r) ? void r(a) : a;
        }, e.escape = r, e.Scanner = u, e.Context = d, e.Writer = p;
    });
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e, t) {
            e.wait(function() {
                e.valid && t();
            });
        }
        function i(e) {
            a || (r = s.dbus("org.freedesktop.systemd1", {
                superuser: "try"
            }), a = r.proxy("org.freedesktop.systemd1.Manager", "/org/freedesktop/systemd1"), 
            t(a, function() {
                a.Subscribe().fail(function(e) {
                    "org.freedesktop.systemd1.AlreadySubscribed" != e.name && "org.freedesktop.DBus.Error.FileExists" != e.name && console.warn("Subscribing to systemd signals failed", e);
                });
            })), t(a, e);
        }
        function o(e) {
            function n() {
                y.exists = "not-found" != x.LoadState || "inactive" != x.ActiveState, "activating" == x.ActiveState ? y.state = "starting" : "deactivating" == x.ActiveState ? y.state = "stopping" : "active" == x.ActiveState || "reloading" == x.ActiveState ? y.state = "running" : "failed" == x.ActiveState ? y.state = "failed" : "inactive" == x.ActiveState && y.exists ? y.state = "stopped" : y.state = void 0, 
                "enabled" == x.UnitFileState || "linked" == x.UnitFileState ? y.enabled = !0 : "disabled" == x.UnitFileState || "masked" == x.UnitFileState ? y.enabled = !1 : y.enabled = void 0, 
                y.unit = x, y.dispatchEvent("changed"), w.resolve();
            }
            function o() {
                y.service = _, y.dispatchEvent("changed");
            }
            function l() {
                function e(e, t) {
                    r.call(e, "org.freedesktop.DBus.Properties", "GetAll", [ t ]).fail(function(e) {
                        console.log(e);
                    }).done(function(e) {
                        var n = {};
                        for (var i in e[0]) n[i] = e[0][i].v;
                        var o = {};
                        o[t] = n;
                        var a = {};
                        a[x.path] = o, r.notify(a);
                    });
                }
                x && _ && (e(x.path, "org.freedesktop.systemd1.Unit"), e(_.path, "org.freedesktop.systemd1.Service"));
            }
            function c(t, n, i, o, r) {
                o == e && l();
            }
            function u(e) {
                w.promise.then(e);
            }
            function d(e, t) {
                return r.call("/org/freedesktop/systemd1", "org.freedesktop.systemd1.Manager", e, t);
            }
            function p(e, t) {
                var n = s.defer();
                return d(e, t).done(function(e) {
                    var t = e[0];
                    T[t] = n;
                }).fail(function(e) {
                    n.reject(e);
                }), n.promise();
            }
            function f(e, t) {
                return d(e, t).then(function() {
                    return d("Reload", []);
                });
            }
            function m() {
                return p("StartUnit", [ e, "replace" ]);
            }
            function h() {
                return p("StopUnit", [ e, "replace" ]);
            }
            function v() {
                return p("RestartUnit", [ e, "replace" ]);
            }
            function g() {
                return p("TryRestartUnit", [ e, "replace" ]);
            }
            function b() {
                return f("EnableUnitFiles", [ [ e ], !1, !1 ]);
            }
            function k() {
                return f("DisableUnitFiles", [ [ e ], !1 ]);
            }
            var y = {
                exists: null,
                state: null,
                enabled: null,
                wait: u,
                start: m,
                stop: h,
                restart: v,
                tryRestart: g,
                enable: b,
                disable: k
            };
            s.event_target(y);
            var x, _, w = s.defer();
            e.indexOf(".") == -1 && (e += ".service"), i(function() {
                a.LoadUnit(e).done(function(e) {
                    x = r.proxy("org.freedesktop.systemd1.Unit", e), x.addEventListener("changed", n), 
                    t(x, n), _ = r.proxy("org.freedesktop.systemd1.Service", e), _.addEventListener("changed", o), 
                    t(_, o);
                }).fail(function(e) {
                    y.exists = !1, y.dispatchEvent("changed");
                });
            }), a.addEventListener("Reloading", function(e, t) {
                t || l();
            }), a.addEventListener("JobNew", c), a.addEventListener("JobRemoved", c);
            var T = {};
            return a.addEventListener("JobRemoved", function(e, t, n, i, o) {
                T[n] && ("done" == o ? T[n].resolve() : T[n].reject(o), delete T[n]);
            }), y;
        }
        var r, a, s = n(7);
        e.exports = {
            proxy: o
        };
    }();
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e) {
            function t(t) {
                return e.udisks_client ? t.replace("/org/freedesktop/UDisks2/", "/org/storaged/Storaged/") : t;
            }
            function n(n) {
                function o(t) {
                    return e.blocks_part[t] && e.blocks[e.blocks_part[t].Table] ? e.blocks_part[t].Table : e.blocks_crypto[t] && e.blocks[e.blocks_crypto[t].CryptoBackingDevice] ? e.blocks_crypto[t].CryptoBackingDevice : e.blocks[t] && e.drives[e.blocks[t].Drive] ? e.blocks[t].Drive : e.blocks[t] && e.mdraids[e.blocks[t].MDRaid] ? e.blocks[t].MDRaid : e.blocks_lvm2[t] && e.lvols[e.blocks_lvm2[t].LogicalVolume] ? e.blocks_lvm2[t].LogicalVolume : e.lvols[t] && e.vgroups[e.lvols[t].VolumeGroup] ? e.lvols[t].VolumeGroup : void 0;
                }
                function r(e) {
                    i(n).find('[data-job-object="' + e + '"]').css("visibility", "visible");
                }
                function a(e) {
                    r(e);
                    var t = o(e);
                    t && a(t);
                }
                function s(e) {
                    if (e && e.length) for (var t = 0; t < e.length; t++) a(e[t]);
                }
                var l;
                i(n).find("[data-job-object]").css("visibility", "hidden");
                for (l in e.storaged_jobs) s(e.storaged_jobs[l].Objects);
                for (l in e.udisks_jobs) s(e.udisks_jobs[l].Objects.map(t));
            }
            function l() {
                function n(n) {
                    var i = p[n.Operation];
                    i || (i = s("Operation '$operation' on $target"));
                    var r = n.Objects.map(function(n) {
                        var i = t(n);
                        return e.blocks[i] ? a.block_name(e.blocks[i]) : e.mdraids[i] ? a.mdraid_name(e.mdraids[i]) : e.vgroups[i] ? e.vgroups[i].Name : e.lvols[i] ? a.lvol_name(e.lvols[i]) : s("unknown target");
                    }).join(", ");
                    return o.format(i, {
                        operation: n.Operation,
                        target: r
                    });
                }
                function i(t) {
                    return e.storaged_jobs[t] || e.udisks_jobs[t];
                }
                function l(e, t) {
                    return i(e).StartTime - i(t).StartTime;
                }
                function u(e) {
                    var t = i(e), n = f - t.StartTime / 1e3;
                    return n >= 2e3 || t.ExpectedEndTime > 0 && t.ExpectedEndTime / 1e3 - f >= 2e3;
                }
                function d(e) {
                    var t = i(e), o = null;
                    if (t.ExpectedEndTime > 0) {
                        var r = t.ExpectedEndTime / 1e3 - f;
                        r > 0 && (o = a.format_delay(r));
                    }
                    return {
                        path: e,
                        Description: n(t),
                        Progress: t.ProgressValid && (100 * t.Progress).toFixed() + "%",
                        RemainingTime: o,
                        Cancelable: t.Cancelable
                    };
                }
                var p = {
                    "ata-smart-selftest": s("SMART self-test of $target"),
                    "drive-eject": s("Ejecting $target"),
                    "encrypted-unlock": s("Unlocking $target"),
                    "encrypted-lock": s("Locking $target"),
                    "encrypted-modify": s("Modifying $target"),
                    "swapspace-start": s("Starting swapspace $target"),
                    "swapspace-stop": s("Stopping swapspace $target"),
                    "filesystem-mount": s("Mounting $target"),
                    "filesystem-unmount": s("Unmounting $target"),
                    "filesystem-modify": s("Modifying $target"),
                    "format-erase": s("Erasing $target"),
                    "format-mkfs": s("Creating filesystem on $target"),
                    "loop-setup": s("Setting up loop device $target"),
                    "partition-modify": s("Modifying $target"),
                    "partition-delete": s("Deleting $target"),
                    "partition-create": s("Creating partition $target"),
                    cleanup: s("Cleaning up for $target"),
                    "ata-secure-erase": s("Securely erasing $target"),
                    "ata-enhanced-secure-erase": s("Very securely erasing $target"),
                    "md-raid-stop": s("Stopping RAID Device $target"),
                    "md-raid-start": s("Starting RAID Device $target"),
                    "md-raid-fault-device": s("Marking $target as faulty"),
                    "md-raid-remove-device": s("Removing $target from RAID Device"),
                    "md-raid-create": s("Creating RAID Device $target"),
                    "mdraid-check-job": s("Checking RAID Device $target"),
                    "mdraid-repair-job": s("Checking and Repairing RAID Device $target"),
                    "mdraid-recover-job": s("Recovering RAID Device $target"),
                    "mdraid-sync-job": s("Synchronizing RAID Device $target"),
                    "lvm-lvol-delete": s("Deleting $target"),
                    "lvm-lvol-activate": s("Activating $target"),
                    "lvm-lvol-deactivate": s("Deactivating $target"),
                    "lvm-lvol-snapshot": s("Creating snapshot of $target"),
                    "lvm-vg-create": s("Creating volume group $target"),
                    "lvm-vg-delete": s("Deleting volume group $target"),
                    "lvm-vg-add-device": s("Adding physical volume to $target"),
                    "lvm-vg-rem-device": s("Removing physical volume from $target"),
                    "lvm-vg-empty-device": s("Emptying $target"),
                    "lvm-vg-create-volume": s("Creating logical volume $target"),
                    "lvm-vg-rename": s("Renaming $target"),
                    "lvm-vg-resize": s("Resizing $target")
                }, f = new Date().getTime() + e.time_offset, m = Object.keys(e.storaged_jobs).concat(Object.keys(e.udisks_jobs)).filter(u).sort(l).map(d);
                return r.render(c, {
                    Jobs: m,
                    HasJobs: m.length > 0
                });
            }
            var c = i("#jobs-tmpl").html();
            return r.parse(c), i(e.storaged_jobs).on("added removed changed", function() {
                n("body");
            }), i(e.udisks_jobs).on("added removed changed", function() {
                n("body");
            }), {
                update: n,
                render: l
            };
        }
        var i = n(6), o = n(7), r = n(10), a = n(9), s = o.gettext;
        e.exports = {
            init: t
        };
    }();
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e, t) {
            function n() {
                function n(t, n) {
                    return e.mdraids[t].Name.localeCompare(e.mdraids[n].Name);
                }
                function o(t) {
                    var n = e.mdraids[t];
                    return {
                        path: t,
                        UUID: n.UUID,
                        Size: l.fmt_size(n.Size),
                        Name: l.mdraid_name(n)
                    };
                }
                var a = Object.keys(e.mdraids).sort(n).map(o);
                i("#mdraids").amend(r.render(N, {
                    MDRaids: a,
                    HasMDRaids: a.length > 0
                })), u.update(), t.update("#mdraids");
            }
            function f() {
                function n(t, n) {
                    return e.vgroups[t].Name.localeCompare(e.vgroups[n].Name);
                }
                function o(t) {
                    var n = e.vgroups[t];
                    return {
                        path: t,
                        Size: l.fmt_size(n.Size),
                        Name: n.Name
                    };
                }
                var a = Object.keys(e.vgroups).sort(n).map(o);
                i("#vgroups").amend(r.render(A, {
                    VGroups: a,
                    HasVGroups: a.length > 0
                })), u.update(), t.update("#vgroups");
            }
            function m() {
                function t(e, t) {
                    return e.Name.localeCompare(t.Name);
                }
                function n(t) {
                    var n = e.iscsi_sessions[t];
                    return {
                        path: t,
                        Name: n.data.target_name || "",
                        Tpgt: n.data.tpgt,
                        Address: n.data.persistent_address,
                        Port: n.data.persistent_port
                    };
                }
                var o = Object.keys(e.iscsi_sessions).map(n).sort(t);
                i("#iscsi-sessions").amend(r.render(P, {
                    Sessions: o,
                    HasSessions: o.length > 0
                })), u.update();
            }
            function h() {
                function n(t, n) {
                    return e.drives[t].SortKey.localeCompare(e.drives[n].SortKey);
                }
                function o(e) {
                    if (e.MediaRemovable || e.Media) {
                        for (var t = 0; t < e.MediaCompatibility.length; t++) if (0 === e.MediaCompatibility[t].indexOf("optical")) return "optical";
                        return "removable";
                    }
                    return 0 === e.RotationRate ? "ssd" : "hdd";
                }
                function a(t) {
                    var n = e.drives[t], i = e.drives_block[t];
                    if (i || (i = e.drives_multipath_blocks[t][0]), i) {
                        var r, a = l.decode_filename(i.Device).replace(/^\/dev\//, ""), s = e.blockdev_io.data[a], c = l.drive_name(n), u = o(n), d = l.fmt_size(n.Size);
                        return r = "hdd" == u ? d + " " + p("storage", "Hard Disk") : "ssd" == u ? d + " " + p("storage", "Solid-State Disk") : "removable" == u ? 0 === n.Size ? p("storage", "Removable Drive") : d + " " + p("storage", "Removable Drive") : "optical" == u ? p("storage", "Optical Drive") : 0 === n.Size ? p("storage", "Drive") : d + " " + p("storage", "Drive"), 
                        {
                            path: t,
                            dev: a,
                            Name: c,
                            Classification: u,
                            Description: r,
                            ReadRate: s && l.fmt_rate(s[0]),
                            WriteRate: s && l.fmt_rate(s[1]),
                            Highlight: a == R
                        };
                    }
                }
                var s = Object.keys(e.drives).sort(n).map(a);
                i("#drives").amend(r.render(I, {
                    Drives: s,
                    HasDrives: s.length > 0
                })), u.update(), t.update("#drives");
                for (var c in s) s[c] && s[c].dev && (D.add_instance(s[c].dev), z.add_instance(s[c].dev));
            }
            function v() {
                function t(t) {
                    var n = e.blocks[t], i = e.blocks_part[t], o = e.blocks_lvm2[t];
                    return !(i && "/" != i.Table || "/" != n.Drive || "/" != n.CryptoBackingDevice || "/" != n.MDRaid || o && "/" != o.LogicalVolume || n.HintIgnore || !(n.Size > 0));
                }
                function n(t) {
                    var n = e.blocks[t], i = l.block_name(n);
                    return {
                        path: t,
                        dev: i.replace(/^\/dev\//, ""),
                        Name: i,
                        Description: o.format(d("$0 Block Device"), l.fmt_size(n.Size))
                    };
                }
                var a = Object.keys(e.blocks).filter(t).sort(l.make_block_path_cmp(e)).map(n);
                i("#others").amend(r.render(O, {
                    Others: a,
                    HasOthers: a.length > 0
                })), u.update();
            }
            function g() {
                function n(t) {
                    var n = e.blocks[t], i = e.blocks_fsys[t];
                    return i && "filesystem" == n.IdUsage && "mpath_member" != n.IdType && !n.HintIgnore;
                }
                function o(t, n) {
                    return e.blocks[t].IdLabel.localeCompare(e.blocks[n]).IdLabel;
                }
                function a(t) {
                    for (var n, i = e.blocks[t], o = e.blocks_fsys[t], r = o.MountPoints.map(l.decode_filename), a = 0; a < r.length && !n; a++) n = e.fsys_sizes.data[r[a]];
                    return {
                        LinkTarget: l.get_block_link_target(e, t),
                        Name: i.IdLabel || l.block_name(i),
                        DeviceSize: l.fmt_size(i.Size),
                        UsageText: n ? l.format_fsys_usage(n[0], n[1]) : null,
                        UsagePercent: n ? n[0] / n[1] * 100 : null,
                        UsageCritical: n && n[0] > .95 * n[1],
                        MountPoints: o.MountPoints.map(l.decode_filename),
                        IsMounted: o.MountPoints.length > 0
                    };
                }
                var s = Object.keys(e.blocks).filter(n).sort(o).map(a);
                i("#mounts").amend(r.render(F, {
                    Mounts: s,
                    HasMounts: s.length > 0
                })), i("#mounts [data-width]").each(function() {
                    i(this).css("width", i(this).attr("data-width"));
                }), u.update(), t.update("#mounts");
            }
            function b() {
                i("#jobs").amend(t.render()), u.update();
            }
            function k(e) {
                return function(t) {
                    var n = t.getAxes();
                    n.yaxis.datamax < 1e5 ? n.yaxis.options.max = 1e5 : n.yaxis.options.max = null, 
                    n.yaxis.options.min = 0, i(e).text(a.bytes_per_sec_tick_unit(n.yaxis));
                };
            }
            function y(e, t) {
                R = t, h();
            }
            function x() {
                c.open({
                    Title: d("Add iSCSI Portal"),
                    Fields: [ {
                        TextInput: "address",
                        Title: d("Server Address"),
                        validate: function(e) {
                            if ("" === e) return d("Server address cannot be empty.");
                        }
                    }, {
                        TextInput: "username",
                        Title: d("Username")
                    }, {
                        PassInput: "password",
                        Title: d("Password")
                    } ],
                    Action: {
                        Title: d("Next"),
                        action: function(t, n) {
                            var o = i.Deferred(), r = {};
                            (t.username || t.password) && (r.username = {
                                t: "s",
                                v: t.username
                            }, r.password = {
                                t: "s",
                                v: t.password
                            });
                            var a = !1;
                            e.manager_iscsi.call("DiscoverSendTargets", [ t.address, 0, r ]).done(function(e) {
                                a || (o.resolve(), w(t, e[0]));
                            }).fail(function(e) {
                                a || o.reject(e);
                            });
                            var s = o.promise();
                            return s.cancel = function() {
                                a = !0, o.reject();
                            }, s;
                        },
                        failure_filter: function(e, t) {
                            return t ? t.message.indexOf("initiator failed authorization") != -1 ? [ {
                                field: "username",
                                message: null
                            }, {
                                field: "password",
                                message: d("Invalid username or password")
                            } ] : t.message.indexOf("cannot resolve host name") != -1 ? {
                                field: "address",
                                message: d("Unknown host name")
                            } : t.message.indexOf("connection login retries") != -1 ? {
                                field: "address",
                                message: d("Unable to reach server")
                            } : t : t;
                        }
                    }
                });
            }
            function _(t, n) {
                var i = {
                    "node.startup": {
                        t: "s",
                        v: "automatic"
                    }
                };
                return (n.username || n.password) && (i.username = {
                    t: "s",
                    v: n.username
                }, i.password = {
                    t: "s",
                    v: n.password
                }), e.manager_iscsi.call("Login", [ t[0], t[1], t[2], t[3], t[4], i ]);
            }
            function w(e, t) {
                var n = t.map(function(e) {
                    return {
                        Columns: [ e[0], e[2], e[3] ],
                        value: e
                    };
                });
                c.open({
                    Title: o.format(d("Available targets on $0"), e.address),
                    Fields: [ {
                        SelectRow: "target",
                        Title: d("Targets"),
                        Headers: [ d("Name"), d("Address"), d("Port") ],
                        Rows: n
                    } ],
                    Action: {
                        Title: d("Add"),
                        action: function(t) {
                            return _(t.target, e);
                        },
                        failure_filter: function(t, n) {
                            return n.message.indexOf("authorization") == -1 ? n : void T(e, t);
                        }
                    }
                });
            }
            function T(e, t) {
                c.open({
                    Title: d("Authentication required"),
                    Fields: [ {
                        TextInput: "username",
                        Title: d("Username"),
                        Value: e.username
                    }, {
                        PassInput: "password",
                        Title: d("Password"),
                        Value: e.password
                    } ],
                    Action: {
                        Title: d("Add"),
                        action: function(e) {
                            return _(t.target, e);
                        },
                        failure_filter: function(e, t) {
                            return t.message.indexOf("authorization") != -1 ? [ {
                                field: "username",
                                message: null
                            }, {
                                field: "password",
                                message: d("Invalid username or password")
                            } ] : t;
                        }
                    }
                });
            }
            function S(t) {
                var n = e.iscsi_sessions[t];
                if (n) {
                    var o = {
                        "node.startup": {
                            t: "s",
                            v: "manual"
                        }
                    };
                    n.Logout(o).fail(function(e) {
                        i("#error-popup-title").text(d("Error")), i("#error-popup-message").text(e.toString()), 
                        i("#error-popup").modal("show");
                    });
                }
            }
            function C() {
                e.manager_iscsi.call("GetInitiatorName").done(function(t) {
                    var n = t[0];
                    c.open({
                        Title: d("Change iSCSI Initiator Name"),
                        Fields: [ {
                            TextInput: "name",
                            Title: d("Name"),
                            Value: n
                        } ],
                        Action: {
                            Title: d("Change"),
                            action: function(t) {
                                return e.manager_iscsi.call("SetInitiatorName", [ t.name, {} ]);
                            }
                        }
                    });
                });
            }
            function E() {
                i("#storage").hide();
            }
            function M() {
                i("#storage").show(), L.resize(), j.resize();
            }
            var D, z;
            i("#vgroups").toggle(e.features.lvm2), i("#iscsi-sessions").toggle(e.features.iscsi);
            var N = i("#mdraids-tmpl").html();
            r.parse(N), i(e).on("changed", n);
            var A = i("#vgroups-tmpl").html();
            r.parse(A), i(e).on("changed", f);
            var P = i("#iscsi-sessions-tmpl").html();
            r.parse(P), i(e).on("changed", m);
            var I = i("#drives-tmpl").html();
            r.parse(I);
            var R;
            i(e).on("changed", h), i(e.blockdev_io).on("changed", h);
            var O = i("#others-tmpl").html();
            r.parse(O), i(e).on("changed", v);
            var F = i("#mounts-tmpl").html();
            r.parse(F), i(e).on("changed", g), i(e.fsys_sizes).on("changed", g), i(e).on("changed", b);
            var U = {
                direct: "disk.dev.read_bytes",
                internal: "block.device.read",
                units: "bytes",
                derive: "rate",
                threshold: 1e3
            }, V = a.plot_simple_template();
            i.extend(V.yaxis, {
                ticks: a.memory_ticks,
                tickFormatter: a.format_bytes_per_sec_tick_no_unit
            }), i.extend(V.grid, {
                hoverable: !0,
                autoHighlight: !1
            }), V.setup_hook = k("#storage-reading-unit");
            var L = a.plot(i("#storage-reading-graph"), 300);
            L.set_options(V), D = L.add_metrics_stacked_instances_series(U, {}), L.start_walking(), 
            i(D).on("hover", y);
            var B = {
                direct: "disk.dev.write_bytes",
                internal: "block.device.written",
                units: "bytes",
                derive: "rate",
                threshold: 1e3
            }, $ = a.plot_simple_template();
            i.extend($.yaxis, {
                ticks: a.memory_ticks,
                tickFormatter: a.format_bytes_per_sec_tick_no_unit
            }), i.extend($.grid, {
                hoverable: !0,
                autoHighlight: !1
            }), $.setup_hook = k("#storage-writing-unit");
            var j = a.plot(i("#storage-writing-graph"), 300);
            j.set_options($), z = j.add_metrics_stacked_instances_series(B, {}), j.start_walking(), 
            i(z).on("hover", y), i(window).on("resize", function() {
                L.resize(), j.resize();
            });
            var W = a.setup_plot_controls(i("#storage"), i("#storage-graph-toolbar"));
            return W.reset([ L, j ]), n(), f(), m(), h(), v(), g(), b(), i("#storage-log").append(s.logbox([ "_SYSTEMD_UNIT=storaged.service", "+", "_SYSTEMD_UNIT=udisks2.service", "+", "_SYSTEMD_UNIT=dm-event.service", "+", "_SYSTEMD_UNIT=smartd.service", "+", "_SYSTEMD_UNIT=multipathd.service" ], 10)), 
            i("#create-mdraid").on("click", function() {
                c.open({
                    Title: d("Create RAID Device"),
                    Fields: [ {
                        TextInput: "name",
                        Title: d("Name")
                    }, {
                        SelectOne: "level",
                        Title: d("RAID Level"),
                        Options: [ {
                            value: "raid0",
                            Title: d("RAID 0 (Stripe)")
                        }, {
                            value: "raid1",
                            Title: d("RAID 1 (Mirror)")
                        }, {
                            value: "raid4",
                            Title: d("RAID 4 (Dedicated Parity)")
                        }, {
                            value: "raid5",
                            Title: d("RAID 5 (Distributed Parity)"),
                            selected: !0
                        }, {
                            value: "raid6",
                            Title: d("RAID 6 (Double Distributed Parity)")
                        }, {
                            value: "raid10",
                            Title: d("RAID 10 (Stripe of Mirrors)")
                        } ]
                    }, {
                        SelectOne: "chunk",
                        Title: d("Chunk Size"),
                        Options: [ {
                            value: "4",
                            Title: d("4 KiB")
                        }, {
                            value: "8",
                            Title: d("8 KiB")
                        }, {
                            value: "16",
                            Title: d("16 KiB")
                        }, {
                            value: "32",
                            Title: d("32 KiB")
                        }, {
                            value: "64",
                            Title: d("64 KiB")
                        }, {
                            value: "128",
                            Title: d("128 KiB")
                        }, {
                            value: "512",
                            Title: d("512 KiB"),
                            selected: !0
                        }, {
                            value: "1024",
                            Title: d("1 MiB")
                        }, {
                            value: "2048",
                            Title: d("2 MiB")
                        } ],
                        visible: function(e) {
                            return "raid1" != e.level;
                        }
                    }, {
                        SelectMany: "disks",
                        Title: d("Disks"),
                        Options: l.get_available_spaces(e).map(l.available_space_to_option),
                        EmptyWarning: d("No disks are available."),
                        validate: function(e, t) {
                            var n = "raid6" == t.level ? 4 : 2;
                            if (e.length < n) return o.format(d("At least $0 disks are needed."), n);
                        }
                    } ],
                    Action: {
                        Title: d("Create"),
                        action: function(t) {
                            return l.prepare_available_spaces(e, t.disks).then(function() {
                                var n = Array.prototype.slice.call(arguments);
                                return e.manager.MDRaidCreate(n, t.level, t.name, 1024 * (t.chunk || 0), {});
                            });
                        }
                    }
                });
            }), i("#create-volume-group").on("click", function() {
                function t(t) {
                    for (var n in e.vgroups) if (e.vgroups[n].Name == t) return e.vgroups[n];
                    return null;
                }
                for (var n, i = 0; i < 1e3 && (n = "vgroup" + i.toFixed(), t(n)); i++) ;
                c.open({
                    Title: d("Create Volume Group"),
                    Fields: [ {
                        TextInput: "name",
                        Title: d("Name"),
                        Value: n,
                        validate: l.validate_lvm2_name
                    }, {
                        SelectMany: "disks",
                        Title: d("Disks"),
                        Options: l.get_available_spaces(e).map(l.available_space_to_option),
                        EmptyWarning: d("No disks are available."),
                        validate: function(e) {
                            if (0 === e.length) return d("At least one disk is needed.");
                        }
                    } ],
                    Action: {
                        Title: d("Create"),
                        action: function(t, n) {
                            return l.prepare_available_spaces(e, t.disks).then(function() {
                                var n = Array.prototype.slice.call(arguments);
                                return e.manager_lvm2.VolumeGroupCreate(t.name, n, {});
                            });
                        }
                    }
                });
            }), i("#storage").on("click", '[data-action="add-iscsi-portal"]', function() {
                x();
            }), i("#storage").on("click", '[data-action="edit-iscsi"]', function() {
                C();
            }), i("#storage").on("click", "[data-iscsi-session-remove]", function() {
                l.reset_arming_zone(i(this)), S(i(this).attr("data-iscsi-session-remove"));
            }), {
                show: M,
                hide: E
            };
        }
        var i = n(6), o = n(7), r = n(10), a = n(15), s = n(19), l = n(9), c = n(23), u = n(25), d = o.gettext, p = o.gettext;
        e.exports = {
            init: t
        };
    }();
}, function(e, t, n) {
    "use strict";
    function i(e, t, n, i) {
        function r() {
            b.width(g.width()), b.height(g.height());
        }
        function a(e) {
            f ? (f.getAxes().yaxis.options.max = e, u()) : h.yaxis.max = e;
        }
        function s() {
            v = !0, l();
        }
        function l() {
            v && 0 !== g.width() && 0 !== g.height() && (f ? d() : (r(), f = o.plot(b, n, h)));
        }
        function c() {
            v = !1;
        }
        function u() {
            f && v && (f.setData(n), i.setup_hook && i.setup_hook(f), f.setupGrid(), f.draw());
        }
        function d() {
            f && v && (r(), b.width() > 0 && b.height() > 0 && f.resize(), u());
        }
        function p() {
            o(m).trigger("destroyed"), o(window).off("resize", d), o(g).empty(), f = null;
        }
        var f, m, h = {
            colors: [ "#0099d3" ],
            legend: {
                show: !1
            },
            series: {
                shadowSize: 0,
                lines: {
                    lineWidth: 0,
                    fill: 1
                }
            },
            xaxis: {
                tickFormatter: function() {
                    return "";
                }
            },
            yaxis: {
                tickFormatter: function() {
                    return "";
                }
            },
            points: {
                radius: 0
            },
            grid: {
                borderWidth: 1,
                aboveData: !0,
                color: "black",
                borderColor: o.color.parse("black").scale("a", .22).toString(),
                labelMargin: 0
            }
        }, v = !1;
        o.extend(!0, h, i);
        var g = o(e), b = o("<div/>");
        return g.empty(), g.append(b), o(t).on("notify", u), o(window).on("resize", d), 
        l(), m = {
            start: s,
            stop: c,
            resize: d,
            element: b[0],
            set_yaxis_max: a,
            destroy: p
        };
    }
    var o = n(6), r = n(7);
    n(16), n(17), n(18);
    var a = {}, s = r.gettext;
    a.plot = function(e, t, n) {
        function i() {
            if (0 !== e.height() && 0 !== e.width()) {
                null === M && (M = o.plot(e, E, T)), M.setData(E);
                var t = M.getAxes();
                t.xaxis.options.min = w.beg * _, t.xaxis.options.max = (w.end - 2) * _, T.setup_hook && T.setup_hook(M), 
                t.xaxis.show = !0, t.xaxis.used = !0, t.yaxis.show = !0, t.yaxis.used = !0, M.setupGrid(), 
                M.draw();
            }
        }
        function a() {
            D || (D = !0, window.setTimeout(function() {
                D = !1, i();
            }, 0));
        }
        function s() {
            w.walk();
        }
        function l() {
            w.move(w.beg, w.end);
        }
        function c(e, t) {
            M && M.clearSelection(!0), _ = 1e3 * Math.ceil(e / 1e3);
            var n;
            n = void 0 !== t ? new Date().getTime() - 1e3 * t : 0;
            var i = -Math.ceil((1e3 * e + n) / _), s = -Math.floor(n / _);
            if (w && w.interval == _) w.move(i, s); else {
                w && w.close(), w = r.grid(_, i, s), z++;
                for (var l = 0; l < C.length; l++) C[l].reset();
                z--, u(), o(w).on("notify", function(e, t, n) {
                    a();
                });
            }
        }
        function u() {
            0 === z && w.sync();
        }
        function d() {
            w.close();
            for (var t = 0; t < C.length; t++) C[t].stop();
            T = {}, C = [], E = [], M = null, o(e).empty(), o(e).data("flot_data", null);
        }
        function p() {
            0 !== e.height() && 0 !== e.width() && (M && M.resize(), a());
        }
        function f(e) {
            T = e, M = null;
        }
        function m() {
            return T;
        }
        function h(e, t) {
            function n() {
                v && v.close();
            }
            function i() {
                E.push(t);
            }
            function s() {
                var e = E.indexOf(t);
                e >= 0 && E.splice(e, 1);
            }
            function l() {
                var e = E.indexOf(t);
                e >= 0 && (E.splice(e, 1), E.push(t));
            }
            function c() {
                n(), s(), a();
            }
            function d(t) {
                return {
                    name: t,
                    units: e.units,
                    derive: e.derive
                };
            }
            function p(e) {
                var t, n;
                if (!e) return 0;
                if (void 0 !== e.length) {
                    for (n = 0, t = 0; t < e.length; t++) n += p(e[t]);
                    return n;
                }
                return e;
            }
            function f() {
                function n() {
                    v.archives && !S.archives && (S.archives = !0, o(S).triggerHandler("changed"));
                }
                v && v.close(), v = r.metrics(_, b);
                var i = w.add(v, []), a = e.factor || 1;
                t.data = w.add(function(e, t, n) {
                    for (var o = 0; o < n; o++) e[t + o] = [ (w.beg + t + o) * _, p(i[t + o]) * a ];
                }), o(v).on("changed", n), n(), u();
            }
            function m(e, n) {
                return !(!n || n.series.data != t.data);
            }
            function h(e) {
                o(g).triggerHandler("hover", [ e ]);
            }
            var v = null, g = {
                options: t,
                move_to_front: l,
                remove: c
            };
            C.push({
                stop: n,
                reset: f,
                hover_hit: m,
                hover: h
            });
            var b = [];
            return e.direct && b.push({
                source: "direct",
                archive_source: "pcp-archive",
                metrics: e.direct.map(d),
                instances: e.instances,
                "omit-instances": e["omit-instances"],
                host: e.host
            }), e.internal && b.push({
                source: "internal",
                metrics: e.internal.map(d),
                instances: e.instances,
                "omit-instances": e["omit-instances"],
                host: e.host
            }), f(), i(), g;
        }
        function v(e, t) {
            function n() {
                p && p.close();
            }
            function i(t) {
                return {
                    name: t,
                    units: e.units,
                    derive: e.derive
                };
            }
            function a() {
                function e() {
                    p.archives && !S.archives && (S.archives = !0, o(S).triggerHandler("changed"));
                }
                p && p.close(), p = r.metrics(_, m), o(p).on("changed", e), e(), z++;
                for (var t in h) h[t].reset();
                z--, u();
            }
            function s(n, i) {
                function r() {
                    s = w.add(p, [ "a", n ]), l.data = w.add(function(e, t, n) {
                        for (var i = 0; i < n; i++) {
                            var o = (s[t + i] || 0) * c, r = (w.beg + t + i) * _, a = 0;
                            f && (a = f.data[t + i][1] ? f.data[t + i][1] : f.data[t + i][2]), Math.abs(o) > d ? (e[t + i] = [ r, a + o, a ], 
                            e[t + i - 1] && null === e[t + i - 1][1] && (e[t + i - 1][1] = e[t + i - 1][2])) : (e[t + i] = [ r, null, a ], 
                            e[t + i - 1] && null !== e[t + i - 1][1] && (e[t + i - 1][1] = e[t + i - 1][2]));
                        }
                    }), u();
                }
                function a() {
                    w.remove(s), w.remove(l.data);
                    var e = E.indexOf(l);
                    e >= 0 && E.splice(e, 1);
                }
                if (!h[n]) {
                    var s, l = o.extend({
                        selector: i
                    }, t), c = e.factor || 1, d = e.threshold || 0, f = v;
                    v = l, h[n] = l, l.reset = r, l.remove = a, r(), E.push(l);
                }
            }
            function l() {
                for (var e in h) h[e].remove();
                h = {}, v = null;
            }
            function c(e, t) {
                var n, i;
                if (!w) return !1;
                i = Math.round(e.x / _) - w.beg, i < 0 && (i = 0);
                for (n in h) {
                    var o = h[n].data;
                    if (o[i] && o[i][1] && o[i][2] <= e.y && e.y <= o[i][1]) return h[n].selector || n;
                }
                return !1;
            }
            function d(e) {
                o(f).triggerHandler("hover", [ e ]);
            }
            var p = null, f = {
                add_instance: s,
                clear_instances: l
            };
            C.push({
                stop: n,
                reset: a,
                hover_hit: c,
                hover: d
            });
            var m = [];
            e.direct && m.push({
                source: "direct",
                archive_source: "pcp-archive",
                metrics: [ i(e.direct) ],
                metrics_path_names: [ "a" ],
                instances: e.instances,
                "omit-instances": e["omit-instances"],
                host: e.host
            }), e.internal && m.push({
                source: "internal",
                metrics: [ i(e.internal) ],
                metrics_path_names: [ "a" ],
                instances: e.instances,
                "omit-instances": e["omit-instances"],
                host: e.host
            });
            var h = {}, v = null;
            return a(), f;
        }
        function g(e, t) {
            N != e ? (N && N.hover(!1), N = e, A = t, N && N.hover(A)) : A != t && (A = t, N && N.hover(A));
        }
        function b(e, t, n) {
            for (var i = null, o = !1, r = 0; r < C.length; r++) if (o = C[r].hover_hit(t, n)) {
                i = C[r];
                break;
            }
            g(i, o);
        }
        function k(e) {
            g(null, !1);
        }
        function y(e, t) {
            t && o(S).triggerHandler("zoomstart", []);
        }
        function x(e, t) {
            M.clearSelection(!0), o(S).triggerHandler("zoom", [ (t.xaxis.to - t.xaxis.from) / 1e3, t.xaxis.to / 1e3 ]);
        }
        var _, w, T = {}, S = {}, C = [], E = [], M = null, D = !1, z = 0, N = null, A = !1;
        return o(e).on("plothover", b), o(e).on("mouseleave", k), o(e).on("plotselecting", y), 
        o(e).on("plotselected", x), o(e).data("flot_data", E), c(t, n), o.extend(S, {
            archives: !1,
            start_walking: s,
            stop_walking: l,
            refresh: a,
            reset: c,
            destroy: d,
            resize: p,
            set_options: f,
            get_options: m,
            add_metrics_sum_series: h,
            add_metrics_stacked_instances_series: v
        }), S;
    };
    var l = [ "#006bb4", "#008ff0", "#2daaff", "#69c2ff", "#a5daff", "#e1f3ff", "#00243c", "#004778" ];
    a.plot_simple_template = function() {
        return {
            colors: l,
            legend: {
                show: !1
            },
            series: {
                shadowSize: 0,
                lines: {
                    lineWidth: 2,
                    fill: .4
                }
            },
            xaxis: {
                tickLength: 0,
                mode: "time",
                tickFormatter: a.format_date_tick,
                minTickSize: [ 1, "minute" ],
                reserveSpace: !1
            },
            yaxis: {
                tickColor: "#d1d1d1",
                min: 0
            },
            points: {
                radius: 0
            },
            grid: {
                borderWidth: 1,
                aboveData: !1,
                color: "black",
                borderColor: o.color.parse("black").scale("a", .22).toString(),
                labelMargin: 0
            }
        };
    }, a.memory_ticks = function(e) {
        for (var t = Math.pow(2, Math.ceil(Math.log(e.max / 5) / Math.LN2)), n = [], i = 0; i < e.max; i += t) n.push(i);
        return n;
    };
    var c = [ s("month-name", "Jan"), s("month-name", "Feb"), s("month-name", "Mar"), s("month-name", "Apr"), s("month-name", "May"), s("month-name", "Jun"), s("month-name", "Jul"), s("month-name", "Aug"), s("month-name", "Sep"), s("month-name", "Oct"), s("month-name", "Nov"), s("month-name", "Dec") ];
    a.format_date_tick = function(e, t) {
        function n(e) {
            var t = e.toFixed();
            return 1 == t.length && (t = "0" + t), t;
        }
        var i, o, r = 0, a = 1, s = 2, l = 3, u = t.tickSize[1];
        o = "minute" == u || "hour" == u ? l : "day" == u ? s : "month" == u ? a : r;
        var d = new Date(), p = new Date(t.min);
        i = r, p.getFullYear() == d.getFullYear() && (i = a, p.getMonth() == d.getMonth() && (i = s, 
        p.getDate() == d.getDate() && (i = l))), i > o && (i = o), i == s && (i = a);
        var f = new Date(e), m = " ";
        return r >= i && r <= o && (m += f.getFullYear().toFixed() + " "), a >= i && a <= o && (m += c[f.getMonth()] + " "), 
        s >= i && s <= o && (m += f.getDate().toFixed() + " "), l >= i && l <= o && (m += n(f.getHours()) + ":" + n(f.getMinutes()) + " "), 
        m.substr(0, m.length - 1);
    }, a.bytes_tick_unit = function(e) {
        return r.format_bytes(e.max, 1024, !0)[1];
    }, a.format_bytes_tick_no_unit = function(e, t) {
        return r.format_bytes(e, a.bytes_tick_unit(t), !0)[0];
    }, a.format_bytes_tick = function(e, t) {
        return r.format_bytes(e, 1024);
    }, a.bytes_per_sec_tick_unit = function(e) {
        return r.format_bytes_per_sec(e.max, 1024, !0)[1];
    }, a.format_bytes_per_sec_tick_no_unit = function(e, t) {
        return r.format_bytes_per_sec(e, a.bytes_per_sec_tick_unit(t), !0)[0];
    }, a.format_bytes_per_sec_tick = function(e, t) {
        return r.format_bytes_per_sec(e, 1024);
    }, a.bits_per_sec_tick_unit = function(e) {
        return r.format_bits_per_sec(8 * e.max, 1e3, !0)[1];
    }, a.format_bits_per_sec_tick_no_unit = function(e, t) {
        return r.format_bits_per_sec(8 * e, a.bits_per_sec_tick_unit(t), !0)[0];
    }, a.format_bits_per_sec_tick = function(e, t) {
        return r.format_bits_per_sec(8 * e, 1e3);
    }, a.setup_plot_controls = function(e, t, n) {
        function i() {
            void 0 === f && (n.forEach(function(e) {
                e.stop_walking();
            }), f = new Date().getTime() / 1e3, c());
        }
        function a(e, t) {
            g.push(v), v = e, f = t, d();
        }
        function s() {
            var e = g.pop();
            if (void 0 === e) {
                var t;
                for (t = 0; t < h.length - 1 && !(h[t] > v); t++) ;
                e = h[t];
            }
            void 0 !== f && (f += (e - v) / 2), v = e, d();
        }
        function l(e) {
            var t;
            return e >= 31536e3 ? (t = Math.ceil(e / 31536e3), r.format(r.ngettext("$0 year", "$0 years", t), t)) : e >= 2592e3 ? (t = Math.ceil(e / 2592e3), 
            r.format(r.ngettext("$0 month", "$0 months", t), t)) : e >= 604800 ? (t = Math.ceil(e / 604800), 
            r.format(r.ngettext("$0 week", "$0 weeks", t), t)) : e >= 86400 ? (t = Math.ceil(e / 86400), 
            r.format(r.ngettext("$0 day", "$0 days", t), t)) : e >= 3600 ? (t = Math.ceil(e / 3600), 
            r.format(r.ngettext("$0 hour", "$0 hours", t), t)) : (t = Math.ceil(e / 60), r.format(r.ngettext("$0 minute", "$0 minutes", t), t));
        }
        function c() {
            t.find('[data-action="scroll-right"]').attr("disabled", void 0 === f), t.find('[data-action="zoom-out"]').attr("disabled", v >= h[h.length - 1]);
        }
        function u() {
            var t;
            e.hasClass("show-zoom-controls") && v > m ? (e.addClass("show-zoom-cursor"), t = "x") : (e.removeClass("show-zoom-cursor"), 
            t = null), n.forEach(function(e) {
                var n = e.get_options();
                n.selection && n.selection.mode == t || (n.selection = {
                    mode: t,
                    color: "#d4edfa"
                }, e.set_options(n), e.refresh());
            });
        }
        function d() {
            v < m && (f += (m - v) / 2, v = m), f >= new Date().getTime() / 1e3 - 10 && (f = void 0), 
            t.find(".dropdown-toggle span:first-child").text(l(v)), n.forEach(function(t) {
                function n() {
                    t.archives && (e.addClass("show-zoom-controls"), u());
                }
                t.stop_walking(), t.reset(v, f), t.refresh(), void 0 === f && t.start_walking(), 
                o(t).on("changed", n), n();
            }), c(), u();
        }
        function p(e) {
            void 0 === e && (e = []), n = e, n.forEach(function(e) {
                o(e).on("zoomstart", function(e) {
                    i();
                }), o(e).on("zoom", function(e, t, n) {
                    a(t, n);
                });
            }), d();
        }
        var f, m = 300, h = [ 300, 3600, 21600, 86400, 604800, 2592e3, 31536e3 ], v = 300, g = [];
        return t.find("[data-range]").click(function() {
            g = [], v = parseInt(o(this).attr("data-range"), 10), d();
        }), t.find('[data-action="goto-now"]').click(function() {
            f = void 0, d();
        }), t.find('[data-action="scroll-left"]').click(function() {
            var e = v / 10;
            void 0 === f && (f = new Date().getTime() / 1e3), f -= e, d();
        }), t.find('[data-action="scroll-right"]').click(function() {
            var e = v / 10;
            void 0 !== f && (f += e, d());
        }), t.find('[data-action="zoom-out"]').click(function() {
            s();
        }), p(n), {
            reset: p
        };
    }, a.setup_complicated_plot = function(e, t, n, o) {
        function r(e, t) {
            return e.add(function(e, n, i) {
                for (var o = 0; o < i; o++) e[n + o] = [ o, t[n + o] || 0 ];
            });
        }
        function a(e, t, n) {
            return e.add(function(e, i, o) {
                var r, a, s, l;
                for (r = 0; r < o; r++) s = 0, n && (a = n[i + r], s = a ? a[1] : 0), l = t[i + r] || 0, 
                e[i + r] = [ r, l + s, s ];
            });
        }
        var s = null;
        return n.forEach(function(e, n) {
            o.x_rh_stack_graphs ? e.data = a(t, e.row, s) : e.data = r(t, e.row), s = e.data;
        }), i(e, t, n, o);
    }, e.exports = a;
}, function(e, t) {
    !function(e) {
        e.color = {}, e.color.make = function(t, n, i, o) {
            var r = {};
            return r.r = t || 0, r.g = n || 0, r.b = i || 0, r.a = null != o ? o : 1, r.add = function(e, t) {
                for (var n = 0; n < e.length; ++n) r[e.charAt(n)] += t;
                return r.normalize();
            }, r.scale = function(e, t) {
                for (var n = 0; n < e.length; ++n) r[e.charAt(n)] *= t;
                return r.normalize();
            }, r.toString = function() {
                return r.a >= 1 ? "rgb(" + [ r.r, r.g, r.b ].join(",") + ")" : "rgba(" + [ r.r, r.g, r.b, r.a ].join(",") + ")";
            }, r.normalize = function() {
                function e(e, t, n) {
                    return t < e ? e : t > n ? n : t;
                }
                return r.r = e(0, parseInt(r.r), 255), r.g = e(0, parseInt(r.g), 255), r.b = e(0, parseInt(r.b), 255), 
                r.a = e(0, r.a, 1), r;
            }, r.clone = function() {
                return e.color.make(r.r, r.b, r.g, r.a);
            }, r.normalize();
        }, e.color.extract = function(t, n) {
            var i;
            do {
                if (i = t.css(n).toLowerCase(), "" != i && "transparent" != i) break;
                t = t.parent();
            } while (t.length && !e.nodeName(t.get(0), "body"));
            return "rgba(0, 0, 0, 0)" == i && (i = "transparent"), e.color.parse(i);
        }, e.color.parse = function(n) {
            var i, o = e.color.make;
            if (i = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(n)) return o(parseInt(i[1], 10), parseInt(i[2], 10), parseInt(i[3], 10));
            if (i = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n)) return o(parseInt(i[1], 10), parseInt(i[2], 10), parseInt(i[3], 10), parseFloat(i[4]));
            if (i = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(n)) return o(2.55 * parseFloat(i[1]), 2.55 * parseFloat(i[2]), 2.55 * parseFloat(i[3]));
            if (i = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n)) return o(2.55 * parseFloat(i[1]), 2.55 * parseFloat(i[2]), 2.55 * parseFloat(i[3]), parseFloat(i[4]));
            if (i = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(n)) return o(parseInt(i[1], 16), parseInt(i[2], 16), parseInt(i[3], 16));
            if (i = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(n)) return o(parseInt(i[1] + i[1], 16), parseInt(i[2] + i[2], 16), parseInt(i[3] + i[3], 16));
            var r = e.trim(n).toLowerCase();
            return "transparent" == r ? o(255, 255, 255, 0) : (i = t[r] || [ 0, 0, 0 ], o(i[0], i[1], i[2]));
        };
        var t = {
            aqua: [ 0, 255, 255 ],
            azure: [ 240, 255, 255 ],
            beige: [ 245, 245, 220 ],
            black: [ 0, 0, 0 ],
            blue: [ 0, 0, 255 ],
            brown: [ 165, 42, 42 ],
            cyan: [ 0, 255, 255 ],
            darkblue: [ 0, 0, 139 ],
            darkcyan: [ 0, 139, 139 ],
            darkgrey: [ 169, 169, 169 ],
            darkgreen: [ 0, 100, 0 ],
            darkkhaki: [ 189, 183, 107 ],
            darkmagenta: [ 139, 0, 139 ],
            darkolivegreen: [ 85, 107, 47 ],
            darkorange: [ 255, 140, 0 ],
            darkorchid: [ 153, 50, 204 ],
            darkred: [ 139, 0, 0 ],
            darksalmon: [ 233, 150, 122 ],
            darkviolet: [ 148, 0, 211 ],
            fuchsia: [ 255, 0, 255 ],
            gold: [ 255, 215, 0 ],
            green: [ 0, 128, 0 ],
            indigo: [ 75, 0, 130 ],
            khaki: [ 240, 230, 140 ],
            lightblue: [ 173, 216, 230 ],
            lightcyan: [ 224, 255, 255 ],
            lightgreen: [ 144, 238, 144 ],
            lightgrey: [ 211, 211, 211 ],
            lightpink: [ 255, 182, 193 ],
            lightyellow: [ 255, 255, 224 ],
            lime: [ 0, 255, 0 ],
            magenta: [ 255, 0, 255 ],
            maroon: [ 128, 0, 0 ],
            navy: [ 0, 0, 128 ],
            olive: [ 128, 128, 0 ],
            orange: [ 255, 165, 0 ],
            pink: [ 255, 192, 203 ],
            purple: [ 128, 0, 128 ],
            violet: [ 128, 0, 128 ],
            red: [ 255, 0, 0 ],
            silver: [ 192, 192, 192 ],
            white: [ 255, 255, 255 ],
            yellow: [ 255, 255, 0 ]
        };
    }(jQuery), function(e) {
        function t(t, n) {
            var i = n.children("." + t)[0];
            if (null == i && (i = document.createElement("canvas"), i.className = t, e(i).css({
                direction: "ltr",
                position: "absolute",
                left: 0,
                top: 0
            }).appendTo(n), !i.getContext)) {
                if (!window.G_vmlCanvasManager) throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.");
                i = window.G_vmlCanvasManager.initElement(i);
            }
            this.element = i;
            var o = this.context = i.getContext("2d"), r = window.devicePixelRatio || 1, a = o.webkitBackingStorePixelRatio || o.mozBackingStorePixelRatio || o.msBackingStorePixelRatio || o.oBackingStorePixelRatio || o.backingStorePixelRatio || 1;
            this.pixelRatio = r / a, this.resize(n.width(), n.height()), this.textContainer = null, 
            this.text = {}, this._textCache = {};
        }
        function n(n, o, r, a) {
            function s(e, t) {
                t = [ ve ].concat(t);
                for (var n = 0; n < e.length; ++n) e[n].apply(this, t);
            }
            function l() {
                for (var n = {
                    Canvas: t
                }, i = 0; i < a.length; ++i) {
                    var o = a[i];
                    o.init(ve, n), o.options && e.extend(!0, oe, o.options);
                }
            }
            function c(t) {
                e.extend(!0, oe, t), t && t.colors && (oe.colors = t.colors), null == oe.xaxis.color && (oe.xaxis.color = e.color.parse(oe.grid.color).scale("a", .22).toString()), 
                null == oe.yaxis.color && (oe.yaxis.color = e.color.parse(oe.grid.color).scale("a", .22).toString()), 
                null == oe.xaxis.tickColor && (oe.xaxis.tickColor = oe.grid.tickColor || oe.xaxis.color), 
                null == oe.yaxis.tickColor && (oe.yaxis.tickColor = oe.grid.tickColor || oe.yaxis.color), 
                null == oe.grid.borderColor && (oe.grid.borderColor = oe.grid.color), null == oe.grid.tickColor && (oe.grid.tickColor = e.color.parse(oe.grid.color).scale("a", .22).toString());
                var i, o, r, a = n.css("font-size"), l = a ? +a.replace("px", "") : 13, c = {
                    style: n.css("font-style"),
                    size: Math.round(.8 * l),
                    variant: n.css("font-variant"),
                    weight: n.css("font-weight"),
                    family: n.css("font-family")
                };
                for (r = oe.xaxes.length || 1, i = 0; i < r; ++i) o = oe.xaxes[i], o && !o.tickColor && (o.tickColor = o.color), 
                o = e.extend(!0, {}, oe.xaxis, o), oe.xaxes[i] = o, o.font && (o.font = e.extend({}, c, o.font), 
                o.font.color || (o.font.color = o.color), o.font.lineHeight || (o.font.lineHeight = Math.round(1.15 * o.font.size)));
                for (r = oe.yaxes.length || 1, i = 0; i < r; ++i) o = oe.yaxes[i], o && !o.tickColor && (o.tickColor = o.color), 
                o = e.extend(!0, {}, oe.yaxis, o), oe.yaxes[i] = o, o.font && (o.font = e.extend({}, c, o.font), 
                o.font.color || (o.font.color = o.color), o.font.lineHeight || (o.font.lineHeight = Math.round(1.15 * o.font.size)));
                for (oe.xaxis.noTicks && null == oe.xaxis.ticks && (oe.xaxis.ticks = oe.xaxis.noTicks), 
                oe.yaxis.noTicks && null == oe.yaxis.ticks && (oe.yaxis.ticks = oe.yaxis.noTicks), 
                oe.x2axis && (oe.xaxes[1] = e.extend(!0, {}, oe.xaxis, oe.x2axis), oe.xaxes[1].position = "top", 
                null == oe.x2axis.min && (oe.xaxes[1].min = null), null == oe.x2axis.max && (oe.xaxes[1].max = null)), 
                oe.y2axis && (oe.yaxes[1] = e.extend(!0, {}, oe.yaxis, oe.y2axis), oe.yaxes[1].position = "right", 
                null == oe.y2axis.min && (oe.yaxes[1].min = null), null == oe.y2axis.max && (oe.yaxes[1].max = null)), 
                oe.grid.coloredAreas && (oe.grid.markings = oe.grid.coloredAreas), oe.grid.coloredAreasColor && (oe.grid.markingsColor = oe.grid.coloredAreasColor), 
                oe.lines && e.extend(!0, oe.series.lines, oe.lines), oe.points && e.extend(!0, oe.series.points, oe.points), 
                oe.bars && e.extend(!0, oe.series.bars, oe.bars), null != oe.shadowSize && (oe.series.shadowSize = oe.shadowSize), 
                null != oe.highlightColor && (oe.series.highlightColor = oe.highlightColor), i = 0; i < oe.xaxes.length; ++i) v(ue, i + 1).options = oe.xaxes[i];
                for (i = 0; i < oe.yaxes.length; ++i) v(de, i + 1).options = oe.yaxes[i];
                for (var u in he) oe.hooks[u] && oe.hooks[u].length && (he[u] = he[u].concat(oe.hooks[u]));
                s(he.processOptions, [ oe ]);
            }
            function u(e) {
                ie = d(e), g(), b();
            }
            function d(t) {
                for (var n = [], i = 0; i < t.length; ++i) {
                    var o = e.extend(!0, {}, oe.series);
                    null != t[i].data ? (o.data = t[i].data, delete t[i].data, e.extend(!0, o, t[i]), 
                    t[i].data = o.data) : o.data = t[i], n.push(o);
                }
                return n;
            }
            function p(e, t) {
                var n = e[t + "axis"];
                return "object" == typeof n && (n = n.n), "number" != typeof n && (n = 1), n;
            }
            function f() {
                return e.grep(ue.concat(de), function(e) {
                    return e;
                });
            }
            function m(e) {
                var t, n, i = {};
                for (t = 0; t < ue.length; ++t) n = ue[t], n && n.used && (i["x" + n.n] = n.c2p(e.left));
                for (t = 0; t < de.length; ++t) n = de[t], n && n.used && (i["y" + n.n] = n.c2p(e.top));
                return void 0 !== i.x1 && (i.x = i.x1), void 0 !== i.y1 && (i.y = i.y1), i;
            }
            function h(e) {
                var t, n, i, o = {};
                for (t = 0; t < ue.length; ++t) if (n = ue[t], n && n.used && (i = "x" + n.n, null == e[i] && 1 == n.n && (i = "x"), 
                null != e[i])) {
                    o.left = n.p2c(e[i]);
                    break;
                }
                for (t = 0; t < de.length; ++t) if (n = de[t], n && n.used && (i = "y" + n.n, null == e[i] && 1 == n.n && (i = "y"), 
                null != e[i])) {
                    o.top = n.p2c(e[i]);
                    break;
                }
                return o;
            }
            function v(t, n) {
                return t[n - 1] || (t[n - 1] = {
                    n: n,
                    direction: t == ue ? "x" : "y",
                    options: e.extend(!0, {}, t == ue ? oe.xaxis : oe.yaxis)
                }), t[n - 1];
            }
            function g() {
                var t, n = ie.length, i = -1;
                for (t = 0; t < ie.length; ++t) {
                    var o = ie[t].color;
                    null != o && (n--, "number" == typeof o && o > i && (i = o));
                }
                n <= i && (n = i + 1);
                var r, a = [], s = oe.colors, l = s.length, c = 0;
                for (t = 0; t < n; t++) r = e.color.parse(s[t % l] || "#666"), t % l == 0 && t && (c = c >= 0 ? c < .5 ? -c - .2 : 0 : -c), 
                a[t] = r.scale("rgb", 1 + c);
                var u, d = 0;
                for (t = 0; t < ie.length; ++t) {
                    if (u = ie[t], null == u.color ? (u.color = a[d].toString(), ++d) : "number" == typeof u.color && (u.color = a[u.color].toString()), 
                    null == u.lines.show) {
                        var f, m = !0;
                        for (f in u) if (u[f] && u[f].show) {
                            m = !1;
                            break;
                        }
                        m && (u.lines.show = !0);
                    }
                    null == u.lines.zero && (u.lines.zero = !!u.lines.fill), u.xaxis = v(ue, p(u, "x")), 
                    u.yaxis = v(de, p(u, "y"));
                }
            }
            function b() {
                function t(e, t, n) {
                    t < e.datamin && t != -b && (e.datamin = t), n > e.datamax && n != b && (e.datamax = n);
                }
                var n, i, o, r, a, l, c, u, d, p, m, h, v = Number.POSITIVE_INFINITY, g = Number.NEGATIVE_INFINITY, b = Number.MAX_VALUE;
                for (e.each(f(), function(e, t) {
                    t.datamin = v, t.datamax = g, t.used = !1;
                }), n = 0; n < ie.length; ++n) a = ie[n], a.datapoints = {
                    points: []
                }, s(he.processRawData, [ a, a.data, a.datapoints ]);
                for (n = 0; n < ie.length; ++n) {
                    if (a = ie[n], m = a.data, h = a.datapoints.format, !h) {
                        if (h = [], h.push({
                            x: !0,
                            number: !0,
                            required: !0
                        }), h.push({
                            y: !0,
                            number: !0,
                            required: !0
                        }), a.bars.show || a.lines.show && a.lines.fill) {
                            var k = !!(a.bars.show && a.bars.zero || a.lines.show && a.lines.zero);
                            h.push({
                                y: !0,
                                number: !0,
                                required: !1,
                                defaultValue: 0,
                                autoscale: k
                            }), a.bars.horizontal && (delete h[h.length - 1].y, h[h.length - 1].x = !0);
                        }
                        a.datapoints.format = h;
                    }
                    if (null == a.datapoints.pointsize) {
                        a.datapoints.pointsize = h.length, c = a.datapoints.pointsize, l = a.datapoints.points;
                        var y = a.lines.show && a.lines.steps;
                        for (a.xaxis.used = a.yaxis.used = !0, i = o = 0; i < m.length; ++i, o += c) {
                            p = m[i];
                            var x = null == p;
                            if (!x) for (r = 0; r < c; ++r) u = p[r], d = h[r], d && (d.number && null != u && (u = +u, 
                            isNaN(u) ? u = null : u == 1 / 0 ? u = b : u == -(1 / 0) && (u = -b)), null == u && (d.required && (x = !0), 
                            null != d.defaultValue && (u = d.defaultValue))), l[o + r] = u;
                            if (x) for (r = 0; r < c; ++r) u = l[o + r], null != u && (d = h[r], d.autoscale !== !1 && (d.x && t(a.xaxis, u, u), 
                            d.y && t(a.yaxis, u, u))), l[o + r] = null; else if (y && o > 0 && null != l[o - c] && l[o - c] != l[o] && l[o - c + 1] != l[o + 1]) {
                                for (r = 0; r < c; ++r) l[o + c + r] = l[o + r];
                                l[o + 1] = l[o - c + 1], o += c;
                            }
                        }
                    }
                }
                for (n = 0; n < ie.length; ++n) a = ie[n], s(he.processDatapoints, [ a, a.datapoints ]);
                for (n = 0; n < ie.length; ++n) {
                    a = ie[n], l = a.datapoints.points, c = a.datapoints.pointsize, h = a.datapoints.format;
                    var _ = v, w = v, T = g, S = g;
                    for (i = 0; i < l.length; i += c) if (null != l[i]) for (r = 0; r < c; ++r) u = l[i + r], 
                    d = h[r], d && d.autoscale !== !1 && u != b && u != -b && (d.x && (u < _ && (_ = u), 
                    u > T && (T = u)), d.y && (u < w && (w = u), u > S && (S = u)));
                    if (a.bars.show) {
                        var C;
                        switch (a.bars.align) {
                          case "left":
                            C = 0;
                            break;

                          case "right":
                            C = -a.bars.barWidth;
                            break;

                          default:
                            C = -a.bars.barWidth / 2;
                        }
                        a.bars.horizontal ? (w += C, S += C + a.bars.barWidth) : (_ += C, T += C + a.bars.barWidth);
                    }
                    t(a.xaxis, _, T), t(a.yaxis, w, S);
                }
                e.each(f(), function(e, t) {
                    t.datamin == v && (t.datamin = null), t.datamax == g && (t.datamax = null);
                });
            }
            function k() {
                n.css("padding", 0).children().filter(function() {
                    return !e(this).hasClass("flot-overlay") && !e(this).hasClass("flot-base");
                }).remove(), "static" == n.css("position") && n.css("position", "relative"), re = new t("flot-base", n), 
                ae = new t("flot-overlay", n), le = re.context, ce = ae.context, se = e(ae.element).unbind();
                var i = n.data("plot");
                i && (i.shutdown(), ae.clear()), n.data("plot", ve);
            }
            function y() {
                oe.grid.hoverable && (se.mousemove(H), se.bind("mouseleave", G)), oe.grid.clickable && se.click(q), 
                s(he.bindEvents, [ se ]);
            }
            function x() {
                be && clearTimeout(be), se.unbind("mousemove", H), se.unbind("mouseleave", G), se.unbind("click", q), 
                s(he.shutdown, [ se ]);
            }
            function _(e) {
                function t(e) {
                    return e;
                }
                var n, i, o = e.options.transform || t, r = e.options.inverseTransform;
                "x" == e.direction ? (n = e.scale = fe / Math.abs(o(e.max) - o(e.min)), i = Math.min(o(e.max), o(e.min))) : (n = e.scale = me / Math.abs(o(e.max) - o(e.min)), 
                n = -n, i = Math.max(o(e.max), o(e.min))), o == t ? e.p2c = function(e) {
                    return (e - i) * n;
                } : e.p2c = function(e) {
                    return (o(e) - i) * n;
                }, r ? e.c2p = function(e) {
                    return r(i + e / n);
                } : e.c2p = function(e) {
                    return i + e / n;
                };
            }
            function w(e) {
                for (var t = e.options, n = e.ticks || [], i = t.labelWidth || 0, o = t.labelHeight || 0, r = i || ("x" == e.direction ? Math.floor(re.width / (n.length || 1)) : null), a = e.direction + "Axis " + e.direction + e.n + "Axis", s = "flot-" + e.direction + "-axis flot-" + e.direction + e.n + "-axis " + a, l = t.font || "flot-tick-label tickLabel", c = 0; c < n.length; ++c) {
                    var u = n[c];
                    if (u.label) {
                        var d = re.getTextInfo(s, u.label, l, null, r);
                        i = Math.max(i, d.width), o = Math.max(o, d.height);
                    }
                }
                e.labelWidth = t.labelWidth || i, e.labelHeight = t.labelHeight || o;
            }
            function T(t) {
                var n = t.labelWidth, i = t.labelHeight, o = t.options.position, r = "x" === t.direction, a = t.options.tickLength, s = oe.grid.axisMargin, l = oe.grid.labelMargin, c = !0, u = !0, d = !0, p = !1;
                e.each(r ? ue : de, function(e, n) {
                    n && (n.show || n.reserveSpace) && (n === t ? p = !0 : n.options.position === o && (p ? u = !1 : c = !1), 
                    p || (d = !1));
                }), u && (s = 0), null == a && (a = d ? "full" : 5), isNaN(+a) || (l += +a), r ? (i += l, 
                "bottom" == o ? (pe.bottom += i + s, t.box = {
                    top: re.height - pe.bottom,
                    height: i
                }) : (t.box = {
                    top: pe.top + s,
                    height: i
                }, pe.top += i + s)) : (n += l, "left" == o ? (t.box = {
                    left: pe.left + s,
                    width: n
                }, pe.left += n + s) : (pe.right += n + s, t.box = {
                    left: re.width - pe.right,
                    width: n
                })), t.position = o, t.tickLength = a, t.box.padding = l, t.innermost = c;
            }
            function S(e) {
                "x" == e.direction ? (e.box.left = pe.left - e.labelWidth / 2, e.box.width = re.width - pe.left - pe.right + e.labelWidth) : (e.box.top = pe.top - e.labelHeight / 2, 
                e.box.height = re.height - pe.bottom - pe.top + e.labelHeight);
            }
            function C() {
                var t, n = oe.grid.minBorderMargin;
                if (null == n) for (n = 0, t = 0; t < ie.length; ++t) n = Math.max(n, 2 * (ie[t].points.radius + ie[t].points.lineWidth / 2));
                var i = {
                    left: n,
                    right: n,
                    top: n,
                    bottom: n
                };
                e.each(f(), function(e, t) {
                    t.reserveSpace && t.ticks && t.ticks.length && ("x" === t.direction ? (i.left = Math.max(i.left, t.labelWidth / 2), 
                    i.right = Math.max(i.right, t.labelWidth / 2)) : (i.bottom = Math.max(i.bottom, t.labelHeight / 2), 
                    i.top = Math.max(i.top, t.labelHeight / 2)));
                }), pe.left = Math.ceil(Math.max(i.left, pe.left)), pe.right = Math.ceil(Math.max(i.right, pe.right)), 
                pe.top = Math.ceil(Math.max(i.top, pe.top)), pe.bottom = Math.ceil(Math.max(i.bottom, pe.bottom));
            }
            function E() {
                var t, n = f(), i = oe.grid.show;
                for (var o in pe) {
                    var r = oe.grid.margin || 0;
                    pe[o] = "number" == typeof r ? r : r[o] || 0;
                }
                s(he.processOffset, [ pe ]);
                for (var o in pe) "object" == typeof oe.grid.borderWidth ? pe[o] += i ? oe.grid.borderWidth[o] : 0 : pe[o] += i ? oe.grid.borderWidth : 0;
                if (e.each(n, function(e, t) {
                    var n = t.options;
                    t.show = null == n.show ? t.used : n.show, t.reserveSpace = null == n.reserveSpace ? t.show : n.reserveSpace, 
                    M(t);
                }), i) {
                    var a = e.grep(n, function(e) {
                        return e.show || e.reserveSpace;
                    });
                    for (e.each(a, function(e, t) {
                        D(t), z(t), N(t, t.ticks), w(t);
                    }), t = a.length - 1; t >= 0; --t) T(a[t]);
                    C(), e.each(a, function(e, t) {
                        S(t);
                    });
                }
                fe = re.width - pe.left - pe.right, me = re.height - pe.bottom - pe.top, e.each(n, function(e, t) {
                    _(t);
                }), i && O(), j();
            }
            function M(e) {
                var t = e.options, n = +(null != t.min ? t.min : e.datamin), i = +(null != t.max ? t.max : e.datamax), o = i - n;
                if (0 == o) {
                    var r = 0 == i ? 1 : .01;
                    null == t.min && (n -= r), null != t.max && null == t.min || (i += r);
                } else {
                    var a = t.autoscaleMargin;
                    null != a && (null == t.min && (n -= o * a, n < 0 && null != e.datamin && e.datamin >= 0 && (n = 0)), 
                    null == t.max && (i += o * a, i > 0 && null != e.datamax && e.datamax <= 0 && (i = 0)));
                }
                e.min = n, e.max = i;
            }
            function D(t) {
                var n, o = t.options;
                n = "number" == typeof o.ticks && o.ticks > 0 ? o.ticks : .3 * Math.sqrt("x" == t.direction ? re.width : re.height);
                var r = (t.max - t.min) / n, a = -Math.floor(Math.log(r) / Math.LN10), s = o.tickDecimals;
                null != s && a > s && (a = s);
                var l, c = Math.pow(10, -a), u = r / c;
                if (u < 1.5 ? l = 1 : u < 3 ? (l = 2, u > 2.25 && (null == s || a + 1 <= s) && (l = 2.5, 
                ++a)) : l = u < 7.5 ? 5 : 10, l *= c, null != o.minTickSize && l < o.minTickSize && (l = o.minTickSize), 
                t.delta = r, t.tickDecimals = Math.max(0, null != s ? s : a), t.tickSize = o.tickSize || l, 
                "time" == o.mode && !t.tickGenerator) throw new Error("Time mode requires the flot.time plugin.");
                if (t.tickGenerator || (t.tickGenerator = function(e) {
                    var t, n = [], o = i(e.min, e.tickSize), r = 0, a = Number.NaN;
                    do t = a, a = o + r * e.tickSize, n.push(a), ++r; while (a < e.max && a != t);
                    return n;
                }, t.tickFormatter = function(e, t) {
                    var n = t.tickDecimals ? Math.pow(10, t.tickDecimals) : 1, i = "" + Math.round(e * n) / n;
                    if (null != t.tickDecimals) {
                        var o = i.indexOf("."), r = o == -1 ? 0 : i.length - o - 1;
                        if (r < t.tickDecimals) return (r ? i : i + ".") + ("" + n).substr(1, t.tickDecimals - r);
                    }
                    return i;
                }), e.isFunction(o.tickFormatter) && (t.tickFormatter = function(e, t) {
                    return "" + o.tickFormatter(e, t);
                }), null != o.alignTicksWithAxis) {
                    var d = ("x" == t.direction ? ue : de)[o.alignTicksWithAxis - 1];
                    if (d && d.used && d != t) {
                        var p = t.tickGenerator(t);
                        if (p.length > 0 && (null == o.min && (t.min = Math.min(t.min, p[0])), null == o.max && p.length > 1 && (t.max = Math.max(t.max, p[p.length - 1]))), 
                        t.tickGenerator = function(e) {
                            var t, n, i = [];
                            for (n = 0; n < d.ticks.length; ++n) t = (d.ticks[n].v - d.min) / (d.max - d.min), 
                            t = e.min + t * (e.max - e.min), i.push(t);
                            return i;
                        }, !t.mode && null == o.tickDecimals) {
                            var f = Math.max(0, -Math.floor(Math.log(t.delta) / Math.LN10) + 1), m = t.tickGenerator(t);
                            m.length > 1 && /\..*0$/.test((m[1] - m[0]).toFixed(f)) || (t.tickDecimals = f);
                        }
                    }
                }
            }
            function z(t) {
                var n = t.options.ticks, i = [];
                null == n || "number" == typeof n && n > 0 ? i = t.tickGenerator(t) : n && (i = e.isFunction(n) ? n(t) : n);
                var o, r;
                for (t.ticks = [], o = 0; o < i.length; ++o) {
                    var a = null, s = i[o];
                    "object" == typeof s ? (r = +s[0], s.length > 1 && (a = s[1])) : r = +s, null == a && (a = t.tickFormatter(r, t)), 
                    isNaN(r) || t.ticks.push({
                        v: r,
                        label: a
                    });
                }
            }
            function N(e, t) {
                e.options.autoscaleMargin && t.length > 0 && (null == e.options.min && (e.min = Math.min(e.min, t[0].v)), 
                null == e.options.max && t.length > 1 && (e.max = Math.max(e.max, t[t.length - 1].v)));
            }
            function A() {
                re.clear(), s(he.drawBackground, [ le ]);
                var e = oe.grid;
                e.show && e.backgroundColor && I(), e.show && !e.aboveData && R();
                for (var t = 0; t < ie.length; ++t) s(he.drawSeries, [ le, ie[t] ]), F(ie[t]);
                s(he.draw, [ le ]), e.show && e.aboveData && R(), re.render(), X();
            }
            function P(e, t) {
                for (var n, i, o, r, a = f(), s = 0; s < a.length; ++s) if (n = a[s], n.direction == t && (r = t + n.n + "axis", 
                e[r] || 1 != n.n || (r = t + "axis"), e[r])) {
                    i = e[r].from, o = e[r].to;
                    break;
                }
                if (e[r] || (n = "x" == t ? ue[0] : de[0], i = e[t + "1"], o = e[t + "2"]), null != i && null != o && i > o) {
                    var l = i;
                    i = o, o = l;
                }
                return {
                    from: i,
                    to: o,
                    axis: n
                };
            }
            function I() {
                le.save(), le.translate(pe.left, pe.top), le.fillStyle = ne(oe.grid.backgroundColor, me, 0, "rgba(255, 255, 255, 0)"), 
                le.fillRect(0, 0, fe, me), le.restore();
            }
            function R() {
                var t, n, i, o;
                le.save(), le.translate(pe.left, pe.top);
                var r = oe.grid.markings;
                if (r) for (e.isFunction(r) && (n = ve.getAxes(), n.xmin = n.xaxis.min, n.xmax = n.xaxis.max, 
                n.ymin = n.yaxis.min, n.ymax = n.yaxis.max, r = r(n)), t = 0; t < r.length; ++t) {
                    var a = r[t], s = P(a, "x"), l = P(a, "y");
                    if (null == s.from && (s.from = s.axis.min), null == s.to && (s.to = s.axis.max), 
                    null == l.from && (l.from = l.axis.min), null == l.to && (l.to = l.axis.max), !(s.to < s.axis.min || s.from > s.axis.max || l.to < l.axis.min || l.from > l.axis.max)) {
                        s.from = Math.max(s.from, s.axis.min), s.to = Math.min(s.to, s.axis.max), l.from = Math.max(l.from, l.axis.min), 
                        l.to = Math.min(l.to, l.axis.max);
                        var c = s.from === s.to, u = l.from === l.to;
                        if (!c || !u) if (s.from = Math.floor(s.axis.p2c(s.from)), s.to = Math.floor(s.axis.p2c(s.to)), 
                        l.from = Math.floor(l.axis.p2c(l.from)), l.to = Math.floor(l.axis.p2c(l.to)), c || u) {
                            var d = a.lineWidth || oe.grid.markingsLineWidth, p = d % 2 ? .5 : 0;
                            le.beginPath(), le.strokeStyle = a.color || oe.grid.markingsColor, le.lineWidth = d, 
                            c ? (le.moveTo(s.to + p, l.from), le.lineTo(s.to + p, l.to)) : (le.moveTo(s.from, l.to + p), 
                            le.lineTo(s.to, l.to + p)), le.stroke();
                        } else le.fillStyle = a.color || oe.grid.markingsColor, le.fillRect(s.from, l.to, s.to - s.from, l.from - l.to);
                    }
                }
                n = f(), i = oe.grid.borderWidth;
                for (var m = 0; m < n.length; ++m) {
                    var h, v, g, b, k = n[m], y = k.box, x = k.tickLength;
                    if (k.show && 0 != k.ticks.length) {
                        for (le.lineWidth = 1, "x" == k.direction ? (h = 0, v = "full" == x ? "top" == k.position ? 0 : me : y.top - pe.top + ("top" == k.position ? y.height : 0)) : (v = 0, 
                        h = "full" == x ? "left" == k.position ? 0 : fe : y.left - pe.left + ("left" == k.position ? y.width : 0)), 
                        k.innermost || (le.strokeStyle = k.options.color, le.beginPath(), g = b = 0, "x" == k.direction ? g = fe + 1 : b = me + 1, 
                        1 == le.lineWidth && ("x" == k.direction ? v = Math.floor(v) + .5 : h = Math.floor(h) + .5), 
                        le.moveTo(h, v), le.lineTo(h + g, v + b), le.stroke()), le.strokeStyle = k.options.tickColor, 
                        le.beginPath(), t = 0; t < k.ticks.length; ++t) {
                            var _ = k.ticks[t].v;
                            g = b = 0, isNaN(_) || _ < k.min || _ > k.max || "full" == x && ("object" == typeof i && i[k.position] > 0 || i > 0) && (_ == k.min || _ == k.max) || ("x" == k.direction ? (h = k.p2c(_), 
                            b = "full" == x ? -me : x, "top" == k.position && (b = -b)) : (v = k.p2c(_), g = "full" == x ? -fe : x, 
                            "left" == k.position && (g = -g)), 1 == le.lineWidth && ("x" == k.direction ? h = Math.floor(h) + .5 : v = Math.floor(v) + .5), 
                            le.moveTo(h, v), le.lineTo(h + g, v + b));
                        }
                        le.stroke();
                    }
                }
                i && (o = oe.grid.borderColor, "object" == typeof i || "object" == typeof o ? ("object" != typeof i && (i = {
                    top: i,
                    right: i,
                    bottom: i,
                    left: i
                }), "object" != typeof o && (o = {
                    top: o,
                    right: o,
                    bottom: o,
                    left: o
                }), i.top > 0 && (le.strokeStyle = o.top, le.lineWidth = i.top, le.beginPath(), 
                le.moveTo(0 - i.left, 0 - i.top / 2), le.lineTo(fe, 0 - i.top / 2), le.stroke()), 
                i.right > 0 && (le.strokeStyle = o.right, le.lineWidth = i.right, le.beginPath(), 
                le.moveTo(fe + i.right / 2, 0 - i.top), le.lineTo(fe + i.right / 2, me), le.stroke()), 
                i.bottom > 0 && (le.strokeStyle = o.bottom, le.lineWidth = i.bottom, le.beginPath(), 
                le.moveTo(fe + i.right, me + i.bottom / 2), le.lineTo(0, me + i.bottom / 2), le.stroke()), 
                i.left > 0 && (le.strokeStyle = o.left, le.lineWidth = i.left, le.beginPath(), le.moveTo(0 - i.left / 2, me + i.bottom), 
                le.lineTo(0 - i.left / 2, 0), le.stroke())) : (le.lineWidth = i, le.strokeStyle = oe.grid.borderColor, 
                le.strokeRect(-i / 2, -i / 2, fe + i, me + i))), le.restore();
            }
            function O() {
                e.each(f(), function(e, t) {
                    var n, i, o, r, a, s = t.box, l = t.direction + "Axis " + t.direction + t.n + "Axis", c = "flot-" + t.direction + "-axis flot-" + t.direction + t.n + "-axis " + l, u = t.options.font || "flot-tick-label tickLabel";
                    if (re.removeText(c), t.show && 0 != t.ticks.length) for (var d = 0; d < t.ticks.length; ++d) n = t.ticks[d], 
                    !n.label || n.v < t.min || n.v > t.max || ("x" == t.direction ? (r = "center", i = pe.left + t.p2c(n.v), 
                    "bottom" == t.position ? o = s.top + s.padding : (o = s.top + s.height - s.padding, 
                    a = "bottom")) : (a = "middle", o = pe.top + t.p2c(n.v), "left" == t.position ? (i = s.left + s.width - s.padding, 
                    r = "right") : i = s.left + s.padding), re.addText(c, i, o, n.label, u, null, null, r, a));
                });
            }
            function F(e) {
                e.lines.show && U(e), e.bars.show && B(e), e.points.show && V(e);
            }
            function U(e) {
                function t(e, t, n, i, o) {
                    var r = e.points, a = e.pointsize, s = null, l = null;
                    le.beginPath();
                    for (var c = a; c < r.length; c += a) {
                        var u = r[c - a], d = r[c - a + 1], p = r[c], f = r[c + 1];
                        if (null != u && null != p) {
                            if (d <= f && d < o.min) {
                                if (f < o.min) continue;
                                u = (o.min - d) / (f - d) * (p - u) + u, d = o.min;
                            } else if (f <= d && f < o.min) {
                                if (d < o.min) continue;
                                p = (o.min - d) / (f - d) * (p - u) + u, f = o.min;
                            }
                            if (d >= f && d > o.max) {
                                if (f > o.max) continue;
                                u = (o.max - d) / (f - d) * (p - u) + u, d = o.max;
                            } else if (f >= d && f > o.max) {
                                if (d > o.max) continue;
                                p = (o.max - d) / (f - d) * (p - u) + u, f = o.max;
                            }
                            if (u <= p && u < i.min) {
                                if (p < i.min) continue;
                                d = (i.min - u) / (p - u) * (f - d) + d, u = i.min;
                            } else if (p <= u && p < i.min) {
                                if (u < i.min) continue;
                                f = (i.min - u) / (p - u) * (f - d) + d, p = i.min;
                            }
                            if (u >= p && u > i.max) {
                                if (p > i.max) continue;
                                d = (i.max - u) / (p - u) * (f - d) + d, u = i.max;
                            } else if (p >= u && p > i.max) {
                                if (u > i.max) continue;
                                f = (i.max - u) / (p - u) * (f - d) + d, p = i.max;
                            }
                            u == s && d == l || le.moveTo(i.p2c(u) + t, o.p2c(d) + n), s = p, l = f, le.lineTo(i.p2c(p) + t, o.p2c(f) + n);
                        }
                    }
                    le.stroke();
                }
                function n(e, t, n) {
                    for (var i = e.points, o = e.pointsize, r = Math.min(Math.max(0, n.min), n.max), a = 0, s = !1, l = 1, c = 0, u = 0; ;) {
                        if (o > 0 && a > i.length + o) break;
                        a += o;
                        var d = i[a - o], p = i[a - o + l], f = i[a], m = i[a + l];
                        if (s) {
                            if (o > 0 && null != d && null == f) {
                                u = a, o = -o, l = 2;
                                continue;
                            }
                            if (o < 0 && a == c + o) {
                                le.fill(), s = !1, o = -o, l = 1, a = c = u + o;
                                continue;
                            }
                        }
                        if (null != d && null != f) {
                            if (d <= f && d < t.min) {
                                if (f < t.min) continue;
                                p = (t.min - d) / (f - d) * (m - p) + p, d = t.min;
                            } else if (f <= d && f < t.min) {
                                if (d < t.min) continue;
                                m = (t.min - d) / (f - d) * (m - p) + p, f = t.min;
                            }
                            if (d >= f && d > t.max) {
                                if (f > t.max) continue;
                                p = (t.max - d) / (f - d) * (m - p) + p, d = t.max;
                            } else if (f >= d && f > t.max) {
                                if (d > t.max) continue;
                                m = (t.max - d) / (f - d) * (m - p) + p, f = t.max;
                            }
                            if (s || (le.beginPath(), le.moveTo(t.p2c(d), n.p2c(r)), s = !0), p >= n.max && m >= n.max) le.lineTo(t.p2c(d), n.p2c(n.max)), 
                            le.lineTo(t.p2c(f), n.p2c(n.max)); else if (p <= n.min && m <= n.min) le.lineTo(t.p2c(d), n.p2c(n.min)), 
                            le.lineTo(t.p2c(f), n.p2c(n.min)); else {
                                var h = d, v = f;
                                p <= m && p < n.min && m >= n.min ? (d = (n.min - p) / (m - p) * (f - d) + d, p = n.min) : m <= p && m < n.min && p >= n.min && (f = (n.min - p) / (m - p) * (f - d) + d, 
                                m = n.min), p >= m && p > n.max && m <= n.max ? (d = (n.max - p) / (m - p) * (f - d) + d, 
                                p = n.max) : m >= p && m > n.max && p <= n.max && (f = (n.max - p) / (m - p) * (f - d) + d, 
                                m = n.max), d != h && le.lineTo(t.p2c(h), n.p2c(p)), le.lineTo(t.p2c(d), n.p2c(p)), 
                                le.lineTo(t.p2c(f), n.p2c(m)), f != v && (le.lineTo(t.p2c(f), n.p2c(m)), le.lineTo(t.p2c(v), n.p2c(m)));
                            }
                        }
                    }
                }
                le.save(), le.translate(pe.left, pe.top), le.lineJoin = "round";
                var i = e.lines.lineWidth, o = e.shadowSize;
                if (i > 0 && o > 0) {
                    le.lineWidth = o, le.strokeStyle = "rgba(0,0,0,0.1)";
                    var r = Math.PI / 18;
                    t(e.datapoints, Math.sin(r) * (i / 2 + o / 2), Math.cos(r) * (i / 2 + o / 2), e.xaxis, e.yaxis), 
                    le.lineWidth = o / 2, t(e.datapoints, Math.sin(r) * (i / 2 + o / 4), Math.cos(r) * (i / 2 + o / 4), e.xaxis, e.yaxis);
                }
                le.lineWidth = i, le.strokeStyle = e.color;
                var a = $(e.lines, e.color, 0, me);
                a && (le.fillStyle = a, n(e.datapoints, e.xaxis, e.yaxis)), i > 0 && t(e.datapoints, 0, 0, e.xaxis, e.yaxis), 
                le.restore();
            }
            function V(e) {
                function t(e, t, n, i, o, r, a, s) {
                    for (var l = e.points, c = e.pointsize, u = 0; u < l.length; u += c) {
                        var d = l[u], p = l[u + 1];
                        null == d || d < r.min || d > r.max || p < a.min || p > a.max || (le.beginPath(), 
                        d = r.p2c(d), p = a.p2c(p) + i, "circle" == s ? le.arc(d, p, t, 0, o ? Math.PI : 2 * Math.PI, !1) : s(le, d, p, t, o), 
                        le.closePath(), n && (le.fillStyle = n, le.fill()), le.stroke());
                    }
                }
                le.save(), le.translate(pe.left, pe.top);
                var n = e.points.lineWidth, i = e.shadowSize, o = e.points.radius, r = e.points.symbol;
                if (0 == n && (n = 1e-4), n > 0 && i > 0) {
                    var a = i / 2;
                    le.lineWidth = a, le.strokeStyle = "rgba(0,0,0,0.1)", t(e.datapoints, o, null, a + a / 2, !0, e.xaxis, e.yaxis, r), 
                    le.strokeStyle = "rgba(0,0,0,0.2)", t(e.datapoints, o, null, a / 2, !0, e.xaxis, e.yaxis, r);
                }
                le.lineWidth = n, le.strokeStyle = e.color, t(e.datapoints, o, $(e.points, e.color), 0, !1, e.xaxis, e.yaxis, r), 
                le.restore();
            }
            function L(e, t, n, i, o, r, a, s, l, c, u) {
                var d, p, f, m, h, v, g, b, k;
                c ? (b = v = g = !0, h = !1, d = n, p = e, m = t + i, f = t + o, p < d && (k = p, 
                p = d, d = k, h = !0, v = !1)) : (h = v = g = !0, b = !1, d = e + i, p = e + o, 
                f = n, m = t, m < f && (k = m, m = f, f = k, b = !0, g = !1)), p < a.min || d > a.max || m < s.min || f > s.max || (d < a.min && (d = a.min, 
                h = !1), p > a.max && (p = a.max, v = !1), f < s.min && (f = s.min, b = !1), m > s.max && (m = s.max, 
                g = !1), d = a.p2c(d), f = s.p2c(f), p = a.p2c(p), m = s.p2c(m), r && (l.fillStyle = r(f, m), 
                l.fillRect(d, m, p - d, f - m)), u > 0 && (h || v || g || b) && (l.beginPath(), 
                l.moveTo(d, f), h ? l.lineTo(d, m) : l.moveTo(d, m), g ? l.lineTo(p, m) : l.moveTo(p, m), 
                v ? l.lineTo(p, f) : l.moveTo(p, f), b ? l.lineTo(d, f) : l.moveTo(d, f), l.stroke()));
            }
            function B(e) {
                function t(t, n, i, o, r, a) {
                    for (var s = t.points, l = t.pointsize, c = 0; c < s.length; c += l) null != s[c] && L(s[c], s[c + 1], s[c + 2], n, i, o, r, a, le, e.bars.horizontal, e.bars.lineWidth);
                }
                le.save(), le.translate(pe.left, pe.top), le.lineWidth = e.bars.lineWidth, le.strokeStyle = e.color;
                var n;
                switch (e.bars.align) {
                  case "left":
                    n = 0;
                    break;

                  case "right":
                    n = -e.bars.barWidth;
                    break;

                  default:
                    n = -e.bars.barWidth / 2;
                }
                var i = e.bars.fill ? function(t, n) {
                    return $(e.bars, e.color, t, n);
                } : null;
                t(e.datapoints, n, n + e.bars.barWidth, i, e.xaxis, e.yaxis), le.restore();
            }
            function $(t, n, i, o) {
                var r = t.fill;
                if (!r) return null;
                if (t.fillColor) return ne(t.fillColor, i, o, n);
                var a = e.color.parse(n);
                return a.a = "number" == typeof r ? r : .4, a.normalize(), a.toString();
            }
            function j() {
                if (null != oe.legend.container ? e(oe.legend.container).html("") : n.find(".legend").remove(), 
                oe.legend.show) {
                    for (var t, i, o = [], r = [], a = !1, s = oe.legend.labelFormatter, l = 0; l < ie.length; ++l) t = ie[l], 
                    t.label && (i = s ? s(t.label, t) : t.label, i && r.push({
                        label: i,
                        color: t.color
                    }));
                    if (oe.legend.sorted) if (e.isFunction(oe.legend.sorted)) r.sort(oe.legend.sorted); else if ("reverse" == oe.legend.sorted) r.reverse(); else {
                        var c = "descending" != oe.legend.sorted;
                        r.sort(function(e, t) {
                            return e.label == t.label ? 0 : e.label < t.label != c ? 1 : -1;
                        });
                    }
                    for (var l = 0; l < r.length; ++l) {
                        var u = r[l];
                        l % oe.legend.noColumns == 0 && (a && o.push("</tr>"), o.push("<tr>"), a = !0), 
                        o.push('<td class="legendColorBox"><div style="border:1px solid ' + oe.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + u.color + ';overflow:hidden"></div></div></td><td class="legendLabel">' + u.label + "</td>");
                    }
                    if (a && o.push("</tr>"), 0 != o.length) {
                        var d = '<table style="font-size:smaller;color:' + oe.grid.color + '">' + o.join("") + "</table>";
                        if (null != oe.legend.container) e(oe.legend.container).html(d); else {
                            var p = "", f = oe.legend.position, m = oe.legend.margin;
                            null == m[0] && (m = [ m, m ]), "n" == f.charAt(0) ? p += "top:" + (m[1] + pe.top) + "px;" : "s" == f.charAt(0) && (p += "bottom:" + (m[1] + pe.bottom) + "px;"), 
                            "e" == f.charAt(1) ? p += "right:" + (m[0] + pe.right) + "px;" : "w" == f.charAt(1) && (p += "left:" + (m[0] + pe.left) + "px;");
                            var h = e('<div class="legend">' + d.replace('style="', 'style="position:absolute;' + p + ";") + "</div>").appendTo(n);
                            if (0 != oe.legend.backgroundOpacity) {
                                var v = oe.legend.backgroundColor;
                                null == v && (v = oe.grid.backgroundColor, v = v && "string" == typeof v ? e.color.parse(v) : e.color.extract(h, "background-color"), 
                                v.a = 1, v = v.toString());
                                var g = h.children();
                                e('<div style="position:absolute;width:' + g.width() + "px;height:" + g.height() + "px;" + p + "background-color:" + v + ';"> </div>').prependTo(h).css("opacity", oe.legend.backgroundOpacity);
                            }
                        }
                    }
                }
            }
            function W(e, t, n) {
                var i, o, r, a = oe.grid.mouseActiveRadius, s = a * a + 1, l = null;
                for (i = ie.length - 1; i >= 0; --i) if (n(ie[i])) {
                    var c = ie[i], u = c.xaxis, d = c.yaxis, p = c.datapoints.points, f = u.c2p(e), m = d.c2p(t), h = a / u.scale, v = a / d.scale;
                    if (r = c.datapoints.pointsize, u.options.inverseTransform && (h = Number.MAX_VALUE), 
                    d.options.inverseTransform && (v = Number.MAX_VALUE), c.lines.show || c.points.show) for (o = 0; o < p.length; o += r) {
                        var g = p[o], b = p[o + 1];
                        if (null != g && !(g - f > h || g - f < -h || b - m > v || b - m < -v)) {
                            var k = Math.abs(u.p2c(g) - e), y = Math.abs(d.p2c(b) - t), x = k * k + y * y;
                            x < s && (s = x, l = [ i, o / r ]);
                        }
                    }
                    if (c.bars.show && !l) {
                        var _, w;
                        switch (c.bars.align) {
                          case "left":
                            _ = 0;
                            break;

                          case "right":
                            _ = -c.bars.barWidth;
                            break;

                          default:
                            _ = -c.bars.barWidth / 2;
                        }
                        for (w = _ + c.bars.barWidth, o = 0; o < p.length; o += r) {
                            var g = p[o], b = p[o + 1], T = p[o + 2];
                            null != g && (ie[i].bars.horizontal ? f <= Math.max(T, g) && f >= Math.min(T, g) && m >= b + _ && m <= b + w : f >= g + _ && f <= g + w && m >= Math.min(T, b) && m <= Math.max(T, b)) && (l = [ i, o / r ]);
                        }
                    }
                }
                return l ? (i = l[0], o = l[1], r = ie[i].datapoints.pointsize, {
                    datapoint: ie[i].datapoints.points.slice(o * r, (o + 1) * r),
                    dataIndex: o,
                    series: ie[i],
                    seriesIndex: i
                }) : null;
            }
            function H(e) {
                oe.grid.hoverable && Y("plothover", e, function(e) {
                    return 0 != e.hoverable;
                });
            }
            function G(e) {
                oe.grid.hoverable && Y("plothover", e, function(e) {
                    return !1;
                });
            }
            function q(e) {
                Y("plotclick", e, function(e) {
                    return 0 != e.clickable;
                });
            }
            function Y(e, t, i) {
                var o = se.offset(), r = t.pageX - o.left - pe.left, a = t.pageY - o.top - pe.top, s = m({
                    left: r,
                    top: a
                });
                s.pageX = t.pageX, s.pageY = t.pageY;
                var l = W(r, a, i);
                if (l && (l.pageX = parseInt(l.series.xaxis.p2c(l.datapoint[0]) + o.left + pe.left, 10), 
                l.pageY = parseInt(l.series.yaxis.p2c(l.datapoint[1]) + o.top + pe.top, 10)), oe.grid.autoHighlight) {
                    for (var c = 0; c < ge.length; ++c) {
                        var u = ge[c];
                        u.auto != e || l && u.series == l.series && u.point[0] == l.datapoint[0] && u.point[1] == l.datapoint[1] || Q(u.series, u.point);
                    }
                    l && K(l.series, l.datapoint, e);
                }
                n.trigger(e, [ s, l ]);
            }
            function X() {
                var e = oe.interaction.redrawOverlayInterval;
                return e == -1 ? void J() : void (be || (be = setTimeout(J, e)));
            }
            function J() {
                be = null, ce.save(), ae.clear(), ce.translate(pe.left, pe.top);
                var e, t;
                for (e = 0; e < ge.length; ++e) t = ge[e], t.series.bars.show ? te(t.series, t.point) : ee(t.series, t.point);
                ce.restore(), s(he.drawOverlay, [ ce ]);
            }
            function K(e, t, n) {
                if ("number" == typeof e && (e = ie[e]), "number" == typeof t) {
                    var i = e.datapoints.pointsize;
                    t = e.datapoints.points.slice(i * t, i * (t + 1));
                }
                var o = Z(e, t);
                o == -1 ? (ge.push({
                    series: e,
                    point: t,
                    auto: n
                }), X()) : n || (ge[o].auto = !1);
            }
            function Q(e, t) {
                if (null == e && null == t) return ge = [], void X();
                if ("number" == typeof e && (e = ie[e]), "number" == typeof t) {
                    var n = e.datapoints.pointsize;
                    t = e.datapoints.points.slice(n * t, n * (t + 1));
                }
                var i = Z(e, t);
                i != -1 && (ge.splice(i, 1), X());
            }
            function Z(e, t) {
                for (var n = 0; n < ge.length; ++n) {
                    var i = ge[n];
                    if (i.series == e && i.point[0] == t[0] && i.point[1] == t[1]) return n;
                }
                return -1;
            }
            function ee(t, n) {
                var i = n[0], o = n[1], r = t.xaxis, a = t.yaxis, s = "string" == typeof t.highlightColor ? t.highlightColor : e.color.parse(t.color).scale("a", .5).toString();
                if (!(i < r.min || i > r.max || o < a.min || o > a.max)) {
                    var l = t.points.radius + t.points.lineWidth / 2;
                    ce.lineWidth = l, ce.strokeStyle = s;
                    var c = 1.5 * l;
                    i = r.p2c(i), o = a.p2c(o), ce.beginPath(), "circle" == t.points.symbol ? ce.arc(i, o, c, 0, 2 * Math.PI, !1) : t.points.symbol(ce, i, o, c, !1), 
                    ce.closePath(), ce.stroke();
                }
            }
            function te(t, n) {
                var i, o = "string" == typeof t.highlightColor ? t.highlightColor : e.color.parse(t.color).scale("a", .5).toString(), r = o;
                switch (t.bars.align) {
                  case "left":
                    i = 0;
                    break;

                  case "right":
                    i = -t.bars.barWidth;
                    break;

                  default:
                    i = -t.bars.barWidth / 2;
                }
                ce.lineWidth = t.bars.lineWidth, ce.strokeStyle = o, L(n[0], n[1], n[2] || 0, i, i + t.bars.barWidth, function() {
                    return r;
                }, t.xaxis, t.yaxis, ce, t.bars.horizontal, t.bars.lineWidth);
            }
            function ne(t, n, i, o) {
                if ("string" == typeof t) return t;
                for (var r = le.createLinearGradient(0, i, 0, n), a = 0, s = t.colors.length; a < s; ++a) {
                    var l = t.colors[a];
                    if ("string" != typeof l) {
                        var c = e.color.parse(o);
                        null != l.brightness && (c = c.scale("rgb", l.brightness)), null != l.opacity && (c.a *= l.opacity), 
                        l = c.toString();
                    }
                    r.addColorStop(a / (s - 1), l);
                }
                return r;
            }
            var ie = [], oe = {
                colors: [ "#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed" ],
                legend: {
                    show: !0,
                    noColumns: 1,
                    labelFormatter: null,
                    labelBoxBorderColor: "#ccc",
                    container: null,
                    position: "ne",
                    margin: 5,
                    backgroundColor: null,
                    backgroundOpacity: .85,
                    sorted: null
                },
                xaxis: {
                    show: null,
                    position: "bottom",
                    mode: null,
                    font: null,
                    color: null,
                    tickColor: null,
                    transform: null,
                    inverseTransform: null,
                    min: null,
                    max: null,
                    autoscaleMargin: null,
                    ticks: null,
                    tickFormatter: null,
                    labelWidth: null,
                    labelHeight: null,
                    reserveSpace: null,
                    tickLength: null,
                    alignTicksWithAxis: null,
                    tickDecimals: null,
                    tickSize: null,
                    minTickSize: null
                },
                yaxis: {
                    autoscaleMargin: .02,
                    position: "left"
                },
                xaxes: [],
                yaxes: [],
                series: {
                    points: {
                        show: !1,
                        radius: 3,
                        lineWidth: 2,
                        fill: !0,
                        fillColor: "#ffffff",
                        symbol: "circle"
                    },
                    lines: {
                        lineWidth: 2,
                        fill: !1,
                        fillColor: null,
                        steps: !1
                    },
                    bars: {
                        show: !1,
                        lineWidth: 2,
                        barWidth: 1,
                        fill: !0,
                        fillColor: null,
                        align: "left",
                        horizontal: !1,
                        zero: !0
                    },
                    shadowSize: 3,
                    highlightColor: null
                },
                grid: {
                    show: !0,
                    aboveData: !1,
                    color: "#545454",
                    backgroundColor: null,
                    borderColor: null,
                    tickColor: null,
                    margin: 0,
                    labelMargin: 5,
                    axisMargin: 8,
                    borderWidth: 2,
                    minBorderMargin: null,
                    markings: null,
                    markingsColor: "#f4f4f4",
                    markingsLineWidth: 2,
                    clickable: !1,
                    hoverable: !1,
                    autoHighlight: !0,
                    mouseActiveRadius: 10
                },
                interaction: {
                    redrawOverlayInterval: 1e3 / 60
                },
                hooks: {}
            }, re = null, ae = null, se = null, le = null, ce = null, ue = [], de = [], pe = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            }, fe = 0, me = 0, he = {
                processOptions: [],
                processRawData: [],
                processDatapoints: [],
                processOffset: [],
                drawBackground: [],
                drawSeries: [],
                draw: [],
                bindEvents: [],
                drawOverlay: [],
                shutdown: []
            }, ve = this;
            ve.setData = u, ve.setupGrid = E, ve.draw = A, ve.getPlaceholder = function() {
                return n;
            }, ve.getCanvas = function() {
                return re.element;
            }, ve.getPlotOffset = function() {
                return pe;
            }, ve.width = function() {
                return fe;
            }, ve.height = function() {
                return me;
            }, ve.offset = function() {
                var e = se.offset();
                return e.left += pe.left, e.top += pe.top, e;
            }, ve.getData = function() {
                return ie;
            }, ve.getAxes = function() {
                var t = {};
                return e.each(ue.concat(de), function(e, n) {
                    n && (t[n.direction + (1 != n.n ? n.n : "") + "axis"] = n);
                }), t;
            }, ve.getXAxes = function() {
                return ue;
            }, ve.getYAxes = function() {
                return de;
            }, ve.c2p = m, ve.p2c = h, ve.getOptions = function() {
                return oe;
            }, ve.highlight = K, ve.unhighlight = Q, ve.triggerRedrawOverlay = X, ve.pointOffset = function(e) {
                return {
                    left: parseInt(ue[p(e, "x") - 1].p2c(+e.x) + pe.left, 10),
                    top: parseInt(de[p(e, "y") - 1].p2c(+e.y) + pe.top, 10)
                };
            }, ve.shutdown = x, ve.destroy = function() {
                x(), n.removeData("plot").empty(), ie = [], oe = null, re = null, ae = null, se = null, 
                le = null, ce = null, ue = [], de = [], he = null, ge = [], ve = null;
            }, ve.resize = function() {
                var e = n.width(), t = n.height();
                re.resize(e, t), ae.resize(e, t);
            }, ve.hooks = he, l(ve), c(r), k(), u(o), E(), A(), y();
            var ge = [], be = null;
        }
        function i(e, t) {
            return t * Math.floor(e / t);
        }
        var o = Object.prototype.hasOwnProperty;
        e.fn.detach || (e.fn.detach = function() {
            return this.each(function() {
                this.parentNode && this.parentNode.removeChild(this);
            });
        }), t.prototype.resize = function(e, t) {
            if (e <= 0 || t <= 0) throw new Error("Invalid dimensions for plot, width = " + e + ", height = " + t);
            var n = this.element, i = this.context, o = this.pixelRatio;
            this.width != e && (n.width = e * o, n.style.width = e + "px", this.width = e), 
            this.height != t && (n.height = t * o, n.style.height = t + "px", this.height = t), 
            i.restore(), i.save(), i.scale(o, o);
        }, t.prototype.clear = function() {
            this.context.clearRect(0, 0, this.width, this.height);
        }, t.prototype.render = function() {
            var e = this._textCache;
            for (var t in e) if (o.call(e, t)) {
                var n = this.getTextLayer(t), i = e[t];
                n.hide();
                for (var r in i) if (o.call(i, r)) {
                    var a = i[r];
                    for (var s in a) if (o.call(a, s)) {
                        for (var l, c = a[s].positions, u = 0; l = c[u]; u++) l.active ? l.rendered || (n.append(l.element), 
                        l.rendered = !0) : (c.splice(u--, 1), l.rendered && l.element.detach());
                        0 == c.length && delete a[s];
                    }
                }
                n.show();
            }
        }, t.prototype.getTextLayer = function(t) {
            var n = this.text[t];
            return null == n && (null == this.textContainer && (this.textContainer = e("<div class='flot-text'></div>").css({
                position: "absolute",
                top: 0,
                left: 0,
                bottom: 0,
                right: 0,
                "font-size": "smaller",
                color: "#545454"
            }).insertAfter(this.element)), n = this.text[t] = e("<div></div>").addClass(t).css({
                position: "absolute",
                top: 0,
                left: 0,
                bottom: 0,
                right: 0
            }).appendTo(this.textContainer)), n;
        }, t.prototype.getTextInfo = function(t, n, i, o, r) {
            var a, s, l, c;
            if (n = "" + n, a = "object" == typeof i ? i.style + " " + i.variant + " " + i.weight + " " + i.size + "px/" + i.lineHeight + "px " + i.family : i, 
            s = this._textCache[t], null == s && (s = this._textCache[t] = {}), l = s[a], null == l && (l = s[a] = {}), 
            c = l[n], null == c) {
                var u = e("<div></div>").html(n).css({
                    position: "absolute",
                    "max-width": r,
                    top: -9999
                }).appendTo(this.getTextLayer(t));
                "object" == typeof i ? u.css({
                    font: a,
                    color: i.color
                }) : "string" == typeof i && u.addClass(i), c = l[n] = {
                    width: u.outerWidth(!0),
                    height: u.outerHeight(!0),
                    element: u,
                    positions: []
                }, u.detach();
            }
            return c;
        }, t.prototype.addText = function(e, t, n, i, o, r, a, s, l) {
            var c = this.getTextInfo(e, i, o, r, a), u = c.positions;
            "center" == s ? t -= c.width / 2 : "right" == s && (t -= c.width), "middle" == l ? n -= c.height / 2 : "bottom" == l && (n -= c.height);
            for (var d, p = 0; d = u[p]; p++) if (d.x == t && d.y == n) return void (d.active = !0);
            d = {
                active: !0,
                rendered: !1,
                element: u.length ? c.element.clone() : c.element,
                x: t,
                y: n
            }, u.push(d), d.element.css({
                top: Math.round(n),
                left: Math.round(t),
                "text-align": s
            });
        }, t.prototype.removeText = function(e, t, n, i, r, a) {
            if (null == i) {
                var s = this._textCache[e];
                if (null != s) for (var l in s) if (o.call(s, l)) {
                    var c = s[l];
                    for (var u in c) if (o.call(c, u)) for (var d, p = c[u].positions, f = 0; d = p[f]; f++) d.active = !1;
                }
            } else for (var d, p = this.getTextInfo(e, i, r, a).positions, f = 0; d = p[f]; f++) d.x == t && d.y == n && (d.active = !1);
        }, e.plot = function(t, i, o) {
            var r = new n(e(t), i, o, e.plot.plugins);
            return r;
        }, e.plot.version = "0.8.3", e.plot.plugins = [], e.fn.plot = function(t, n) {
            return this.each(function() {
                e.plot(this, t, n);
            });
        };
    }(jQuery);
}, function(e, t) {
    !function(e) {
        function t(t) {
            function n(e) {
                m.active && (c(e), t.getPlaceholder().trigger("plotselecting", [ r() ]));
            }
            function i(t) {
                1 == t.which && (document.body.focus(), void 0 !== document.onselectstart && null == h.onselectstart && (h.onselectstart = document.onselectstart, 
                document.onselectstart = function() {
                    return !1;
                }), void 0 !== document.ondrag && null == h.ondrag && (h.ondrag = document.ondrag, 
                document.ondrag = function() {
                    return !1;
                }), l(m.first, t), m.active = !0, v = function(e) {
                    o(e);
                }, e(document).one("mouseup", v));
            }
            function o(e) {
                return v = null, void 0 !== document.onselectstart && (document.onselectstart = h.onselectstart), 
                void 0 !== document.ondrag && (document.ondrag = h.ondrag), m.active = !1, c(e), 
                f() ? a() : (t.getPlaceholder().trigger("plotunselected", []), t.getPlaceholder().trigger("plotselecting", [ null ])), 
                !1;
            }
            function r() {
                if (!f()) return null;
                if (!m.show) return null;
                var n = {}, i = m.first, o = m.second;
                return e.each(t.getAxes(), function(e, t) {
                    if (t.used) {
                        var r = t.c2p(i[t.direction]), a = t.c2p(o[t.direction]);
                        n[e] = {
                            from: Math.min(r, a),
                            to: Math.max(r, a)
                        };
                    }
                }), n;
            }
            function a() {
                var e = r();
                t.getPlaceholder().trigger("plotselected", [ e ]), e.xaxis && e.yaxis && t.getPlaceholder().trigger("selected", [ {
                    x1: e.xaxis.from,
                    y1: e.yaxis.from,
                    x2: e.xaxis.to,
                    y2: e.yaxis.to
                } ]);
            }
            function s(e, t, n) {
                return t < e ? e : t > n ? n : t;
            }
            function l(e, n) {
                var i = t.getOptions(), o = t.getPlaceholder().offset(), r = t.getPlotOffset();
                e.x = s(0, n.pageX - o.left - r.left, t.width()), e.y = s(0, n.pageY - o.top - r.top, t.height()), 
                "y" == i.selection.mode && (e.x = e == m.first ? 0 : t.width()), "x" == i.selection.mode && (e.y = e == m.first ? 0 : t.height());
            }
            function c(e) {
                null != e.pageX && (l(m.second, e), f() ? (m.show = !0, t.triggerRedrawOverlay()) : u(!0));
            }
            function u(e) {
                m.show && (m.show = !1, t.triggerRedrawOverlay(), e || t.getPlaceholder().trigger("plotunselected", []));
            }
            function d(e, n) {
                var i, o, r, a, s = t.getAxes();
                for (var l in s) if (i = s[l], i.direction == n && (a = n + i.n + "axis", e[a] || 1 != i.n || (a = n + "axis"), 
                e[a])) {
                    o = e[a].from, r = e[a].to;
                    break;
                }
                if (e[a] || (i = "x" == n ? t.getXAxes()[0] : t.getYAxes()[0], o = e[n + "1"], r = e[n + "2"]), 
                null != o && null != r && o > r) {
                    var c = o;
                    o = r, r = c;
                }
                return {
                    from: o,
                    to: r,
                    axis: i
                };
            }
            function p(e, n) {
                var i, o = t.getOptions();
                "y" == o.selection.mode ? (m.first.x = 0, m.second.x = t.width()) : (i = d(e, "x"), 
                m.first.x = i.axis.p2c(i.from), m.second.x = i.axis.p2c(i.to)), "x" == o.selection.mode ? (m.first.y = 0, 
                m.second.y = t.height()) : (i = d(e, "y"), m.first.y = i.axis.p2c(i.from), m.second.y = i.axis.p2c(i.to)), 
                m.show = !0, t.triggerRedrawOverlay(), !n && f() && a();
            }
            function f() {
                var e = t.getOptions().selection.minSize;
                return Math.abs(m.second.x - m.first.x) >= e && Math.abs(m.second.y - m.first.y) >= e;
            }
            var m = {
                first: {
                    x: -1,
                    y: -1
                },
                second: {
                    x: -1,
                    y: -1
                },
                show: !1,
                active: !1
            }, h = {}, v = null;
            t.clearSelection = u, t.setSelection = p, t.getSelection = r, t.hooks.bindEvents.push(function(e, t) {
                var o = e.getOptions();
                null != o.selection.mode && (t.mousemove(n), t.mousedown(i));
            }), t.hooks.drawOverlay.push(function(t, n) {
                if (m.show && f()) {
                    var i = t.getPlotOffset(), o = t.getOptions();
                    n.save(), n.translate(i.left, i.top);
                    var r = e.color.parse(o.selection.color);
                    n.strokeStyle = r.scale("a", .8).toString(), n.lineWidth = 1, n.lineJoin = o.selection.shape, 
                    n.fillStyle = r.scale("a", .4).toString();
                    var a = Math.min(m.first.x, m.second.x) + .5, s = Math.min(m.first.y, m.second.y) + .5, l = Math.abs(m.second.x - m.first.x) - 1, c = Math.abs(m.second.y - m.first.y) - 1;
                    n.fillRect(a, s, l, c), n.strokeRect(a, s, l, c), n.restore();
                }
            }), t.hooks.shutdown.push(function(t, o) {
                o.unbind("mousemove", n), o.unbind("mousedown", i), v && e(document).unbind("mouseup", v);
            });
        }
        e.plot.plugins.push({
            init: t,
            options: {
                selection: {
                    mode: null,
                    color: "#e8cfac",
                    shape: "round",
                    minSize: 5
                }
            },
            name: "selection",
            version: "1.1"
        });
    }(jQuery);
}, function(e, t) {
    !function(e) {
        function t(e, t) {
            return t * Math.floor(e / t);
        }
        function n(e, t, n, i) {
            if ("function" == typeof e.strftime) return e.strftime(t);
            var o = function(e, t) {
                return e = "" + e, t = "" + (null == t ? "0" : t), 1 == e.length ? t + e : e;
            }, r = [], a = !1, s = e.getHours(), l = s < 12;
            null == n && (n = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]), 
            null == i && (i = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ]);
            var c;
            c = s > 12 ? s - 12 : 0 == s ? 12 : s;
            for (var u = 0; u < t.length; ++u) {
                var d = t.charAt(u);
                if (a) {
                    switch (d) {
                      case "a":
                        d = "" + i[e.getDay()];
                        break;

                      case "b":
                        d = "" + n[e.getMonth()];
                        break;

                      case "d":
                        d = o(e.getDate());
                        break;

                      case "e":
                        d = o(e.getDate(), " ");
                        break;

                      case "h":
                      case "H":
                        d = o(s);
                        break;

                      case "I":
                        d = o(c);
                        break;

                      case "l":
                        d = o(c, " ");
                        break;

                      case "m":
                        d = o(e.getMonth() + 1);
                        break;

                      case "M":
                        d = o(e.getMinutes());
                        break;

                      case "q":
                        d = "" + (Math.floor(e.getMonth() / 3) + 1);
                        break;

                      case "S":
                        d = o(e.getSeconds());
                        break;

                      case "y":
                        d = o(e.getFullYear() % 100);
                        break;

                      case "Y":
                        d = "" + e.getFullYear();
                        break;

                      case "p":
                        d = l ? "am" : "pm";
                        break;

                      case "P":
                        d = l ? "AM" : "PM";
                        break;

                      case "w":
                        d = "" + e.getDay();
                    }
                    r.push(d), a = !1;
                } else "%" == d ? a = !0 : r.push(d);
            }
            return r.join("");
        }
        function i(e) {
            function t(e, t, n, i) {
                e[t] = function() {
                    return n[i].apply(n, arguments);
                };
            }
            var n = {
                date: e
            };
            void 0 != e.strftime && t(n, "strftime", e, "strftime"), t(n, "getTime", e, "getTime"), 
            t(n, "setTime", e, "setTime");
            for (var i = [ "Date", "Day", "FullYear", "Hours", "Milliseconds", "Minutes", "Month", "Seconds" ], o = 0; o < i.length; o++) t(n, "get" + i[o], e, "getUTC" + i[o]), 
            t(n, "set" + i[o], e, "setUTC" + i[o]);
            return n;
        }
        function o(e, t) {
            if ("browser" == t.timezone) return new Date(e);
            if (t.timezone && "utc" != t.timezone) {
                if ("undefined" != typeof timezoneJS && "undefined" != typeof timezoneJS.Date) {
                    var n = new timezoneJS.Date();
                    return n.setTimezone(t.timezone), n.setTime(e), n;
                }
                return i(new Date(e));
            }
            return i(new Date(e));
        }
        function r(i) {
            i.hooks.processOptions.push(function(i, r) {
                e.each(i.getAxes(), function(e, i) {
                    var r = i.options;
                    "time" == r.mode && (i.tickGenerator = function(e) {
                        var n = [], i = o(e.min, r), a = 0, l = r.tickSize && "quarter" === r.tickSize[1] || r.minTickSize && "quarter" === r.minTickSize[1] ? u : c;
                        null != r.minTickSize && (a = "number" == typeof r.tickSize ? r.tickSize : r.minTickSize[0] * s[r.minTickSize[1]]);
                        for (var d = 0; d < l.length - 1 && !(e.delta < (l[d][0] * s[l[d][1]] + l[d + 1][0] * s[l[d + 1][1]]) / 2 && l[d][0] * s[l[d][1]] >= a); ++d) ;
                        var p = l[d][0], f = l[d][1];
                        if ("year" == f) {
                            if (null != r.minTickSize && "year" == r.minTickSize[1]) p = Math.floor(r.minTickSize[0]); else {
                                var m = Math.pow(10, Math.floor(Math.log(e.delta / s.year) / Math.LN10)), h = e.delta / s.year / m;
                                p = h < 1.5 ? 1 : h < 3 ? 2 : h < 7.5 ? 5 : 10, p *= m;
                            }
                            p < 1 && (p = 1);
                        }
                        e.tickSize = r.tickSize || [ p, f ];
                        var v = e.tickSize[0];
                        f = e.tickSize[1];
                        var g = v * s[f];
                        "second" == f ? i.setSeconds(t(i.getSeconds(), v)) : "minute" == f ? i.setMinutes(t(i.getMinutes(), v)) : "hour" == f ? i.setHours(t(i.getHours(), v)) : "month" == f ? i.setMonth(t(i.getMonth(), v)) : "quarter" == f ? i.setMonth(3 * t(i.getMonth() / 3, v)) : "year" == f && i.setFullYear(t(i.getFullYear(), v)), 
                        i.setMilliseconds(0), g >= s.minute && i.setSeconds(0), g >= s.hour && i.setMinutes(0), 
                        g >= s.day && i.setHours(0), g >= 4 * s.day && i.setDate(1), g >= 2 * s.month && i.setMonth(t(i.getMonth(), 3)), 
                        g >= 2 * s.quarter && i.setMonth(t(i.getMonth(), 6)), g >= s.year && i.setMonth(0);
                        var b, k = 0, y = Number.NaN;
                        do if (b = y, y = i.getTime(), n.push(y), "month" == f || "quarter" == f) if (v < 1) {
                            i.setDate(1);
                            var x = i.getTime();
                            i.setMonth(i.getMonth() + ("quarter" == f ? 3 : 1));
                            var _ = i.getTime();
                            i.setTime(y + k * s.hour + (_ - x) * v), k = i.getHours(), i.setHours(0);
                        } else i.setMonth(i.getMonth() + v * ("quarter" == f ? 3 : 1)); else "year" == f ? i.setFullYear(i.getFullYear() + v) : i.setTime(y + g); while (y < e.max && y != b);
                        return n;
                    }, i.tickFormatter = function(e, t) {
                        var i = o(e, t.options);
                        if (null != r.timeformat) return n(i, r.timeformat, r.monthNames, r.dayNames);
                        var a, l = t.options.tickSize && "quarter" == t.options.tickSize[1] || t.options.minTickSize && "quarter" == t.options.minTickSize[1], c = t.tickSize[0] * s[t.tickSize[1]], u = t.max - t.min, d = r.twelveHourClock ? " %p" : "", p = r.twelveHourClock ? "%I" : "%H";
                        a = c < s.minute ? p + ":%M:%S" + d : c < s.day ? u < 2 * s.day ? p + ":%M" + d : "%b %d " + p + ":%M" + d : c < s.month ? "%b %d" : l && c < s.quarter || !l && c < s.year ? u < s.year ? "%b" : "%b %Y" : l && c < s.year ? u < s.year ? "Q%q" : "Q%q %Y" : "%Y";
                        var f = n(i, a, r.monthNames, r.dayNames);
                        return f;
                    });
                });
            });
        }
        var a = {
            xaxis: {
                timezone: null,
                timeformat: null,
                twelveHourClock: !1,
                monthNames: null
            }
        }, s = {
            second: 1e3,
            minute: 6e4,
            hour: 36e5,
            day: 864e5,
            month: 2592e6,
            quarter: 7776e6,
            year: 525949.2 * 60 * 1e3
        }, l = [ [ 1, "second" ], [ 2, "second" ], [ 5, "second" ], [ 10, "second" ], [ 30, "second" ], [ 1, "minute" ], [ 2, "minute" ], [ 5, "minute" ], [ 10, "minute" ], [ 30, "minute" ], [ 1, "hour" ], [ 2, "hour" ], [ 4, "hour" ], [ 8, "hour" ], [ 12, "hour" ], [ 1, "day" ], [ 2, "day" ], [ 3, "day" ], [ .25, "month" ], [ .5, "month" ], [ 1, "month" ], [ 2, "month" ] ], c = l.concat([ [ 3, "month" ], [ 6, "month" ], [ 1, "year" ] ]), u = l.concat([ [ 1, "quarter" ], [ 2, "quarter" ], [ 1, "year" ] ]);
        e.plot.plugins.push({
            init: r,
            options: a,
            name: "time",
            version: "1.0"
        }), e.plot.formatDate = n, e.plot.dateGenerator = o;
    }(jQuery);
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e) {
            function t(e, t, n, i, r, s) {
                var l = {
                    cursor: s.__CURSOR,
                    time: r,
                    message: n,
                    service: e
                };
                return i > 1 && (l.count = i), "abrt-notification" === e ? (l.problem = !0, l.service = s.PROBLEM_BINARY) : t < 4 && (l.warning = !0), 
                o.render(a, l);
            }
            function n() {
                return d;
            }
            function i(e) {
                return o.render(r, {
                    day: e
                });
            }
            function c(e) {
                var t = document.createElement("div");
                return t.innerHTML = e.trim(), t.children[0];
            }
            e.jquery && (e = e[0]), o.parse(r), o.parse(a), o.parse(s);
            var u = l("Reboot"), d = o.render(s, {
                message: u
            });
            return {
                render_line: t,
                render_day_header: i,
                render_reboot_separator: n,
                append: function(t) {
                    "string" == typeof t && (t = c(t)), e.appendChild(t);
                },
                prepend: function(t) {
                    "string" == typeof t && (t = c(t)), e.firstChild ? e.insertBefore(t, e.firstChild) : e.appendChild(t);
                },
                remove_last: function() {
                    e.lastChild && e.removeChild(e.lastChild);
                },
                remove_first: function() {
                    e.firstChild && e.removeChild(e.firstChild);
                }
            };
        }
        var i = n(7), o = n(10), r = n(20), a = n(21), s = n(22), l = i.gettext, c = i.gettext, u = {};
        u.journalctl = function() {
            function e() {
                var e, t;
                if (d.length && u.length > 0) for (e = u, u = [], t = 0; t < d.length; t++) d[t].apply(s, [ e ]); else window.clearInterval(p), 
                p = null;
            }
            var t, n, o = [], r = {
                follow: !0
            };
            for (t = 0; t < arguments.length; t++) if (n = arguments[t], "string" == typeof n) o.push(n); else if ("object" == typeof n) {
                if (!(n instanceof Array)) {
                    i.extend(r, n);
                    break;
                }
                o.push.apply(o, n);
            } else console.warn("journal.journalctl called with invalid argument:", n);
            void 0 === r.count && (r.follow ? r.count = 10 : r.count = null);
            var a = [ "journalctl", "-q", "--output=json" ];
            r.count ? a.push("--lines=" + r.count) : a.push("--no-tail"), r.directory && a.push("--directory=" + r.directory), 
            r.boot ? a.push("--boot=" + r.boot) : void 0 !== r.boot && a.push("--boot"), r.since && a.push("--since=" + r.since), 
            r.until && a.push("--until=" + r.until), r.cursor && a.push("--cursor=" + r.cursor), 
            r.after && a.push("--after=" + r.after), r.reverse ? a.push("--reverse") : r.follow && a.push("--follow"), 
            a.push("--"), a.push.apply(a, o);
            var s, l = new i.defer(), c = "", u = [], d = [], p = null, f = i.spawn(a, {
                host: r.host,
                batch: 8192,
                latency: 300,
                superuser: "try"
            }).stream(function(t) {
                c && (t = c + t), c = "";
                var n = t.split("\n"), i = n.length - 1;
                n.forEach(function(e, t) {
                    if (t == i) c = e; else if (e && 0 !== e.indexOf("-- ")) try {
                        u.push(JSON.parse(e));
                    } catch (t) {
                        console.warn(t, e);
                    }
                }), d.length && null === p && (p = window.setInterval(e, 300));
            }).done(function() {
                e(), l.resolve(u);
            }).fail(function(t) {
                "cancelled" == t.problem || 1 === t.exit_status ? (e(), l.resolve(u)) : l.reject(t);
            }).always(function() {
                window.clearInterval(p);
            });
            return s = l.promise(), s.stream = function(e) {
                return d.push(e), this;
            }, s.stop = function() {
                f.close("cancelled");
            }, s;
        }, u.printable = function(e) {
            return void 0 === e || null === e ? l("[no data]") : "string" == typeof e ? e : void 0 !== e.length ? i.format(l("[$0 bytes of binary data]"), e.length) : l("[binary data]");
        };
        var d = [ c("month-name", "January"), c("month-name", "February"), c("month-name", "March"), c("month-name", "April"), c("month-name", "May"), c("month-name", "June"), c("month-name", "July"), c("month-name", "August"), c("month-name", "September"), c("month-name", "October"), c("month-name", "November"), c("month-name", "December") ];
        u.renderer = function(e) {
            function n(e) {
                var t = {};
                for (var n in e) t[n] = e[n];
                return t;
            }
            function i(e) {
                function t(e) {
                    var t = e.toFixed();
                    return 1 == t.length && (t = "0" + t), t;
                }
                var n = new Date(e.__REALTIME_TIMESTAMP / 1e3);
                return {
                    cursor: e.__CURSOR,
                    full: e,
                    day: d[n.getMonth()] + " " + n.getDate().toFixed() + ", " + n.getFullYear().toFixed(),
                    time: t(n.getHours()) + ":" + t(n.getMinutes()),
                    bootid: e._BOOT_ID,
                    ident: e.SYSLOG_IDENTIFIER || e._COMM,
                    prio: e.PRIORITY,
                    message: u.printable(e.MESSAGE)
                };
            }
            function o(e, t) {
                return e && t && e.day == t.day && e.bootid == t.bootid && e.ident == t.ident && e.prio == t.prio && e.message == t.message;
            }
            function r(e) {
                return h.render_line(e.entry.ident, e.entry.prio, e.entry.message, e.count, e.last_time, e.entry.full);
            }
            function a() {
                v === g && v.entry && (v = n(g));
            }
            function s() {
                v.header_present && (h.remove_first(), v.header_present = !1), v.line_present && (h.remove_first(), 
                v.line_present = !1), v.entry && (h.prepend(r(v)), v.line_present = !0);
            }
            function l(e) {
                var t = i(e);
                o(v.entry, t) ? (v.count += 1, v.first_time = t.time) : (s(), v.entry && (t.bootid != v.entry.bootid && h.prepend(h.render_reboot_separator()), 
                t.day != v.entry.day && h.prepend(h.render_day_header(v.entry.day))), a(), v.entry = t, 
                v.count = 1, v.first_time = v.last_time = t.time, v.line_present = !1);
            }
            function c() {
                s(), v.entry && (h.prepend(h.render_day_header(v.entry.day)), v.header_present = !0);
            }
            function p() {
                g.line_present && (h.remove_last(), g.line_present = !1), g.entry && (h.append(r(g)), 
                g.line_present = !0);
            }
            function f(e) {
                var t = i(e);
                o(g.entry, t) ? (g.count += 1, g.last_time = t.time) : (p(), g.entry && t.day == g.entry.day || (h.append(h.render_day_header(t.day)), 
                g.header_present = !0), g.entry && t.bootid != g.entry.bootid && h.append(h.render_reboot_separator()), 
                a(), g.entry = t, g.count = 1, g.first_time = g.last_time = t.time, g.line_present = !1);
            }
            function m() {
                p();
            }
            var h;
            h = e.render_line ? e : t(e);
            var v, g;
            return v = g = {}, {
                prepend: l,
                prepend_flush: c,
                append: f,
                append_flush: m
            };
        }, u.logbox = function(e, t) {
            function n() {
                for (var e = u.renderer(o); o.firstChild; ) o.removeChild(o.firstChild);
                for (var t = 0; t < i.length; t++) e.prepend(i[t]);
                e.prepend_flush(), i.length > 0 ? o.removeAttribute("hidden") : o.setAttribute("hidden", "hidden");
            }
            var i = [], o = document.createElement("div");
            n();
            var r = u.journalctl(e, {
                count: t
            }).stream(function(e) {
                i = i.concat(e), i.length > t && (i = i.slice(-t)), n();
            }).fail(function(e) {
                o.appendChild(document.createTextNode(e.message)), o.removeAttribute("hidden");
            });
            return r.promise(o);
        }, e.exports = u;
    }();
}, function(e, t) {
    e.exports = '<div class="panel-heading">{{day}}</div>\n';
}, function(e, t) {
    e.exports = '<div class="cockpit-logline" data-cursor="{{cursor}}">\n  <div class="cockpit-log-warning">{{#warning}}\n    <i class="fa fa-exclamation-triangle"></i>\n  {{/warning}}{{#problem}}\n    <i class="fa fa-times-circle-o"></i>\n  {{/problem}}\n  </div>\n  <div class="cockpit-log-time">{{time}}</div>\n  <span class="cockpit-log-message">{{message}}</span>\n  {{! if we have count (repeated messages), show service name and badge - otherwise just the service }}\n  {{#count}}\n  <div class="cockpit-log-service-container">\n    <div class="cockpit-log-service-reduced">{{service}}</div>\n    <span class="badge">{{count}}&#160;<i class="fa fa-caret-right"></i></span>\n  </div>\n  {{/count}}{{^count}}\n  <div class="cockpit-log-service">{{service}}</div>\n  {{/count}}\n</div>\n';
}, function(e, t) {
    e.exports = '<div class="cockpit-logline">\n  {{! placeholders for correct message alignment }}\n  <div class="cockpit-log-warning"></div>\n  <span class="cockpit-log-message cockpit-logmsg-reboot">{{message}}</span>\n</div>\n';
}, function(e, t, n) {
    "use strict";
    !function() {
        function t() {
            s = o("#storage-dialog-tmpl").html(), a.parse(s);
        }
        function i(e) {
            function t(e) {
                var t = o(this).hasClass("collapsed");
                t ? (o(this).removeClass("collapsed"), o(this).find(".fa").removeClass("fa-angle-right").addClass("fa-angle-down")) : (o(this).addClass("collapsed"), 
                o(this).find(".fa").removeClass("fa-angle-down").addClass("fa-angle-right")), v();
            }
            function n(e) {
                var t = o(this), n = o(e.target).parent("tr");
                t.find("tr").removeClass("highlight-ct"), n.addClass("highlight-ct");
            }
            function i(e) {
                if (e.hasClass("disabled")) return !1;
                var t = e.parents(".dropdown");
                t.find("button span").first().text(e.text()), t.val(e.attr("value")), t.find("li.selected").removeClass("selected"), 
                e.addClass("selected"), t.trigger("change", []);
            }
            function u(e) {
                var t = e.Value || e.Max, n = y.find('[data-field="' + e.SizeSlider + '"]'), i = o("<div class='slider'>").append(o("<div class='slider-bar'>").append(o("<div class='slider-thumb'>")));
                o(i).slider(), n.data("max", e.Max), n.data("round", e.Round), n.find(".slider").replaceWith(i), 
                o(i).on("change", d), n.find(".size-text").on("change", p), n.find(".size-unit").on("change", f), 
                i.prop("value", t / e.Max), i.trigger("change", [ t / e.Max ]);
            }
            function d(e, t) {
                var n = o(this).parents(".size-slider"), i = n.find(".size-text"), a = n.find(".size-unit"), s = n.data("max"), l = n.data("round");
                t *= s, l && (t = Math.round(t / l) * l), t < 0 && (t = 0), t > s && (t = s), n.val(t), 
                i.val(r.format_number(t / +a.val()));
            }
            function p(e) {
                var t = o(this), n = t.parents(".size-slider"), i = n.find(".size-unit"), a = +i.val(), s = n.find(".slider"), l = n.data("max"), c = +t.val() * a, u = r.format_number(l / a), d = +u * a;
                c == d && (c = l), s.prop("value", c / l), n.val(c);
            }
            function f(e) {
                var t = o(this), n = t.parents(".size-slider"), i = n.find(".size-text");
                i.val(r.format_number(+n.val() / +t.val()));
            }
            function m(e) {
                return e.TextInput || e.PassInput || e.SelectOne || e.SelectMany || e.SizeInput || e.SizeSlider || e.CheckBox || e.Arrow || e.SelectRow;
            }
            function h() {
                var t = {};
                return e.Fields.forEach(function(e) {
                    var n = m(e), i = y.find('[data-field="' + n + '"]');
                    e.TextInput ? t[n] = i.val() : e.PassInput ? t[n] = i.val() : e.SelectOne ? t[n] = i.val() : e.SizeInput ? t[n] = 1024 * parseInt(i.val(), 10) * 1024 : e.SizeSlider ? t[n] = parseInt(i.val(), 10) : e.CheckBox ? t[n] = i.prop("checked") : e.SelectMany ? (t[n] = [], 
                    i.find("input").each(function(i, o) {
                        o.checked && t[n].push(e.Options[i].value);
                    })) : e.SelectRow ? i.find("tbody tr").each(function(i, r) {
                        o(r).hasClass("highlight-ct") && (t[n] = e.Rows[i].value);
                    }) : e.Arrow && (t[n] = !i.hasClass("collapsed"));
                }), t;
            }
            function v() {
                var t = h();
                e.Fields.forEach(function(e) {
                    if (e.visible) {
                        var n = m(e);
                        x[n] = !e.visible(t), y.find('[data-field="' + n + '"]').parents("tr").toggle(!x[n]);
                    }
                });
            }
            function g(e, t, n) {
                var i = null;
                return e.SizeSlider && (isNaN(t) && (i = c("Size must be a number")), 0 === t && (i = c("Size cannot be zero")), 
                t < 0 && (i = c("Size cannot be negative")), !e.AllowInfinite && t > e.Max && (i = c("Size is too large"))), 
                e.validate && (i = e.validate(t, n)), i;
            }
            function b() {
                var t = h(), n = [];
                return e.Fields.forEach(function(e) {
                    var i = m(e);
                    if (x[i]) t[i] = void 0; else {
                        var o = g(e, t[i], t);
                        if (o) {
                            var r = new Error(o);
                            r.target = '[data-field="' + i + '"]', n.push(r);
                        }
                    }
                }), y.dialog("failure", n), 0 === n.length ? t : null;
            }
            function k(e) {
                return e.field ? {
                    message: e.message,
                    target: '[data-field="' + e.field + '"]'
                } : e;
            }
            e.Fields.forEach(function(e) {
                e.SizeInput && e.Value && (e.ValueMB = (e.Value / 1048576).toFixed(0)), e.SizeSlider && !e.Units && (e.Units = r.get_byte_units(e.Value || e.Max)), 
                e.SelectMany && (e.HasOptions = e.Options.length > 0);
            }), l && l.modal("hide");
            var y = o(a.render(s, e));
            o("body").append(y), l = y, y.on("hidden.bs.modal", function() {
                y.remove();
            }), y.find(".dialog-arrow").on("click", t), y.find(".dialog-select-row-table tbody").on("click", n), 
            y.find(".dialog-select-row-table tbody tr:first-child").addClass("highlight-ct"), 
            y.on("click", ".dropdown li[value]", function(e) {
                return i(o(this));
            }), y.find(".dropdown").each(function(e, t) {
                var n;
                o(t).find("li[value]").each(function(e, t) {
                    n && !o(t).attr("selected") || (n = o(t));
                }), i(n);
            }), e.Fields.forEach(function(e) {
                e.SizeSlider && u(e);
            });
            var x = {};
            y.on("change input", function() {
                v();
            }), y.find('button[data-action="apply"]').on("click", function() {
                var t = b();
                if (null !== t) {
                    var n = e.Action.action(t);
                    n ? (y.dialog("wait", n), n.done(function(e) {
                        y.modal("hide");
                    }).fail(function(n) {
                        e.Action.failure_filter && (n = e.Action.failure_filter(t, n)), n && (n = n.length ? n.map(k) : k(n), 
                        y.dialog("failure", n));
                    })) : y.modal("hide");
                }
            }), v(), y.modal("show");
        }
        var o = n(6), r = n(7), a = n(10);
        n(24);
        var s, l, c = r.gettext;
        o(t), e.exports = {
            open: i
        };
    }();
}, function(e, t, n) {
    "use strict";
    !function() {
        function e() {
            return k += 1, "unique" + -new Date() + -k;
        }
        function t(e) {
            e.find(".dialog-error").remove(), e.find(".has-error").removeClass("has-error"), 
            e.find(".dialog-wrapper").off(".dialog-error"), e.off(".dialog-error");
        }
        function i(e, t) {
            var n, i, o = e.parent();
            o.is(".dialog-wrapper") || (o = g("<div class='dialog-wrapper'>").insertBefore(e), 
            n = e.next(), n.is(".bootstrap-select") && n.selectpicker && (n.remove(), i = n.selectpicker), 
            e.remove().appendTo(o), i && i.call(e));
            var r;
            t.message && (r = g("<div class='dialog-error help-block'>").text(t.message)), o.addClass("has-error").append(r), 
            o.hasClass("error-keep") || o.on("keypress.dialog-error change.dialog-error", function() {
                o.removeClass("has-error").find(".dialog-error.help-block").css("visibility", "hidden");
            });
        }
        function o(e, t) {
            var n = g("<div class='alert alert-danger dialog-error'>"), i = t.message || t.toString();
            n.text(i), g("<span class='fa fa-exclamation-triangle'>").prependTo(n), console.warn(i);
            var o = e.find(".modal-footer");
            o.length ? n.prependTo(o) : n.appendTo(e);
        }
        function r(e, n) {
            t(e), 1 == n.length && g.isArray(n[0]) && (n = n[0]);
            var r = !1;
            n.forEach(function(t) {
                var n;
                t && (n = e.find(t.target), n && n.length ? i(n, t) : o(e, t), r = !0);
            }), r && e.on("show.bs.modal.dialog-error", function() {
                t(e);
            });
        }
        function a(e, t) {
            this.promise = e, this.disabled = [], this.handle = t;
        }
        function s(e) {
            var t = e.data("dialog-wait");
            e.data("dialog-wait", null), e.find(".dialog-wait-ct").remove(), e.find(".btn").off(".dialog-wait"), 
            e.off(".dialog-wait"), t && t.disabled.forEach(function(e) {
                e.removeAttr("disabled");
            });
        }
        function l(e, t, n) {
            function i() {
                var n, i = e.data("dialog-wait");
                i && i.promise === t && (s(e), n = t.state(), p || "resolved" == n && i.handle ? e.modal("hide") : "rejected" == n && i.handle && r(e, [ arguments[0] ]));
            }
            function o(n) {
                var i = e.data("dialog-wait");
                i && i.promise === t && ("string" != typeof n && (n = ""), c.text(n));
            }
            if (s(e), !t) return n && e.modal("hide"), e;
            n && r(e, []);
            var l = g("<div class='dialog-wait-ct pull-left'>");
            g("<div class='spinner spinner-sm'>").appendTo(l);
            var c = g("<span>").appendTo(l);
            e.find(".modal-footer button").first().before(l);
            var u = new a(t, n);
            e.data("dialog-wait", u);
            var d = t.cancel || t.close, p = !1, f = e.find(".form-control").add(".btn", e);
            return d && (f = f.not("[data-dismiss]").not(".btn-cancel")), f.each(function() {
                var e = g(this);
                e.attr("disabled") || (u.disabled.push(e), e.attr("disabled", "disabled"));
            }), e.find(".btn[data-dismiss], .btn-cancel").on("click.dialog-wait", function() {
                return p = !0, d && d.apply(t), !1;
            }), e.on("hide.bs.modal.dialog-wait", function() {
                s(e);
            }), t.always(i).progress(o), e;
        }
        function c(t) {
            var n = b.gettext || function(e) {
                return e;
            };
            return t = t.find(".btn-onoff-ct").andSelf().filter(".btn-onoff-ct"), t.each(function(t, i) {
                var o, r, a, s = g(i).attr("data-toggle", "buttons").addClass("btn-group"), l = s.onoff("value"), c = s.find(".btn"), u = s.find("input").first().attr("name") || e();
                for (o = c.length; o < 2; o++) r = g('<input type="radio" autocomplete="off">'), 
                a = document.createTextNode(n(0 === o ? "On" : "Off")), s.append(g('<label class="btn">').append(r, a)), 
                c = null;
                c = c || s.find(".btn"), c.find("input").attr("name", u), d(s, !!l);
            }), t;
        }
        function u(e) {
            return e.find(".btn").first().hasClass("active");
        }
        function d(e, t) {
            return e.each(function(e, n) {
                var i = g(n).find(".btn");
                i.first().toggleClass("active", !!t).find("input").prop("checked", !!t), i.last().toggleClass("active", !t).find("input").prop("checked", !t);
            });
        }
        function p(e, t, n, i) {
            var o = 0;
            i > n ? o = 1 : i < 0 || isNaN(i) ? o = 0 : !isNaN(n) && n > 0 && i >= 0 && (o = i / n), 
            g(t).css("width", 100 * o + "%").next("div").css("margin-left", g(t).css("width")), 
            e.value = o;
        }
        function f(e) {
            p(e, g(e).children("div.slider-bar").first()[0], 1, e.value);
        }
        function m(e) {
            g(e).toggleClass("slider-warning", e.offsetWidth < e.scrollWidth);
        }
        function h(e) {
            g(e).attr("unselectable", "on"), Object.defineProperty(e, "value", {
                get: function() {
                    return parseFloat(this.getAttribute("value"));
                },
                set: function(e) {
                    var t = String(e);
                    t != this.getAttribute("value") && this.setAttribute("value", e);
                }
            }), Object.defineProperty(e, "disabled", {
                get: function() {
                    return !!this.hasAttribute("disabled") && "false" != this.getAttribute("disabled").toLowerCase();
                },
                set: function(e) {
                    this.setAttribute("disabled", e ? "true" : "false");
                }
            }), f(e), m(e), g(e).on("change", function() {
                f(e), g(e).toggleClass("slider-disabled", e.disabled);
            }), e.disabled && g(e).addClass("slider-disabled"), g(e).on("mousedown", function(t) {
                if (e.disabled) return !0;
                var n, i = g(e).offset().left;
                if (g(t.target).hasClass("slider-thumb")) {
                    var o = t.offsetX || t.clientX - g(t.target).offset().left;
                    i += o - g(t.target).outerWidth() / 2, n = g(t.target).parent()[0];
                } else n = g(e).children("div.slider-bar").first()[0], p(e, n, g(e).width(), t.pageX - i), 
                g(e).trigger("change", [ e.value ]), m(e);
                return g(document).on("mousemove.slider", function(t) {
                    return p(e, n, g(e).width(), t.pageX - i), g(e).trigger("change", [ e.value ]), 
                    m(e), !1;
                }).on("mouseup.slider", function(e) {
                    return g(document).off("mousemove.slider").off("mouseup.slider"), !1;
                }), !1;
            });
        }
        function v() {
            g("div.slider").each(function() {
                h(this);
            });
        }
        var g = n(6), b = n(7), k = 0;
        g.fn.dialog = function(e) {
            return "failure" === e ? r(this, Array.prototype.slice.call(arguments, 1)) : "wait" === e ? l(this, arguments[1]) : "promise" === e ? l(this, arguments[1], !0) : void console.warn("unknown dialog action: " + e);
        }, window.addEventListener("hashchange", function() {
            g(".modal").modal("hide");
        }), g.fn.onoff = function(e) {
            return 0 === arguments.length || "refresh" == e ? c(this) : "value" === e ? 1 === arguments.length ? u(this) : d(this, arguments[1]) : "disabled" == e ? this.find(".btn").toggleClass("disabled", arguments[1]) : void console.warn("unknown switch action: " + e);
        }, g.fn.slider = function(e) {
            var t = this;
            return 0 === arguments.length || "refresh" == e ? (t.each(function() {
                h(this);
            }), t) : void console.warn("unknown slider action: " + e);
        }, g(document).ready(v), g.fn.update_privileged = function(e, t, n) {
            var i = e.allowed !== !1, o = this;
            return o.each(function() {
                var e = "allowed-title";
                "undefined" != typeof g(this).data(e) && g(this).data(e) !== !1 || g(this).data(e, g(this).attr("title") || "");
                var o = {
                    html: !0
                };
                n && (o.placement = n), g(this).tooltip(o), g(this).hasClass("disabled") === i && (g(this).toggleClass("disabled", !i).attr("data-original-title", null), 
                i ? g(this).attr("title", g(this).data(e)) : g(this).attr("title", t), g(this).tooltip("fixTitle"));
            }), o;
        };
    }();
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e, t, n) {
            var i = e.allowed !== !1;
            o(t).each(function() {
                var e = "allowed-title";
                "undefined" != typeof o(this).data(e) && o(this).data(e) !== !1 || o(this).data(e, o(this).attr("title") || ""), 
                o(this).tooltip({
                    html: !0
                }), o(this).hasClass("disabled") === i && (o(this).toggleClass("disabled", !i).attr("data-original-title", null), 
                i ? o(this).attr("title", o(this).data(e)) : o(this).attr("title", n), o(this).tooltip("fixTitle"));
            });
        }
        function i() {
            t(s, ".storage-privileged", r.format(a("The user <b>$0</b> is not permitted to manage storage"), s.user ? s.user.name : ""));
        }
        var o = n(6), r = n(7), a = r.gettext, s = r.permission({
            admin: !0
        });
        o(s).on("changed", i), e.exports = {
            permission: s,
            update: i
        };
    }();
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e, t) {
            function n() {
                var t = e.slashdevs_block[y];
                if (t) {
                    var n = {
                        dbus: t,
                        Name: u.block_name(t),
                        Size: u.fmt_size_long(t.Size)
                    }, i = e.drives[t.Drive], o = e.drives_ata[t.Drive], a = null;
                    o && (a = {
                        Failing: e.drives_ata.SmartFailing,
                        Temperature: o.SmartTemperature > 0 && u.format_temperature(o.SmartTemperature)
                    });
                    var s = null;
                    if (i) {
                        var l = e.drives_block[i.path], c = e.drives_multipath_blocks[i.path], d = null;
                        c.length > 0 && (d = {
                            Devices: c.map(u.block_name)
                        }), s = {
                            dbus: i,
                            Size: i.Size > 0 && u.fmt_size_long(i.Size),
                            Assessment: a,
                            Device: l && u.block_name(l),
                            Multipath: d,
                            MultipathActive: "running" == x.state
                        };
                    }
                    return {
                        breadcrumb: i && u.drive_name(i),
                        header: r.render(T, {
                            Block: n,
                            Drive: s
                        })
                    };
                }
            }
            function m() {
                function t(e) {
                    return {
                        raid0: f("RAID 0"),
                        raid1: f("RAID 1"),
                        raid4: f("RAID 4"),
                        raid5: f("RAID 5"),
                        raid6: f("RAID 6"),
                        raid10: f("RAID 10")
                    }[e] || o.format(f("RAID ($0)"), e);
                }
                var n = e.uuids_mdraid[y];
                if (n) {
                    var i = e.mdraids_block[n.path], a = t(n.Level);
                    n.NumDevices > 0 && (a += ", " + o.format(f("$0 Disks"), n.NumDevices)), n.ChunkSize > 0 && (a += ", " + o.format(f("$0 Chunk Size"), u.fmt_size(n.ChunkSize)));
                    var s = null;
                    n.BitmapLocation && (s = {
                        Value: "none" != u.decode_filename(n.BitmapLocation)
                    });
                    var l = null;
                    n.Degraded > 0 && (l = o.format(o.ngettext("$0 disk is missing", "$0 disks are missing", n.Degraded), n.Degraded));
                    var c = n.Running;
                    void 0 === c && (c = n.ActiveDevices && n.ActiveDevices.length > 0);
                    var d = {
                        dbus: n,
                        Name: u.mdraid_name(n),
                        Size: u.fmt_size_long(n.Size),
                        Level: a,
                        Bitmap: s,
                        Degraded: l,
                        State: f(c ? "Running" : "Not running")
                    }, p = null;
                    i && (p = {
                        dbus: i,
                        Device: u.decode_filename(i.PreferredDevice)
                    });
                    var m, h = [ {
                        title: f("Start"),
                        action: "mdraid_start"
                    }, {
                        title: f("Stop"),
                        action: "mdraid_stop"
                    }, {
                        title: f("Start Scrubbing"),
                        action: "mdraid_start_scrub"
                    }, {
                        title: f("Stop Scrubbing"),
                        action: "mdraid_stop_scrub"
                    }, {
                        title: f("Delete"),
                        action: "mdraid_delete"
                    } ];
                    return m = c ? h[1] : h[0], {
                        breadcrumb: u.mdraid_name(n),
                        header: r.render(S, {
                            MDRaid: d,
                            MDRaidButton: r.render(w, {
                                arg: n.path,
                                def: m,
                                actions: h
                            }),
                            Block: p
                        })
                    };
                }
            }
            function h() {
                var t = e.vgnames_vgroup[y];
                if (t) {
                    t.NeedsPolling && null === D ? D = window.setInterval(function() {
                        t.Poll();
                    }, 2e3) : t.NeedsPolling || null === D || (window.clearInterval(D), D = null);
                    var n = {
                        dbus: t,
                        Size: u.fmt_size_long(t.Size)
                    }, i = [ {
                        action: "vgroup_rename",
                        title: f("Rename")
                    }, {
                        action: "vgroup_delete",
                        title: f("Delete")
                    } ];
                    return {
                        breadcrumb: t.Name,
                        header: r.render(E, {
                            VGroup: n,
                            VGroupButton: r.render(w, {
                                arg: t.path,
                                def: i[0],
                                actions: i
                            })
                        })
                    };
                }
            }
            function v() {
                var e;
                "block" == k ? e = n() : "mdraid" == k ? e = m() : "vgroup" == k && (e = h()), e ? (i("#storage-detail .breadcrumb .active").text(e.breadcrumb || y), 
                i("button.tooltip-ct").tooltip("destroy"), i("#detail-header").amend(e.header), 
                i("button.tooltip-ct").tooltip()) : (i("#storage-detail .breadcrumb .active").text(y), 
                i("#detail-header").text(f("Not found"))), t.update("#storage-detail"), i("#detail-jobs").amend(t.render()), 
                p.update();
            }
            function g() {
                y = null, u.hide("#storage-detail");
            }
            function b(t, n) {
                null !== D && (window.clearInterval(D), D = null), k = t, y = n, v();
                var o = document.getElementById("detail-content"), r = document.getElementById("detail-sidebar");
                s.unmountComponentAtNode(o), s.unmountComponentAtNode(r), "block" == k ? (i("#detail-body").attr("class", "col-md-12"), 
                s.render(s.createElement(l.Block, {
                    client: e,
                    name: y
                }), o)) : "mdraid" == k ? (i("#detail-body").attr("class", "col-md-8 col-lg-9 col-md-pull-4 col-lg-pull-3"), 
                s.render(s.createElement(l.MDRaid, {
                    client: e,
                    name: y
                }), o), s.render(s.createElement(c.MDRaid, {
                    client: e,
                    name: y
                }), r)) : "vgroup" == k && (i("#detail-body").attr("class", "col-md-8 col-lg-9 col-md-pull-4 col-lg-pull-3"), 
                s.render(s.createElement(l.VGroup, {
                    client: e,
                    name: y
                }), o), s.render(s.createElement(c.VGroup, {
                    client: e,
                    name: y
                }), r)), u.show_soon("#storage-detail", !!o.firstChild);
            }
            var k, y, x = u.get_multipathd_service(), _ = {
                mdraid_start: function(t) {
                    return e.mdraids[t].Start({
                        "start-degraded": {
                            t: "b",
                            v: !0
                        }
                    });
                },
                mdraid_stop: function(t) {
                    return e.mdraids[t].Stop({});
                },
                mdraid_start_scrub: function(t) {
                    return e.mdraids[t].RequestSyncAction("repair", {});
                },
                mdraid_stop_scrub: function(t) {
                    return e.mdraids[t].RequestSyncAction("idle", {});
                },
                mdraid_toggle_bitmap: function(t) {
                    var n = u.decode_filename(e.mdraids[t].BitmapLocation);
                    return e.mdraids[t].SetBitmapLocation(u.encode_filename("none" == n ? "internal" : "none"), {});
                },
                mdraid_delete: function(t) {
                    function n() {
                        function n() {
                            return o.all(e.mdraids_members[t].map(function(e) {
                                return e.Format("empty", {});
                            }));
                        }
                        return r.Delete ? r.Delete({
                            "tear-down": {
                                t: "b",
                                v: !0
                            }
                        }) : r.ActiveDevices && r.ActiveDevices.length > 0 ? r.Stop({}).then(n) : n();
                    }
                    var i = o.location, r = e.mdraids[t];
                    if (r) {
                        var a = u.get_active_usage(e, t);
                        return a.Blocking ? void d.open({
                            Title: o.format(f("$0 is in active use"), u.mdraid_name(r)),
                            Blocking: a.Blocking,
                            Fields: []
                        }) : void d.open({
                            Title: o.format(f("Please confirm deletion of $0"), u.mdraid_name(r)),
                            Teardown: a.Teardown,
                            Fields: [],
                            Action: {
                                Title: f("Delete"),
                                Danger: f("Deleting a RAID device will erase all data on it."),
                                action: function() {
                                    return u.teardown_active_usage(e, a).then(n).then(function() {
                                        i.go("/");
                                    });
                                }
                            }
                        });
                    }
                },
                vgroup_rename: function(t) {
                    var n = o.location, i = e.vgroups[t];
                    i && d.open({
                        Title: f("Rename Volume Group"),
                        Fields: [ {
                            TextInput: "name",
                            Title: f("Name"),
                            Value: i.Name,
                            validate: u.validate_lvm2_name
                        } ],
                        Action: {
                            Title: f("Create"),
                            action: function(e) {
                                return i.Rename(e.name, {}).done(function() {
                                    n.go([ "vg", e.name ]);
                                });
                            }
                        }
                    });
                },
                vgroup_delete: function(t) {
                    var n = o.location, i = e.vgroups[t];
                    if (i) {
                        var r = u.get_active_usage(e, t);
                        return r.Blocking ? void d.open({
                            Title: o.format(f("$0 is in active use"), i.Name),
                            Blocking: r.Blocking,
                            Fields: []
                        }) : void d.open({
                            Title: o.format(f("Please confirm deletion of $0"), i.Name),
                            Teardown: r.Teardown,
                            Fields: [],
                            Action: {
                                Danger: f("Deleting a volume group will erase all data on it."),
                                Title: f("Delete"),
                                action: function() {
                                    return u.teardown_active_usage(e, r).then(function() {
                                        return i.Delete(!0, {
                                            "tear-down": {
                                                t: "b",
                                                v: !0
                                            }
                                        }).done(function() {
                                            n.go("/");
                                        });
                                    });
                                }
                            }
                        });
                    }
                },
                job_cancel: function(t) {
                    var n = e.storaged_jobs[t] || e.udisks_jobs[t];
                    if (n) return n.Cancel({});
                }
            };
            i("#storage-detail").on("click", "[data-action]", function() {
                var e = i(this).attr("data-action"), t = [];
                i(this).attr("data-args") ? t = JSON.parse(i(this).attr("data-args")) : i(this).attr("data-arg") && (t = [ i(this).attr("data-arg") ]);
                var n = _[e].apply(this, t);
                n && n.fail(function(e) {
                    i("#error-popup-title").text(f("Error")), i("#error-popup-message").text(e.toString()), 
                    i("#error-popup").modal("show");
                });
            });
            var w = i("#action-btn-tmpl").html();
            r.parse(w);
            var T = i("#block-detail-tmpl").html();
            r.parse(T);
            var S = i("#mdraid-detail-tmpl").html();
            r.parse(S);
            var C = i("#mdraid-members-tmpl").html();
            r.parse(C);
            var E = i("#vgroup-detail-tmpl").html();
            r.parse(E);
            var M = i("#vgroup-pvs-tmpl").html();
            r.parse(M);
            var D;
            return i(x).on("changed", v), i(e).on("changed", v), i("#storage-detail-log").append(a.logbox([ "_SYSTEMD_UNIT=storaged.service", "+", "_SYSTEMD_UNIT=udisks2.service", "+", "_SYSTEMD_UNIT=dm-event.service", "+", "_SYSTEMD_UNIT=smartd.service", "+", "_SYSTEMD_UNIT=multipathd.service" ], 10)), 
            i("#storage-detail .breadcrumb a").on("click", function() {
                o.location.go("/");
            }), {
                show: b,
                hide: g
            };
        }
        var i = n(6), o = n(7), r = n(10), a = n(19), s = n(27), l = n(28), c = n(43), u = n(9), d = n(23), p = n(25), f = o.gettext;
        e.exports = {
            init: t
        };
    }();
}, function(e, t, n) {
    /*!
	 * react-lite.js v0.15.30
	 * (c) 2016 Jade Gu
	 * Released under the MIT License.
	 */
    !function(t, n) {
        e.exports = n();
    }(this, function() {
        "use strict";
        function e(e, t, n, i, o) {
            var r = {
                vtype: e,
                type: t,
                props: n,
                refs: Ge,
                key: i,
                ref: o
            };
            return e !== Le && e !== Be || (r.uid = oe()), r;
        }
        function t(e, t, n) {
            var i = e.vtype, o = null;
            return i ? i === Ve ? o = l(e, t, n) : i === Be ? o = k(e, t, n) : i === Le ? o = h(e, t, n) : i === $e && (o = document.createComment("react-text: " + (e.uid || oe()))) : o = document.createTextNode(e), 
            o;
        }
        function n(e, t, n, o) {
            var r = e.vtype;
            if (r === Be) return y(e, t, n, o);
            if (r === Le) return v(e, t, n, o);
            if (r !== Ve) return n;
            var a = e.props[Oe] && e.props[Oe].__html;
            return null != a ? (f(e, t, n, o), c(t, n, o)) : (i(e, t, n, o), f(e, t, n, o)), 
            n;
        }
        function i(e, t, n, i) {
            var s = {
                removes: [],
                updates: [],
                creates: []
            };
            p(s, e, t, n, i), ne(s.removes, r), ne(s.updates, o), ne(s.creates, a);
        }
        function o(e) {
            if (e) {
                var t = e.vnode, n = e.node;
                e.shouldIgnore || (t.vtype ? t.vtype === Ve ? f(t, e.newVnode, n, e.parentContext) : t.vtype === Le ? n = v(t, e.newVnode, n, e.parentContext) : t.vtype === Be && (n = y(t, e.newVnode, n, e.parentContext)) : n.replaceData(0, n.length, e.newVnode));
                var i = n.parentNode.childNodes[e.index];
                return i !== n && n.parentNode.insertBefore(n, i), n;
            }
        }
        function r(e) {
            s(e.vnode, e.node), e.node.parentNode.removeChild(e.node);
        }
        function a(e) {
            var n = t(e.vnode, e.parentContext, e.parentNode.namespaceURI);
            e.parentNode.insertBefore(n, e.parentNode.childNodes[e.index]);
        }
        function s(e, t) {
            var n = e.vtype;
            n === Ve ? m(e, t) : n === Be ? x(e, t) : n === Le && g(e, t);
        }
        function l(e, t, n) {
            var i = e.type, o = e.props, r = null;
            "svg" === i || n === Fe ? (r = document.createElementNS(Fe, i), n = Fe) : r = document.createElement(i), 
            c(e, r, t);
            var a = i.indexOf("-") >= 0 || null != o.is;
            return le(r, o, a), null != e.ref && (te(Ye, e), te(Ye, r)), r;
        }
        function c(e, n, i) {
            for (var o = n.vchildren = u(e), r = n.namespaceURI, a = 0, s = o.length; a < s; a++) n.appendChild(t(o[a], i, r));
        }
        function u(e) {
            var t = e.props.children, n = [];
            return yt(t) ? ne(t, d, n) : d(t, n), n;
        }
        function d(e, t) {
            if (null != e && "boolean" != typeof e) {
                if (!e.vtype) {
                    if (e.toJS) return e = e.toJS(), void (yt(e) ? ne(e, d, t) : d(e, t));
                    e = "" + e;
                }
                t[t.length] = e;
            }
        }
        function p(e, t, n, i, o) {
            var r = i.childNodes, a = i.vchildren, s = i.vchildren = u(n), l = a.length, c = s.length;
            if (0 !== l) if (0 !== c) {
                for (var d = Array(c), f = null, m = null, h = 0; h < l; h++) for (var v = a[h], g = 0; g < c; g++) if (!d[g]) {
                    var b = s[g];
                    if (v === b) {
                        var k = !0;
                        o && (v.vtype !== Be && v.vtype !== Le || v.type.contextTypes && (k = !1)), d[g] = {
                            shouldIgnore: k,
                            vnode: v,
                            newVnode: b,
                            node: r[h],
                            parentContext: o,
                            index: g
                        }, a[h] = null;
                        break;
                    }
                }
                for (var h = 0; h < l; h++) {
                    var y = a[h];
                    if (null !== y) {
                        for (var x = !0, g = 0; g < c; g++) if (!d[g]) {
                            var _ = s[g];
                            if (_.type === y.type && _.key === y.key && _.refs === y.refs) {
                                d[g] = {
                                    vnode: y,
                                    newVnode: _,
                                    node: r[h],
                                    parentContext: o,
                                    index: g
                                }, x = !1;
                                break;
                            }
                        }
                        x && (f || (f = []), te(f, {
                            vnode: y,
                            node: r[h]
                        }));
                    }
                }
                for (var h = 0; h < c; h++) {
                    var w = d[h];
                    w ? w.vnode.vtype === Ve && p(e, w.vnode, w.newVnode, w.node, w.parentContext) : (m || (m = []), 
                    te(m, {
                        vnode: s[h],
                        parentNode: i,
                        parentContext: o,
                        index: h
                    }));
                }
                f && te(e.removes, f), m && te(e.creates, m), te(e.updates, d);
            } else for (var h = 0; h < l; h++) te(e.removes, {
                vnode: a[h],
                node: r[h]
            }); else if (c > 0) for (var h = 0; h < c; h++) te(e.creates, {
                vnode: s[h],
                parentNode: i,
                parentContext: o,
                index: h
            });
        }
        function f(e, t, n) {
            var i = e.type.indexOf("-") >= 0 || null != e.props.is;
            return ce(n, e.props, t.props, i), e.ref !== t.ref && (N(e.refs, e.ref, n), z(t.refs, t.ref, n)), 
            n;
        }
        function m(e, t) {
            for (var n = (e.props, t.vchildren), i = t.childNodes, o = 0, r = n.length; o < r; o++) s(n[o], i[o]);
            N(e.refs, e.ref, t), t.eventStore = t.vchildren = null;
        }
        function h(e, n, i) {
            var o = b(e, n), r = t(o, n, i);
            return r.cache = r.cache || {}, r.cache[e.uid] = o, r;
        }
        function v(e, t, n, i) {
            var o = e.uid, r = n.cache[o];
            delete n.cache[o];
            var a = b(t, i), s = M(r, a, n, i);
            return s.cache = s.cache || {}, s.cache[t.uid] = a, s !== n && A(s.cache, n.cache, s), 
            s;
        }
        function g(e, t) {
            var n = e.uid, i = t.cache[n];
            delete t.cache[n], s(i, t);
        }
        function b(t, n) {
            var i = t.type, o = t.props, r = _(n, i.contextTypes), a = i(o, r);
            if (a && a.render && (a = a.render()), null === a || a === !1) a = e($e); else if (!a || !a.vtype) throw new Error("@" + i.name + "#render:You may have returned undefined, an array or some other invalid object");
            return a;
        }
        function k(e, n, i) {
            var o = e.type, r = e.props, a = e.uid, s = _(n, o.contextTypes), l = new o(r, s), c = l.$updater, u = l.$cache;
            u.parentContext = n, c.isPending = !0, l.props = l.props || r, l.context = l.context || s, 
            l.componentWillMount && (l.componentWillMount(), l.state = c.getState());
            var d = w(l), p = t(d, T(l, n), i);
            return p.cache = p.cache || {}, p.cache[a] = l, u.vnode = d, u.node = p, u.isMounted = !0, 
            te(qe, l), null != e.ref && (te(Ye, e), te(Ye, l)), p;
        }
        function y(e, t, n, i) {
            var o = e.uid, r = n.cache[o], a = r.$updater, s = r.$cache, l = t.type, c = t.props, u = _(i, l.contextTypes);
            if (delete n.cache[o], n.cache[t.uid] = r, s.parentContext = i, r.componentWillReceiveProps) {
                var d = !a.isPending;
                d && (a.isPending = !0), r.componentWillReceiveProps(c, u), d && (a.isPending = !1);
            }
            return e.ref !== t.ref && (N(e.refs, e.ref, r), z(t.refs, t.ref, r)), a.emitUpdate(c, u), 
            s.node;
        }
        function x(e, t) {
            var n = e.uid, i = t.cache[n], o = i.$cache;
            delete t.cache[n], N(e.refs, e.ref, i), i.setState = i.forceUpdate = Q, i.componentWillUnmount && i.componentWillUnmount(), 
            s(o.vnode, t), delete i.setState, o.isMounted = !1, o.node = o.parentContext = o.vnode = i.refs = i.context = null;
        }
        function _(e, t) {
            var n = {};
            if (!t || !e) return n;
            for (var i in t) t.hasOwnProperty(i) && (n[i] = e[i]);
            return n;
        }
        function w(t, n) {
            Ge = t.refs;
            var i = t.render();
            if (null === i || i === !1) i = e($e); else if (!i || !i.vtype) throw new Error("@" + t.constructor.name + "#render:You may have returned undefined, an array or some other invalid object");
            return Ge = null, i;
        }
        function T(e, t) {
            if (e.getChildContext) {
                var n = e.getChildContext();
                n && (t = ie(ie({}, t), n));
            }
            return t;
        }
        function S() {
            var e = qe.length;
            if (e) {
                var t = qe;
                qe = [];
                for (var n = -1; e--; ) {
                    var i = t[++n], o = i.$updater;
                    i.componentDidMount && i.componentDidMount(), o.isPending = !1, o.emitUpdate();
                }
            }
        }
        function C() {
            var e = Ye.length;
            if (e) {
                var t = Ye;
                Ye = [];
                for (var n = 0; n < e; n += 2) {
                    var i = t[n], o = t[n + 1];
                    z(i.refs, i.ref, o);
                }
            }
        }
        function E() {
            C(), S();
        }
        function M(e, i, o, r) {
            var a = o;
            return null == i ? (s(e, o), o.parentNode.removeChild(o)) : e.type !== i.type || e.key !== i.key ? (s(e, o), 
            a = t(i, r, o.namespaceURI), o.parentNode.replaceChild(a, o)) : (e !== i || r) && (a = n(e, i, o, r)), 
            a;
        }
        function D() {
            return this;
        }
        function z(e, t, n) {
            null != t && n && (n.nodeName && !n.getDOMNode && (n.getDOMNode = D), K(t) ? t(n) : e && (e[t] = n));
        }
        function N(e, t, n) {
            null != t && (K(t) ? t(null) : e && e[t] === n && delete e[t]);
        }
        function A(e, t, n) {
            for (var i in t) if (t.hasOwnProperty(i)) {
                var o = t[i];
                e[i] = o, o.forceUpdate && (o.$cache.node = n);
            }
        }
        function P(e) {
            this.instance = e, this.pendingStates = [], this.pendingCallbacks = [], this.isPending = !1, 
            this.nextProps = this.nextContext = null, this.clearCallbacks = this.clearCallbacks.bind(this);
        }
        function I(e, t) {
            this.$updater = new P(this), this.$cache = {
                isMounted: !1
            }, this.props = e, this.state = {}, this.refs = {}, this.context = t;
        }
        function R(e, t, n, i, o) {
            var r = !0;
            if (e.shouldComponentUpdate && (r = e.shouldComponentUpdate(t, n, i)), r === !1) return e.props = t, 
            e.state = n, void (e.context = i || {});
            var a = e.$cache;
            a.props = t, a.state = n, a.context = i || {}, e.forceUpdate(o);
        }
        function O(e) {
            return "onDoubleClick" === e ? e = "ondblclick" : "onTouchTap" === e && (e = "onclick"), 
            e.toLowerCase();
        }
        function F(e, t, n) {
            t = O(t);
            var i = e.eventStore || (e.eventStore = {});
            if (i[t] = n, 1 === Ke[t]) return void (e[t] = L);
            if (tt[t] || (document.addEventListener(t.substr(2), V, !1), tt[t] = !0), Qe && t === et) return void e.addEventListener("click", Ze, !1);
            e.nodeName;
            "onchange" === t && F(e, "oninput", n);
        }
        function U(e, t) {
            t = O(t);
            var n = e.eventStore || (e.eventStore = {});
            if (delete n[t], 1 === Ke[t]) return void (e[t] = null);
            if (Qe && t === et) return void e.removeEventListener("click", Ze, !1);
            e.nodeName;
            "onchange" === t && delete n.oninput;
        }
        function V(e) {
            var t = e.target, n = e.type, i = "on" + n, o = void 0;
            for (Xe.isPending = !0; t; ) {
                var r = t, a = r.eventStore, s = a && a[i];
                if (s) {
                    if (o || (o = B(e)), o.currentTarget = t, s.call(t, o), o.$cancelBubble) break;
                    t = t.parentNode;
                } else t = t.parentNode;
            }
            Xe.isPending = !1, Xe.batchUpdate();
        }
        function L(e) {
            var t = e.currentTarget || e.target, n = "on" + e.type, i = B(e);
            i.currentTarget = t, Xe.isPending = !0;
            var o = t.eventStore, r = o && o[n];
            r && r.call(t, i), Xe.isPending = !1, Xe.batchUpdate();
        }
        function B(e) {
            var t = {}, n = function() {
                return t.$cancelBubble = !0;
            };
            t.nativeEvent = e, t.persist = Q;
            for (var i in e) "function" != typeof e[i] ? t[i] = e[i] : "stopPropagation" === i || "stopImmediatePropagation" === i ? t[i] = n : t[i] = e[i].bind(e);
            return t;
        }
        function $(e, t) {
            for (var n in t) t.hasOwnProperty(n) && G(e, n, t[n]);
        }
        function j(e, t) {
            for (var n in t) t.hasOwnProperty(n) && (e[n] = "");
        }
        function W(e, t, n) {
            if (t !== n) {
                if (!n && t) return void j(e, t);
                if (n && !t) return void $(e, n);
                for (var i in t) n.hasOwnProperty(i) ? n[i] !== t[i] && G(e, i, n[i]) : e[i] = "";
                for (var i in n) t.hasOwnProperty(i) || G(e, i, n[i]);
            }
        }
        function H(e, t) {
            return e + t.charAt(0).toUpperCase() + t.substring(1);
        }
        function G(e, t, n) {
            return !nt[t] && ot.test(n) ? void (e[t] = n + "px") : ("float" === t && (t = "cssFloat"), 
            null != n && "boolean" != typeof n || (n = ""), void (e[t] = n));
        }
        function q(e) {
            var t = e.props, n = e.attrNS, i = e.domAttrs, o = e.domProps;
            for (var r in t) if (t.hasOwnProperty(r)) {
                var a = t[r];
                ct[r] = {
                    attributeName: i.hasOwnProperty(r) ? i[r] : r.toLowerCase(),
                    propertyName: o.hasOwnProperty(r) ? o[r] : r,
                    attributeNamespace: n.hasOwnProperty(r) ? n[r] : null,
                    mustUseProperty: Y(a, ut),
                    hasBooleanValue: Y(a, dt),
                    hasNumericValue: Y(a, pt),
                    hasPositiveNumericValue: Y(a, ft),
                    hasOverloadedBooleanValue: Y(a, mt)
                };
            }
        }
        function Y(e, t) {
            return (e & t) === t;
        }
        function X(e, t, n) {
            var i = ct.hasOwnProperty(t) && ct[t];
            if (i) if (null == n || i.hasBooleanValue && !n || i.hasNumericValue && isNaN(n) || i.hasPositiveNumericValue && n < 1 || i.hasOverloadedBooleanValue && n === !1) J(e, t); else if (i.mustUseProperty) {
                var o = i.propertyName;
                "value" === o && "" + e[o] == "" + n || (e[o] = n);
            } else {
                var r = i.attributeName, a = i.attributeNamespace;
                a ? e.setAttributeNS(a, r, "" + n) : i.hasBooleanValue || i.hasOverloadedBooleanValue && n === !0 ? e.setAttribute(r, "") : e.setAttribute(r, "" + n);
            } else lt(t) && st.test(t) && (null == n ? e.removeAttribute(t) : e.setAttribute(t, "" + n));
        }
        function J(e, t) {
            var n = ct.hasOwnProperty(t) && ct[t];
            if (n) if (n.mustUseProperty) {
                var i = n.propertyName;
                n.hasBooleanValue ? e[i] = !1 : "value" === i && "" + e[i] == "" || (e[i] = "");
            } else e.removeAttribute(n.attributeName); else lt(t) && e.removeAttribute(t);
        }
        function K(e) {
            return "function" == typeof e;
        }
        function Q() {}
        function Z(e) {
            return e;
        }
        function ee(e, t) {
            return function() {
                return e.apply(this, arguments), t.apply(this, arguments);
            };
        }
        function te(e, t) {
            e[e.length] = t;
        }
        function ne(e, t, n) {
            for (var i = e.length, o = -1; i--; ) {
                var r = e[++o];
                yt(r) ? ne(r, t, n) : t(r, n);
            }
        }
        function ie(e, t) {
            if (!t) return e;
            for (var n = Object.keys(t), i = n.length; i--; ) e[n[i]] = t[n[i]];
            return e;
        }
        function oe() {
            return ++xt;
        }
        function re(e, t, n, i) {
            _t.test(t) ? F(e, t, n) : "style" === t ? $(e.style, n) : t === Oe ? n && null != n.__html && (e.innerHTML = n.__html) : i ? null == n ? e.removeAttribute(t) : e.setAttribute(t, "" + n) : X(e, t, n);
        }
        function ae(e, t, n, i) {
            _t.test(t) ? U(e, t) : "style" === t ? j(e.style, n) : t === Oe ? e.innerHTML = "" : i ? e.removeAttribute(t) : J(e, t);
        }
        function se(e, t, n, i, o) {
            if ("value" !== t && "checked" !== t || (i = e[t]), n !== i) return void 0 === n ? void ae(e, t, i, o) : void ("style" === t ? W(e.style, i, n) : re(e, t, n, o));
        }
        function le(e, t, n) {
            for (var i in t) "children" !== i && re(e, i, t[i], n);
        }
        function ce(e, t, n, i) {
            for (var o in t) "children" !== o && (n.hasOwnProperty(o) ? se(e, o, n[o], t[o], i) : ae(e, o, t[o], i));
            for (var o in n) "children" === o || t.hasOwnProperty(o) || re(e, o, n[o], i);
        }
        function ue(e) {
            return !(!e || e.nodeType !== je && e.nodeType !== We && e.nodeType !== He);
        }
        function de(e, n, i, o) {
            if (!e.vtype) throw new Error("cannot render " + e + " to container");
            if (!ue(n)) throw new Error("container " + n + " is not a DOM element");
            var r = n[Ue] || (n[Ue] = oe()), a = wt[r];
            if (a) return void (a === !0 ? wt[r] = a = {
                vnode: e,
                callback: i,
                parentContext: o
            } : (a.vnode = e, a.parentContext = o, a.callback = a.callback ? ee(a.callback, i) : i));
            wt[r] = !0;
            var s = null, l = null;
            if (s = Tt[r]) l = M(s, e, n.firstChild, o); else {
                l = t(e, o, n.namespaceURI);
                for (var c = null; c = n.lastChild; ) n.removeChild(c);
                n.appendChild(l);
            }
            Tt[r] = e;
            var u = Xe.isPending;
            Xe.isPending = !0, E(), a = wt[r], delete wt[r];
            var d = null;
            return "object" == typeof a ? d = de(a.vnode, n, a.callback, a.parentContext) : e.vtype === Ve ? d = l : e.vtype === Be && (d = l.cache[e.uid]), 
            u || (Xe.isPending = !1, Xe.batchUpdate()), i && i.call(d), d;
        }
        function pe(e, t, n) {
            return de(e, t, n);
        }
        function fe(e, t, n, i) {
            var o = e.$cache.parentContext;
            return de(t, n, i, o);
        }
        function me(e) {
            if (!e.nodeName) throw new Error("expect node");
            var t = e[Ue], n = null;
            return !!(n = Tt[t]) && (s(n, e.firstChild), e.removeChild(e.firstChild), delete Tt[t], 
            !0);
        }
        function he(e) {
            if (null == e) return null;
            if (e.nodeName) return e;
            var t = e;
            if (t.getDOMNode && t.$cache.isMounted) return t.getDOMNode();
            throw new Error("findDOMNode can not find Node");
        }
        function ve(t, n, i) {
            var o = null;
            if ("string" == typeof t) o = Ve; else {
                if ("function" != typeof t) throw new Error("React.createElement: unexpect type [ " + t + " ]");
                o = t.prototype && t.prototype.isReactComponent ? Be : Le;
            }
            var r = null, a = null, s = {};
            if (null != n) for (var l in n) n.hasOwnProperty(l) && ("key" === l ? void 0 !== n.key && (r = "" + n.key) : "ref" === l ? void 0 !== n.ref && (a = n.ref) : s[l] = n[l]);
            var c = t.defaultProps;
            if (c) for (var l in c) void 0 === s[l] && (s[l] = c[l]);
            var u = arguments.length, d = i;
            if (u > 3) {
                d = Array(u - 2);
                for (var p = 2; p < u; p++) d[p - 2] = arguments[p];
            }
            return void 0 !== d && (s.children = d), e(o, t, s, r, a);
        }
        function ge(e) {
            return null != e && !!e.vtype;
        }
        function be(e, t) {
            for (var n = e.type, i = e.key, o = e.ref, r = ie(ie({
                key: i,
                ref: o
            }, e.props), t), a = arguments.length, s = Array(a > 2 ? a - 2 : 0), l = 2; l < a; l++) s[l - 2] = arguments[l];
            var c = ve.apply(void 0, [ n, r ].concat(s));
            return c.ref === e.ref && (c.refs = e.refs), c;
        }
        function ke(e) {
            var t = function() {
                for (var t = arguments.length, n = Array(t), i = 0; i < t; i++) n[i] = arguments[i];
                return ve.apply(void 0, [ e ].concat(n));
            };
            return t.type = e, t;
        }
        function ye(e) {
            if (ge(e)) return e;
            throw new Error("expect only one child");
        }
        function xe(e, t, n) {
            if (null == e) return e;
            var i = 0;
            yt(e) ? ne(e, function(e) {
                t.call(n, e, i++);
            }) : t.call(n, e, i);
        }
        function _e(e, t, n) {
            if (null == e) return e;
            var i = [], o = {};
            xe(e, function(e, r) {
                var a = {};
                a.child = t.call(n, e, r) || e, a.isEqual = a.child === e;
                var s = a.key = Se(e, r);
                o.hasOwnProperty(s) ? o[s] += 1 : o[s] = 0, a.index = o[s], te(i, a);
            });
            var r = [];
            return i.forEach(function(e) {
                var t = e.child, n = e.key, i = e.index, a = e.isEqual;
                if (null != t && "boolean" != typeof t) {
                    if (!ge(t) || null == n) return void te(r, t);
                    0 !== o[n] && (n += ":" + i), a || (n = Ce(t.key || "") + "/" + n), t = be(t, {
                        key: n
                    }), te(r, t);
                }
            }), r;
        }
        function we(e) {
            var t = 0;
            return xe(e, function() {
                t++;
            }), t;
        }
        function Te(e) {
            return _e(e, Z) || [];
        }
        function Se(e, t) {
            var n = void 0;
            return n = ge(e) && "string" == typeof e.key ? ".$" + e.key : "." + t.toString(36);
        }
        function Ce(e) {
            return ("" + e).replace(zt, "//");
        }
        function Ee(e, t) {
            e.forEach(function(e) {
                e && (yt(e.mixins) && Ee(e.mixins, t), t(e));
            });
        }
        function Me(e, t) {
            for (var n in t) if (t.hasOwnProperty(n)) {
                var i = t[n];
                if ("getInitialState" !== n) {
                    var o = e[n];
                    K(o) && K(i) ? e[n] = ee(o, i) : e[n] = i;
                } else te(e.$getInitialStates, i);
            }
        }
        function De(e, t) {
            t.propTypes && (e.propTypes = e.propTypes || {}, ie(e.propTypes, t.propTypes)), 
            t.contextTypes && (e.contextTypes = e.contextTypes || {}, ie(e.contextTypes, t.contextTypes)), 
            ie(e, t.statics), K(t.getDefaultProps) && (e.defaultProps = e.defaultProps || {}, 
            ie(e.defaultProps, t.getDefaultProps()));
        }
        function ze(e, t) {
            for (var n in t) t.hasOwnProperty(n) && K(t[n]) && (e[n] = t[n].bind(e));
        }
        function Ne() {
            var e = this, t = {}, n = this.setState;
            return this.setState = At, this.$getInitialStates.forEach(function(n) {
                K(n) && ie(t, n.call(e));
            }), this.setState = n, t;
        }
        function Ae(e) {
            function t(n, i) {
                I.call(this, n, i), this.constructor = t, e.autobind !== !1 && ze(this, t.prototype), 
                this.state = this.getInitialState() || this.state;
            }
            if (!K(e.render)) throw new Error("createClass: spec.render is not function");
            var n = e.mixins || [], i = n.concat(e);
            e.mixins = null, t.displayName = e.displayName;
            var o = t.prototype = new At();
            return o.$getInitialStates = [], Ee(i, function(e) {
                Me(o, e), De(t, e);
            }), o.getInitialState = Ne, e.mixins = n, t;
        }
        function Pe(e, t) {
            if (e === t) return !0;
            if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
            var n = Object.keys(e), i = Object.keys(t);
            if (n.length !== i.length) return !1;
            for (var o = 0; o < n.length; o++) if (!t.hasOwnProperty(n[o]) || e[n[o]] !== t[n[o]]) return !1;
            return !0;
        }
        function Ie(e, t) {
            I.call(this, e, t);
        }
        function Re(e, t) {
            return !Pe(this.props, e) || !Pe(this.state, t);
        }
        var Oe = "dangerouslySetInnerHTML", Fe = "http://www.w3.org/2000/svg", Ue = "liteid", Ve = 2, Le = 3, Be = 4, $e = 5, je = 1, We = 9, He = 11, Ge = null, qe = [], Ye = [], Xe = {
            updaters: [],
            isPending: !1,
            add: function(e) {
                te(this.updaters, e);
            },
            batchUpdate: function() {
                if (!this.isPending) {
                    this.isPending = !0;
                    for (var e = this.updaters, t = void 0; t = e.pop(); ) t.updateComponent();
                    this.isPending = !1;
                }
            }
        };
        P.prototype = {
            emitUpdate: function(e, t) {
                this.nextProps = e, this.nextContext = t, e || !Xe.isPending ? this.updateComponent() : Xe.add(this);
            },
            updateComponent: function() {
                var e = this.instance, t = this.pendingStates, n = this.nextProps, i = this.nextContext;
                (n || t.length > 0) && (n = n || e.props, i = i || e.context, this.nextProps = this.nextContext = null, 
                R(e, n, this.getState(), i, this.clearCallbacks));
            },
            addState: function(e) {
                e && (te(this.pendingStates, e), this.isPending || this.emitUpdate());
            },
            replaceState: function(e) {
                var t = this.pendingStates;
                t.pop(), te(t, [ e ]);
            },
            getState: function() {
                var e = this.instance, t = this.pendingStates, n = e.state, i = e.props;
                return t.length && (n = ie({}, n), t.forEach(function(t) {
                    var o = yt(t);
                    o && (t = t[0]), K(t) && (t = t.call(e, n, i)), o ? n = ie({}, t) : ie(n, t);
                }), t.length = 0), n;
            },
            clearCallbacks: function() {
                var e = this.pendingCallbacks, t = this.instance;
                e.length > 0 && (this.pendingCallbacks = [], e.forEach(function(e) {
                    return e.call(t);
                }));
            },
            addCallback: function(e) {
                K(e) && te(this.pendingCallbacks, e);
            }
        };
        var Je = {};
        I.prototype = {
            constructor: I,
            isReactComponent: Je,
            forceUpdate: function(e) {
                var t = this.$updater, n = this.$cache, i = this.props, o = this.state, r = this.context;
                if (n.isMounted) {
                    var a = n.props || i, s = n.state || o, l = n.context || r, c = n.parentContext, u = n.node, d = n.vnode;
                    n.props = n.state = n.context = null, t.isPending = !0, this.componentWillUpdate && this.componentWillUpdate(a, s, l), 
                    this.state = s, this.props = a, this.context = l;
                    var p = w(this), f = M(d, p, u, T(this, c));
                    f !== u && (f.cache = f.cache || {}, A(f.cache, u.cache, f)), n.vnode = p, n.node = f, 
                    E(), this.componentDidUpdate && this.componentDidUpdate(i, o, r), e && e.call(this), 
                    t.isPending = !1, t.emitUpdate();
                }
            },
            setState: function(e, t) {
                var n = this.$updater;
                n.addCallback(t), n.addState(e);
            },
            replaceState: function(e, t) {
                var n = this.$updater;
                n.addCallback(t), n.replaceState(e);
            },
            getDOMNode: function() {
                var e = this.$cache.node;
                return e && "#comment" === e.nodeName ? null : e;
            },
            isMounted: function() {
                return this.$cache.isMounted;
            }
        };
        var Ke = {
            onmousemove: 1,
            onmouseleave: 1,
            onmouseenter: 1,
            onload: 1,
            onunload: 1,
            onscroll: 1,
            onfocus: 1,
            onblur: 1,
            onrowexit: 1,
            onbeforeunload: 1,
            onstop: 1,
            ondragdrop: 1,
            ondragenter: 1,
            ondragexit: 1,
            ondraggesture: 1,
            ondragover: 1,
            oncontextmenu: 1
        }, Qe = "ontouchstart" in document, Ze = function() {}, et = "onclick", tt = {}, nt = {
            animationIterationCount: 1,
            borderImageOutset: 1,
            borderImageSlice: 1,
            borderImageWidth: 1,
            boxFlex: 1,
            boxFlexGroup: 1,
            boxOrdinalGroup: 1,
            columnCount: 1,
            flex: 1,
            flexGrow: 1,
            flexPositive: 1,
            flexShrink: 1,
            flexNegative: 1,
            flexOrder: 1,
            gridRow: 1,
            gridColumn: 1,
            fontWeight: 1,
            lineClamp: 1,
            lineHeight: 1,
            opacity: 1,
            order: 1,
            orphans: 1,
            tabSize: 1,
            widows: 1,
            zIndex: 1,
            zoom: 1,
            fillOpacity: 1,
            floodOpacity: 1,
            stopOpacity: 1,
            strokeDasharray: 1,
            strokeDashoffset: 1,
            strokeMiterlimit: 1,
            strokeOpacity: 1,
            strokeWidth: 1
        }, it = [ "Webkit", "ms", "Moz", "O" ];
        Object.keys(nt).forEach(function(e) {
            it.forEach(function(t) {
                nt[H(t, e)] = 1;
            });
        });
        var ot = /^-?\d+(\.\d+)?$/, rt = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", at = rt + "\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040", st = new RegExp("^[" + rt + "][" + at + "]*$"), lt = RegExp.prototype.test.bind(new RegExp("^(data|aria)-[" + at + "]*$")), ct = {}, ut = 1, dt = 4, pt = 8, ft = 24, mt = 32, ht = {
            props: {
                accept: 0,
                acceptCharset: 0,
                accessKey: 0,
                action: 0,
                allowFullScreen: dt,
                allowTransparency: 0,
                alt: 0,
                async: dt,
                autoComplete: 0,
                autoFocus: dt,
                autoPlay: dt,
                capture: dt,
                cellPadding: 0,
                cellSpacing: 0,
                charSet: 0,
                challenge: 0,
                checked: ut | dt,
                cite: 0,
                classID: 0,
                className: 0,
                cols: ft,
                colSpan: 0,
                content: 0,
                contentEditable: 0,
                contextMenu: 0,
                controls: dt,
                coords: 0,
                crossOrigin: 0,
                data: 0,
                dateTime: 0,
                default: dt,
                defaultValue: ut,
                defaultChecked: ut | dt,
                defer: dt,
                dir: 0,
                disabled: dt,
                download: mt,
                draggable: 0,
                encType: 0,
                form: 0,
                formAction: 0,
                formEncType: 0,
                formMethod: 0,
                formNoValidate: dt,
                formTarget: 0,
                frameBorder: 0,
                headers: 0,
                height: 0,
                hidden: dt,
                high: 0,
                href: 0,
                hrefLang: 0,
                htmlFor: 0,
                httpEquiv: 0,
                icon: 0,
                id: 0,
                inputMode: 0,
                integrity: 0,
                is: 0,
                keyParams: 0,
                keyType: 0,
                kind: 0,
                label: 0,
                lang: 0,
                list: 0,
                loop: dt,
                low: 0,
                manifest: 0,
                marginHeight: 0,
                marginWidth: 0,
                max: 0,
                maxLength: 0,
                media: 0,
                mediaGroup: 0,
                method: 0,
                min: 0,
                minLength: 0,
                multiple: ut | dt,
                muted: ut | dt,
                name: 0,
                nonce: 0,
                noValidate: dt,
                open: dt,
                optimum: 0,
                pattern: 0,
                placeholder: 0,
                poster: 0,
                preload: 0,
                profile: 0,
                radioGroup: 0,
                readOnly: dt,
                referrerPolicy: 0,
                rel: 0,
                required: dt,
                reversed: dt,
                role: 0,
                rows: ft,
                rowSpan: pt,
                sandbox: 0,
                scope: 0,
                scoped: dt,
                scrolling: 0,
                seamless: dt,
                selected: ut | dt,
                shape: 0,
                size: ft,
                sizes: 0,
                span: ft,
                spellCheck: 0,
                src: 0,
                srcDoc: 0,
                srcLang: 0,
                srcSet: 0,
                start: pt,
                step: 0,
                style: 0,
                summary: 0,
                tabIndex: 0,
                target: 0,
                title: 0,
                type: 0,
                useMap: 0,
                value: ut,
                width: 0,
                wmode: 0,
                wrap: 0,
                about: 0,
                datatype: 0,
                inlist: 0,
                prefix: 0,
                property: 0,
                resource: 0,
                typeof: 0,
                vocab: 0,
                autoCapitalize: 0,
                autoCorrect: 0,
                autoSave: 0,
                color: 0,
                itemProp: 0,
                itemScope: dt,
                itemType: 0,
                itemID: 0,
                itemRef: 0,
                results: 0,
                security: 0,
                unselectable: 0
            },
            attrNS: {},
            domAttrs: {
                acceptCharset: "accept-charset",
                className: "class",
                htmlFor: "for",
                httpEquiv: "http-equiv"
            },
            domProps: {}
        }, vt = "http://www.w3.org/1999/xlink", gt = "http://www.w3.org/XML/1998/namespace", bt = {
            accentHeight: "accent-height",
            accumulate: 0,
            additive: 0,
            alignmentBaseline: "alignment-baseline",
            allowReorder: "allowReorder",
            alphabetic: 0,
            amplitude: 0,
            arabicForm: "arabic-form",
            ascent: 0,
            attributeName: "attributeName",
            attributeType: "attributeType",
            autoReverse: "autoReverse",
            azimuth: 0,
            baseFrequency: "baseFrequency",
            baseProfile: "baseProfile",
            baselineShift: "baseline-shift",
            bbox: 0,
            begin: 0,
            bias: 0,
            by: 0,
            calcMode: "calcMode",
            capHeight: "cap-height",
            clip: 0,
            clipPath: "clip-path",
            clipRule: "clip-rule",
            clipPathUnits: "clipPathUnits",
            colorInterpolation: "color-interpolation",
            colorInterpolationFilters: "color-interpolation-filters",
            colorProfile: "color-profile",
            colorRendering: "color-rendering",
            contentScriptType: "contentScriptType",
            contentStyleType: "contentStyleType",
            cursor: 0,
            cx: 0,
            cy: 0,
            d: 0,
            decelerate: 0,
            descent: 0,
            diffuseConstant: "diffuseConstant",
            direction: 0,
            display: 0,
            divisor: 0,
            dominantBaseline: "dominant-baseline",
            dur: 0,
            dx: 0,
            dy: 0,
            edgeMode: "edgeMode",
            elevation: 0,
            enableBackground: "enable-background",
            end: 0,
            exponent: 0,
            externalResourcesRequired: "externalResourcesRequired",
            fill: 0,
            fillOpacity: "fill-opacity",
            fillRule: "fill-rule",
            filter: 0,
            filterRes: "filterRes",
            filterUnits: "filterUnits",
            floodColor: "flood-color",
            floodOpacity: "flood-opacity",
            focusable: 0,
            fontFamily: "font-family",
            fontSize: "font-size",
            fontSizeAdjust: "font-size-adjust",
            fontStretch: "font-stretch",
            fontStyle: "font-style",
            fontVariant: "font-variant",
            fontWeight: "font-weight",
            format: 0,
            from: 0,
            fx: 0,
            fy: 0,
            g1: 0,
            g2: 0,
            glyphName: "glyph-name",
            glyphOrientationHorizontal: "glyph-orientation-horizontal",
            glyphOrientationVertical: "glyph-orientation-vertical",
            glyphRef: "glyphRef",
            gradientTransform: "gradientTransform",
            gradientUnits: "gradientUnits",
            hanging: 0,
            horizAdvX: "horiz-adv-x",
            horizOriginX: "horiz-origin-x",
            ideographic: 0,
            imageRendering: "image-rendering",
            in: 0,
            in2: 0,
            intercept: 0,
            k: 0,
            k1: 0,
            k2: 0,
            k3: 0,
            k4: 0,
            kernelMatrix: "kernelMatrix",
            kernelUnitLength: "kernelUnitLength",
            kerning: 0,
            keyPoints: "keyPoints",
            keySplines: "keySplines",
            keyTimes: "keyTimes",
            lengthAdjust: "lengthAdjust",
            letterSpacing: "letter-spacing",
            lightingColor: "lighting-color",
            limitingConeAngle: "limitingConeAngle",
            local: 0,
            markerEnd: "marker-end",
            markerMid: "marker-mid",
            markerStart: "marker-start",
            markerHeight: "markerHeight",
            markerUnits: "markerUnits",
            markerWidth: "markerWidth",
            mask: 0,
            maskContentUnits: "maskContentUnits",
            maskUnits: "maskUnits",
            mathematical: 0,
            mode: 0,
            numOctaves: "numOctaves",
            offset: 0,
            opacity: 0,
            operator: 0,
            order: 0,
            orient: 0,
            orientation: 0,
            origin: 0,
            overflow: 0,
            overlinePosition: "overline-position",
            overlineThickness: "overline-thickness",
            paintOrder: "paint-order",
            panose1: "panose-1",
            pathLength: "pathLength",
            patternContentUnits: "patternContentUnits",
            patternTransform: "patternTransform",
            patternUnits: "patternUnits",
            pointerEvents: "pointer-events",
            points: 0,
            pointsAtX: "pointsAtX",
            pointsAtY: "pointsAtY",
            pointsAtZ: "pointsAtZ",
            preserveAlpha: "preserveAlpha",
            preserveAspectRatio: "preserveAspectRatio",
            primitiveUnits: "primitiveUnits",
            r: 0,
            radius: 0,
            refX: "refX",
            refY: "refY",
            renderingIntent: "rendering-intent",
            repeatCount: "repeatCount",
            repeatDur: "repeatDur",
            requiredExtensions: "requiredExtensions",
            requiredFeatures: "requiredFeatures",
            restart: 0,
            result: 0,
            rotate: 0,
            rx: 0,
            ry: 0,
            scale: 0,
            seed: 0,
            shapeRendering: "shape-rendering",
            slope: 0,
            spacing: 0,
            specularConstant: "specularConstant",
            specularExponent: "specularExponent",
            speed: 0,
            spreadMethod: "spreadMethod",
            startOffset: "startOffset",
            stdDeviation: "stdDeviation",
            stemh: 0,
            stemv: 0,
            stitchTiles: "stitchTiles",
            stopColor: "stop-color",
            stopOpacity: "stop-opacity",
            strikethroughPosition: "strikethrough-position",
            strikethroughThickness: "strikethrough-thickness",
            string: 0,
            stroke: 0,
            strokeDasharray: "stroke-dasharray",
            strokeDashoffset: "stroke-dashoffset",
            strokeLinecap: "stroke-linecap",
            strokeLinejoin: "stroke-linejoin",
            strokeMiterlimit: "stroke-miterlimit",
            strokeOpacity: "stroke-opacity",
            strokeWidth: "stroke-width",
            surfaceScale: "surfaceScale",
            systemLanguage: "systemLanguage",
            tableValues: "tableValues",
            targetX: "targetX",
            targetY: "targetY",
            textAnchor: "text-anchor",
            textDecoration: "text-decoration",
            textRendering: "text-rendering",
            textLength: "textLength",
            to: 0,
            transform: 0,
            u1: 0,
            u2: 0,
            underlinePosition: "underline-position",
            underlineThickness: "underline-thickness",
            unicode: 0,
            unicodeBidi: "unicode-bidi",
            unicodeRange: "unicode-range",
            unitsPerEm: "units-per-em",
            vAlphabetic: "v-alphabetic",
            vHanging: "v-hanging",
            vIdeographic: "v-ideographic",
            vMathematical: "v-mathematical",
            values: 0,
            vectorEffect: "vector-effect",
            version: 0,
            vertAdvY: "vert-adv-y",
            vertOriginX: "vert-origin-x",
            vertOriginY: "vert-origin-y",
            viewBox: "viewBox",
            viewTarget: "viewTarget",
            visibility: 0,
            widths: 0,
            wordSpacing: "word-spacing",
            writingMode: "writing-mode",
            x: 0,
            xHeight: "x-height",
            x1: 0,
            x2: 0,
            xChannelSelector: "xChannelSelector",
            xlinkActuate: "xlink:actuate",
            xlinkArcrole: "xlink:arcrole",
            xlinkHref: "xlink:href",
            xlinkRole: "xlink:role",
            xlinkShow: "xlink:show",
            xlinkTitle: "xlink:title",
            xlinkType: "xlink:type",
            xmlBase: "xml:base",
            xmlns: 0,
            xmlnsXlink: "xmlns:xlink",
            xmlLang: "xml:lang",
            xmlSpace: "xml:space",
            y: 0,
            y1: 0,
            y2: 0,
            yChannelSelector: "yChannelSelector",
            z: 0,
            zoomAndPan: "zoomAndPan"
        }, kt = {
            props: {},
            attrNS: {
                xlinkActuate: vt,
                xlinkArcrole: vt,
                xlinkHref: vt,
                xlinkRole: vt,
                xlinkShow: vt,
                xlinkTitle: vt,
                xlinkType: vt,
                xmlBase: gt,
                xmlLang: gt,
                xmlSpace: gt
            },
            domAttrs: {},
            domProps: {}
        };
        Object.keys(bt).map(function(e) {
            kt.props[e] = 0, bt[e] && (kt.domAttrs[e] = bt[e]);
        }), q(ht), q(kt);
        var yt = Array.isArray, xt = 0, _t = /^on/i;
        Object.freeze || (Object.freeze = Z);
        var wt = {}, Tt = {}, St = Object.freeze({
            render: pe,
            unstable_renderSubtreeIntoContainer: fe,
            unmountComponentAtNode: me,
            findDOMNode: he
        }), Ct = "a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|circle|clipPath|defs|ellipse|g|image|line|linearGradient|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|svg|text|tspan", Et = {};
        Ct.split("|").forEach(function(e) {
            Et[e] = ke(e);
        });
        var Mt = function e() {
            return e;
        };
        Mt.isRequired = Mt;
        var Dt = {
            array: Mt,
            bool: Mt,
            func: Mt,
            number: Mt,
            object: Mt,
            string: Mt,
            any: Mt,
            arrayOf: Mt,
            element: Mt,
            instanceOf: Mt,
            node: Mt,
            objectOf: Mt,
            oneOf: Mt,
            oneOfType: Mt,
            shape: Mt
        }, zt = /\/(?!\/)/g, Nt = Object.freeze({
            only: ye,
            forEach: xe,
            map: _e,
            count: we,
            toArray: Te
        }), At = function() {};
        At.prototype = I.prototype, Ie.prototype = Object.create(I.prototype), Ie.prototype.constructor = Ie, 
        Ie.prototype.isPureReactComponent = !0, Ie.prototype.shouldComponentUpdate = Re;
        var Pt = ie({
            version: "0.15.1",
            cloneElement: be,
            isValidElement: ge,
            createElement: ve,
            createFactory: ke,
            Component: I,
            PureComponent: Ie,
            createClass: Ae,
            Children: Nt,
            PropTypes: Dt,
            DOM: Et
        }, St);
        return Pt.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = St, Pt;
    });
}, function(e, t, n) {
    "use strict";
    function i(e, t) {
        function n(n) {
            for (var i = e.vgroups_lvols[t.path], o = 0; o < i.length; o++) if (i[o].Name == n) return i[o];
            return null;
        }
        for (var i, o = 0; o < 1e3 && (i = "lvol" + o.toFixed(), n(i)); o++) ;
        return i;
    }
    function o(e, t, n) {
        function o(e, t) {
            return e.indexOf(t, e.length - t.length) !== -1;
        }
        function r(t, n) {
            T.push({
                name: t,
                renderer: n,
                data: {
                    client: e,
                    block: f,
                    lvol: y
                }
            });
        }
        function a() {
            var t = y && e.vgroups[y.VolumeGroup];
            t && v.open({
                Title: I("Create Thin Volume"),
                Fields: [ {
                    TextInput: "name",
                    Title: I("Name"),
                    Value: i(e, t),
                    validate: g.validate_lvm2_name
                }, {
                    SizeSlider: "size",
                    Title: I("Size"),
                    Value: y.Size,
                    Max: 3 * y.Size,
                    AllowInfinite: !0,
                    Round: t.ExtentSize
                } ],
                Action: {
                    Title: I("Create"),
                    action: function(e) {
                        return t.CreateThinVolume(e.name, e.size, y.path, {});
                    }
                }
            });
        }
        function s(e, t, n) {
            O.push(k.createElement(w, {
                onClick: t,
                excuse: n
            }, e));
        }
        function l() {
            var t = e.blocks_crypto[f.path];
            if (t) return t.Lock({});
        }
        function c() {
            var t = e.blocks_crypto[f.path];
            if (t) return f.GetSecretConfiguration({}).then(function(e) {
                for (var n = 0; n < e.length; n++) if ("crypttab" == e[n][0] && e[n][1]["passphrase-contents"] && g.decode_filename(e[n][1]["passphrase-contents"].v)) return t.Unlock("", {});
                v.open({
                    Title: I("Unlock"),
                    Fields: [ {
                        PassInput: "passphrase",
                        Title: I("Passphrase")
                    } ],
                    Action: {
                        Title: I("Unlock"),
                        action: function(e) {
                            return t.Unlock(e.passphrase, {});
                        }
                    }
                });
            });
        }
        function u() {
            return y.Activate({});
        }
        function d() {
            return y.Deactivate({});
        }
        function p() {
            var n;
            f && (n = e.blocks_part[f.path]);
            var i, o;
            if (y ? (i = g.lvol_name(y), o = I("Deleting a logical volume will delete all data in it.")) : n && (i = g.block_name(f), 
            o = I("Deleting a partition will delete all data in it.")), i) {
                var r = g.get_active_usage(e, t.path);
                if (r.Blocking) return void v.open({
                    Title: h.format(I("$0 is in active use"), i),
                    Blocking: r.Blocking,
                    Fields: []
                });
                v.open({
                    Title: h.format(I("Please confirm deletion of $0"), i),
                    Teardown: r.Teardown,
                    Fields: [],
                    Action: {
                        Danger: o,
                        Title: I("Delete"),
                        action: function() {
                            return g.teardown_active_usage(e, r).then(function() {
                                return y ? y.Delete({
                                    "tear-down": {
                                        t: "b",
                                        v: !0
                                    }
                                }) : n ? n.Delete({
                                    "tear-down": {
                                        t: "b",
                                        v: !0
                                    }
                                }) : void 0;
                            });
                        }
                    }
                });
            }
        }
        var f = o(t.iface, ".Block") ? t : null, m = f && e.blocks_lvm2[f.path], b = f && e.blocks_pvol[f.path], y = o(t.iface, ".LogicalVolume") ? t : m && e.lvols[m.LogicalVolume], x = f && "filesystem" == f.IdUsage, _ = f && "crypto" == f.IdUsage, T = [], R = null;
        y && ("pool" == y.Type ? (r(I("Pool"), M), R = k.createElement(w, {
            onClick: a
        }, I("Create Thin Volume"))) : r(I("Volume"), E)), n && r(I("Partition"), N), x ? r(I("Filesystem"), S) : _ ? r(I("Encryption"), C) : f && "raid" == f.IdUsage && "LVM2_member" == f.IdType || b && e.vgroups[b.VolumeGroup] ? r(I("Physical Volume"), D) : f && "raid" == f.IdUsage || f && e.mdraids[f.MDRaidMember] ? r(I("RAID Member"), z) : f && "other" == f.IdUsage && "swap" == f.IdType ? r(I("Swap"), A) : f && r(I("Unrecognized Data"), P);
        var O = [];
        if (_ && (e.blocks_cleartext[f.path] ? s(I("Lock"), l) : s(I("Unlock"), c)), y && (y.Active ? s(I("Deactivate"), d) : s(I("Activate"), u)), 
        n || y) {
            var F = null;
            e.is_old_udisks2 && _ && e.blocks_cleartext[f.path] && (F = I("Can't delete while unlocked")), 
            s(I("Delete"), p, F);
        }
        return {
            renderers: T,
            actions: [ k.createElement("div", null, O) ],
            row_action: R
        };
    }
    function r(e, t) {
        var n, i = e.blocks_pvol[t.path];
        if ("filesystem" == t.IdUsage) n = h.format(R("storage-id-desc", "$0 File System"), t.IdType); else if ("raid" == t.IdUsage) if (i && e.vgroups[i.VolumeGroup]) {
            var o = e.vgroups[i.VolumeGroup];
            n = h.format(I("Physical volume of $0"), o.Name);
        } else if (e.mdraids[t.MDRaidMember]) {
            var r = e.mdraids[t.MDRaidMember];
            n = h.format(I("Member of RAID Device $0"), g.mdraid_name(r));
        } else n = I("LVM2_member" == t.IdType ? "Physical Volume" : "Member of RAID Device"); else n = "crypto" == t.IdUsage ? R("storage-id-desc", "Encrypted data") : "other" == t.IdUsage ? "swap" == t.IdType ? R("storage-id-desc", "Swap Space") : R("storage-id-desc", "Other Data") : R("storage-id-desc", "Unrecognized Data");
        return {
            size: t.Size,
            text: n
        };
    }
    function a(e, t, n, i, o, r, a) {
        var s = null;
        a && (s = k.createElement("span", {
            className: "spinner spinner-sm spinner-inline",
            style: {
                visibility: "hidden"
            },
            "data-job-object": a
        })), r.row_action && (s = s ? k.createElement("span", null, s, r.row_action) : r.row_action);
        var l = [ k.createElement("span", {
            className: "content-level-" + t
        }, g.format_size_and_text(o.size, o.text)), {
            name: i,
            header: !0
        }, {
            name: s,
            tight: !0
        } ];
        e.push(k.createElement(y.ListingRow, {
            key: n,
            columns: l,
            tabRenderers: r.renderers,
            listingActions: r.actions
        }));
    }
    function s(e, t, n, i, s) {
        var l, u, d;
        "crypto" == i.IdUsage && (d = e.blocks_cleartext[i.path]), u = o(e, i, s), l = r(e, i), 
        a(t, n, i.path, g.block_name(i), l, u, i.path), d && c(e, t, n + 1, d);
    }
    function l(e, t, n, i) {
        function r(n, o, r) {
            function a() {
                _.format_dialog(e, i.path, o, r, p && n <= d);
            }
            var s = k.createElement(w, {
                onClick: a
            }, I("Create Partition")), l = [ k.createElement("span", {
                className: "content-level-" + n
            }, g.format_size_and_text(r, I("Free Space"))), "", {
                element: s,
                tight: !0
            } ];
            t.push(k.createElement(y.ListingRow, {
                columns: l
            }));
        }
        function l(n, i) {
            var r = {
                size: i.size,
                text: I("Extended Partition")
            }, s = o(e, i.block, !0);
            a(t, n, i.block.path, g.block_name(i.block), r, s, i.block.path), c(n + 1, i.partitions);
        }
        function c(n, i) {
            var o, a;
            for (o = 0; o < i.length; o++) a = i[o], "free" == a.type ? r(n, a.start, a.size) : "container" == a.type ? l(n, a) : s(e, t, n, a.block, !0);
        }
        var u = e.blocks_ptable[i.path], d = n, p = "dos" == u.Type;
        c(n, g.get_partitions(e, i));
    }
    function c(e, t, n, i) {
        e.blocks_ptable[i.path] ? l(e, t, n, i) : s(e, t, n, i, null);
    }
    function u(e, t) {
        var n = [];
        return c(e, n, 0, t), n;
    }
    function d(e, t) {
        function n() {
            var n = g.get_active_usage(e, t.path);
            return n.Blocking ? void v.open({
                Title: h.format(I("$0 is in active use"), g.block_name(t)),
                Blocking: n.Blocking,
                Fields: []
            }) : void v.open({
                Title: h.format(I("Format Disk $0"), g.block_name(t)),
                Teardown: n.Teardown,
                Fields: [ {
                    SelectOne: "erase",
                    Title: I("Erase"),
                    Options: [ {
                        value: "no",
                        Title: I("Don't overwrite existing data")
                    }, {
                        value: "zero",
                        Title: I("Overwrite existing data with zeros")
                    } ]
                }, {
                    SelectOne: "type",
                    Title: I("Partitioning"),
                    Options: [ {
                        value: "dos",
                        Title: I("Compatible with all systems and devices (MBR)")
                    }, {
                        value: "gpt",
                        Title: I("Compatible with modern system and hard disks > 2TB (GPT)"),
                        selected: !0
                    }, {
                        value: "empty",
                        Title: I("No partitioning")
                    } ]
                } ],
                Action: {
                    Title: I("Format"),
                    Danger: I("Formatting a disk will erase all data on it."),
                    action: function(i) {
                        var o = {
                            "no-block": {
                                t: "b",
                                v: !0
                            },
                            "tear-down": {
                                t: "b",
                                v: !0
                            }
                        };
                        return "no" != i.erase && (o.erase = {
                            t: "s",
                            v: i.erase
                        }), g.teardown_active_usage(e, n).then(function() {
                            return t.Format(i.type, o);
                        });
                    }
                }
            });
        }
        if (!t) return null;
        var i = e.drives[t.Drive];
        if (i && (t = e.drives_block[i.path]), !t) return null;
        if (0 === t.Size) return null;
        var o = k.createElement("div", {
            className: "pull-right"
        }, k.createElement(w, {
            onClick: n,
            excuse: t.ReadOnly ? I("Device is read-only") : null
        }, I("Create partition table")));
        return k.createElement(y.Listing, {
            title: I("Content"),
            actions: o
        }, u(e, t));
    }
    function p(e, t, n, i, r) {
        var c, u;
        e.blocks_ptable[i.path] ? (u = {
            size: i.Size,
            text: r.Name
        }, c = o(e, i, !1), a(t, n, r.Name, g.block_name(i), u, c, i.path), l(e, t, n + 1, i)) : s(e, t, n, i, !1);
    }
    function f(e, t, n, i) {
        var r, s, l;
        "pool" == i.Type ? (s = {
            size: i.Size,
            text: I("Pool for Thin Volumes")
        }, r = o(e, i, !1), a(t, n, i.Name, i.Name, s, r, !1), e.lvols_pool_members[i.path].forEach(function(i) {
            f(e, t, n + 1, i);
        })) : (l = e.lvols_block[i.path], l ? p(e, t, n, l, i) : (s = {
            size: i.Size,
            text: I(i.Active ? "Unsupported volume" : "Inactive volume")
        }, r = o(e, i, !1), a(t, n, i.Name, i.Name, s, r, !1)));
    }
    function m(e, t) {
        var n = [];
        return (e.vgroups_lvols[t.path] || []).forEach(function(t) {
            "/" == t.ThinPool && f(e, n, 0, t);
        }), n;
    }
    var h = n(7), v = n(23), g = n(9), b = n(6), k = n(27), y = n(29), x = n(32), _ = n(35), w = x.StorageButton, T = x.StorageLink, S = n(36).FilesystemTab, C = n(37).CryptoTab, E = n(38).BlockVolTab, M = n(38).PoolVolTab, D = n(39).PVolTab, z = n(39).MDRaidMemberTab, N = n(40).PartitionTab, A = n(41).SwapTab, P = n(42).UnrecognizedTab, I = h.gettext, R = h.gettext, O = k.createClass({
        displayName: "Block",
        getInitialState: function() {
            return {
                block: null
            };
        },
        onClientChanged: function() {
            this.setState({
                block: this.props.client.slashdevs_block[this.props.name]
            });
        },
        componentDidMount: function() {
            b(this.props.client).on("changed", this.onClientChanged), this.onClientChanged();
        },
        componentWillUnmount: function() {
            b(this.props.model).off("changed", this.onClientChanged);
        },
        render: function() {
            return d(this.props.client, this.state.block);
        }
    }), F = k.createClass({
        displayName: "MDRaid",
        getInitialState: function() {
            return {
                mdraid: null,
                block: null
            };
        },
        onClientChanged: function() {
            var e = this.props.client.uuids_mdraid[this.props.name], t = e && this.props.client.mdraids_block[e.path];
            this.setState({
                mdraid: e,
                block: t
            });
        },
        componentDidMount: function() {
            b(this.props.client).on("changed", this.onClientChanged), this.onClientChanged();
        },
        componentWillUnmount: function() {
            b(this.props.model).off("changed", this.onClientChanged);
        },
        render: function() {
            return d(this.props.client, this.state.block);
        }
    }), U = k.createClass({
        displayName: "VGroup",
        getInitialState: function() {
            return {
                vgroup: null
            };
        },
        onClientChanged: function() {
            this.setState({
                vgroup: this.props.client.vgnames_vgroup[this.props.name]
            });
        },
        componentDidMount: function() {
            b(this.props.client).on("changed", this.onClientChanged), this.onClientChanged();
        },
        componentWillUnmount: function() {
            b(this.props.model).off("changed", this.onClientChanged);
        },
        render: function() {
            function e() {
                0 != n.FreeSize && v.open({
                    Title: I("Create Logical Volume"),
                    Fields: [ {
                        TextInput: "name",
                        Title: I("Name"),
                        Value: i(t.props.client, n),
                        validate: g.validate_lvm2_name
                    }, {
                        SelectOne: "purpose",
                        Title: I("Purpose"),
                        Options: [ {
                            value: "block",
                            Title: I("Block device for filesystems"),
                            selected: !0
                        }, {
                            value: "pool",
                            Title: I("Pool for thinly provisioned volumes")
                        } ]
                    }, {
                        SizeSlider: "size",
                        Title: I("Size"),
                        Max: n.FreeSize,
                        Round: n.ExtentSize
                    } ],
                    Action: {
                        Title: I("Create"),
                        action: function(e) {
                            return "block" == e.purpose ? n.CreatePlainVolume(e.name, e.size, {}) : "pool" == e.purpose ? n.CreateThinPoolVolume(e.name, e.size, {}) : void 0;
                        }
                    }
                });
            }
            var t = this, n = t.state.vgroup;
            if (!n) return null;
            var o = 0 == n.FreeSize && I("No free space"), r = k.createElement("div", {
                className: "pull-right"
            }, k.createElement(T, {
                onClick: e,
                excuse: o
            }, k.createElement("span", {
                className: "pficon pficon-add-circle-o"
            }), " ", I("Create new Logical Volume")));
            return k.createElement(y.Listing, {
                title: "Logical Volumes",
                actions: r,
                emptyCaption: I("No Logical Volumes")
            }, m(t.props.client, n));
        }
    });
    e.exports = {
        Block: O,
        MDRaid: F,
        VGroup: U
    };
}, function(e, t, n) {
    "use strict";
    var i = Object.assign || function(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];
            for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
        }
        return e;
    }, o = n(27);
    n(30);
    var r = o.createClass({
        displayName: "ListingRow",
        propTypes: {
            rowId: o.PropTypes.string,
            columns: o.PropTypes.array.isRequired,
            tabRenderers: o.PropTypes.array,
            navigateToItem: o.PropTypes.func,
            listingDetail: o.PropTypes.node,
            listingActions: o.PropTypes.arrayOf(o.PropTypes.node),
            selectChanged: o.PropTypes.func,
            selected: o.PropTypes.bool
        },
        getDefaultProps: function() {
            return {
                tabRenderers: [],
                navigateToItem: null
            };
        },
        getInitialState: function() {
            return {
                expanded: !1,
                activeTab: 0,
                loadedTabs: {},
                selected: this.props.selected
            };
        },
        handleNavigateClick: function(e) {
            e && 0 === e.button && this.props.navigateToItem();
        },
        handleExpandClick: function(e) {
            if (e && 0 === e.button) {
                var t = !this.state.expanded && this.props.tabRenderers.length > 0;
                this.setState({
                    expanded: t
                });
                var n = {};
                if (t) {
                    var i, o;
                    for (i = 0; i < this.props.tabRenderers.length; i++) o = "presence" in this.props.tabRenderers[i] ? this.props.tabRenderers[i].presence : "default", 
                    "always" == o && (n[i] = !0);
                    n[this.state.activeTab] = !0;
                }
                this.setState({
                    loadedTabs: n
                }), e.stopPropagation(), e.preventDefault();
            }
        },
        handleSelectClick: function(e) {
            if (e && 0 === e.button) {
                var t = !this.state.selected;
                this.setState({
                    selected: t
                }), this.props.selectChanged && this.props.selectChanged(t), e.stopPropagation(), 
                e.preventDefault();
            }
        },
        handleTabClick: function(e, t) {
            if (t && 0 === t.button) {
                var n = this.state.activeTab, i = "default", o = this.state.loadedTabs;
                n !== e && ("presence" in this.props.tabRenderers[n] && (i = this.props.tabRenderers[n].presence), 
                "onlyActive" == i && delete o[n], o[e] = !0, this.setState({
                    loadedTabs: o,
                    activeTab: e
                })), t.stopPropagation(), t.preventDefault();
            }
        },
        render: function() {
            var e, t = this, n = !!this.props.navigateToItem && !this.state.expanded, r = this.props.columns.map(function(e) {
                return "string" == typeof e || null === e || void 0 === e || e instanceof String || o.isValidElement(e) ? o.createElement("td", null, e) : "header" in e && e.header ? o.createElement("th", null, e.name) : "tight" in e && e.tight ? o.createElement("td", {
                    className: "listing-ct-actions"
                }, e.name || e.element) : o.createElement("td", null, e.name);
            }), a = this.props.tabRenderers.length > 0;
            e = a ? o.createElement("td", {
                className: "listing-ct-toggle",
                onClick: n ? this.handleExpandClick : void 0
            }, o.createElement("i", {
                className: "fa fa-fw"
            })) : o.createElement("td", {
                className: "listing-ct-toggle"
            });
            var s = [ "listing-ct-item" ];
            n || s.push("listing-ct-nonavigate"), a || s.push("listing-ct-noexpand");
            var l, c = !(n || a) && void 0 !== this.state.selected;
            c ? (l = this.handleSelectClick, this.state.selected && s.push("listing-ct-selected")) : l = n ? this.handleNavigateClick : this.handleExpandClick;
            var u = o.createElement("tr", {
                "data-row-id": this.props.rowId,
                className: s.join(" "),
                onClick: l
            }, e, r);
            if (this.state.expanded) {
                var d, p, f, m, h = this.props.tabRenderers.map(function(e, n) {
                    return o.createElement("li", {
                        key: n,
                        className: n === t.state.activeTab ? "active" : ""
                    }, o.createElement("a", {
                        href: "#",
                        onClick: t.handleTabClick.bind(t, n)
                    }, e.name));
                }), v = [];
                for (d = 0; d < this.props.tabRenderers.length; d++) p = this.props.tabRenderers[d].renderer, 
                f = this.props.tabRenderers[d].data, (d === this.state.activeTab || d in this.state.loadedTabs) && (m = o.createElement(p, i({
                    key: this.props.tabRenderers[d].name,
                    hidden: d !== this.state.activeTab
                }, f)), d === this.state.activeTab ? v.push(o.createElement("div", {
                    className: "listing-ct-body",
                    key: d
                }, m)) : v.push(o.createElement("div", {
                    className: "listing-ct-body",
                    key: d,
                    hidden: !0
                }, m)));
                var g;
                return "listingDetail" in this.props && (g = o.createElement("span", {
                    className: "listing-ct-caption"
                }, this.props.listingDetail)), o.createElement("tbody", {
                    className: "open"
                }, u, o.createElement("tr", {
                    className: "listing-ct-panel"
                }, o.createElement("td", {
                    colSpan: r.length + (e ? 1 : 0)
                }, o.createElement("div", {
                    className: "listing-ct-head"
                }, o.createElement("div", {
                    className: "listing-ct-actions"
                }, g, this.props.listingActions), o.createElement("ul", {
                    className: "nav nav-tabs nav-tabs-pf"
                }, h)), v)));
            }
            return o.createElement("tbody", null, u, o.createElement("tr", {
                className: "listing-ct-panel"
            }));
        }
    }), a = o.createClass({
        displayName: "Listing",
        propTypes: {
            title: o.PropTypes.string.isRequired,
            fullWidth: o.PropTypes.bool,
            emptyCaption: o.PropTypes.string.isRequired,
            columnTitles: o.PropTypes.arrayOf(o.PropTypes.string),
            actions: o.PropTypes.arrayOf(o.PropTypes.node)
        },
        getDefaultProps: function() {
            return {
                fullWidth: !0,
                columnTitles: [],
                actions: []
            };
        },
        render: function() {
            var e = [ "listing", "listing-ct" ];
            this.props.fullWidth && e.push("listing-ct-wide");
            var t, n, i;
            this.props.children && 0 !== this.props.children.length ? this.props.columnTitles.length ? (i = !1, 
            this.props.children.forEach(function(e) {
                void 0 !== e.props.selected && (i = !0);
            }), i && this.props.children.forEach(function(e) {
                void 0 === e.props.selected && (e.props.selected = !1);
            }), n = o.createElement("tr", null, o.createElement("th", {
                className: "listing-ct-toggle"
            }), this.props.columnTitles.map(function(e) {
                return o.createElement("th", null, e);
            }))) : n = o.createElement("tr", null) : (t = "listing-ct-empty", n = o.createElement("tr", null, o.createElement("td", null, this.props.emptyCaption)));
            var r;
            return (this.props.title || this.props.actions && this.props.actions.length > 0) && (r = o.createElement("caption", {
                className: "cockpit-caption"
            }, this.props.title, this.props.actions)), o.createElement("table", {
                className: e.join(" ")
            }, r, o.createElement("thead", {
                className: t
            }, n), this.props.children);
        }
    });
    e.exports = {
        ListingRow: r,
        Listing: a
    };
}, function(e, t) {}, , function(e, t, n) {
    "use strict";
    var i = n(7), o = n(25).permission, r = n(9), a = n(6), s = n(27), l = n(33).Tooltip, c = i.gettext, u = s.createClass({
        displayName: "StorageAction",
        getInitialState: function() {
            return {
                allowed: o.allowed !== !1
            };
        },
        onPermissionChanged: function() {
            this.setState({
                allowed: o.allowed !== !1
            });
        },
        componentDidMount: function() {
            a(o).on("changed", this.onPermissionChanged);
        },
        componentWillUnmount: function() {
            a(o).off("changed", this.onPermissionChanged);
        },
        onClick: function(e) {
            if (e && 0 === e.button) {
                var t = this.props.onClick();
                t && t.fail(function(e) {
                    a("#error-popup-title").text(c("Error")), a("#error-popup-message").text(e.toString()), 
                    a("#error-popup").modal("show");
                }), e.stopPropagation();
            }
        },
        render: function() {
            var e = this.props.excuse;
            if (!this.state.allowed) {
                var t = {
                    __html: i.format(c("The user <b>$0</b> is not permitted to manage storage"), o.user ? o.user.name : "")
                };
                e = s.createElement("span", {
                    dangerouslySetInnerHTML: t
                });
            }
            var n;
            return n = this.props.link ? s.createElement("a", {
                onClick: this.onClick,
                className: e ? " disabled" : ""
            }, this.props.children) : s.createElement("button", {
                onClick: this.onClick,
                className: "btn btn-default" + (e ? " disabled" : "")
            }, this.props.children), s.createElement(l, {
                tip: e
            }, n);
        }
    }), d = s.createClass({
        displayName: "StorageButton",
        render: function() {
            return s.createElement(u, {
                onClick: this.props.onClick,
                excuse: this.props.excuse
            }, this.props.children);
        }
    }), p = s.createClass({
        displayName: "StorageLink",
        render: function() {
            return s.createElement(u, {
                onClick: this.props.onClick,
                excuse: this.props.excuse,
                link: !0
            }, this.props.children);
        }
    }), f = s.createClass({
        displayName: "StorageBlockNavLink",
        render: function() {
            function e(e, t) {
                var n = e.indexOf("$0");
                return n >= 0 ? [ e.slice(0, n), t, e.slice(n + 2) ] : [ e ];
            }
            var t = this, n = t.props.client, o = t.props.block;
            if (o) {
                for (var a, l, u, d = o.path; ;) if (n.blocks_part[d] && n.blocks_ptable[n.blocks_part[d].Table]) a = !0, 
                d = n.blocks_part[d].Table; else {
                    if (!n.blocks_crypto[d] || !n.blocks[n.blocks_crypto[d].CryptoBackingDevice]) break;
                    l = !0, d = n.blocks_crypto[d].CryptoBackingDevice;
                }
                n.blocks_lvm2[d] && n.lvols[n.blocks_lvm2[d].LogicalVolume] && (u = !0);
                var p, f;
                if (n.mdraids[o.MDRaid]) p = i.format(c("RAID Device $0"), r.mdraid_name(n.mdraids[o.MDRaid])), 
                f = function() {
                    i.location.go([ "mdraid", n.mdraids[o.MDRaid].UUID ]);
                }; else if (n.blocks_lvm2[d] && n.lvols[n.blocks_lvm2[d].LogicalVolume] && n.vgroups[n.lvols[n.blocks_lvm2[d].LogicalVolume].VolumeGroup]) {
                    var m = n.vgroups[n.lvols[n.blocks_lvm2[d].LogicalVolume].VolumeGroup].Name;
                    p = i.format(c("Volume Group $0"), m), f = function() {
                        console.location.go([ "vg", m ]);
                    };
                } else p = n.drives[o.Drive] ? r.drive_name(n.drives[o.Drive]) : r.block_name(o), 
                f = function() {
                    i.location.go([ r.block_name(o).replace(/^\/dev\//, "") ]);
                };
                var h = s.createElement("a", {
                    onClick: f
                }, p);
                return u && l ? s.createElement("span", null, e(c("Encrypted Logical Volume of $0"), h)) : a && l ? s.createElement("span", null, e(c("Encrypted Partition of $0"), h)) : u ? s.createElement("span", null, e(c("Logical Volume of $0"), h)) : a ? s.createElement("span", null, e(c("Partition of $0"), h)) : l ? s.createElement("span", null, e(c("Encrypted $0"), h)) : h;
            }
        }
    });
    e.exports = {
        StorageAction: u,
        StorageButton: d,
        StorageLink: p,
        StorageBlockNavLink: f
    };
}, function(e, t, n) {
    "use strict";
    var i = n(27);
    n(34);
    var o = i.createClass({
        displayName: "Tooltip",
        getInitialState: function() {
            return {
                open: !1,
                pos: "top"
            };
        },
        onMouseover: function() {
            this.setState({
                open: !0
            });
        },
        onMouseout: function() {
            this.setState({
                open: !1
            });
        },
        render: function() {
            function e(e) {
                var n = e && e.previousElementSibling;
                if (e && n) {
                    if (e.style.width && e.style.height || (e.style.width = e.offsetWidth + "px", e.style.height = e.offsetHeight + "px"), 
                    e.offsetLeft === -1e4) {
                        for (var i = n.offsetLeft + .5 * n.offsetWidth - .5 * e.offsetWidth, o = n.offsetTop - e.offsetHeight, r = e.getElementsByClassName("tooltip-arrow")[0], a = e.offsetWidth / 2, s = i, l = o, c = n.offsetWidth, u = e.offsetParent; u; ) s += u.offsetLeft, 
                        l += u.offsetTop, c = u.offsetWidth, u = u.offsetParent;
                        var d = 0;
                        s < 0 ? d = -s + 5 : s + e.offsetWidth > c && (d = -(s + e.offsetWidth - c) - 5), 
                        i += d, a -= d, l < 0 && (o = n.offsetTop + n.offsetHeight, t.setState({
                            pos: "bottom"
                        })), e.style.left = i + "px", e.style.top = o + "px", r.style.left = a + "px";
                    }
                    e.style.zIndex = t.state.open ? 2e3 : -2e3;
                }
            }
            var t = this;
            if (!t.props.tip) return t.props.children;
            var n = "tooltip " + t.state.pos;
            return t.state.open && (n += " in"), i.createElement("div", {
                className: "tooltip-ct-outer"
            }, i.createElement("div", {
                className: "tooltip-ct-inner",
                onMouseover: this.onMouseover,
                onMouseout: this.onMouseout
            }, t.props.children), i.createElement("div", {
                ref: e,
                className: n,
                style: {
                    top: 0,
                    left: -1e4
                }
            }, i.createElement("div", {
                className: "tooltip-arrow"
            }), i.createElement("div", {
                className: "tooltip-inner"
            }, t.props.tip)));
        }
    });
    e.exports = {
        Tooltip: o
    };
}, function(e, t) {}, function(e, t, n) {
    "use strict";
    function i(e, t, n, i, s) {
        function l(e) {
            return "luks+xfs" == e.type || "luks+ext4" == e.type;
        }
        function u(e) {
            return "empty" != e.type && "dos-extended" != e.type;
        }
        function d(t) {
            return !e.is_old_udisks2 && l(t);
        }
        function p(t) {
            return !e.is_old_udisks2 && u(t);
        }
        function f(t, n, i, o, r, a, s, l) {
            return e.is_old_udisks2 ? t.CreatePartition(n, i, o, r, a).then(function(t) {
                return e.call(t, "Block", "Format", [ s, l ]).then(function() {
                    return t;
                });
            }) : t.CreatePartitionAndFormat(n, i, o, r, a, s, l);
        }
        function m(t, n) {
            t !== !0 && e.manager.SupportedFilesystems && e.manager.SupportedFilesystems.indexOf(t) == -1 || k.push(n);
        }
        var h, v = e.blocks[t], g = e.blocks_ptable[t], b = void 0 !== n;
        h = b ? o.format(c("Create partition on $0"), r.block_name(v)) : o.format(c("Format $0"), r.block_name(v));
        var k = [];
        m("xfs", {
            value: "xfs",
            Title: c("XFS - Red Hat Enterprise Linux 7 default")
        }), m("ext4", {
            value: "ext4",
            Title: c("ext4 - Red Hat Enterprise Linux 6 default")
        }), m("xfs", {
            value: "luks+xfs",
            Title: c("Encrypted XFS (LUKS)")
        }), m("ext4", {
            value: "luks+ext4",
            Title: c("Encrypted EXT4 (LUKS)")
        }), m("vfat", {
            value: "vfat",
            Title: c("VFAT - Compatible with all systems and devices")
        }), m("ntfs", {
            value: "ntfs",
            Title: c("NTFS - Compatible with most systems")
        }), m(!0, {
            value: "dos-extended",
            Title: c("Extended Partition"),
            disabled: !(b && s)
        }), m(!0, {
            value: "empty",
            Title: c("No Filesystem")
        }), m(!0, {
            value: "custom",
            Title: c("Custom (Enter filesystem type)")
        });
        var y = r.get_active_usage(e, b ? null : t);
        return y.Blocking ? void a.open({
            Title: o.format(c("$0 is in active use"), r.block_name(v)),
            Blocking: y.Blocking,
            Fields: []
        }) : void a.open({
            Title: h,
            Teardown: y.Teardown,
            Fields: [ {
                SizeSlider: "size",
                Title: c("Size"),
                Value: i,
                Max: i,
                visible: function() {
                    return b;
                }
            }, {
                SelectOne: "erase",
                Title: c("Erase"),
                Options: [ {
                    value: "no",
                    Title: c("Don't overwrite existing data")
                }, {
                    value: "zero",
                    Title: c("Overwrite existing data with zeros")
                } ]
            }, {
                SelectOne: "type",
                Title: c("Type"),
                Options: k
            }, {
                TextInput: "name",
                Title: c("Name"),
                visible: u
            }, {
                TextInput: "custom",
                Title: c("Filesystem type"),
                visible: function(e) {
                    return "custom" == e.type;
                }
            }, {
                PassInput: "passphrase",
                Title: c("Passphrase"),
                validate: function(e) {
                    if ("" === e) return c("Passphrase cannot be empty");
                },
                visible: l
            }, {
                PassInput: "passphrase2",
                Title: c("Confirm passphrase"),
                validate: function(e, t) {
                    if (e != t.passphrase) return c("Passphrases do not match");
                },
                visible: l
            }, {
                CheckBox: "store_passphrase",
                Title: c("Store passphrase"),
                visible: d
            }, {
                TextInput: "crypto_options",
                Title: c("Encryption Options"),
                visible: d
            }, {
                SelectOne: "mounting",
                Title: c("Mounting"),
                Options: [ {
                    value: "default",
                    Title: c("Default")
                }, {
                    value: "custom",
                    Title: c("Custom")
                } ],
                visible: p
            }, {
                TextInput: "mount_point",
                Title: c("Mount Point"),
                visible: function(e) {
                    return p(e) && "custom" == e.mounting;
                }
            }, {
                TextInput: "mount_options",
                Title: c("Mount Options"),
                visible: function(e) {
                    return p(e) && "custom" == e.mounting;
                }
            } ],
            Action: {
                Title: c(b ? "Create partition" : "Format"),
                Danger: b ? null : c("Formatting a storage device will erase all data on it."),
                action: function(t) {
                    function i() {
                        return b ? "dos-extended" == t.type ? g.CreatePartition(n, t.size, "0x05", "", {}) : "empty" == t.type ? g.CreatePartition(n, t.size, "", "", {}) : f(g, n, t.size, "", "", {}, t.type, o) : v.Format(t.type, o);
                    }
                    "custom" == t.type && (t.type = t.custom);
                    var o = {
                        "no-block": {
                            t: "b",
                            v: !0
                        },
                        "dry-run-first": {
                            t: "b",
                            v: !0
                        },
                        "tear-down": {
                            t: "b",
                            v: !0
                        }
                    };
                    "no" != t.erase && (o.erase = {
                        t: "s",
                        v: t.erase
                    }), t.name && (o.label = {
                        t: "s",
                        v: t.name
                    });
                    var a = [];
                    if ("custom" == t.mounting && a.push([ "fstab", {
                        dir: {
                            t: "ay",
                            v: r.encode_filename(t.mount_point)
                        },
                        type: {
                            t: "ay",
                            v: r.encode_filename("auto")
                        },
                        opts: {
                            t: "ay",
                            v: r.encode_filename(t.mount_options || "defaults")
                        },
                        freq: {
                            t: "i",
                            v: 0
                        },
                        passno: {
                            t: "i",
                            v: 0
                        },
                        "track-parents": {
                            t: "b",
                            v: !0
                        }
                    } ]), l(t)) {
                        t.type = t.type.replace("luks+", ""), o["encrypt.passphrase"] = {
                            t: "s",
                            v: t.passphrase
                        };
                        var s = {
                            options: {
                                t: "ay",
                                v: r.encode_filename(t.crypto_options)
                            },
                            "track-parents": {
                                t: "b",
                                v: !0
                            }
                        };
                        t.store_passphrase ? s["passphrase-contents"] = {
                            t: "ay",
                            v: r.encode_filename(t.passphrase)
                        } : s["passphrase-contents"] = {
                            t: "ay",
                            v: r.encode_filename("")
                        }, a.push([ "crypttab", s ]);
                    }
                    return a.length > 0 && (o["config-items"] = {
                        t: "a(sa{sv})",
                        v: a
                    }), r.teardown_active_usage(e, y).then(i);
                }
            }
        });
    }
    var o = n(7), r = n(9), a = n(23), s = n(27), l = n(32), c = o.gettext, u = s.createClass({
        displayName: "FormatButton",
        onClick: function() {
            i(this.props.client, this.props.block.path);
        },
        render: function() {
            return s.createElement(l.StorageButton, {
                onClick: this.onClick,
                excuse: this.props.block.ReadOnly ? c("Device is read-only") : null
            }, c("Format"));
        }
    });
    e.exports = {
        format_dialog: i,
        FormatButton: u
    };
}, function(e, t, n) {
    "use strict";
    var i = n(7), o = n(23), r = n(9), a = n(6), s = n(27), l = n(32), c = n(35), u = l.StorageButton, d = l.StorageLink, p = c.FormatButton, f = i.gettext, m = s.createClass({
        displayName: "FilesystemTab",
        onSamplesChanged: function() {
            this.setState({});
        },
        componentDidMount: function() {
            a(this.props.client.fsys_sizes).on("changed", this.onSamplesChanged);
        },
        componentWillUnmount: function() {
            a(this.props.client.fsys_sizes).off("changed", this.onSamplesChanged);
        },
        render: function() {
            function e() {
                o.open({
                    Title: f("Filesystem Name"),
                    Fields: [ {
                        TextInput: "name",
                        Title: f("Name"),
                        Value: h.IdLabel
                    } ],
                    Action: {
                        Title: f("Apply"),
                        action: function(e) {
                            return v.SetLabel(e.name, {});
                        }
                    }
                });
            }
            function t(e, t, n) {
                var i = null;
                return e && (i = [ "fstab", {
                    dir: {
                        t: "ay",
                        v: r.encode_filename(t)
                    },
                    type: {
                        t: "ay",
                        v: r.encode_filename("auto")
                    },
                    opts: {
                        t: "ay",
                        v: r.encode_filename(n || "defaults")
                    },
                    freq: {
                        t: "i",
                        v: 0
                    },
                    passno: {
                        t: "i",
                        v: 0
                    },
                    "track-parents": {
                        t: "b",
                        v: !0
                    }
                } ]), !y && i ? h.AddConfigurationItem(i, {}) : y && !i ? h.RemoveConfigurationItem(y, {}) : y && i && (t != x || n != _) ? h.UpdateConfigurationItem(y, i, {}) : void 0;
            }
            function n() {
                o.open({
                    Title: f("Filesystem Mounting"),
                    Fields: [ {
                        SelectOne: "mounting",
                        Title: f("Mounting"),
                        Options: [ {
                            value: "default",
                            Title: f("Default"),
                            selected: !y
                        }, {
                            value: "custom",
                            Title: f("Custom"),
                            selected: !!y
                        } ]
                    }, {
                        TextInput: "mount_point",
                        Title: f("Mount Point"),
                        Value: x,
                        visible: function(e) {
                            return "custom" == e.mounting;
                        }
                    }, {
                        TextInput: "mount_options",
                        Title: f("Mount Options"),
                        Value: _,
                        visible: function(e) {
                            return "custom" == e.mounting;
                        }
                    } ],
                    Action: {
                        Title: f("Apply"),
                        action: function(e) {
                            return t("custom" == e.mounting, e.mount_point, e.mount_options);
                        }
                    }
                });
            }
            function a() {
                return v.Mount({});
            }
            function l() {
                return v.Unmount({});
            }
            var c, m = this, h = m.props.block, v = h && m.props.client.blocks_fsys[h.path], g = v && v.MountPoints.length > 0;
            if (g) {
                var b = r.decode_filename(v.MountPoints[0]), k = m.props.client.fsys_sizes.data[b];
                c = k ? i.format(f("$0 of $1"), r.fmt_size(k[0]), r.fmt_size(k[1])) : f("Unknown");
            } else c = "-";
            var y, x, _;
            y = r.array_find(h.Configuration, function(e) {
                return "fstab" == e[0];
            }), y && (x = r.decode_filename(y[1].dir.v), _ = r.decode_filename(y[1].opts.v).split(",").filter(function(e) {
                return 0 !== e.indexOf("x-parent");
            }).join(","));
            var w = v ? v.MountPoints.map(r.decode_filename) : [];
            return s.createElement("div", null, s.createElement("div", {
                className: "tab-actions"
            }, s.createElement(p, {
                client: this.props.client,
                block: this.props.block
            })), s.createElement("table", {
                className: "info-table-ct"
            }, s.createElement("tr", null, s.createElement("td", null, f("Name")), s.createElement("td", null, s.createElement(d, {
                onClick: e
            }, this.props.block.IdLabel || "-"))), m.props.client.is_old_udisks2 ? null : s.createElement("tr", null, s.createElement("td", null, f("Mount Point")), s.createElement("td", null, s.createElement(d, {
                onClick: n
            }, x || f("(default)")), g ? null : s.createElement(u, {
                onClick: a
            }, f("Mount")))), _ ? s.createElement("tr", null, s.createElement("td", null, f("Mount Options")), s.createElement("td", null, s.createElement(d, {
                onClick: n
            }, _))) : null, w.length > 0 || m.props.client.is_old_udisks2 ? s.createElement("tr", null, s.createElement("td", null, f("Mounted At")), s.createElement("td", null, w.join(", "), w.length > 0 ? s.createElement(u, {
                onClick: l
            }, f("Unmount")) : s.createElement(u, {
                onClick: a
            }, f("Mount")))) : null, s.createElement("tr", null, s.createElement("td", null, f("Used")), s.createElement("td", null, c))));
        }
    });
    e.exports = {
        FilesystemTab: m
    };
}, function(e, t, n) {
    "use strict";
    var i = n(7), o = n(23), r = n(9), a = n(6), s = n(27), l = n(32), c = n(35), u = l.StorageButton, d = l.StorageLink, p = c.FormatButton, f = i.gettext, m = s.createClass({
        displayName: "CryptoTab",
        render: function() {
            function e(e) {
                function t() {
                    return i[1]["track-parents"] = {
                        t: "b",
                        v: !0
                    }, n ? m.UpdateConfigurationItem(n, i, {}) : m.AddConfigurationItem(i, {});
                }
                var n, i;
                m.GetSecretConfiguration({}).done(function(o) {
                    n = r.array_find(o, function(e) {
                        return "crypttab" == e[0];
                    }), i = [ "crypttab", n ? a.extend({}, n[1]) : {} ], e(i[1], t);
                });
            }
            function t() {
                e(function(e, t) {
                    o.open({
                        Title: f("Stored Passphrase"),
                        Fields: [ {
                            PassInput: "passphrase",
                            Title: f("Stored Passphrase"),
                            Value: e && e["passphrase-contents"] ? r.decode_filename(e["passphrase-contents"].v) : ""
                        } ],
                        Action: {
                            Title: f("Apply"),
                            action: function(n) {
                                return e["passphrase-contents"] = {
                                    t: "ay",
                                    v: r.encode_filename(n.passphrase)
                                }, delete e["passphrase-path"], t();
                            }
                        }
                    });
                });
            }
            function n() {
                e(function(e, t) {
                    o.open({
                        Title: f("Encryption Options"),
                        Fields: [ {
                            TextInput: "options",
                            Title: f("Options"),
                            Value: l
                        } ],
                        Action: {
                            Title: f("Apply"),
                            action: function(n) {
                                return e.options = {
                                    t: "ay",
                                    v: r.encode_filename(n.options)
                                }, t();
                            }
                        }
                    });
                });
            }
            var i, l, c = this, m = c.props.block;
            return i = r.array_find(m.Configuration, function(e) {
                return "crypttab" == e[0];
            }), i && (l = r.decode_filename(i[1].options.v).split(",").filter(function(e) {
                return 0 !== e.indexOf("x-parent");
            }).join(",")), s.createElement("div", null, s.createElement("div", {
                className: "tab-actions"
            }, s.createElement(p, {
                client: this.props.client,
                block: this.props.block
            })), s.createElement("table", {
                className: "info-table-ct"
            }, c.props.client.is_old_udisks2 ? null : s.createElement("tr", null, s.createElement("td", null, f("Stored passphrase")), s.createElement("td", null, s.createElement(u, {
                onClick: t
            }, f("Edit")))), c.props.client.is_old_udisks2 ? null : s.createElement("tr", null, s.createElement("td", null, f("Options")), s.createElement("td", null, s.createElement(d, {
                onClick: n
            }, l || f("(none)"))))));
        }
    });
    e.exports = {
        CryptoTab: m
    };
}, function(e, t, n) {
    "use strict";
    function i(e) {
        a.open({
            Title: f("Rename Logical Volume"),
            Fields: [ {
                TextInput: "name",
                Title: f("Name"),
                Value: e.Name
            } ],
            Action: {
                Title: f("Rename"),
                action: function(t) {
                    return e.Rename(t.name, {});
                }
            }
        });
    }
    function o(e, t) {
        var n = e.lvols_block[t.path], i = e.vgroups[t.VolumeGroup], o = e.lvols[t.ThinPool];
        a.open({
            Title: f("Resize Logical Volume"),
            Fields: [ {
                SizeSlider: "size",
                Title: f("Size"),
                Value: t.Size,
                Max: o ? 3 * o.Size : t.Size + i.FreeSize,
                AllowInfinite: !!o,
                Round: i.ExtentSize
            }, {
                CheckBox: "fsys",
                Title: f("Resize Filesystem"),
                Value: n && "filesystem" == n.IdUsage,
                visible: function() {
                    return "block" == t.Type;
                }
            } ],
            Action: {
                Title: f("Resize"),
                action: function(e) {
                    function i(e) {
                        return l.Deferred().reject({
                            message: e
                        }).promise();
                    }
                    var o = n && "filesystem" == n.IdUsage;
                    if (!o && e.size < t.Size) return i(f("This logical volume cannot be made smaller."));
                    var r = {};
                    return o && (r.resize_fsys = {
                        t: "b",
                        v: o
                    }), t.Resize(e.size, r);
                }
            }
        });
    }
    var r = n(7), a = n(23), s = n(9), l = n(6), c = n(27), u = n(32), d = u.StorageButton, p = u.StorageLink, f = r.gettext, m = c.createClass({
        displayName: "BlockVolTab",
        render: function() {
            function e() {
                a.open({
                    Title: f("Create Snapshot"),
                    Fields: [ {
                        TextInput: "name",
                        Title: f("Name"),
                        validate: s.validate_lvm2_name
                    }, {
                        SizeSlider: "size",
                        Title: f("Size"),
                        Value: .2 * l.Size,
                        Max: l.Size,
                        Round: u.ExtentSize,
                        visible: function() {
                            return "/" == l.ThinPool;
                        }
                    } ],
                    Action: {
                        Title: f("Create"),
                        action: function(e) {
                            return l.CreateSnapshot(e.name, e.size || 0, {});
                        }
                    }
                });
            }
            function t() {
                i(l);
            }
            function n() {
                o(r.props.client, l);
            }
            var r = this, l = r.props.lvol, u = r.props.client.vgroups[l.VolumeGroup];
            return c.createElement("div", null, c.createElement("div", {
                className: "tab-actions"
            }, c.createElement(d, {
                onClick: e
            }, f("Create Snapshot"))), c.createElement("table", {
                className: "info-table-ct"
            }, c.createElement("tr", null, c.createElement("td", null, f("Name")), c.createElement("td", null, c.createElement(p, {
                onClick: t
            }, this.props.lvol.Name))), c.createElement("tr", null, c.createElement("td", null, f("Size")), c.createElement("td", null, c.createElement(p, {
                onClick: n
            }, s.fmt_size(this.props.lvol.Size))))));
        }
    }), h = c.createClass({
        displayName: "PoolVolTab",
        render: function() {
            function e(e) {
                return (100 * e).toFixed(0) + "%";
            }
            function t() {
                i(r.props.lvol);
            }
            function n() {
                o(r.props.client, r.props.lvol);
            }
            var r = this;
            return c.createElement("div", null, c.createElement("table", {
                className: "info-table-ct"
            }, c.createElement("tr", null, c.createElement("td", null, f("Name")), c.createElement("td", null, c.createElement(p, {
                onClick: t
            }, this.props.lvol.Name))), c.createElement("tr", null, c.createElement("td", null, f("Size")), c.createElement("td", null, c.createElement(p, {
                onClick: n
            }, s.fmt_size(this.props.lvol.Size)))), c.createElement("tr", null, c.createElement("td", null, f("Data Used")), c.createElement("td", null, e(this.props.lvol.DataAllocatedRatio))), c.createElement("tr", null, c.createElement("td", null, f("Metadata Used")), c.createElement("td", null, e(this.props.lvol.MetadataAllocatedRatio)))));
        }
    });
    e.exports = {
        BlockVolTab: m,
        PoolVolTab: h
    };
}, function(e, t, n) {
    "use strict";
    var i = n(7), o = n(9), r = n(27), a = n(35), s = a.FormatButton, l = i.gettext, c = r.createClass({
        displayName: "PVolTab",
        render: function() {
            var e = this.props.client.blocks_pvol[this.props.block.path], t = e && this.props.client.vgroups[e.VolumeGroup];
            return r.createElement("div", null, r.createElement("div", {
                className: "tab-actions"
            }, r.createElement(s, {
                client: this.props.client,
                block: this.props.block
            })), r.createElement("table", {
                className: "info-table-ct"
            }, r.createElement("tr", null, r.createElement("td", null, l("Volume Group")), r.createElement("td", null, t ? r.createElement("a", {
                "data-goto-vgroup": t.Name
            }, t.Name) : "-")), r.createElement("tr", null, r.createElement("td", null, l("Free")), r.createElement("td", null, e ? o.fmt_size(e.FreeSize) : "-"))));
        }
    }), u = r.createClass({
        displayName: "MDRaidMemberTab",
        render: function() {
            var e = this.props.client.mdraids[this.props.block.MDRaidMember];
            return r.createElement("div", null, r.createElement("div", {
                className: "tab-actions"
            }, r.createElement(s, {
                client: this.props.client,
                block: this.props.block
            })), r.createElement("table", {
                className: "info-table-ct"
            }, r.createElement("tr", null, r.createElement("td", null, l("RAID Device")), r.createElement("td", null, e ? r.createElement("a", {
                "data-goto-mdraid": e.UUID
            }, o.mdraid_name(e)) : "-"))));
        }
    });
    e.exports = {
        PVolTab: c,
        MDRaidMemberTab: u
    };
}, function(e, t, n) {
    "use strict";
    var i = n(7), o = n(9), r = n(27), a = i.gettext, s = r.createClass({
        displayName: "PartitionTab",
        render: function() {
            var e = this.props.client.blocks_part[this.props.block.path];
            return r.createElement("div", null, r.createElement("table", {
                className: "info-table-ct"
            }, r.createElement("tr", null, r.createElement("td", null, a("Name")), r.createElement("td", null, e.Name || "-")), r.createElement("tr", null, r.createElement("td", null, a("Size")), r.createElement("td", null, o.fmt_size(e.Size))), r.createElement("tr", null, r.createElement("td", null, a("UUID")), r.createElement("td", null, e.UUID)), r.createElement("tr", null, r.createElement("td", null, a("Type")), r.createElement("td", null, e.Type))));
        }
    });
    e.exports = {
        PartitionTab: s
    };
}, function(e, t, n) {
    "use strict";
    var i = n(7), o = n(9), r = n(6), a = n(27), s = n(32), l = n(35), c = s.StorageButton, u = l.FormatButton, d = i.gettext, p = a.createClass({
        displayName: "SwapTab",
        onSamplesChanged: function() {
            this.setState({});
        },
        componentDidMount: function() {
            r(this.props.client.swap_sizes).on("changed", this.onSamplesChanged);
        },
        componentWillUnmount: function() {
            r(this.props.client.swap_sizes).off("changed", this.onSamplesChanged);
        },
        render: function() {
            function e() {
                if (r) return r.Start({});
            }
            function t() {
                if (r) return r.Stop({});
            }
            var n, i = this, r = i.props.client.blocks_swap[i.props.block.path], s = r && r.Active;
            if (s) {
                var l = i.props.client.swap_sizes.data[o.decode_filename(i.props.block.Device)];
                n = l ? o.fmt_size(l[0] - l[1]) : d("Unknown");
            } else n = "-";
            return a.createElement("div", null, a.createElement("div", {
                className: "tab-actions"
            }, s ? a.createElement(c, {
                onClick: t
            }, d("Stop")) : a.createElement(c, {
                onClick: e
            }, d("Start")), a.createElement(u, {
                client: this.props.client,
                block: this.props.block
            })), a.createElement("table", {
                className: "info-table-ct"
            }, a.createElement("tr", null, a.createElement("td", null, d("Used")), a.createElement("td", null, n))));
        }
    });
    e.exports = {
        SwapTab: p
    };
}, function(e, t, n) {
    "use strict";
    var i = n(7), o = n(27), r = n(35), a = r.FormatButton, s = i.gettext, l = o.createClass({
        displayName: "UnrecognizedTab",
        render: function() {
            return o.createElement("div", null, o.createElement("div", {
                className: "tab-actions"
            }, o.createElement(a, {
                client: this.props.client,
                block: this.props.block
            })), o.createElement("table", {
                className: "info-table-ct"
            }, o.createElement("tr", null, o.createElement("td", null, s("Usage")), o.createElement("td", null, this.props.block.IdUsage || "-")), o.createElement("tr", null, o.createElement("td", null, s("Type")), o.createElement("td", null, this.props.block.IdType || "-"))));
        }
    });
    e.exports = {
        UnrecognizedTab: l
    };
}, function(e, t, n) {
    "use strict";
    var i = n(7), o = n(23), r = n(9), a = n(6), s = n(27), l = n(32), c = l.StorageButton, u = l.StorageBlockNavLink, d = i.gettext, p = s.createClass({
        displayName: "MDRaid",
        getInitialState: function() {
            return {
                mdraid: null,
                block: null
            };
        },
        onClientChanged: function() {
            var e = this.props.client.uuids_mdraid[this.props.name], t = e && this.props.client.mdraids_block[e.path];
            this.setState({
                mdraid: e,
                block: t
            });
        },
        componentDidMount: function() {
            a(this.props.client).on("changed", this.onClientChanged), this.onClientChanged();
        },
        componentWillUnmount: function() {
            a(this.props.model).off("changed", this.onClientChanged);
        },
        render: function() {
            function e(e) {
                var t = e.block;
                return l.blocks_part[t.path] && (t = l.blocks[l.blocks_part[t.path].Table]), t && t.MDRaid != p.path;
            }
            function t() {
                o.open({
                    Title: d("Add Disks"),
                    Fields: [ {
                        SelectMany: "disks",
                        Title: d("Disks"),
                        Options: r.get_available_spaces(l).filter(e).map(r.available_space_to_option),
                        EmptyWarning: d("No disks are available."),
                        validate: function(e) {
                            if (0 === e.length) return d("At least one disk is needed.");
                        }
                    } ],
                    Action: {
                        Title: d("Add"),
                        action: function(e) {
                            return r.prepare_available_spaces(l, e.disks).then(function() {
                                var e = Array.prototype.slice.call(arguments);
                                return i.all(e.map(function(e) {
                                    return p.AddDevice(e, {});
                                }));
                            });
                        }
                    }
                });
            }
            function n(e) {
                function t(e) {
                    return {
                        faulty: d("FAILED"),
                        in_sync: d("In Sync"),
                        spare: d(o[1] < 0 ? "Spare" : "Recovering"),
                        write_mostly: d("Write-mostly"),
                        blocked: d("Blocked")
                    }[e] || i.format(d("Unknown ($0)"), e);
                }
                function n() {
                    return p.RemoveDevice(e.path, {
                        wipe: {
                            t: "b",
                            v: !0
                        }
                    });
                }
                var o = r.array_find(p.ActiveDevices, function(t) {
                    return t[0] == e.path;
                }), a = o && o[1] >= 0 && o[1].toString(), b = o && o[2].map(t).join(", "), k = o && o[2].indexOf("in_sync") >= 0, y = o && o[2].indexOf("spare") >= 0 && o[1] >= 0, x = !1;
                return g ? k && v > 0 || y ? x = d("This disk cannot be removed while the device is recovering.") : k && h < 1 ? x = d("A spare disk needs to be added first before this disk can be removed.") : f.length <= 1 && (x = d("The last disk of a RAID device cannot be removed.")) : x = d("The RAID device must be running in order to remove disks."), 
                s.createElement("tr", null, s.createElement("td", {
                    className: "storage-icon"
                }, s.createElement("div", null, s.createElement("img", {
                    src: "images/storage-disk.png"
                }))), s.createElement("td", null, a ? a : "-", " ", s.createElement(u, {
                    client: l,
                    block: e
                }), s.createElement("br", null), s.createElement("span", {
                    className: "state"
                }, b)), m ? s.createElement("td", {
                    className: "storage-action"
                }, s.createElement(c, {
                    onClick: n,
                    excuse: x
                }, s.createElement("span", {
                    className: "fa fa-minus"
                }))) : null);
            }
            var a = this, l = a.props.client, p = a.state.mdraid;
            if (!p) return null;
            var f = l.mdraids_members[p.path] || [], m = "raid0" != p.Level, h = 0, v = 0;
            p.ActiveDevices.forEach(function(e) {
                e[2].indexOf("spare") >= 0 && (e[1] < 0 ? h += 1 : v += 1);
            });
            var g = p.Running;
            void 0 === g && (g = p.ActiveDevices && p.ActiveDevices.length > 0);
            var b = !1;
            return g || (b = d("The RAID device must be running in order to add spare disks.")), 
            s.createElement("div", {
                className: "panel panel-default"
            }, s.createElement("div", {
                className: "panel-heading"
            }, s.createElement("span", null, d("Disks")), m ? s.createElement("span", {
                className: "pull-right"
            }, s.createElement(c, {
                onClick: t,
                excuse: b
            }, s.createElement("span", {
                className: "fa fa-plus"
            }))) : null), s.createElement("table", {
                className: "table"
            }, s.createElement("tbody", null, f.map(n))));
        }
    }), f = s.createClass({
        displayName: "VGroup",
        getInitialState: function() {
            return {
                vgroup: null
            };
        },
        onClientChanged: function() {
            this.setState({
                vgroup: this.props.client.vgnames_vgroup[this.props.name]
            });
        },
        componentDidMount: function() {
            a(this.props.client).on("changed", this.onClientChanged), this.onClientChanged();
        },
        componentWillUnmount: function() {
            a(this.props.model).off("changed", this.onClientChanged);
        },
        render: function() {
            function e(e) {
                var t = e.block;
                l.blocks_part[t.path] && (t = l.blocks[l.blocks_part[t.path].Table]);
                var n = t && l.blocks_lvm2[t.path] && l.lvols[l.blocks_lvm2[t.path].LogicalVolume];
                return !n || n.VolumeGroup != p.path;
            }
            function t() {
                o.open({
                    Title: d("Add Disks"),
                    Fields: [ {
                        SelectMany: "disks",
                        Title: d("Disks"),
                        Options: r.get_available_spaces(l).filter(e).map(r.available_space_to_option),
                        EmptyWarning: d("No disks are available."),
                        validate: function(e) {
                            if (0 === e.length) return d("At least one disk is needed.");
                        }
                    } ],
                    Action: {
                        Title: d("Add"),
                        action: function(e) {
                            return r.prepare_available_spaces(l, e.disks).then(function() {
                                var e = Array.prototype.slice.call(arguments);
                                return i.all(e.map(function(e) {
                                    return p.AddDevice(e, {});
                                }));
                            });
                        }
                    }
                });
            }
            function n(e) {
                function t() {
                    return p.RemoveDevice(e.path, !0, {});
                }
                function n() {
                    return p.EmptyDevice(e.path, {}).then(function() {
                        p.RemoveDevice(e.path, !0, {});
                    });
                }
                var o = null, a = null;
                return 1 === f.length ? a = d("The last physical volume of a volume group cannot be removed.") : e.FreeSize < e.Size ? e.Size <= p.FreeSize ? o = n : a = i.format(d("There is not enough free space elsewhere to remove this physical volume. At least $0 more free space is needed."), r.fmt_size(e.Size - p.FreeSize)) : o = t, 
                s.createElement("tr", null, s.createElement("td", {
                    className: "storage-icon"
                }, s.createElement("div", null, s.createElement("img", {
                    src: "images/storage-disk.png"
                }))), s.createElement("td", null, s.createElement(u, {
                    client: l,
                    block: l.blocks[e.path]
                }), s.createElement("br", null), s.createElement("span", null, i.format(d("$0, $1 free"), r.fmt_size(e.Size), r.fmt_size(e.FreeSize)))), s.createElement("td", {
                    className: "storage-action"
                }, s.createElement(c, {
                    onClick: o,
                    excuse: a
                }, s.createElement("span", {
                    className: "fa fa-minus"
                }))));
            }
            var a = this, l = a.props.client, p = a.state.vgroup;
            if (!p) return null;
            var f = l.vgroups_pvols[p.path] || [];
            return s.createElement("div", {
                className: "panel panel-default"
            }, s.createElement("div", {
                className: "panel-heading"
            }, s.createElement("span", null, d("Physical Volumes")), s.createElement("span", {
                className: "pull-right"
            }, s.createElement(c, {
                onClick: t
            }, s.createElement("span", {
                className: "fa fa-plus"
            })))), s.createElement("table", {
                className: "table"
            }, s.createElement("tbody", null, f.map(n))));
        }
    });
    e.exports = {
        MDRaid: p,
        VGroup: f
    };
}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {} ]);
//# sourceMappingURL=storage.min.js.map