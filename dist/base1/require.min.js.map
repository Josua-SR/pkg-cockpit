{"version":3,"sources":["dist/base1/require.js"],"names":["console","warn","Error","fileName","split","reverse","require","baseUrl","waitSeconds","skipDataMain","paths","jquery","script","document","scripts","length","main","getAttribute","addEventListener","requirejs","define","global","req","s","head","baseElement","dataMain","src","interactiveScript","currentlyAddingScript","mainScript","subPath","version","commentRegExp","cjsRequireRegExp","jsSuffixRegExp","currDirRegExp","op","Object","prototype","ostring","toString","hasOwn","hasOwnProperty","ap","Array","isBrowser","window","navigator","isWebWorker","importScripts","readyRegExp","platform","defContextName","isOpera","opera","contexts","cfg","globalDefQueue","useInteractive","isFunction","it","call","isArray","each","ary","func","i","eachReverse","hasProp","obj","prop","getOwn","eachProp","mixin","target","source","force","deepStringMixin","value","RegExp","bind","fn","apply","arguments","getElementsByTagName","defaultOnError","err","getGlobal","g","part","makeError","id","msg","requireModules","e","requireType","originalError","undefined","newContext","contextName","inCheckLoaded","Module","context","handlers","checkLoadedTimeoutId","config","bundles","pkgs","shim","registry","enabledRegistry","undefEvents","defQueue","defined","urlFetched","bundlesMap","requireCounter","unnormalizedCounter","trimDots","splice","normalize","name","baseName","applyMap","pkgMain","mapValue","nameParts","j","nameSegment","lastIndex","foundMap","foundI","foundStarMap","starI","normalizedBaseParts","baseParts","map","starMap","nodeIdCompat","test","replace","charAt","slice","concat","join","outerLoop","removeScript","scriptNode","parentNode","removeChild","hasPathFallback","pathConfig","shift","undef","makeRequire","skipMap","splitPrefix","prefix","index","indexOf","substring","makeModuleMap","parentModuleMap","isNormalized","url","pluginModule","suffix","parentName","originalName","isDefine","normalizedName","nameToUrl","parentMap","unnormalized","getModule","depMap","mod","on","defineEmitComplete","error","onError","errback","ids","notified","events","emit","takeGlobalQueue","queueItem","defQueueMap","push","exports","usingExports","module","uri","cleanRegistry","breakCycle","traced","processed","depMaps","depId","dep","depMatched","defineDep","check","checkLoaded","usingPathFallback","waitInterval","expired","startTime","Date","getTime","noLoads","reqCalls","stillLoading","needCycleCheck","modId","enabled","inited","fetched","setTimeout","this","depExports","pluginMaps","depCount","init","factory","options","ignore","enable","fetch","enableBuildCallback","deps","callPlugin","load","enabling","cjsModule","defining","execCb","requireMap","onResourceLoad","resLoadMaps","normalizedMap","defineEmitted","pluginMap","plugin","normalizedMod","bundleId","localRequire","fromText","text","textAlt","moduleName","moduleMap","hasInteractive","exec","completeLoad","handler","undefed","cb","cbs","evt","callGetModule","args","removeListener","node","ieName","detachEvent","removeEventListener","getScriptData","currentTarget","srcElement","onScriptLoad","onScriptError","intakeDefines","nextTick","configure","objs","v","exportsFn","makeShimExports","packages","pkgObj","location","callback","ret","relMap","requireMod","__requireJsBuild","get","toUrl","moduleNamePlusExt","ext","lastIndexOf","segment","isRelative","specified","found","shExports","enforceDefine","skipExt","syms","parentModule","parentPath","jsExtRegExp","match","urlArgs","type","readyState","data","parents","key","optional","ctx","createNode","xhtml","createElementNS","createElement","scriptType","charset","async","onNodeCreated","setAttribute","attachEvent","insertBefore","appendChild","getInteractiveScript","pop","amd","jQuery","eval","parentRequire","onload","predef","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","overrideMimeType","send"],"mappings":";AACAA,QAAQC,KAAK,kBACC,IAAKC,QAASC,YAAY,wBAAwBC,MAAM,KAAKC,UAAU,KACxE;;AAEb,IAAIC;IACAC,SAAS;IACTC,aAAa;IACbC,cAAc;IACdC;QACIC,QAAU;;;;CAKjB;IACG,IAAIC,IAASC,SAASC,QAAQD,SAASC,QAAQC,SAAS;IACxD,IAAIC,IAAOJ,EAAOK,aAAa;IAC/B,IAAID,GAAM;QACNH,SAASK,iBAAiB,oBAAoB;YAC1CZ,UAASU,KAAO;;;;;;;;;;AAc5B,IAAIG,WAAWb,SAASc;;CACvB,SAAUC;IACP,IAAIC,KAAKC,GAAGC,MAAMC,aAAaC,UAAUC,KACrCC,mBAAmBC,uBAAuBC,YAAYC,SACtDC,UAAU,UACVC,gBAAgB,4CAChBC,mBAAmB,kDACnBC,iBAAiB,SACjBC,gBAAgB,SAChBC,KAAKC,OAAOC,WACZC,UAAUH,GAAGI,UACbC,SAASL,GAAGM,gBACZC,KAAKC,MAAMN,WACXO,sBAAsBC,WAAW,sBAAsBC,cAAc,eAAeD,OAAOlC,WAC3FoC,eAAeH,oBAAoBI,kBAAkB,aAKrDC,cAAcL,aAAaE,UAAUI,aAAa,kBACpC,eAAe,uBAC7BC,iBAAiB,KAEjBC,iBAAiBC,UAAU,eAAeA,MAAMd,eAAe,kBAC/De,eACAC,UACAC,qBACAC,iBAAiB;IAErB,SAASC,WAAWC;QAChB,OAAOrB,QAAQsB,KAAKD,OAAQ;;IAGhC,SAASE,QAAQF;QACb,OAAOrB,QAAQsB,KAAKD,OAAQ;;IAOhC,SAASG,KAAKC,GAAKC;QACf,IAAID,GAAK;YACL,IAAIE;YACJ,KAAKA,IAAI,GAAGA,IAAIF,EAAIlD,QAAQoD,KAAK,GAAG;gBAChC,IAAIF,EAAIE,MAAMD,EAAKD,EAAIE,IAAIA,GAAGF,IAAM;oBAChC;;;;;IAUhB,SAASG,YAAYH,GAAKC;QACtB,IAAID,GAAK;YACL,IAAIE;YACJ,KAAKA,IAAIF,EAAIlD,SAAS,GAAGoD,KAAK,GAAGA,KAAK,GAAG;gBACrC,IAAIF,EAAIE,MAAMD,EAAKD,EAAIE,IAAIA,GAAGF,IAAM;oBAChC;;;;;IAMhB,SAASI,QAAQC,GAAKC;QAClB,OAAO7B,OAAOoB,KAAKQ,GAAKC;;IAG5B,SAASC,OAAOF,GAAKC;QACjB,OAAOF,QAAQC,GAAKC,MAASD,EAAIC;;IAQrC,SAASE,SAASH,GAAKJ;QACnB,IAAIK;QACJ,KAAKA,KAAQD,GAAK;YACd,IAAID,QAAQC,GAAKC,IAAO;gBACpB,IAAIL,EAAKI,EAAIC,IAAOA,IAAO;oBACvB;;;;;IAUhB,SAASG,MAAMC,GAAQC,GAAQC,GAAOC;QAClC,IAAIF,GAAQ;YACRH,SAASG,GAAQ,SAAUG,GAAOR;gBAC9B,IAAIM,MAAUR,QAAQM,GAAQJ,IAAO;oBACjC,IAAIO,YAA0BC,MAAU,YAAYA,MAC/ChB,QAAQgB,OAAWnB,WAAWmB,QAC7BA,aAAiBC,SAAS;wBAE5B,KAAKL,EAAOJ,IAAO;4BACfI,EAAOJ;;wBAEXG,MAAMC,EAAOJ,IAAOQ,GAAOF,GAAOC;2BAC/B;wBACHH,EAAOJ,KAAQQ;;;;;QAK/B,OAAOJ;;IAKX,SAASM,KAAKX,GAAKY;QACf,OAAO;YACH,OAAOA,EAAGC,MAAMb,GAAKc;;;IAI7B,SAAStE;QACL,OAAOD,SAASwE,qBAAqB;;IAGzC,SAASC,eAAeC;QACpB,MAAMA;;IAKV,SAASC,UAAUT;QACf,KAAKA,GAAO;YACR,OAAOA;;QAEX,IAAIU,IAAIpE;QACR2C,KAAKe,EAAM3E,MAAM,MAAM,SAAUsF;YAC7BD,IAAIA,EAAEC;;QAEV,OAAOD;;IAWX,SAASE,UAAUC,GAAIC,GAAKN,GAAKO;QAC7B,IAAIC,IAAI,IAAI7F,MAAM2F,IAAM,6CAA6CD;QACrEG,EAAEC,cAAcJ;QAChBG,EAAED,iBAAiBA;QACnB,IAAIP,GAAK;YACLQ,EAAEE,gBAAgBV;;QAEtB,OAAOQ;;IAGX,WAAW3E,WAAW,aAAa;QAG/B;;IAGJ,WAAWD,cAAc,aAAa;QAClC,IAAIyC,WAAWzC,YAAY;YAEvB;;QAEJsC,MAAMtC;QACNA,YAAY+E;;IAIhB,WAAW5F,YAAY,gBAAgBsD,WAAWtD,UAAU;QAExDmD,MAAMnD;QACNA,UAAU4F;;IAGd,SAASC,WAAWC;QAChB,IAAIC,GAAeC,GAAQC,GAASC,GAChCC,GACAC;YAIIlG,aAAa;YACbD,SAAS;YACTG;YACAiG;YACAC;YACAC;YACAH;WAEJI,QAIAC,QACAC,QACAC,QACAC,QACAC,QACAC,QACAC,IAAiB,GACjBC,IAAsB;QAW1B,SAASC,EAAStD;YACd,IAAIE,GAAGuB;YACP,KAAKvB,IAAI,GAAGA,IAAIF,EAAIlD,QAAQoD,KAAK;gBAC7BuB,IAAOzB,EAAIE;gBACX,IAAIuB,MAAS,KAAK;oBACdzB,EAAIuD,OAAOrD,GAAG;oBACdA,KAAK;uBACF,IAAIuB,MAAS,MAAM;oBAMtB,IAAIvB,MAAM,KAAMA,MAAM,KAAKF,EAAI,OAAO,QAASA,EAAIE,IAAI,OAAO,MAAM;wBAChE;2BACG,IAAIA,IAAI,GAAG;wBACdF,EAAIuD,OAAOrD,IAAI,GAAG;wBAClBA,KAAK;;;;;QAgBrB,SAASsD,EAAUC,GAAMC,GAAUC;YAC/B,IAAIC,GAASC,GAAUC,GAAW5D,GAAG6D,GAAGC,GAAaC,GACjDC,GAAUC,GAAQC,GAAcC,GAAOC,GACvCC,IAAab,KAAYA,EAASvH,MAAM,MACxCqI,IAAM/B,EAAO+B,KACbC,IAAUD,KAAOA,EAAI;YAGzB,IAAIf,GAAM;gBACNA,IAAOA,EAAKtH,MAAM;gBAClB8H,IAAYR,EAAK3G,SAAS;gBAM1B,IAAI2F,EAAOiC,gBAAgBxG,eAAeyG,KAAKlB,EAAKQ,KAAa;oBAC7DR,EAAKQ,KAAaR,EAAKQ,GAAWW,QAAQ1G,gBAAgB;;gBAI9D,IAAIuF,EAAK,GAAGoB,OAAO,OAAO,OAAON,GAAW;oBAMxCD,IAAsBC,EAAUO,MAAM,GAAGP,EAAUzH,SAAS;oBAC5D2G,IAAOa,EAAoBS,OAAOtB;;gBAGtCH,EAASG;gBACTA,IAAOA,EAAKuB,KAAK;;YAIrB,IAAIrB,KAAYa,MAAQD,KAAaE,IAAU;gBAC3CX,IAAYL,EAAKtH,MAAM;gBAEvB8I,GAAW,KAAK/E,IAAI4D,EAAUhH,QAAQoD,IAAI,GAAGA,KAAK,GAAG;oBACjD8D,IAAcF,EAAUgB,MAAM,GAAG5E,GAAG8E,KAAK;oBAEzC,IAAIT,GAAW;wBAGX,KAAKR,IAAIQ,EAAUzH,QAAQiH,IAAI,GAAGA,KAAK,GAAG;4BACtCF,IAAWtD,OAAOiE,GAAKD,EAAUO,MAAM,GAAGf,GAAGiB,KAAK;4BAIlD,IAAInB,GAAU;gCACVA,IAAWtD,OAAOsD,GAAUG;gCAC5B,IAAIH,GAAU;oCAEVK,IAAWL;oCACXM,IAASjE;oCACT,MAAM+E;;;;;oBAStB,KAAKb,KAAgBK,KAAWlE,OAAOkE,GAAST,IAAc;wBAC1DI,IAAe7D,OAAOkE,GAAST;wBAC/BK,IAAQnE;;;gBAIhB,KAAKgE,KAAYE,GAAc;oBAC3BF,IAAWE;oBACXD,IAASE;;gBAGb,IAAIH,GAAU;oBACVJ,EAAUP,OAAO,GAAGY,GAAQD;oBAC5BT,IAAOK,EAAUkB,KAAK;;;YAM9BpB,IAAUrD,OAAOkC,EAAOE,MAAMc;YAE9B,OAAOG,IAAUA,IAAUH;;QAG/B,SAASyB,EAAazB;YAClB,IAAI5E,WAAW;gBACXkB,KAAKlD,WAAW,SAAUsI;oBACtB,IAAIA,EAAWnI,aAAa,0BAA0ByG,KAC9C0B,EAAWnI,aAAa,2BAA2BsF,EAAQH,aAAa;wBAC5EgD,EAAWC,WAAWC,YAAYF;wBAClC,OAAO;;;;;QAMvB,SAASG,EAAgB3D;YACrB,IAAI4D,IAAahF,OAAOkC,EAAOhG,OAAOkF;YACtC,IAAI4D,KAAczF,QAAQyF,MAAeA,EAAWzI,SAAS,GAAG;gBAG5DyI,EAAWC;gBACXlD,EAAQjG,QAAQoJ,MAAM9D;gBAItBW,EAAQoD,YAAY;oBAChBC,SAAS;qBACThE;gBAEJ,OAAO;;;QAOf,SAASiE,EAAYnC;YACjB,IAAIoC,GACAC,IAAQrC,IAAOA,EAAKsC,QAAQ,QAAQ;YACxC,IAAID,KAAS,GAAG;gBACZD,IAASpC,EAAKuC,UAAU,GAAGF;gBAC3BrC,IAAOA,EAAKuC,UAAUF,IAAQ,GAAGrC,EAAK3G;;YAE1C,SAAQ+I,GAAQpC;;QAkBpB,SAASwC,EAAcxC,GAAMyC,GAAiBC,GAAcxC;YACxD,IAAIyC,GAAKC,GAAcC,GAAQxC,GAC3B+B,IAAS,MACTU,IAAaL,IAAkBA,EAAgBzC,OAAO,MACtD+C,IAAe/C,GACfgD,IAAW,MACXC,IAAiB;YAIrB,KAAKjD,GAAM;gBACPgD,IAAW;gBACXhD,IAAO,SAASL,KAAkB;;YAGtCU,IAAY8B,EAAYnC;YACxBoC,IAAS/B,EAAU;YACnBL,IAAOK,EAAU;YAEjB,IAAI+B,GAAQ;gBACRA,IAASrC,EAAUqC,GAAQU,GAAY5C;gBACvC0C,IAAe9F,OAAO0C,GAAS4C;;YAInC,IAAIpC,GAAM;gBACN,IAAIoC,GAAQ;oBACR,IAAIQ,KAAgBA,EAAa7C,WAAW;wBAExCkD,IAAiBL,EAAa7C,UAAUC,GAAM,SAAUA;4BACpD,OAAOD,EAAUC,GAAM8C,GAAY5C;;2BAEpC;wBAQH+C,IAAiBjD,EAAKsC,QAAQ,UAAU,IACvBvC,EAAUC,GAAM8C,GAAY5C,KAC5BF;;uBAElB;oBAEHiD,IAAiBlD,EAAUC,GAAM8C,GAAY5C;oBAK7CG,IAAY8B,EAAYc;oBACxBb,IAAS/B,EAAU;oBACnB4C,IAAiB5C,EAAU;oBAC3BqC,IAAe;oBAEfC,IAAM9D,EAAQqE,UAAUD;;;YAOhCJ,IAAST,MAAWQ,MAAiBF,IAC5B,mBAAmB9C,KAAuB,KAC1C;YAET;gBACIwC,QAAQA;gBACRpC,MAAMiD;gBACNE,WAAWV;gBACXW,gBAAgBP;gBAChBF,KAAKA;gBACLI,cAAcA;gBACdC,UAAUA;gBACV9E,KAAKkE,IACGA,IAAS,MAAMa,IACfA,KAAkBJ;;;QAIlC,SAASQ,EAAUC;YACf,IAAIpF,IAAKoF,EAAOpF,IACZqF,IAAMzG,OAAOsC,GAAUlB;YAE3B,KAAKqF,GAAK;gBACNA,IAAMnE,EAASlB,KAAM,IAAIW,EAAQD,OAAO0E;;YAG5C,OAAOC;;QAGX,SAASC,EAAGF,GAAQtD,GAAMxC;YACtB,IAAIU,IAAKoF,EAAOpF,IACZqF,IAAMzG,OAAOsC,GAAUlB;YAE3B,IAAIvB,QAAQ6C,GAAStB,QACXqF,KAAOA,EAAIE,qBAAqB;gBACtC,IAAIzD,MAAS,WAAW;oBACpBxC,EAAGgC,EAAQtB;;mBAEZ;gBACHqF,IAAMF,EAAUC;gBAChB,IAAIC,EAAIG,SAAS1D,MAAS,SAAS;oBAC/BxC,EAAG+F,EAAIG;uBACJ;oBACHH,EAAIC,GAAGxD,GAAMxC;;;;QAKzB,SAASmG,EAAQ9F,GAAK+F;YAClB,IAAIC,IAAMhG,EAAIO,gBACV0F,IAAW;YAEf,IAAIF,GAAS;gBACTA,EAAQ/F;mBACL;gBACHvB,KAAKuH,GAAK,SAAU3F;oBAChB,IAAIqF,IAAMzG,OAAOsC,GAAUlB;oBAC3B,IAAIqF,GAAK;wBAELA,EAAIG,QAAQ7F;wBACZ,IAAI0F,EAAIQ,OAAOL,OAAO;4BAClBI,IAAW;4BACXP,EAAIS,KAAK,SAASnG;;;;gBAK9B,KAAKiG,GAAU;oBACXlK,IAAI+J,QAAQ9F;;;;QASxB,SAASoG;YAEL,IAAIjI,eAAe3C,QAAQ;gBACvBiD,KAAKN,gBAAgB,SAASkI;oBAC1B,IAAIhG,IAAKgG,EAAU;oBACnB,WAAWhG,MAAO,UAAU;wBACxBW,EAAQsF,YAAYjG,KAAM;;oBAE9BqB,EAAS6E,KAAKF;;gBAElBlI;;;QAIR8C;YACIlG,SAAW,SAAU2K;gBACjB,IAAIA,EAAI3K,SAAS;oBACb,OAAO2K,EAAI3K;uBACR;oBACH,OAAQ2K,EAAI3K,UAAUiG,EAAQoD,YAAYsB,EAAIxC;;;YAGtDsD,SAAW,SAAUd;gBACjBA,EAAIe,eAAe;gBACnB,IAAIf,EAAIxC,IAAIiC,UAAU;oBAClB,IAAIO,EAAIc,SAAS;wBACb,OAAQ7E,EAAQ+D,EAAIxC,IAAI7C,MAAMqF,EAAIc;2BAC/B;wBACH,OAAQd,EAAIc,UAAU7E,EAAQ+D,EAAIxC,IAAI7C;;;;YAIlDqG,QAAU,SAAUhB;gBAChB,IAAIA,EAAIgB,QAAQ;oBACZ,OAAOhB,EAAIgB;uBACR;oBACH,OAAQhB,EAAIgB;wBACRrG,IAAIqF,EAAIxC,IAAI7C;wBACZsG,KAAKjB,EAAIxC,IAAI4B;wBACb3D,QAAQ;4BACJ,OAAOlC,OAAOkC,EAAOA,QAAQuE,EAAIxC,IAAI7C;;wBAEzCmG,SAASd,EAAIc,YAAYd,EAAIc;;;;;QAM7C,SAASI,EAAcvG;mBAEZkB,EAASlB;mBACTmB,EAAgBnB;;QAG3B,SAASwG,EAAWnB,GAAKoB,GAAQC;YAC7B,IAAI1G,IAAKqF,EAAIxC,IAAI7C;YAEjB,IAAIqF,EAAIG,OAAO;gBACXH,EAAIS,KAAK,SAAST,EAAIG;mBACnB;gBACHiB,EAAOzG,KAAM;gBACb5B,KAAKiH,EAAIsB,SAAS,SAAUvB,GAAQ7G;oBAChC,IAAIqI,IAAQxB,EAAOpF,IACf6G,IAAMjI,OAAOsC,GAAU0F;oBAM3B,IAAIC,MAAQxB,EAAIyB,WAAWvI,OAAOmI,EAAUE,IAAQ;wBAChD,IAAIhI,OAAO6H,GAAQG,IAAQ;4BACvBvB,EAAI0B,UAAUxI,GAAG+C,EAAQsF;4BACzBvB,EAAI2B;+BACD;4BACHR,EAAWK,GAAKJ,GAAQC;;;;gBAIpCA,EAAU1G,KAAM;;;QAIxB,SAASiH;YACL,IAAItH,GAAKuH,GACLC,IAAerG,EAAOlG,cAAc,KAEpCwM,IAAUD,KAAiBxG,EAAQ0G,YAAYF,IAAgB,IAAIG,OAAOC,WAC1EC,QACAC,QACAC,IAAe,OACfC,IAAiB;YAGrB,IAAIlH,GAAe;gBACf;;YAGJA,IAAgB;YAGhB5B,SAASsC,GAAiB,SAAUkE;gBAChC,IAAIxC,IAAMwC,EAAIxC,KACV+E,IAAQ/E,EAAI7C;gBAGhB,KAAKqF,EAAIwC,SAAS;oBACd;;gBAGJ,KAAKhF,EAAIiC,UAAU;oBACf2C,EAASvB,KAAKb;;gBAGlB,KAAKA,EAAIG,OAAO;oBAGZ,KAAKH,EAAIyC,UAAUV,GAAS;wBACxB,IAAIzD,EAAgBiE,IAAQ;4BACxBV,IAAoB;4BACpBQ,IAAe;+BACZ;4BACHF,EAAQtB,KAAK0B;4BACbrE,EAAaqE;;2BAEd,KAAKvC,EAAIyC,UAAUzC,EAAI0C,WAAWlF,EAAIiC,UAAU;wBACnD4C,IAAe;wBACf,KAAK7E,EAAIqB,QAAQ;4BAMb,OAAQyD,IAAiB;;;;;YAMzC,IAAIP,KAAWI,EAAQrM,QAAQ;gBAE3BwE,IAAMI,UAAU,WAAW,+BAA+ByH,GAAS,MAAMA;gBACzE7H,EAAIa,cAAcG,EAAQH;gBAC1B,OAAOiF,EAAQ9F;;YAInB,IAAIgI,GAAgB;gBAChBvJ,KAAKqJ,GAAU,SAAUpC;oBACrBmB,EAAWnB;;;YAOnB,MAAM+B,KAAWF,MAAsBQ,GAAc;gBAGjD,KAAKxK,aAAaG,iBAAiBwD,GAAsB;oBACrDA,IAAuBmH,WAAW;wBAC9BnH,IAAuB;wBACvBoG;uBACD;;;YAIXxG,IAAgB;;QAGpBC,IAAS,SAAUmC;YACfoF,KAAKpC,SAASjH,OAAOwC,GAAayB,EAAI7C;YACtCiI,KAAKpF,MAAMA;YACXoF,KAAKhH,OAAOrC,OAAOkC,EAAOG,MAAM4B,EAAI7C;YACpCiI,KAAKC;YACLD,KAAKtB;YACLsB,KAAKnB;YACLmB,KAAKE;YACLF,KAAKG,WAAW;;QAQpB1H,EAAO/D;YACH0L,MAAM,SAAU1B,GAAS2B,GAAS5C,GAAS6C;gBACvCA,IAAUA;gBAKV,IAAIN,KAAKH,QAAQ;oBACb;;gBAGJG,KAAKK,UAAUA;gBAEf,IAAI5C,GAAS;oBAETuC,KAAK3C,GAAG,SAASI;uBACd,IAAIuC,KAAKpC,OAAOL,OAAO;oBAG1BE,IAAUrG,KAAK4I,MAAM,SAAUtI;wBAC3BsI,KAAKnC,KAAK,SAASnG;;;gBAS3BsI,KAAKtB,UAAUA,KAAWA,EAAQxD,MAAM;gBAExC8E,KAAKvC,UAAUA;gBAGfuC,KAAKH,SAAS;gBAEdG,KAAKO,SAASD,EAAQC;gBAMtB,IAAID,EAAQV,WAAWI,KAAKJ,SAAS;oBAGjCI,KAAKQ;uBACF;oBACHR,KAAKjB;;;YAIbD,WAAW,SAAUxI,GAAG2J;gBAGpB,KAAKD,KAAKnB,WAAWvI,IAAI;oBACrB0J,KAAKnB,WAAWvI,KAAK;oBACrB0J,KAAKG,YAAY;oBACjBH,KAAKC,WAAW3J,KAAK2J;;;YAI7BQ,OAAO;gBACH,IAAIT,KAAKF,SAAS;oBACd;;gBAEJE,KAAKF,UAAU;gBAEfpH,EAAQ0G,YAAY,IAAKC,OAAQC;gBAEjC,IAAI1E,IAAMoF,KAAKpF;gBAIf,IAAIoF,KAAKhH,MAAM;oBACXN,EAAQoD,YAAYkE,KAAKpF;wBACrB8F,qBAAqB;uBACtBV,KAAKhH,KAAK2H,YAAYvJ,KAAK4I,MAAM;wBAChC,OAAOpF,EAAIqB,SAAS+D,KAAKY,eAAeZ,KAAKa;;uBAE9C;oBAEH,OAAOjG,EAAIqB,SAAS+D,KAAKY,eAAeZ,KAAKa;;;YAIrDA,MAAM;gBACF,IAAIrE,IAAMwD,KAAKpF,IAAI4B;gBAGnB,KAAKlD,EAAWkD,IAAM;oBAClBlD,EAAWkD,KAAO;oBAClB9D,EAAQmI,KAAKb,KAAKpF,IAAI7C,IAAIyE;;;YAQlCuC,OAAO;gBACH,KAAKiB,KAAKJ,WAAWI,KAAKc,UAAU;oBAChC;;gBAGJ,IAAIpJ,GAAKqJ,GACLhJ,IAAKiI,KAAKpF,IAAI7C,IACdkI,IAAaD,KAAKC,YAClB/B,IAAU8B,KAAK9B,SACfmC,IAAUL,KAAKK;gBAEnB,KAAKL,KAAKH,QAAQ;oBAEd,KAAKrJ,QAAQkC,EAAQsF,aAAajG,IAAK;wBACnCiI,KAAKS;;uBAEN,IAAIT,KAAKzC,OAAO;oBACnByC,KAAKnC,KAAK,SAASmC,KAAKzC;uBACrB,KAAKyC,KAAKgB,UAAU;oBAKvBhB,KAAKgB,WAAW;oBAEhB,IAAIhB,KAAKG,WAAW,MAAMH,KAAK3G,SAAS;wBACpC,IAAItD,WAAWsK,IAAU;4BACrB;gCACInC,IAAUxF,EAAQuI,OAAOlJ,GAAIsI,GAASJ,GAAY/B;8BACpD,OAAOhG;gCACLR,IAAMQ;;4BAMV,IAAI8H,KAAKpF,IAAIiC,YAAYqB,MAAY7F,WAAW;gCAC5C0I,IAAYf,KAAK5B;gCACjB,IAAI2C,GAAW;oCACX7C,IAAU6C,EAAU7C;uCACjB,IAAI8B,KAAK7B,cAAc;oCAE1BD,IAAU8B,KAAK9B;;;4BAIvB,IAAIxG,GAAK;gCAOL,IAAKsI,KAAKpC,OAAOL,SAASyC,KAAKpF,IAAIiC,YAC/BpJ,IAAI+J,YAAY/F,gBAAgB;oCAChCC,EAAIwJ,aAAalB,KAAKpF;oCACtBlD,EAAIO,iBAAiB+H,KAAKpF,IAAIiC,aAAYmD,KAAKpF,IAAI7C,OAAM;oCACzDL,EAAIS,cAAc6H,KAAKpF,IAAIiC,WAAW,WAAW;oCACjD,OAAOW,EAASwC,KAAKzC,QAAQ7F;uCAC1B,WAAWvF,YAAY,eACnBA,QAAQoL,OAAO;oCAGtBpL,QAAQoL,MAAM7F;uCACX;oCAIHjE,IAAI+J,QAAQ9F;;;+BAGjB;4BAEHwG,IAAUmC;;wBAGdL,KAAK9B,UAAUA;wBAEf,IAAI8B,KAAKpF,IAAIiC,aAAamD,KAAKO,QAAQ;4BACnClH,EAAQtB,KAAMmG;4BAEd,IAAIzK,IAAI0N,gBAAgB;gCACpB,IAAIC;gCACJjL,KAAK6J,KAAKtB,SAAS,SAAUvB;oCACzBiE,EAAYnD,KAAKd,EAAOkE,iBAAiBlE;;gCAE7C1J,IAAI0N,eAAezI,GAASsH,KAAKpF,KAAKwG;;;wBAK9C9C,EAAcvG;wBAEdiI,KAAK3G,UAAU;;oBAMnB2G,KAAKgB,WAAW;oBAEhB,IAAIhB,KAAK3G,YAAY2G,KAAKsB,eAAe;wBACrCtB,KAAKsB,gBAAgB;wBACrBtB,KAAKnC,KAAK,WAAWmC,KAAK9B;wBAC1B8B,KAAK1C,qBAAqB;;;;YAMtCsD,YAAY;gBACR,IAAIhG,IAAMoF,KAAKpF,KACX7C,IAAK6C,EAAI7C,IAETwJ,IAAYlF,EAAczB,EAAIqB;gBAIlC+D,KAAKtB,QAAQT,KAAKsD;gBAElBlE,EAAGkE,GAAW,WAAWnK,KAAK4I,MAAM,SAAUwB;oBAC1C,IAAIX,GAAMQ,GAAeI,GACrBC,IAAW/K,OAAO4C,GAAYyG,KAAKpF,IAAI7C,KACvC8B,IAAOmG,KAAKpF,IAAIf,MAChB8C,IAAaqD,KAAKpF,IAAIoC,YAAYgD,KAAKpF,IAAIoC,UAAUnD,OAAO,MAC5D8H,IAAejJ,EAAQoD,YAAYlB,EAAIoC;wBACnC0D,qBAAqB;;oBAK7B,IAAIV,KAAKpF,IAAIqC,cAAc;wBAEvB,IAAIuE,EAAO5H,WAAW;4BAClBC,IAAO2H,EAAO5H,UAAUC,GAAM,SAAUA;gCACpC,OAAOD,EAAUC,GAAM8C,GAAY;kCACjC;;wBAKV0E,IAAgBhF,EAAczB,EAAIqB,SAAS,MAAMpC,GACnBmG,KAAKpF,IAAIoC;wBACvCK,EAAGgE,GACC,WAAWjK,KAAK4I,MAAM,SAAU9I;4BAC5B8I,KAAKpF,IAAIyG,gBAAgBA;4BACzBrB,KAAKI,SAAS;gCAAc,OAAOlJ;+BAAU;gCACzC0I,SAAS;gCACTW,QAAQ;;;wBAIpBkB,IAAgB9K,OAAOsC,GAAUoI,EAActJ;wBAC/C,IAAI0J,GAAe;4BAGfzB,KAAKtB,QAAQT,KAAKoD;4BAElB,IAAIrB,KAAKpC,OAAOL,OAAO;gCACnBkE,EAAcpE,GAAG,SAASjG,KAAK4I,MAAM,SAAUtI;oCAC3CsI,KAAKnC,KAAK,SAASnG;;;4BAG3B+J,EAAcjB;;wBAGlB;;oBAKJ,IAAIkB,GAAU;wBACV1B,KAAKpF,IAAI4B,MAAM9D,EAAQqE,UAAU2E;wBACjC1B,KAAKa;wBACL;;oBAGJA,IAAOzJ,KAAK4I,MAAM,SAAU9I;wBACxB8I,KAAKI,SAAS;4BAAc,OAAOlJ;2BAAU;4BACzC0I,SAAS;;;oBAIjBiB,EAAKtD,QAAQnG,KAAK4I,MAAM,SAAUtI;wBAC9BsI,KAAKH,SAAS;wBACdG,KAAKzC,QAAQ7F;wBACbA,EAAIO,mBAAkBF;wBAItBnB,SAASqC,GAAU,SAAUmE;4BACzB,IAAIA,EAAIxC,IAAI7C,GAAGoE,QAAQpE,IAAK,qBAAqB,GAAG;gCAChDuG,EAAclB,EAAIxC,IAAI7C;;;wBAI9ByF,EAAQ9F;;oBAKZmJ,EAAKe,WAAWxK,KAAK4I,MAAM,SAAU6B,GAAMC;wBAEvC,IAAIC,IAAanH,EAAIf,MACjBmI,IAAY3F,EAAc0F,IAC1BE,IAAiBnM;wBAMrB,IAAIgM,GAAS;4BACTD,IAAOC;;wBAKX,IAAIG,GAAgB;4BAChBnM,iBAAiB;;wBAKrBoH,EAAU8E;wBAGV,IAAIxL,QAAQqC,EAAOA,QAAQd,IAAK;4BAC5Bc,EAAOA,OAAOkJ,KAAclJ,EAAOA,OAAOd;;wBAG9C;4BACItE,IAAIyO,KAAKL;0BACX,OAAO3J;4BACL,OAAOsF,EAAQ1F,UAAU,gBACR,uBAAuBC,IACxB,cAAcG,GACbA,KACCH;;wBAGtB,IAAIkK,GAAgB;4BAChBnM,iBAAiB;;wBAKrBkK,KAAKtB,QAAQT,KAAK+D;wBAGlBtJ,EAAQyJ,aAAaJ;wBAIrBJ,IAAcI,KAAalB;;oBAM/BW,EAAOX,KAAKjG,EAAIf,MAAM8H,GAAcd,GAAMhI;;gBAG9CH,EAAQ8H,OAAOe,GAAWvB;gBAC1BA,KAAKE,WAAWqB,EAAUxJ,MAAMwJ;;YAGpCf,QAAQ;gBACJtH,EAAgB8G,KAAKpF,IAAI7C,MAAMiI;gBAC/BA,KAAKJ,UAAU;gBAMfI,KAAKc,WAAW;gBAGhB3K,KAAK6J,KAAKtB,SAAStH,KAAK4I,MAAM,SAAU7C,GAAQ7G;oBAC5C,IAAIyB,GAAIqF,GAAKgF;oBAEb,WAAWjF,MAAW,UAAU;wBAG5BA,IAASd,EAAcc,GACC6C,KAAKpF,IAAIiC,WAAWmD,KAAKpF,MAAMoF,KAAKpF,IAAIoC,WACzC,QACCgD,KAAKjE;wBAC7BiE,KAAKtB,QAAQpI,KAAK6G;wBAElBiF,IAAUzL,OAAOgC,GAAUwE,EAAOpF;wBAElC,IAAIqK,GAAS;4BACTpC,KAAKC,WAAW3J,KAAK8L,EAAQpC;4BAC7B;;wBAGJA,KAAKG,YAAY;wBAEjB9C,EAAGF,GAAQ,WAAW/F,KAAK4I,MAAM,SAAUC;4BACvC,IAAID,KAAKqC,SAAS;gCACd;;4BAEJrC,KAAKlB,UAAUxI,GAAG2J;4BAClBD,KAAKjB;;wBAGT,IAAIiB,KAAKvC,SAAS;4BACdJ,EAAGF,GAAQ,SAAS/F,KAAK4I,MAAMA,KAAKvC;+BACjC,IAAIuC,KAAKpC,OAAOL,OAAO;4BAI1BF,EAAGF,GAAQ,SAAS/F,KAAK4I,MAAM,SAAStI;gCACpCsI,KAAKnC,KAAK,SAASnG;;;;oBAK/BK,IAAKoF,EAAOpF;oBACZqF,IAAMnE,EAASlB;oBAKf,KAAKvB,QAAQmC,GAAUZ,MAAOqF,MAAQA,EAAIwC,SAAS;wBAC/ClH,EAAQ8H,OAAOrD,GAAQ6C;;;gBAM/BpJ,SAASoJ,KAAKE,YAAY9I,KAAK4I,MAAM,SAAUuB;oBAC3C,IAAInE,IAAMzG,OAAOsC,GAAUsI,EAAUxJ;oBACrC,IAAIqF,MAAQA,EAAIwC,SAAS;wBACrBlH,EAAQ8H,OAAOe,GAAWvB;;;gBAIlCA,KAAKc,WAAW;gBAEhBd,KAAKjB;;YAGT1B,IAAI,SAAUxD,GAAMyI;gBAChB,IAAIC,IAAMvC,KAAKpC,OAAO/D;gBACtB,KAAK0I,GAAK;oBACNA,IAAMvC,KAAKpC,OAAO/D;;gBAEtB0I,EAAItE,KAAKqE;;YAGbzE,MAAM,SAAUhE,GAAM2I;gBAClBrM,KAAK6J,KAAKpC,OAAO/D,IAAO,SAAUyI;oBAC9BA,EAAGE;;gBAEP,IAAI3I,MAAS,SAAS;2BAIXmG,KAAKpC,OAAO/D;;;;QAK/B,SAAS4I,EAAcC;YAEnB,KAAKlM,QAAQ6C,GAASqJ,EAAK,KAAK;gBAC5BxF,EAAUb,EAAcqG,EAAK,IAAI,MAAM,OAAOtC,KAAKsC,EAAK,IAAIA,EAAK;;;QAIzE,SAASC,EAAeC,GAAMvM,GAAMwD,GAAMgJ;YAItC,IAAID,EAAKE,gBAAgBrN,SAAS;gBAG9B,IAAIoN,GAAQ;oBACRD,EAAKE,YAAYD,GAAQxM;;mBAE1B;gBACHuM,EAAKG,oBAAoBlJ,GAAMxD,GAAM;;;QAU7C,SAAS2M,EAAcR;YAInB,IAAII,IAAOJ,EAAIS,iBAAiBT,EAAIU;YAGpCP,EAAeC,GAAMlK,EAAQyK,cAAc,QAAQ;YACnDR,EAAeC,GAAMlK,EAAQ0K,eAAe;YAE5C;gBACIR,MAAMA;gBACN7K,IAAI6K,KAAQA,EAAKxP,aAAa;;;QAItC,SAASiQ;YACL,IAAIX;YAGJ5E;YAGA,OAAO1E,EAASlG,QAAQ;gBACpBwP,IAAOtJ,EAASwC;gBAChB,IAAI8G,EAAK,OAAO,MAAM;oBAClB,OAAOlF,EAAQ1F,UAAU,YAAY,2CACjC4K,EAAKA,EAAKxP,SAAS;uBACpB;oBAGHuP,EAAcC;;;YAGtBhK,EAAQsF;;QAGZtF;YACIG,QAAQA;YACRN,aAAaA;YACbU,UAAUA;YACVI,SAASA;YACTC,YAAYA;YACZF,UAAUA;YACV4E;YACAvF,QAAQA;YACR4D,eAAeA;YACfiH,UAAU7P,IAAI6P;YACd9F,SAASA;YAMT+F,WAAW,SAAU3N;gBAEjB,IAAIA,EAAIlD,SAAS;oBACb,IAAIkD,EAAIlD,QAAQuI,OAAOrF,EAAIlD,QAAQQ,SAAS,OAAO,KAAK;wBACpD0C,EAAIlD,WAAW;;;gBAMvB,IAAIsG,IAAOH,EAAOG,MACdwK;oBACI3Q,OAAO;oBACPiG,SAAS;oBACTD,QAAQ;oBACR+B,KAAK;;gBAGbhE,SAAShB,GAAK,SAAUsB,GAAOR;oBAC3B,IAAI8M,EAAK9M,IAAO;wBACZ,KAAKmC,EAAOnC,IAAO;4BACfmC,EAAOnC;;wBAEXG,MAAMgC,EAAOnC,IAAOQ,GAAO,MAAM;2BAC9B;wBACH2B,EAAOnC,KAAQQ;;;gBAKvB,IAAItB,EAAIkD,SAAS;oBACblC,SAAShB,EAAIkD,SAAS,SAAU5B,GAAOR;wBACnCP,KAAKe,GAAO,SAAUuM;4BAClB,IAAIA,MAAM/M,GAAM;gCACZ6C,EAAWkK,KAAK/M;;;;;gBAOhC,IAAId,EAAIoD,MAAM;oBACVpC,SAAShB,EAAIoD,MAAM,SAAU9B,GAAOa;wBAEhC,IAAI7B,QAAQgB,IAAQ;4BAChBA;gCACIyJ,MAAMzJ;;;wBAGd,KAAKA,EAAMgH,WAAWhH,EAAMkJ,UAAUlJ,EAAMwM,WAAW;4BACnDxM,EAAMwM,YAAYhL,EAAQiL,gBAAgBzM;;wBAE9C8B,EAAKjB,KAAMb;;oBAEf2B,EAAOG,OAAOA;;gBAIlB,IAAIpD,EAAIgO,UAAU;oBACdzN,KAAKP,EAAIgO,UAAU,SAAUC;wBACzB,IAAIC,GAAUjK;wBAEdgK,WAAgBA,MAAW;4BAAYhK,MAAMgK;4BAAUA;wBAEvDhK,IAAOgK,EAAOhK;wBACdiK,IAAWD,EAAOC;wBAClB,IAAIA,GAAU;4BACVjL,EAAOhG,MAAMgH,KAAQgK,EAAOC;;wBAQhCjL,EAAOE,KAAKc,KAAQgK,EAAOhK,OAAO,OAAOgK,EAAO1Q,QAAQ,QAC1C6H,QAAQzG,eAAe,IACvByG,QAAQ1G,gBAAgB;;;gBAO9CsC,SAASqC,GAAU,SAAUmE,GAAKrF;oBAI9B,KAAKqF,EAAIyC,WAAWzC,EAAIxC,IAAIqC,cAAc;wBACtCG,EAAIxC,MAAMyB,EAActE,GAAI,MAAM;;;gBAO1C,IAAInC,EAAI+K,QAAQ/K,EAAImO,UAAU;oBAC1BrL,EAAQjG,QAAQmD,EAAI+K,YAAY/K,EAAImO;;;YAI5CJ,iBAAiB,SAAUzM;gBACvB,SAASG;oBACL,IAAI2M;oBACJ,IAAI9M,EAAMkJ,MAAM;wBACZ4D,IAAM9M,EAAMkJ,KAAK9I,MAAM9D,QAAQ+D;;oBAEnC,OAAOyM,KAAQ9M,EAAMgH,WAAWvG,UAAUT,EAAMgH;;gBAEpD,OAAO7G;;YAGXyE,aAAa,SAAUmI,GAAQ3D;gBAC3BA,IAAUA;gBAEV,SAASqB,EAAahB,GAAMoD,GAAUtG;oBAClC,IAAI1F,GAAI6C,GAAKsJ;oBAEb,IAAI5D,EAAQI,uBAAuBqD,KAAYhO,WAAWgO,IAAW;wBACjEA,EAASI,mBAAmB;;oBAGhC,WAAWxD,MAAS,UAAU;wBAC1B,IAAI5K,WAAWgO,IAAW;4BAEtB,OAAOvG,EAAQ1F,UAAU,eAAe,yBAAyB2F;;wBAMrE,IAAIwG,KAAUzN,QAAQmC,GAAUgI,IAAO;4BACnC,OAAOhI,EAASgI,GAAM1H,EAASgL,EAAOlM;;wBAK1C,IAAItE,IAAI2Q,KAAK;4BACT,OAAO3Q,IAAI2Q,IAAI1L,GAASiI,GAAMsD,GAAQtC;;wBAI1C/G,IAAMyB,EAAcsE,GAAMsD,GAAQ,OAAO;wBACzClM,IAAK6C,EAAI7C;wBAET,KAAKvB,QAAQ6C,GAAStB,IAAK;4BACvB,OAAOyF,EAAQ1F,UAAU,aAAa,kBAC1BC,IACA,4CACAQ,KACC0L,IAAS,KAAK;;wBAE/B,OAAO5K,EAAQtB;;oBAInBsL;oBAGA3K,EAAQ4K,SAAS;wBAGbD;wBAEAa,IAAahH,EAAUb,EAAc,MAAM4H;wBAI3CC,EAAWnI,UAAUuE,EAAQvE;wBAE7BmI,EAAW9D,KAAKO,GAAMoD,GAAUtG;4BAC5BmC,SAAS;;wBAGbZ;;oBAGJ,OAAO2C;;gBAGX9K,MAAM8K;oBACF1M,WAAWA;oBAOXoP,OAAO,SAAUC;wBACb,IAAIC,GACArI,IAAQoI,EAAkBE,YAAY,MACtCC,IAAUH,EAAkB/R,MAAM,KAAK,IACvCmS,IAAaD,MAAY,OAAOA,MAAY;wBAIhD,IAAIvI,OAAW,OAAOwI,KAAcxI,IAAQ,IAAI;4BAC5CqI,IAAMD,EAAkBlI,UAAUF,GAAOoI,EAAkBpR;4BAC3DoR,IAAoBA,EAAkBlI,UAAU,GAAGF;;wBAGvD,OAAOxD,EAAQqE,UAAUnD,EAAU0K,GACXL,KAAUA,EAAOlM,IAAI,OAAOwM,GAAM;;oBAG9DlL,SAAS,SAAUtB;wBACf,OAAOvB,QAAQ6C,GAASgD,EAActE,GAAIkM,GAAQ,OAAO,MAAMlM;;oBAGnE4M,WAAW,SAAU5M;wBACjBA,IAAKsE,EAActE,GAAIkM,GAAQ,OAAO,MAAMlM;wBAC5C,OAAOvB,QAAQ6C,GAAStB,MAAOvB,QAAQyC,GAAUlB;;;gBAKzD,KAAKkM,GAAQ;oBACTtC,EAAa9F,QAAQ,SAAU9D;wBAG3B+F;wBAEA,IAAIlD,IAAMyB,EAActE,GAAIkM,GAAQ,OAChC7G,IAAMzG,OAAOsC,GAAUlB;wBAE3BqF,EAAIiF,UAAU;wBACd/G,EAAavD;+BAENsB,EAAQtB;+BACRuB,EAAWsB,EAAI4B;+BACfrD,EAAYpB;wBAKnBxB,YAAY6C,GAAU,SAASsJ,GAAMpM;4BACjC,IAAIoM,EAAK,OAAO3K,GAAI;gCAChBqB,EAASO,OAAOrD,GAAG;;;+BAGpBoC,EAAQsF,YAAYjG;wBAE3B,IAAIqF,GAAK;4BAIL,IAAIA,EAAIQ,OAAOvE,SAAS;gCACpBF,EAAYpB,KAAMqF,EAAIQ;;4BAG1BU,EAAcvG;;;;gBAK1B,OAAO4J;;YASXnB,QAAQ,SAAUrD;gBACd,IAAIC,IAAMzG,OAAOsC,GAAUkE,EAAOpF;gBAClC,IAAIqF,GAAK;oBACLF,EAAUC,GAAQqD;;;YAU1B2B,cAAc,SAAUJ;gBACpB,IAAI6C,GAAOlC,GAAMtF,GACbpE,IAAOrC,OAAOkC,EAAOG,MAAM+I,UAC3B8C,IAAY7L,EAAKkF;gBAErBJ;gBAEA,OAAO1E,EAASlG,QAAQ;oBACpBwP,IAAOtJ,EAASwC;oBAChB,IAAI8G,EAAK,OAAO,MAAM;wBAClBA,EAAK,KAAKX;wBAIV,IAAI6C,GAAO;4BACP;;wBAEJA,IAAQ;2BACL,IAAIlC,EAAK,OAAOX,GAAY;wBAE/B6C,IAAQ;;oBAGZnC,EAAcC;;gBAElBhK,EAAQsF;gBAIRZ,IAAMzG,OAAOsC,GAAU8I;gBAEvB,KAAK6C,MAAUpO,QAAQ6C,GAAS0I,MAAe3E,MAAQA,EAAIyC,QAAQ;oBAC/D,IAAIhH,EAAOiM,mBAAmBD,MAAclN,UAAUkN,KAAa;wBAC/D,IAAInJ,EAAgBqG,IAAa;4BAC7B;+BACG;4BACH,OAAOvE,EAAQ1F,UAAU,YACR,wBAAwBiK,GACxB,QACCA;;2BAEnB;wBAGHU,IAAeV,GAAa/I,EAAK2H,YAAa3H,EAAK0K;;;gBAI3D1E;;YAUJjC,WAAW,SAAUgF,GAAYwC,GAAKQ;gBAClC,IAAIlS,GAAOmS,GAAM1O,GAAG2O,GAAczI,GAC9B0I,GAAYxD,GACZ1H,IAAUrD,OAAOkC,EAAOE,MAAMgJ;gBAElC,IAAI/H,GAAS;oBACT+H,IAAa/H;;gBAGjB0H,IAAW/K,OAAO4C,GAAYwI;gBAE9B,IAAIL,GAAU;oBACV,OAAOhJ,EAAQqE,UAAU2E,GAAU6C,GAAKQ;;gBAO5C,IAAItR,IAAI0R,YAAYpK,KAAKgH,IAAa;oBAIlCvF,IAAMuF,KAAcwC,KAAO;uBACxB;oBAEH1R,IAAQgG,EAAOhG;oBAEfmS,IAAOjD,EAAWxP,MAAM;oBAIxB,KAAK+D,IAAI0O,EAAK9R,QAAQoD,IAAI,GAAGA,KAAK,GAAG;wBACjC2O,IAAeD,EAAK9J,MAAM,GAAG5E,GAAG8E,KAAK;wBAErC8J,IAAavO,OAAO9D,GAAOoS;wBAC3B,IAAIC,GAAY;4BAGZ,IAAIhP,QAAQgP,IAAa;gCACrBA,IAAaA,EAAW;;4BAE5BF,EAAKrL,OAAO,GAAGrD,GAAG4O;4BAClB;;;oBAKR1I,IAAMwI,EAAK5J,KAAK;oBAChBoB,KAAQ+H,MAAQ,aAAaxJ,KAAKyB,MAAQuI,IAAU,KAAK;oBACzDvI,KAAOA,EAAIvB,OAAO,OAAO,OAAOuB,EAAI4I,MAAM,mBAAmB,KAAKvM,EAAOnG,WAAW8J;;gBAGxF,OAAO3D,EAAOwM,UAAU7I,MACEA,EAAIL,QAAQ,UAAU,IAAI,MAAM,OACjCtD,EAAOwM,WAAW7I;;YAK/CqE,MAAM,SAAU9I,GAAIyE;gBAChB/I,IAAIoN,KAAKnI,GAASX,GAAIyE;;YAU1ByE,QAAQ,SAAUpH,GAAMkK,GAAUrB,GAAMxE;gBACpC,OAAO6F,EAASzM,MAAM4G,GAASwE;;YASnCS,cAAc,SAAUX;gBAIpB,IAAIA,EAAI8C,SAAS,UACRhQ,YAAYyF,MAAMyH,EAAIS,iBAAiBT,EAAIU,YAAYqC,aAAc;oBAG1ExR,oBAAoB;oBAGpB,IAAIyR,IAAOxC,EAAcR;oBACzB9J,EAAQyJ,aAAaqD,EAAKzN;;;YAOlCqL,eAAe,SAAUZ;gBACrB,IAAIgD,IAAOxC,EAAcR;gBACzB,KAAK9G,EAAgB8J,EAAKzN,KAAK;oBAC3B,IAAI0N;oBACJ7O,SAASqC,GAAU,SAAS/B,GAAOwO;wBAC/B,IAAIA,EAAIvJ,QAAQ,WAAW,GAAG;4BAC1BhG,KAAKe,EAAMwH,SAAS,SAASvB;gCACzB,IAAIA,EAAOpF,OAAOyN,EAAKzN,IAAI;oCACvB0N,EAAQxH,KAAKyH;;gCAEjB,OAAO;;;;oBAInB,OAAOlI,EAAQ1F,UAAU,eAAe,uBAAuB0N,EAAKzN,MAC1C0N,EAAQvS,SACT,mBAAmBuS,EAAQrK,KAAK,QAChC,MAAMoH,KAAMgD,EAAKzN;;;;QAKtDW,EAAQjG,UAAUiG,EAAQoD;QAC1B,OAAOpD;;IAiBXjF,MAAMH,YAAY,SAAUqN,GAAMoD,GAAUtG,GAASkI;QAGjD,IAAIjN,GAASG,GACTN,IAAc/C;QAGlB,KAAKU,QAAQyK,aAAgBA,MAAS,UAAU;YAE5C9H,IAAS8H;YACT,IAAIzK,QAAQ6N,IAAW;gBAEnBpD,IAAOoD;gBACPA,IAAWtG;gBACXA,IAAUkI;mBACP;gBACHhF;;;QAIR,IAAI9H,KAAUA,EAAOH,SAAS;YAC1BH,IAAcM,EAAOH;;QAGzBA,IAAU/B,OAAOhB,UAAU4C;QAC3B,KAAKG,GAAS;YACVA,IAAU/C,SAAS4C,KAAe9E,IAAIC,EAAE4E,WAAWC;;QAGvD,IAAIM,GAAQ;YACRH,EAAQ6K,UAAU1K;;QAGtB,OAAOH,EAAQjG,QAAQkO,GAAMoD,GAAUtG;;IAO3ChK,IAAIoF,SAAS,SAAUA;QACnB,OAAOpF,IAAIoF;;IASfpF,IAAI6P,kBAAkBvD,eAAe,cAAc,SAAU1I;QACzD0I,WAAW1I,GAAI;QACf,SAAUA;QAAMA;;IAKpB,KAAK5E,SAAS;QACVA,UAAUgB;;IAGdA,IAAIU,UAAUA;IAGdV,IAAI0R,cAAc;IAClB1R,IAAIwB,YAAYA;IAChBvB,IAAID,IAAIC;QACJiC,UAAUA;QACV2C,YAAYA;;IAIhB7E;IAGA0C,OACI,SACA,SACA,WACA,eACD,SAAUO;QAITjD,IAAIiD,KAAQ;YACR,IAAIkP,IAAMjQ,SAASH;YACnB,OAAOoQ,EAAInT,QAAQiE,GAAMY,MAAMsO,GAAKrO;;;IAI5C,IAAItC,WAAW;QACXtB,OAAOD,EAAEC,OAAOX,SAASwE,qBAAqB,QAAQ;QAItD5D,cAAcZ,SAASwE,qBAAqB,QAAQ;QACpD,IAAI5D,aAAa;YACbD,OAAOD,EAAEC,OAAOC,YAAY4H;;;IASpC/H,IAAI+J,UAAU/F;IAKdhE,IAAIoS,aAAa,SAAUhN,GAAQkJ,GAAYvF;QAC3C,IAAIoG,IAAO/J,EAAOiN,QACV9S,SAAS+S,gBAAgB,gCAAgC,iBACzD/S,SAASgT,cAAc;QAC/BpD,EAAK0C,OAAOzM,EAAOoN,cAAc;QACjCrD,EAAKsD,UAAU;QACftD,EAAKuD,QAAQ;QACb,OAAOvD;;IAYXnP,IAAIoN,OAAO,SAAUnI,GAASqJ,GAAYvF;QACtC,IAAI3D,IAAUH,KAAWA,EAAQG,cAC7B+J;QACJ,IAAI3N,WAAW;YAEX2N,IAAOnP,IAAIoS,WAAWhN,GAAQkJ,GAAYvF;YAC1C,IAAI3D,EAAOuN,eAAe;gBACtBvN,EAAOuN,cAAcxD,GAAM/J,GAAQkJ,GAAYvF;;YAGnDoG,EAAKyD,aAAa,uBAAuB3N,EAAQH;YACjDqK,EAAKyD,aAAa,sBAAsBtE;YAUxC,IAAIa,EAAK0D,iBAQC1D,EAAK0D,YAAY1R,YAAYgO,EAAK0D,YAAY1R,WAAWuH,QAAQ,kBAAkB,OACpF1G,SAAS;gBAMdK,iBAAiB;gBAEjB8M,EAAK0D,YAAY,sBAAsB5N,EAAQyK;mBAY5C;gBACHP,EAAKvP,iBAAiB,QAAQqF,EAAQyK,cAAc;gBACpDP,EAAKvP,iBAAiB,SAASqF,EAAQ0K,eAAe;;YAE1DR,EAAK9O,MAAM0I;YAMXxI,wBAAwB4O;YACxB,IAAIhP,aAAa;gBACbD,KAAK4S,aAAa3D,GAAMhP;mBACrB;gBACHD,KAAK6S,YAAY5D;;YAErB5O,wBAAwB;YAExB,OAAO4O;eACJ,IAAIxN,aAAa;YACpB;gBAOIC,cAAcmH;gBAGd9D,EAAQyJ,aAAaJ;cACvB,OAAO7J;gBACLQ,EAAQ8E,QAAQ1F,UAAU,iBACV,8BACIiK,IAAa,SAASvF,GAC1BtE,KACC6J;;;;IAK7B,SAAS0E;QACL,IAAI1S,qBAAqBA,kBAAkBwR,eAAe,eAAe;YACrE,OAAOxR;;QAGXwC,YAAYtD,WAAW,SAAUF;YAC7B,IAAIA,EAAOwS,eAAe,eAAe;gBACrC,OAAQxR,oBAAoBhB;;;QAGpC,OAAOgB;;IAIX,IAAIkB,cAAcW,IAAIhD,cAAc;QAEhC2D,YAAYtD,WAAW,SAAUF;YAG7B,KAAKY,MAAM;gBACPA,OAAOZ,EAAOyI;;YAMlB3H,WAAWd,EAAOK,aAAa;YAC/B,IAAIS,UAAU;gBAEVI,aAAaJ;gBAGb,KAAK+B,IAAIlD,SAAS;oBAGdoB,MAAMG,WAAW1B,MAAM;oBACvB0B,aAAaH,IAAI4S;oBACjBxS,UAAUJ,IAAIZ,SAASY,IAAIsH,KAAK,OAAQ,MAAM;oBAE9CxF,IAAIlD,UAAUwB;;gBAKlBD,aAAaA,WAAW+G,QAAQ1G,gBAAgB;gBAGhD,IAAIb,IAAI0R,YAAYpK,KAAK9G,aAAa;oBAClCA,aAAaJ;;gBAIjB+B,IAAI+K,OAAO/K,IAAI+K,OAAO/K,IAAI+K,KAAKxF,OAAOlH,gBAAeA;gBAErD,OAAO;;;;IAYnBV,SAAS,SAAUsG,GAAM8G,GAAMoD;QAC3B,IAAInB,GAAMlK;QAGV,WAAWmB,MAAS,UAAU;YAE1BkK,IAAWpD;YACXA,IAAO9G;YACPA,IAAO;;QAIX,KAAK3D,QAAQyK,IAAO;YAChBoD,IAAWpD;YACXA,IAAO;;QAKX,KAAKA,KAAQ5K,WAAWgO,IAAW;YAC/BpD;YAIA,IAAIoD,EAAS7Q,QAAQ;gBACjB6Q,EACKnP,WACAoG,QAAQ5G,eAAe,IACvB4G,QAAQ3G,kBAAkB,SAAU+Q,GAAOxG;oBACxC+B,EAAK1C,KAAKW;;gBAQlB+B,KAAQoD,EAAS7Q,WAAW,MAAK,gBAAc,WAAW,WAAW,YAAWiI,OAAOwF;;;QAM/F,IAAI7K,gBAAgB;YAChB8M,IAAO5O,yBAAyByS;YAChC,IAAI7D,GAAM;gBACN,KAAK/I,GAAM;oBACPA,IAAO+I,EAAKxP,aAAa;;gBAE7BsF,IAAU/C,SAASiN,EAAKxP,aAAa;;;QAU7C,IAAIsF,GAAS;YACTA,EAAQU,SAAS6E,OAAMpE,GAAM8G,GAAMoD;YACnCrL,EAAQsF,YAAYnE,KAAQ;eACzB;YACHhE,eAAeoI,OAAMpE,GAAM8G,GAAMoD;;;IAIzCxQ,OAAOoT;QACHC,QAAQ;;IASZnT,IAAIyO,OAAO,SAAUL;QAEjB,OAAOgF,KAAKhF;;IAIhBpO,IAAImC;GACNoK;;CACD;IACG,IAAI5B;IAEJA,EAAOyC,OAAO,SAASA,EAAKhH,GAAMiN,GAAeC,GAAQlO;QAErD,IAAImO,IAASnN,IAAO;QACpB,IAAIiN,EAAcnC,UAAUqC,IAAS;YACjCF,IAAeE,KAAS,SAAS9P;gBAC7B6P,EAAO7P;;YAEX;;QAGJ,IAAI+P,IAAM,IAAIC;QACdD,EAAIE,KAAK,OAAOL,EAAczC,MAAMxK,IAAO;QAC3CoN,EAAIG,qBAAqB;YACrB,IAAIH,EAAI1B,cAAc,GAAG;gBACrB,IAAI0B,EAAII,UAAU,KAAK;oBACnBN,EAAOE,EAAIK;uBACR,IAAIL,EAAIM,YAAY;oBACvBR,EAAOxJ,MAAM,IAAIlL,MAAMwH,IAAO,OAAOoN,EAAIM;uBACtC;oBACHR,EAAOxJ,MAAM,IAAIlL,MAAMwH,IAAO,OAAOoN,EAAII,SAAS;;;;QAI9DJ,EAAIO,iBAAiB;QACrBP,EAAIQ;;IAIRlU,OAAO,OAAO6K;IACd7K,OAAO,QAAQ6K","sourcesContent":["/* @preserve: WARNING: This javascript file in the base1 package is deprecated */\nconsole.warn(\"Deprecated: \" +\n             ((new Error()).fileName || \"This javascript file\").split(\"/\").reverse()[0] +\n             \" in the Cockpit base1 package is deprecated\");\n/* This config is built as a prefix to require.js */\nvar require = {\n    baseUrl: \"../\",\n    waitSeconds: 30,\n    skipDataMain: true,\n    paths: {\n        \"jquery\": \"base1/jquery\",\n    }\n};\n\n/* We skip data-main above and handle it ourselves here */\n(function() {\n    var script = document.scripts[document.scripts.length - 1];\n    var main = script.getAttribute(\"data-main\");\n    if (main) {\n        document.addEventListener(\"DOMContentLoaded\", function() {\n            require([main], function() { });\n        });\n    }\n}());\n/** vim: et:ts=4:sw=4:sts=4\n * @license RequireJS 2.1.22 Copyright (c) 2010-2015, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/requirejs for details\n */\n//Not using strict: uneven strict support in browsers, #392, and causes\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\n/*jslint regexp: true, nomen: true, sloppy: true */\n/*global window, navigator, document, importScripts, setTimeout, opera */\n\nvar requirejs, require, define;\n(function (global) {\n    var req, s, head, baseElement, dataMain, src,\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\n        version = '2.1.22',\n        commentRegExp = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/mg,\n        cjsRequireRegExp = /[^.]\\s*require\\s*\\(\\s*[\"']([^'\"\\s]+)[\"']\\s*\\)/g,\n        jsSuffixRegExp = /\\.js$/,\n        currDirRegExp = /^\\.\\//,\n        op = Object.prototype,\n        ostring = op.toString,\n        hasOwn = op.hasOwnProperty,\n        ap = Array.prototype,\n        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\n        //PS3 indicates loaded and complete, but need to wait for complete\n        //specifically. Sequence is 'loading', 'loaded', execution,\n        // then 'complete'. The UA check is unfortunate, but not sure how\n        //to feature test w/o causing perf issues.\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\n                      /^complete$/ : /^(complete|loaded)$/,\n        defContextName = '_',\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\n        contexts = {},\n        cfg = {},\n        globalDefQueue = [],\n        useInteractive = false;\n\n    function isFunction(it) {\n        return ostring.call(it) === '[object Function]';\n    }\n\n    function isArray(it) {\n        return ostring.call(it) === '[object Array]';\n    }\n\n    /**\n     * Helper function for iterating over an array. If the func returns\n     * a true value, it will break out of the loop.\n     */\n    function each(ary, func) {\n        if (ary) {\n            var i;\n            for (i = 0; i < ary.length; i += 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Helper function for iterating over an array backwards. If the func\n     * returns a true value, it will break out of the loop.\n     */\n    function eachReverse(ary, func) {\n        if (ary) {\n            var i;\n            for (i = ary.length - 1; i > -1; i -= 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    function getOwn(obj, prop) {\n        return hasProp(obj, prop) && obj[prop];\n    }\n\n    /**\n     * Cycles over properties in an object and calls a function for each\n     * property value. If the function returns a truthy value, then the\n     * iteration is stopped.\n     */\n    function eachProp(obj, func) {\n        var prop;\n        for (prop in obj) {\n            if (hasProp(obj, prop)) {\n                if (func(obj[prop], prop)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Simple function to mix in properties from source into target,\n     * but only if target does not already have a property of the same name.\n     */\n    function mixin(target, source, force, deepStringMixin) {\n        if (source) {\n            eachProp(source, function (value, prop) {\n                if (force || !hasProp(target, prop)) {\n                    if (deepStringMixin && typeof value === 'object' && value &&\n                        !isArray(value) && !isFunction(value) &&\n                        !(value instanceof RegExp)) {\n\n                        if (!target[prop]) {\n                            target[prop] = {};\n                        }\n                        mixin(target[prop], value, force, deepStringMixin);\n                    } else {\n                        target[prop] = value;\n                    }\n                }\n            });\n        }\n        return target;\n    }\n\n    //Similar to Function.prototype.bind, but the 'this' object is specified\n    //first, since it is easier to read/figure out what 'this' will be.\n    function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n        throw err;\n    }\n\n    //Allow getting a global that is expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n\n    /**\n     * Constructs an error with a pointer to an URL with more information.\n     * @param {String} id the error ID that maps to an ID on a web page.\n     * @param {String} message human readable error.\n     * @param {Error} [err] the original error, if there is one.\n     *\n     * @returns {Error}\n     */\n    function makeError(id, msg, err, requireModules) {\n        var e = new Error(msg + '\\nhttp://requirejs.org/docs/errors.html#' + id);\n        e.requireType = id;\n        e.requireModules = requireModules;\n        if (err) {\n            e.originalError = err;\n        }\n        return e;\n    }\n\n    if (typeof define !== 'undefined') {\n        //If a define is already in play via another AMD loader,\n        //do not overwrite.\n        return;\n    }\n\n    if (typeof requirejs !== 'undefined') {\n        if (isFunction(requirejs)) {\n            //Do not overwrite an existing requirejs instance.\n            return;\n        }\n        cfg = requirejs;\n        requirejs = undefined;\n    }\n\n    //Allow for a require config object\n    if (typeof require !== 'undefined' && !isFunction(require)) {\n        //assume it is a config object.\n        cfg = require;\n        require = undefined;\n    }\n\n    function newContext(contextName) {\n        var inCheckLoaded, Module, context, handlers,\n            checkLoadedTimeoutId,\n            config = {\n                //Defaults. Do not set a default for map\n                //config to speed up normalize(), which\n                //will run faster if there is no default.\n                waitSeconds: 7,\n                baseUrl: './',\n                paths: {},\n                bundles: {},\n                pkgs: {},\n                shim: {},\n                config: {}\n            },\n            registry = {},\n            //registry of just enabled modules, to speed\n            //cycle breaking code when lots of modules\n            //are registered, but not activated.\n            enabledRegistry = {},\n            undefEvents = {},\n            defQueue = [],\n            defined = {},\n            urlFetched = {},\n            bundlesMap = {},\n            requireCounter = 1,\n            unnormalizedCounter = 1;\n\n        /**\n         * Trims the . and .. from an array of path segments.\n         * It will keep a leading path segment if a .. will become\n         * the first path segment, to help with module name lookups,\n         * which act like paths, but can be remapped. But the end result,\n         * all paths that use this function should look normalized.\n         * NOTE: this method MODIFIES the input array.\n         * @param {Array} ary the array of path segments.\n         */\n        function trimDots(ary) {\n            var i, part;\n            for (i = 0; i < ary.length; i++) {\n                part = ary[i];\n                if (part === '.') {\n                    ary.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    // If at the start, or previous value is still ..,\n                    // keep them so that when converted to a path it may\n                    // still work when converted to a path, even though\n                    // as an ID it is less than ideal. In larger point\n                    // releases, may be better to just kick out an error.\n                    if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {\n                        continue;\n                    } else if (i > 0) {\n                        ary.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Given a relative module name, like ./something, normalize it to\n         * a real name that can be mapped to a path.\n         * @param {String} name the relative name\n         * @param {String} baseName a real name that the name arg is relative\n         * to.\n         * @param {Boolean} applyMap apply the map config to the value. Should\n         * only be done if this normalization is for a dependency ID.\n         * @returns {String} normalized name\n         */\n        function normalize(name, baseName, applyMap) {\n            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,\n                foundMap, foundI, foundStarMap, starI, normalizedBaseParts,\n                baseParts = (baseName && baseName.split('/')),\n                map = config.map,\n                starMap = map && map['*'];\n\n            //Adjust any relative paths.\n            if (name) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // If wanting node ID compatibility, strip .js from end\n                // of IDs. Have to do this here, and not in nameToUrl\n                // because node allows either .js or non .js to map\n                // to same file.\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                // Starts with a '.' so need the baseName\n                if (name[0].charAt(0) === '.' && baseParts) {\n                    //Convert baseName to array, and lop off the last part,\n                    //so that . matches that 'directory' and not name of the baseName's\n                    //module. For instance, baseName of 'one/two/three', maps to\n                    //'one/two/three.js', but we want the directory, 'one/two' for\n                    //this normalization.\n                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                    name = normalizedBaseParts.concat(name);\n                }\n\n                trimDots(name);\n                name = name.join('/');\n            }\n\n            //Apply map config if available.\n            if (applyMap && map && (baseParts || starMap)) {\n                nameParts = name.split('/');\n\n                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {\n                    nameSegment = nameParts.slice(0, i).join('/');\n\n                    if (baseParts) {\n                        //Find the longest baseName segment match in the config.\n                        //So, do joins on the biggest to smallest lengths of baseParts.\n                        for (j = baseParts.length; j > 0; j -= 1) {\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\n\n                            //baseName segment has config, find if it has one for\n                            //this name.\n                            if (mapValue) {\n                                mapValue = getOwn(mapValue, nameSegment);\n                                if (mapValue) {\n                                    //Match, update name to the new value.\n                                    foundMap = mapValue;\n                                    foundI = i;\n                                    break outerLoop;\n                                }\n                            }\n                        }\n                    }\n\n                    //Check for a star map match, but just hold on to it,\n                    //if there is a shorter segment match later in a matching\n                    //config, then favor over this star map.\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\n                        foundStarMap = getOwn(starMap, nameSegment);\n                        starI = i;\n                    }\n                }\n\n                if (!foundMap && foundStarMap) {\n                    foundMap = foundStarMap;\n                    foundI = starI;\n                }\n\n                if (foundMap) {\n                    nameParts.splice(0, foundI, foundMap);\n                    name = nameParts.join('/');\n                }\n            }\n\n            // If the name points to a package's name, use\n            // the package main instead.\n            pkgMain = getOwn(config.pkgs, name);\n\n            return pkgMain ? pkgMain : name;\n        }\n\n        function removeScript(name) {\n            if (isBrowser) {\n                each(scripts(), function (scriptNode) {\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\n                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {\n                        scriptNode.parentNode.removeChild(scriptNode);\n                        return true;\n                    }\n                });\n            }\n        }\n\n        function hasPathFallback(id) {\n            var pathConfig = getOwn(config.paths, id);\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\n                //Pop off the first array value, since it failed, and\n                //retry\n                pathConfig.shift();\n                context.require.undef(id);\n\n                //Custom require that does not do map translation, since\n                //ID is \"absolute\", already mapped/resolved.\n                context.makeRequire(null, {\n                    skipMap: true\n                })([id]);\n\n                return true;\n            }\n        }\n\n        //Turns a plugin!resource to [plugin, resource]\n        //with the plugin being undefined if the name\n        //did not have a plugin prefix.\n        function splitPrefix(name) {\n            var prefix,\n                index = name ? name.indexOf('!') : -1;\n            if (index > -1) {\n                prefix = name.substring(0, index);\n                name = name.substring(index + 1, name.length);\n            }\n            return [prefix, name];\n        }\n\n        /**\n         * Creates a module mapping that includes plugin prefix, module\n         * name, and path. If parentModuleMap is provided it will\n         * also normalize the name via require.normalize()\n         *\n         * @param {String} name the module name\n         * @param {String} [parentModuleMap] parent module map\n         * for the module name, used to resolve relative names.\n         * @param {Boolean} isNormalized: is the ID already normalized.\n         * This is true if this call is done for a define() module ID.\n         * @param {Boolean} applyMap: apply the map config to the ID.\n         * Should only be true if this map is for a dependency.\n         *\n         * @returns {Object}\n         */\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\n            var url, pluginModule, suffix, nameParts,\n                prefix = null,\n                parentName = parentModuleMap ? parentModuleMap.name : null,\n                originalName = name,\n                isDefine = true,\n                normalizedName = '';\n\n            //If no name, then it means it is a require call, generate an\n            //internal name.\n            if (!name) {\n                isDefine = false;\n                name = '_@r' + (requireCounter += 1);\n            }\n\n            nameParts = splitPrefix(name);\n            prefix = nameParts[0];\n            name = nameParts[1];\n\n            if (prefix) {\n                prefix = normalize(prefix, parentName, applyMap);\n                pluginModule = getOwn(defined, prefix);\n            }\n\n            //Account for relative paths if there is a base name.\n            if (name) {\n                if (prefix) {\n                    if (pluginModule && pluginModule.normalize) {\n                        //Plugin is loaded, use its normalize method.\n                        normalizedName = pluginModule.normalize(name, function (name) {\n                            return normalize(name, parentName, applyMap);\n                        });\n                    } else {\n                        // If nested plugin references, then do not try to\n                        // normalize, as it will not normalize correctly. This\n                        // places a restriction on resourceIds, and the longer\n                        // term solution is not to normalize until plugins are\n                        // loaded and all normalizations to allow for async\n                        // loading of a loader plugin. But for now, fixes the\n                        // common uses. Details in #1131\n                        normalizedName = name.indexOf('!') === -1 ?\n                                         normalize(name, parentName, applyMap) :\n                                         name;\n                    }\n                } else {\n                    //A regular module.\n                    normalizedName = normalize(name, parentName, applyMap);\n\n                    //Normalized name may be a plugin ID due to map config\n                    //application in normalize. The map config values must\n                    //already be normalized, so do not need to redo that part.\n                    nameParts = splitPrefix(normalizedName);\n                    prefix = nameParts[0];\n                    normalizedName = nameParts[1];\n                    isNormalized = true;\n\n                    url = context.nameToUrl(normalizedName);\n                }\n            }\n\n            //If the id is a plugin id that cannot be determined if it needs\n            //normalization, stamp it with a unique ID so two matching relative\n            //ids that may conflict can be separate.\n            suffix = prefix && !pluginModule && !isNormalized ?\n                     '_unnormalized' + (unnormalizedCounter += 1) :\n                     '';\n\n            return {\n                prefix: prefix,\n                name: normalizedName,\n                parentMap: parentModuleMap,\n                unnormalized: !!suffix,\n                url: url,\n                originalName: originalName,\n                isDefine: isDefine,\n                id: (prefix ?\n                        prefix + '!' + normalizedName :\n                        normalizedName) + suffix\n            };\n        }\n\n        function getModule(depMap) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (!mod) {\n                mod = registry[id] = new context.Module(depMap);\n            }\n\n            return mod;\n        }\n\n        function on(depMap, name, fn) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (hasProp(defined, id) &&\n                    (!mod || mod.defineEmitComplete)) {\n                if (name === 'defined') {\n                    fn(defined[id]);\n                }\n            } else {\n                mod = getModule(depMap);\n                if (mod.error && name === 'error') {\n                    fn(mod.error);\n                } else {\n                    mod.on(name, fn);\n                }\n            }\n        }\n\n        function onError(err, errback) {\n            var ids = err.requireModules,\n                notified = false;\n\n            if (errback) {\n                errback(err);\n            } else {\n                each(ids, function (id) {\n                    var mod = getOwn(registry, id);\n                    if (mod) {\n                        //Set error on module, so it skips timeout checks.\n                        mod.error = err;\n                        if (mod.events.error) {\n                            notified = true;\n                            mod.emit('error', err);\n                        }\n                    }\n                });\n\n                if (!notified) {\n                    req.onError(err);\n                }\n            }\n        }\n\n        /**\n         * Internal method to transfer globalQueue items to this context's\n         * defQueue.\n         */\n        function takeGlobalQueue() {\n            //Push all the globalDefQueue items into the context's defQueue\n            if (globalDefQueue.length) {\n                each(globalDefQueue, function(queueItem) {\n                    var id = queueItem[0];\n                    if (typeof id === 'string') {\n                        context.defQueueMap[id] = true;\n                    }\n                    defQueue.push(queueItem);\n                });\n                globalDefQueue = [];\n            }\n        }\n\n        handlers = {\n            'require': function (mod) {\n                if (mod.require) {\n                    return mod.require;\n                } else {\n                    return (mod.require = context.makeRequire(mod.map));\n                }\n            },\n            'exports': function (mod) {\n                mod.usingExports = true;\n                if (mod.map.isDefine) {\n                    if (mod.exports) {\n                        return (defined[mod.map.id] = mod.exports);\n                    } else {\n                        return (mod.exports = defined[mod.map.id] = {});\n                    }\n                }\n            },\n            'module': function (mod) {\n                if (mod.module) {\n                    return mod.module;\n                } else {\n                    return (mod.module = {\n                        id: mod.map.id,\n                        uri: mod.map.url,\n                        config: function () {\n                            return getOwn(config.config, mod.map.id) || {};\n                        },\n                        exports: mod.exports || (mod.exports = {})\n                    });\n                }\n            }\n        };\n\n        function cleanRegistry(id) {\n            //Clean up machinery used for waiting modules.\n            delete registry[id];\n            delete enabledRegistry[id];\n        }\n\n        function breakCycle(mod, traced, processed) {\n            var id = mod.map.id;\n\n            if (mod.error) {\n                mod.emit('error', mod.error);\n            } else {\n                traced[id] = true;\n                each(mod.depMaps, function (depMap, i) {\n                    var depId = depMap.id,\n                        dep = getOwn(registry, depId);\n\n                    //Only force things that have not completed\n                    //being defined, so still in the registry,\n                    //and only if it has not been matched up\n                    //in the module already.\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\n                        if (getOwn(traced, depId)) {\n                            mod.defineDep(i, defined[depId]);\n                            mod.check(); //pass false?\n                        } else {\n                            breakCycle(dep, traced, processed);\n                        }\n                    }\n                });\n                processed[id] = true;\n            }\n        }\n\n        function checkLoaded() {\n            var err, usingPathFallback,\n                waitInterval = config.waitSeconds * 1000,\n                //It is possible to disable the wait interval by using waitSeconds of 0.\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\n                noLoads = [],\n                reqCalls = [],\n                stillLoading = false,\n                needCycleCheck = true;\n\n            //Do not bother if this call was a result of a cycle break.\n            if (inCheckLoaded) {\n                return;\n            }\n\n            inCheckLoaded = true;\n\n            //Figure out the state of all the modules.\n            eachProp(enabledRegistry, function (mod) {\n                var map = mod.map,\n                    modId = map.id;\n\n                //Skip things that are not enabled or in error state.\n                if (!mod.enabled) {\n                    return;\n                }\n\n                if (!map.isDefine) {\n                    reqCalls.push(mod);\n                }\n\n                if (!mod.error) {\n                    //If the module should be executed, and it has not\n                    //been inited and time is up, remember it.\n                    if (!mod.inited && expired) {\n                        if (hasPathFallback(modId)) {\n                            usingPathFallback = true;\n                            stillLoading = true;\n                        } else {\n                            noLoads.push(modId);\n                            removeScript(modId);\n                        }\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\n                        stillLoading = true;\n                        if (!map.prefix) {\n                            //No reason to keep looking for unfinished\n                            //loading. If the only stillLoading is a\n                            //plugin resource though, keep going,\n                            //because it may be that a plugin resource\n                            //is waiting on a non-plugin cycle.\n                            return (needCycleCheck = false);\n                        }\n                    }\n                }\n            });\n\n            if (expired && noLoads.length) {\n                //If wait time expired, throw error of unloaded modules.\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\n                err.contextName = context.contextName;\n                return onError(err);\n            }\n\n            //Not expired, check for a cycle.\n            if (needCycleCheck) {\n                each(reqCalls, function (mod) {\n                    breakCycle(mod, {}, {});\n                });\n            }\n\n            //If still waiting on loads, and the waiting load is something\n            //other than a plugin resource, or there are still outstanding\n            //scripts, then just try back later.\n            if ((!expired || usingPathFallback) && stillLoading) {\n                //Something is still waiting to load. Wait for it, but only\n                //if a timeout is not already in effect.\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\n                    checkLoadedTimeoutId = setTimeout(function () {\n                        checkLoadedTimeoutId = 0;\n                        checkLoaded();\n                    }, 50);\n                }\n            }\n\n            inCheckLoaded = false;\n        }\n\n        Module = function (map) {\n            this.events = getOwn(undefEvents, map.id) || {};\n            this.map = map;\n            this.shim = getOwn(config.shim, map.id);\n            this.depExports = [];\n            this.depMaps = [];\n            this.depMatched = [];\n            this.pluginMaps = {};\n            this.depCount = 0;\n\n            /* this.exports this.factory\n               this.depMaps = [],\n               this.enabled, this.fetched\n            */\n        };\n\n        Module.prototype = {\n            init: function (depMaps, factory, errback, options) {\n                options = options || {};\n\n                //Do not do more inits if already done. Can happen if there\n                //are multiple define calls for the same module. That is not\n                //a normal, common case, but it is also not unexpected.\n                if (this.inited) {\n                    return;\n                }\n\n                this.factory = factory;\n\n                if (errback) {\n                    //Register for errors on this module.\n                    this.on('error', errback);\n                } else if (this.events.error) {\n                    //If no errback already, but there are error listeners\n                    //on this module, set up an errback to pass to the deps.\n                    errback = bind(this, function (err) {\n                        this.emit('error', err);\n                    });\n                }\n\n                //Do a copy of the dependency array, so that\n                //source inputs are not modified. For example\n                //\"shim\" deps are passed in here directly, and\n                //doing a direct modification of the depMaps array\n                //would affect that config.\n                this.depMaps = depMaps && depMaps.slice(0);\n\n                this.errback = errback;\n\n                //Indicate this module has be initialized\n                this.inited = true;\n\n                this.ignore = options.ignore;\n\n                //Could have option to init this module in enabled mode,\n                //or could have been previously marked as enabled. However,\n                //the dependencies are not known until init is called. So\n                //if enabled previously, now trigger dependencies as enabled.\n                if (options.enabled || this.enabled) {\n                    //Enable this module and dependencies.\n                    //Will call this.check()\n                    this.enable();\n                } else {\n                    this.check();\n                }\n            },\n\n            defineDep: function (i, depExports) {\n                //Because of cycles, defined callback for a given\n                //export can be called more than once.\n                if (!this.depMatched[i]) {\n                    this.depMatched[i] = true;\n                    this.depCount -= 1;\n                    this.depExports[i] = depExports;\n                }\n            },\n\n            fetch: function () {\n                if (this.fetched) {\n                    return;\n                }\n                this.fetched = true;\n\n                context.startTime = (new Date()).getTime();\n\n                var map = this.map;\n\n                //If the manager is for a plugin managed resource,\n                //ask the plugin to load it now.\n                if (this.shim) {\n                    context.makeRequire(this.map, {\n                        enableBuildCallback: true\n                    })(this.shim.deps || [], bind(this, function () {\n                        return map.prefix ? this.callPlugin() : this.load();\n                    }));\n                } else {\n                    //Regular dependency.\n                    return map.prefix ? this.callPlugin() : this.load();\n                }\n            },\n\n            load: function () {\n                var url = this.map.url;\n\n                //Regular dependency.\n                if (!urlFetched[url]) {\n                    urlFetched[url] = true;\n                    context.load(this.map.id, url);\n                }\n            },\n\n            /**\n             * Checks if the module is ready to define itself, and if so,\n             * define it.\n             */\n            check: function () {\n                if (!this.enabled || this.enabling) {\n                    return;\n                }\n\n                var err, cjsModule,\n                    id = this.map.id,\n                    depExports = this.depExports,\n                    exports = this.exports,\n                    factory = this.factory;\n\n                if (!this.inited) {\n                    // Only fetch if not already in the defQueue.\n                    if (!hasProp(context.defQueueMap, id)) {\n                        this.fetch();\n                    }\n                } else if (this.error) {\n                    this.emit('error', this.error);\n                } else if (!this.defining) {\n                    //The factory could trigger another require call\n                    //that would result in checking this module to\n                    //define itself again. If already in the process\n                    //of doing that, skip this work.\n                    this.defining = true;\n\n                    if (this.depCount < 1 && !this.defined) {\n                        if (isFunction(factory)) {\n                            try {\n                                exports = context.execCb(id, factory, depExports, exports);\n                            } catch (e) {\n                                err = e;\n                            }\n\n                            // Favor return value over exports. If node/cjs in play,\n                            // then will not have a return value anyway. Favor\n                            // module.exports assignment over exports object.\n                            if (this.map.isDefine && exports === undefined) {\n                                cjsModule = this.module;\n                                if (cjsModule) {\n                                    exports = cjsModule.exports;\n                                } else if (this.usingExports) {\n                                    //exports already set the defined value.\n                                    exports = this.exports;\n                                }\n                            }\n\n                            if (err) {\n                                // If there is an error listener, favor passing\n                                // to that instead of throwing an error. However,\n                                // only do it for define()'d  modules. require\n                                // errbacks should not be called for failures in\n                                // their callbacks (#699). However if a global\n                                // onError is set, use that.\n                                if ((this.events.error && this.map.isDefine) ||\n                                    req.onError !== defaultOnError) {\n                                    err.requireMap = this.map;\n                                    err.requireModules = this.map.isDefine ? [this.map.id] : null;\n                                    err.requireType = this.map.isDefine ? 'define' : 'require';\n                                    return onError((this.error = err));\n                                } else if (typeof console !== 'undefined' &&\n                                           console.error) {\n                                    // Log the error for debugging. If promises could be\n                                    // used, this would be different, but making do.\n                                    console.error(err);\n                                } else {\n                                    // Do not want to completely lose the error. While this\n                                    // will mess up processing and lead to similar results\n                                    // as bug 1440, it at least surfaces the error.\n                                    req.onError(err);\n                                }\n                            }\n                        } else {\n                            //Just a literal value\n                            exports = factory;\n                        }\n\n                        this.exports = exports;\n\n                        if (this.map.isDefine && !this.ignore) {\n                            defined[id] = exports;\n\n                            if (req.onResourceLoad) {\n                                var resLoadMaps = [];\n                                each(this.depMaps, function (depMap) {\n                                    resLoadMaps.push(depMap.normalizedMap || depMap);\n                                });\n                                req.onResourceLoad(context, this.map, resLoadMaps);\n                            }\n                        }\n\n                        //Clean up\n                        cleanRegistry(id);\n\n                        this.defined = true;\n                    }\n\n                    //Finished the define stage. Allow calling check again\n                    //to allow define notifications below in the case of a\n                    //cycle.\n                    this.defining = false;\n\n                    if (this.defined && !this.defineEmitted) {\n                        this.defineEmitted = true;\n                        this.emit('defined', this.exports);\n                        this.defineEmitComplete = true;\n                    }\n\n                }\n            },\n\n            callPlugin: function () {\n                var map = this.map,\n                    id = map.id,\n                    //Map already normalized the prefix.\n                    pluginMap = makeModuleMap(map.prefix);\n\n                //Mark this as a dependency for this plugin, so it\n                //can be traced for cycles.\n                this.depMaps.push(pluginMap);\n\n                on(pluginMap, 'defined', bind(this, function (plugin) {\n                    var load, normalizedMap, normalizedMod,\n                        bundleId = getOwn(bundlesMap, this.map.id),\n                        name = this.map.name,\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\n                        localRequire = context.makeRequire(map.parentMap, {\n                            enableBuildCallback: true\n                        });\n\n                    //If current map is not normalized, wait for that\n                    //normalized name to load instead of continuing.\n                    if (this.map.unnormalized) {\n                        //Normalize the ID if the plugin allows it.\n                        if (plugin.normalize) {\n                            name = plugin.normalize(name, function (name) {\n                                return normalize(name, parentName, true);\n                            }) || '';\n                        }\n\n                        //prefix and name should already be normalized, no need\n                        //for applying map config again either.\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\n                                                      this.map.parentMap);\n                        on(normalizedMap,\n                            'defined', bind(this, function (value) {\n                                this.map.normalizedMap = normalizedMap;\n                                this.init([], function () { return value; }, null, {\n                                    enabled: true,\n                                    ignore: true\n                                });\n                            }));\n\n                        normalizedMod = getOwn(registry, normalizedMap.id);\n                        if (normalizedMod) {\n                            //Mark this as a dependency for this plugin, so it\n                            //can be traced for cycles.\n                            this.depMaps.push(normalizedMap);\n\n                            if (this.events.error) {\n                                normalizedMod.on('error', bind(this, function (err) {\n                                    this.emit('error', err);\n                                }));\n                            }\n                            normalizedMod.enable();\n                        }\n\n                        return;\n                    }\n\n                    //If a paths config, then just load that file instead to\n                    //resolve the plugin, as it is built into that paths layer.\n                    if (bundleId) {\n                        this.map.url = context.nameToUrl(bundleId);\n                        this.load();\n                        return;\n                    }\n\n                    load = bind(this, function (value) {\n                        this.init([], function () { return value; }, null, {\n                            enabled: true\n                        });\n                    });\n\n                    load.error = bind(this, function (err) {\n                        this.inited = true;\n                        this.error = err;\n                        err.requireModules = [id];\n\n                        //Remove temp unnormalized modules for this module,\n                        //since they will never be resolved otherwise now.\n                        eachProp(registry, function (mod) {\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\n                                cleanRegistry(mod.map.id);\n                            }\n                        });\n\n                        onError(err);\n                    });\n\n                    //Allow plugins to load other code without having to know the\n                    //context or how to 'complete' the load.\n                    load.fromText = bind(this, function (text, textAlt) {\n                        /*jslint evil: true */\n                        var moduleName = map.name,\n                            moduleMap = makeModuleMap(moduleName),\n                            hasInteractive = useInteractive;\n\n                        //As of 2.1.0, support just passing the text, to reinforce\n                        //fromText only being called once per resource. Still\n                        //support old style of passing moduleName but discard\n                        //that moduleName in favor of the internal ref.\n                        if (textAlt) {\n                            text = textAlt;\n                        }\n\n                        //Turn off interactive script matching for IE for any define\n                        //calls in the text, then turn it back on at the end.\n                        if (hasInteractive) {\n                            useInteractive = false;\n                        }\n\n                        //Prime the system by creating a module instance for\n                        //it.\n                        getModule(moduleMap);\n\n                        //Transfer any config to this other module.\n                        if (hasProp(config.config, id)) {\n                            config.config[moduleName] = config.config[id];\n                        }\n\n                        try {\n                            req.exec(text);\n                        } catch (e) {\n                            return onError(makeError('fromtexteval',\n                                             'fromText eval for ' + id +\n                                            ' failed: ' + e,\n                                             e,\n                                             [id]));\n                        }\n\n                        if (hasInteractive) {\n                            useInteractive = true;\n                        }\n\n                        //Mark this as a dependency for the plugin\n                        //resource\n                        this.depMaps.push(moduleMap);\n\n                        //Support anonymous modules.\n                        context.completeLoad(moduleName);\n\n                        //Bind the value of that module to the value for this\n                        //resource ID.\n                        localRequire([moduleName], load);\n                    });\n\n                    //Use parentName here since the plugin's name is not reliable,\n                    //could be some weird string with no path that actually wants to\n                    //reference the parentName's path.\n                    plugin.load(map.name, localRequire, load, config);\n                }));\n\n                context.enable(pluginMap, this);\n                this.pluginMaps[pluginMap.id] = pluginMap;\n            },\n\n            enable: function () {\n                enabledRegistry[this.map.id] = this;\n                this.enabled = true;\n\n                //Set flag mentioning that the module is enabling,\n                //so that immediate calls to the defined callbacks\n                //for dependencies do not trigger inadvertent load\n                //with the depCount still being zero.\n                this.enabling = true;\n\n                //Enable each dependency\n                each(this.depMaps, bind(this, function (depMap, i) {\n                    var id, mod, handler;\n\n                    if (typeof depMap === 'string') {\n                        //Dependency needs to be converted to a depMap\n                        //and wired up to this module.\n                        depMap = makeModuleMap(depMap,\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\n                                               false,\n                                               !this.skipMap);\n                        this.depMaps[i] = depMap;\n\n                        handler = getOwn(handlers, depMap.id);\n\n                        if (handler) {\n                            this.depExports[i] = handler(this);\n                            return;\n                        }\n\n                        this.depCount += 1;\n\n                        on(depMap, 'defined', bind(this, function (depExports) {\n                            if (this.undefed) {\n                                return;\n                            }\n                            this.defineDep(i, depExports);\n                            this.check();\n                        }));\n\n                        if (this.errback) {\n                            on(depMap, 'error', bind(this, this.errback));\n                        } else if (this.events.error) {\n                            // No direct errback on this module, but something\n                            // else is listening for errors, so be sure to\n                            // propagate the error correctly.\n                            on(depMap, 'error', bind(this, function(err) {\n                                this.emit('error', err);\n                            }));\n                        }\n                    }\n\n                    id = depMap.id;\n                    mod = registry[id];\n\n                    //Skip special modules like 'require', 'exports', 'module'\n                    //Also, don't call enable if it is already enabled,\n                    //important in circular dependency cases.\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\n                        context.enable(depMap, this);\n                    }\n                }));\n\n                //Enable each plugin that is used in\n                //a dependency\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\n                    var mod = getOwn(registry, pluginMap.id);\n                    if (mod && !mod.enabled) {\n                        context.enable(pluginMap, this);\n                    }\n                }));\n\n                this.enabling = false;\n\n                this.check();\n            },\n\n            on: function (name, cb) {\n                var cbs = this.events[name];\n                if (!cbs) {\n                    cbs = this.events[name] = [];\n                }\n                cbs.push(cb);\n            },\n\n            emit: function (name, evt) {\n                each(this.events[name], function (cb) {\n                    cb(evt);\n                });\n                if (name === 'error') {\n                    //Now that the error handler was triggered, remove\n                    //the listeners, since this broken Module instance\n                    //can stay around for a while in the registry.\n                    delete this.events[name];\n                }\n            }\n        };\n\n        function callGetModule(args) {\n            //Skip modules already defined.\n            if (!hasProp(defined, args[0])) {\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\n            }\n        }\n\n        function removeListener(node, func, name, ieName) {\n            //Favor detachEvent because of IE9\n            //issue, see attachEvent/addEventListener comment elsewhere\n            //in this file.\n            if (node.detachEvent && !isOpera) {\n                //Probably IE. If not it will throw an error, which will be\n                //useful to know.\n                if (ieName) {\n                    node.detachEvent(ieName, func);\n                }\n            } else {\n                node.removeEventListener(name, func, false);\n            }\n        }\n\n        /**\n         * Given an event from a script node, get the requirejs info from it,\n         * and then removes the event listeners on the node.\n         * @param {Event} evt\n         * @returns {Object}\n         */\n        function getScriptData(evt) {\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\n            //all old browsers will be supported, but this one was easy enough\n            //to support and still makes sense.\n            var node = evt.currentTarget || evt.srcElement;\n\n            //Remove the listeners once here.\n            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\n            removeListener(node, context.onScriptError, 'error');\n\n            return {\n                node: node,\n                id: node && node.getAttribute('data-requiremodule')\n            };\n        }\n\n        function intakeDefines() {\n            var args;\n\n            //Any defined modules in the global queue, intake them now.\n            takeGlobalQueue();\n\n            //Make sure any remaining defQueue items get properly processed.\n            while (defQueue.length) {\n                args = defQueue.shift();\n                if (args[0] === null) {\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' +\n                        args[args.length - 1]));\n                } else {\n                    //args are id, deps, factory. Should be normalized by the\n                    //define() function.\n                    callGetModule(args);\n                }\n            }\n            context.defQueueMap = {};\n        }\n\n        context = {\n            config: config,\n            contextName: contextName,\n            registry: registry,\n            defined: defined,\n            urlFetched: urlFetched,\n            defQueue: defQueue,\n            defQueueMap: {},\n            Module: Module,\n            makeModuleMap: makeModuleMap,\n            nextTick: req.nextTick,\n            onError: onError,\n\n            /**\n             * Set a configuration for the context.\n             * @param {Object} cfg config object to integrate.\n             */\n            configure: function (cfg) {\n                //Make sure the baseUrl ends in a slash.\n                if (cfg.baseUrl) {\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\n                        cfg.baseUrl += '/';\n                    }\n                }\n\n                //Save off the paths since they require special processing,\n                //they are additive.\n                var shim = config.shim,\n                    objs = {\n                        paths: true,\n                        bundles: true,\n                        config: true,\n                        map: true\n                    };\n\n                eachProp(cfg, function (value, prop) {\n                    if (objs[prop]) {\n                        if (!config[prop]) {\n                            config[prop] = {};\n                        }\n                        mixin(config[prop], value, true, true);\n                    } else {\n                        config[prop] = value;\n                    }\n                });\n\n                //Reverse map the bundles\n                if (cfg.bundles) {\n                    eachProp(cfg.bundles, function (value, prop) {\n                        each(value, function (v) {\n                            if (v !== prop) {\n                                bundlesMap[v] = prop;\n                            }\n                        });\n                    });\n                }\n\n                //Merge shim\n                if (cfg.shim) {\n                    eachProp(cfg.shim, function (value, id) {\n                        //Normalize the structure\n                        if (isArray(value)) {\n                            value = {\n                                deps: value\n                            };\n                        }\n                        if ((value.exports || value.init) && !value.exportsFn) {\n                            value.exportsFn = context.makeShimExports(value);\n                        }\n                        shim[id] = value;\n                    });\n                    config.shim = shim;\n                }\n\n                //Adjust packages if necessary.\n                if (cfg.packages) {\n                    each(cfg.packages, function (pkgObj) {\n                        var location, name;\n\n                        pkgObj = typeof pkgObj === 'string' ? {name: pkgObj} : pkgObj;\n\n                        name = pkgObj.name;\n                        location = pkgObj.location;\n                        if (location) {\n                            config.paths[name] = pkgObj.location;\n                        }\n\n                        //Save pointer to main module ID for pkg name.\n                        //Remove leading dot in main, so main paths are normalized,\n                        //and remove any trailing .js, since different package\n                        //envs have different conventions: some use a module name,\n                        //some use a file name.\n                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')\n                                     .replace(currDirRegExp, '')\n                                     .replace(jsSuffixRegExp, '');\n                    });\n                }\n\n                //If there are any \"waiting to execute\" modules in the registry,\n                //update the maps for them, since their info, like URLs to load,\n                //may have changed.\n                eachProp(registry, function (mod, id) {\n                    //If module already has init called, since it is too\n                    //late to modify them, and ignore unnormalized ones\n                    //since they are transient.\n                    if (!mod.inited && !mod.map.unnormalized) {\n                        mod.map = makeModuleMap(id, null, true);\n                    }\n                });\n\n                //If a deps array or a config callback is specified, then call\n                //require with those args. This is useful when require is defined as a\n                //config object before require.js is loaded.\n                if (cfg.deps || cfg.callback) {\n                    context.require(cfg.deps || [], cfg.callback);\n                }\n            },\n\n            makeShimExports: function (value) {\n                function fn() {\n                    var ret;\n                    if (value.init) {\n                        ret = value.init.apply(global, arguments);\n                    }\n                    return ret || (value.exports && getGlobal(value.exports));\n                }\n                return fn;\n            },\n\n            makeRequire: function (relMap, options) {\n                options = options || {};\n\n                function localRequire(deps, callback, errback) {\n                    var id, map, requireMod;\n\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\n                        callback.__requireJsBuild = true;\n                    }\n\n                    if (typeof deps === 'string') {\n                        if (isFunction(callback)) {\n                            //Invalid call\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\n                        }\n\n                        //If require|exports|module are requested, get the\n                        //value for them from the special handlers. Caveat:\n                        //this only works while module is being defined.\n                        if (relMap && hasProp(handlers, deps)) {\n                            return handlers[deps](registry[relMap.id]);\n                        }\n\n                        //Synchronous access to one module. If require.get is\n                        //available (as in the Node adapter), prefer that.\n                        if (req.get) {\n                            return req.get(context, deps, relMap, localRequire);\n                        }\n\n                        //Normalize module name, if it contains . or ..\n                        map = makeModuleMap(deps, relMap, false, true);\n                        id = map.id;\n\n                        if (!hasProp(defined, id)) {\n                            return onError(makeError('notloaded', 'Module name \"' +\n                                        id +\n                                        '\" has not been loaded yet for context: ' +\n                                        contextName +\n                                        (relMap ? '' : '. Use require([])')));\n                        }\n                        return defined[id];\n                    }\n\n                    //Grab defines waiting in the global queue.\n                    intakeDefines();\n\n                    //Mark all the dependencies as needing to be loaded.\n                    context.nextTick(function () {\n                        //Some defines could have been added since the\n                        //require call, collect them.\n                        intakeDefines();\n\n                        requireMod = getModule(makeModuleMap(null, relMap));\n\n                        //Store if map config should be applied to this require\n                        //call for dependencies.\n                        requireMod.skipMap = options.skipMap;\n\n                        requireMod.init(deps, callback, errback, {\n                            enabled: true\n                        });\n\n                        checkLoaded();\n                    });\n\n                    return localRequire;\n                }\n\n                mixin(localRequire, {\n                    isBrowser: isBrowser,\n\n                    /**\n                     * Converts a module name + .extension into an URL path.\n                     * *Requires* the use of a module name. It does not support using\n                     * plain URLs like nameToUrl.\n                     */\n                    toUrl: function (moduleNamePlusExt) {\n                        var ext,\n                            index = moduleNamePlusExt.lastIndexOf('.'),\n                            segment = moduleNamePlusExt.split('/')[0],\n                            isRelative = segment === '.' || segment === '..';\n\n                        //Have a file extension alias, and it is not the\n                        //dots from a relative path.\n                        if (index !== -1 && (!isRelative || index > 1)) {\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\n                        }\n\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\n                                                relMap && relMap.id, true), ext,  true);\n                    },\n\n                    defined: function (id) {\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\n                    },\n\n                    specified: function (id) {\n                        id = makeModuleMap(id, relMap, false, true).id;\n                        return hasProp(defined, id) || hasProp(registry, id);\n                    }\n                });\n\n                //Only allow undef on top level require calls\n                if (!relMap) {\n                    localRequire.undef = function (id) {\n                        //Bind any waiting define() calls to this context,\n                        //fix for #408\n                        takeGlobalQueue();\n\n                        var map = makeModuleMap(id, relMap, true),\n                            mod = getOwn(registry, id);\n\n                        mod.undefed = true;\n                        removeScript(id);\n\n                        delete defined[id];\n                        delete urlFetched[map.url];\n                        delete undefEvents[id];\n\n                        //Clean queued defines too. Go backwards\n                        //in array so that the splices do not\n                        //mess up the iteration.\n                        eachReverse(defQueue, function(args, i) {\n                            if (args[0] === id) {\n                                defQueue.splice(i, 1);\n                            }\n                        });\n                        delete context.defQueueMap[id];\n\n                        if (mod) {\n                            //Hold on to listeners in case the\n                            //module will be attempted to be reloaded\n                            //using a different config.\n                            if (mod.events.defined) {\n                                undefEvents[id] = mod.events;\n                            }\n\n                            cleanRegistry(id);\n                        }\n                    };\n                }\n\n                return localRequire;\n            },\n\n            /**\n             * Called to enable a module if it is still in the registry\n             * awaiting enablement. A second arg, parent, the parent module,\n             * is passed in for context, when this method is overridden by\n             * the optimizer. Not shown here to keep code compact.\n             */\n            enable: function (depMap) {\n                var mod = getOwn(registry, depMap.id);\n                if (mod) {\n                    getModule(depMap).enable();\n                }\n            },\n\n            /**\n             * Internal method used by environment adapters to complete a load event.\n             * A load event could be a script load or just a load pass from a synchronous\n             * load call.\n             * @param {String} moduleName the name of the module to potentially complete.\n             */\n            completeLoad: function (moduleName) {\n                var found, args, mod,\n                    shim = getOwn(config.shim, moduleName) || {},\n                    shExports = shim.exports;\n\n                takeGlobalQueue();\n\n                while (defQueue.length) {\n                    args = defQueue.shift();\n                    if (args[0] === null) {\n                        args[0] = moduleName;\n                        //If already found an anonymous module and bound it\n                        //to this name, then this is some other anon module\n                        //waiting for its completeLoad to fire.\n                        if (found) {\n                            break;\n                        }\n                        found = true;\n                    } else if (args[0] === moduleName) {\n                        //Found matching define call for this script!\n                        found = true;\n                    }\n\n                    callGetModule(args);\n                }\n                context.defQueueMap = {};\n\n                //Do this after the cycle of callGetModule in case the result\n                //of those calls/init calls changes the registry.\n                mod = getOwn(registry, moduleName);\n\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\n                        if (hasPathFallback(moduleName)) {\n                            return;\n                        } else {\n                            return onError(makeError('nodefine',\n                                             'No define call for ' + moduleName,\n                                             null,\n                                             [moduleName]));\n                        }\n                    } else {\n                        //A script that does not call define(), so just simulate\n                        //the call for it.\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\n                    }\n                }\n\n                checkLoaded();\n            },\n\n            /**\n             * Converts a module name to a file path. Supports cases where\n             * moduleName may actually be just an URL.\n             * Note that it **does not** call normalize on the moduleName,\n             * it is assumed to have already been normalized. This is an\n             * internal API, not a public one. Use toUrl for the public API.\n             */\n            nameToUrl: function (moduleName, ext, skipExt) {\n                var paths, syms, i, parentModule, url,\n                    parentPath, bundleId,\n                    pkgMain = getOwn(config.pkgs, moduleName);\n\n                if (pkgMain) {\n                    moduleName = pkgMain;\n                }\n\n                bundleId = getOwn(bundlesMap, moduleName);\n\n                if (bundleId) {\n                    return context.nameToUrl(bundleId, ext, skipExt);\n                }\n\n                //If a colon is in the URL, it indicates a protocol is used and it is just\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\n                //or ends with .js, then assume the user meant to use an url and not a module id.\n                //The slash is important for protocol-less URLs as well as full paths.\n                if (req.jsExtRegExp.test(moduleName)) {\n                    //Just a plain path, not module name lookup, so just return it.\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\n                    //an extension, this method probably needs to be reworked.\n                    url = moduleName + (ext || '');\n                } else {\n                    //A module that needs to be converted to a path.\n                    paths = config.paths;\n\n                    syms = moduleName.split('/');\n                    //For each module name segment, see if there is a path\n                    //registered for it. Start with most specific name\n                    //and work up from it.\n                    for (i = syms.length; i > 0; i -= 1) {\n                        parentModule = syms.slice(0, i).join('/');\n\n                        parentPath = getOwn(paths, parentModule);\n                        if (parentPath) {\n                            //If an array, it means there are a few choices,\n                            //Choose the one that is desired\n                            if (isArray(parentPath)) {\n                                parentPath = parentPath[0];\n                            }\n                            syms.splice(0, i, parentPath);\n                            break;\n                        }\n                    }\n\n                    //Join the path parts together, then figure out if baseUrl is needed.\n                    url = syms.join('/');\n                    url += (ext || (/^data\\:|\\?/.test(url) || skipExt ? '' : '.js'));\n                    url = (url.charAt(0) === '/' || url.match(/^[\\w\\+\\.\\-]+:/) ? '' : config.baseUrl) + url;\n                }\n\n                return config.urlArgs ? url +\n                                        ((url.indexOf('?') === -1 ? '?' : '&') +\n                                         config.urlArgs) : url;\n            },\n\n            //Delegates to req.load. Broken out as a separate function to\n            //allow overriding in the optimizer.\n            load: function (id, url) {\n                req.load(context, id, url);\n            },\n\n            /**\n             * Executes a module callback function. Broken out as a separate function\n             * solely to allow the build system to sequence the files in the built\n             * layer in the right sequence.\n             *\n             * @private\n             */\n            execCb: function (name, callback, args, exports) {\n                return callback.apply(exports, args);\n            },\n\n            /**\n             * callback for script loads, used to check status of loading.\n             *\n             * @param {Event} evt the event from the browser for the script\n             * that was loaded.\n             */\n            onScriptLoad: function (evt) {\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\n                //all old browsers will be supported, but this one was easy enough\n                //to support and still makes sense.\n                if (evt.type === 'load' ||\n                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\n                    //Reset interactive script so a script node is not held onto for\n                    //to long.\n                    interactiveScript = null;\n\n                    //Pull out the name of the module and the context.\n                    var data = getScriptData(evt);\n                    context.completeLoad(data.id);\n                }\n            },\n\n            /**\n             * Callback for script errors.\n             */\n            onScriptError: function (evt) {\n                var data = getScriptData(evt);\n                if (!hasPathFallback(data.id)) {\n                    var parents = [];\n                    eachProp(registry, function(value, key) {\n                        if (key.indexOf('_@r') !== 0) {\n                            each(value.depMaps, function(depMap) {\n                                if (depMap.id === data.id) {\n                                    parents.push(key);\n                                }\n                                return true;\n                            });\n                        }\n                    });\n                    return onError(makeError('scripterror', 'Script error for \"' + data.id +\n                                             (parents.length ?\n                                             '\", needed by: ' + parents.join(', ') :\n                                             '\"'), evt, [data.id]));\n                }\n            }\n        };\n\n        context.require = context.makeRequire();\n        return context;\n    }\n\n    /**\n     * Main entry point.\n     *\n     * If the only argument to require is a string, then the module that\n     * is represented by that string is fetched for the appropriate context.\n     *\n     * If the first argument is an array, then it will be treated as an array\n     * of dependency string names to fetch. An optional function callback can\n     * be specified to execute when all of those dependencies are available.\n     *\n     * Make a local req variable to help Caja compliance (it assumes things\n     * on a require that are not standardized), and to give a short\n     * name for minification/local scope use.\n     */\n    req = requirejs = function (deps, callback, errback, optional) {\n\n        //Find the right context, use default\n        var context, config,\n            contextName = defContextName;\n\n        // Determine if have config object in the call.\n        if (!isArray(deps) && typeof deps !== 'string') {\n            // deps is a config object\n            config = deps;\n            if (isArray(callback)) {\n                // Adjust args if there are dependencies\n                deps = callback;\n                callback = errback;\n                errback = optional;\n            } else {\n                deps = [];\n            }\n        }\n\n        if (config && config.context) {\n            contextName = config.context;\n        }\n\n        context = getOwn(contexts, contextName);\n        if (!context) {\n            context = contexts[contextName] = req.s.newContext(contextName);\n        }\n\n        if (config) {\n            context.configure(config);\n        }\n\n        return context.require(deps, callback, errback);\n    };\n\n    /**\n     * Support require.config() to make it easier to cooperate with other\n     * AMD loaders on globally agreed names.\n     */\n    req.config = function (config) {\n        return req(config);\n    };\n\n    /**\n     * Execute something after the current tick\n     * of the event loop. Override for other envs\n     * that have a better solution than setTimeout.\n     * @param  {Function} fn function to execute later.\n     */\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\n        setTimeout(fn, 4);\n    } : function (fn) { fn(); };\n\n    /**\n     * Export require as a global, but only if it does not already exist.\n     */\n    if (!require) {\n        require = req;\n    }\n\n    req.version = version;\n\n    //Used to filter out dependencies that are already paths.\n    req.jsExtRegExp = /^\\/|:|\\?|\\.js$/;\n    req.isBrowser = isBrowser;\n    s = req.s = {\n        contexts: contexts,\n        newContext: newContext\n    };\n\n    //Create default context.\n    req({});\n\n    //Exports some context-sensitive methods on global require.\n    each([\n        'toUrl',\n        'undef',\n        'defined',\n        'specified'\n    ], function (prop) {\n        //Reference from contexts instead of early binding to default context,\n        //so that during builds, the latest instance of the default context\n        //with its config gets used.\n        req[prop] = function () {\n            var ctx = contexts[defContextName];\n            return ctx.require[prop].apply(ctx, arguments);\n        };\n    });\n\n    if (isBrowser) {\n        head = s.head = document.getElementsByTagName('head')[0];\n        //If BASE tag is in play, using appendChild is a problem for IE6.\n        //When that browser dies, this can be removed. Details in this jQuery bug:\n        //http://dev.jquery.com/ticket/2709\n        baseElement = document.getElementsByTagName('base')[0];\n        if (baseElement) {\n            head = s.head = baseElement.parentNode;\n        }\n    }\n\n    /**\n     * Any errors that require explicitly generates will be passed to this\n     * function. Intercept/override it if you want custom error handling.\n     * @param {Error} err the error object.\n     */\n    req.onError = defaultOnError;\n\n    /**\n     * Creates the node for the load command. Only used in browser envs.\n     */\n    req.createNode = function (config, moduleName, url) {\n        var node = config.xhtml ?\n                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\n                document.createElement('script');\n        node.type = config.scriptType || 'text/javascript';\n        node.charset = 'utf-8';\n        node.async = true;\n        return node;\n    };\n\n    /**\n     * Does the request to load a module for the browser case.\n     * Make this a separate function to allow other environments\n     * to override it.\n     *\n     * @param {Object} context the require context to find state.\n     * @param {String} moduleName the name of the module.\n     * @param {Object} url the URL to the module.\n     */\n    req.load = function (context, moduleName, url) {\n        var config = (context && context.config) || {},\n            node;\n        if (isBrowser) {\n            //In the browser so use a script tag\n            node = req.createNode(config, moduleName, url);\n            if (config.onNodeCreated) {\n                config.onNodeCreated(node, config, moduleName, url);\n            }\n\n            node.setAttribute('data-requirecontext', context.contextName);\n            node.setAttribute('data-requiremodule', moduleName);\n\n            //Set up load listener. Test attachEvent first because IE9 has\n            //a subtle issue in its addEventListener and script onload firings\n            //that do not match the behavior of all other browsers with\n            //addEventListener support, which fire the onload event for a\n            //script right after the script execution. See:\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\n            //script execution mode.\n            if (node.attachEvent &&\n                    //Check if node.attachEvent is artificially added by custom script or\n                    //natively supported by browser\n                    //read https://github.com/jrburke/requirejs/issues/187\n                    //if we can NOT find [native code] then it must NOT natively supported.\n                    //in IE8, node.attachEvent does not have toString()\n                    //Note the test for \"[native code\" with no closing brace, see:\n                    //https://github.com/jrburke/requirejs/issues/273\n                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\n                    !isOpera) {\n                //Probably IE. IE (at least 6-8) do not fire\n                //script onload right after executing the script, so\n                //we cannot tie the anonymous define call to a name.\n                //However, IE reports the script as being in 'interactive'\n                //readyState at the time of the define call.\n                useInteractive = true;\n\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\n                //It would be great to add an error handler here to catch\n                //404s in IE9+. However, onreadystatechange will fire before\n                //the error handler, so that does not help. If addEventListener\n                //is used, then IE will fire error before load, but we cannot\n                //use that pathway given the connect.microsoft.com issue\n                //mentioned above about not doing the 'script execute,\n                //then fire the script load event listener before execute\n                //next script' that other browsers do.\n                //Best hope: IE10 fixes the issues,\n                //and then destroys all installs of IE 6-9.\n                //node.attachEvent('onerror', context.onScriptError);\n            } else {\n                node.addEventListener('load', context.onScriptLoad, false);\n                node.addEventListener('error', context.onScriptError, false);\n            }\n            node.src = url;\n\n            //For some cache cases in IE 6-8, the script executes before the end\n            //of the appendChild execution, so to tie an anonymous define\n            //call to the module name (which is stored on the node), hold on\n            //to a reference to this node, but clear after the DOM insertion.\n            currentlyAddingScript = node;\n            if (baseElement) {\n                head.insertBefore(node, baseElement);\n            } else {\n                head.appendChild(node);\n            }\n            currentlyAddingScript = null;\n\n            return node;\n        } else if (isWebWorker) {\n            try {\n                //In a web worker, use importScripts. This is not a very\n                //efficient use of importScripts, importScripts will block until\n                //its script is downloaded and evaluated. However, if web workers\n                //are in play, the expectation is that a build has been done so\n                //that only one script needs to be loaded anyway. This may need\n                //to be reevaluated if other use cases become common.\n                importScripts(url);\n\n                //Account for anonymous modules\n                context.completeLoad(moduleName);\n            } catch (e) {\n                context.onError(makeError('importscripts',\n                                'importScripts failed for ' +\n                                    moduleName + ' at ' + url,\n                                e,\n                                [moduleName]));\n            }\n        }\n    };\n\n    function getInteractiveScript() {\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\n            return interactiveScript;\n        }\n\n        eachReverse(scripts(), function (script) {\n            if (script.readyState === 'interactive') {\n                return (interactiveScript = script);\n            }\n        });\n        return interactiveScript;\n    }\n\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\n    if (isBrowser && !cfg.skipDataMain) {\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\n        eachReverse(scripts(), function (script) {\n            //Set the 'head' where we can append children by\n            //using the script's parent.\n            if (!head) {\n                head = script.parentNode;\n            }\n\n            //Look for a data-main attribute to set main script for the page\n            //to load. If it is there, the path to data main becomes the\n            //baseUrl, if it is not already set.\n            dataMain = script.getAttribute('data-main');\n            if (dataMain) {\n                //Preserve dataMain in case it is a path (i.e. contains '?')\n                mainScript = dataMain;\n\n                //Set final baseUrl if there is not already an explicit one.\n                if (!cfg.baseUrl) {\n                    //Pull off the directory of data-main for use as the\n                    //baseUrl.\n                    src = mainScript.split('/');\n                    mainScript = src.pop();\n                    subPath = src.length ? src.join('/')  + '/' : './';\n\n                    cfg.baseUrl = subPath;\n                }\n\n                //Strip off any trailing .js since mainScript is now\n                //like a module name.\n                mainScript = mainScript.replace(jsSuffixRegExp, '');\n\n                //If mainScript is still a path, fall back to dataMain\n                if (req.jsExtRegExp.test(mainScript)) {\n                    mainScript = dataMain;\n                }\n\n                //Put the data-main script in the files to load.\n                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\n\n                return true;\n            }\n        });\n    }\n\n    /**\n     * The function that handles definitions of modules. Differs from\n     * require() in that a string for the module should be the first argument,\n     * and the function to execute after dependencies are loaded should\n     * return a value to define the module corresponding to the first argument's\n     * name.\n     */\n    define = function (name, deps, callback) {\n        var node, context;\n\n        //Allow for anonymous modules\n        if (typeof name !== 'string') {\n            //Adjust args appropriately\n            callback = deps;\n            deps = name;\n            name = null;\n        }\n\n        //This module may not have dependencies\n        if (!isArray(deps)) {\n            callback = deps;\n            deps = null;\n        }\n\n        //If no name, and callback is a function, then figure out if it a\n        //CommonJS thing with dependencies.\n        if (!deps && isFunction(callback)) {\n            deps = [];\n            //Remove comments from the callback string,\n            //look for require calls, and pull them into the dependencies,\n            //but only if there are function args.\n            if (callback.length) {\n                callback\n                    .toString()\n                    .replace(commentRegExp, '')\n                    .replace(cjsRequireRegExp, function (match, dep) {\n                        deps.push(dep);\n                    });\n\n                //May be a CommonJS thing even without require calls, but still\n                //could use exports, and module. Avoid doing exports and module\n                //work though if it just needs require.\n                //REQUIRES the function to expect the CommonJS variables in the\n                //order listed below.\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\n            }\n        }\n\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\n        //work.\n        if (useInteractive) {\n            node = currentlyAddingScript || getInteractiveScript();\n            if (node) {\n                if (!name) {\n                    name = node.getAttribute('data-requiremodule');\n                }\n                context = contexts[node.getAttribute('data-requirecontext')];\n            }\n        }\n\n        //Always save off evaluating the def call until the script onload handler.\n        //This allows multiple modules to be in a file without prematurely\n        //tracing dependencies, and allows for anonymous module support,\n        //where the module name is not known until the script onload event\n        //occurs. If no context, use the global queue, and get it processed\n        //in the onscript load callback.\n        if (context) {\n            context.defQueue.push([name, deps, callback]);\n            context.defQueueMap[name] = true;\n        } else {\n            globalDefQueue.push([name, deps, callback]);\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n\n    /**\n     * Executes the text. Normally just uses eval, but can be modified\n     * to use a better, environment-specific call. Only used for transpiling\n     * loader plugins, not for plain JS modules.\n     * @param {String} text the text to execute/evaluate.\n     */\n    req.exec = function (text) {\n        /*jslint evil: true */\n        return eval(text);\n    };\n\n    //Set up with config info.\n    req(cfg);\n}(this));\n(function() {\n    var module = { };\n\n    module.load = function load(name, parentRequire, onload, config) {\n        /* Predefined in the bundle */\n        var predef = name + \"_text\";\n        if (parentRequire.specified(predef)) {\n            parentRequire([predef], function(value) {\n                onload(value);\n            });\n            return;\n        }\n\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", parentRequire.toUrl(name), true);\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == 4) {\n                if (xhr.status == 200) {\n                    onload(xhr.responseText);\n                } else if (xhr.statusText) {\n                    onload.error(new Error(name + \": \" + xhr.statusText));\n                } else {\n                    onload.error(new Error(name + \": \" + xhr.status + \" error\"));\n                }\n            }\n        };\n        xhr.overrideMimeType(\"text/plain\");\n        xhr.send();\n    };\n\n    /* Define this under two names, one of which is more webpack compatible */\n    define('raw', module); // eslint-disable-line no-undef\n    define('data', module); // eslint-disable-line no-undef\n}());\n"]}