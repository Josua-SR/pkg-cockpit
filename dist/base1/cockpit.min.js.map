{"version":3,"sources":["dist/base1/cockpit.js"],"names":["url_root","window","localStorage","getItem","e","mock","cockpit","event_mixin","debugging","sessionStorage","in_array","array","val","length","i","is_array","it","Object","prototype","toString","call","is_function","x","is_object","is_plain_object","is_negative","n","extend","to","j","len","key","from","arguments","undefined","invoke_functions","functions","self","args","apply","default_transport","public_transport","reload_after_disconnect","expect_disconnect","init_callback","default_host","process_hints","incoming_filters","outgoing_filters","transport_origin","location","origin","protocol","hostname","port","array_from_raw_string","str","constructor","data","Array","charCodeAt","array_to_raw_string","String","fromCharCode","uint6_to_b64","base64_encode","btoa","ArrayBuffer","Uint8Array","mod3","uint24","substr","b64_to_uint6","base64_decode","atob","ilen","eq","olen","mod4","oi","ii","addEventListener","transport_debug","console","debug","obj","handlers","defineProperties","enumerable","value","type","handler","push","removeEventListener","dispatchEvent","event","slice","document","createEvent","initCustomEvent","unshift","calculate_application","path","pathname","_url_root","indexOf","replace","split","calculate_url","suffix","window_loc","url","prefix","host","join_data","buffers","binary","join","k","total","set","ParentWebSocket","parent","this","readyState","receive","source","byteLength","onclose","onmessage","send","message","postMessage","close","setTimeout","onopen","parse_channel","pos","channel","warn","subarray","substring","Transport","application","last_channel","channel_seed","last_transport","ws","check_health_timer","ignore_health_check","got_message","name","options","ex","ws_loc","WebSocket","MozWebSocket","error","setInterval","log","problem","control_cbs","message_cbs","waiting_for_init","ready","ready_for_channels","binaryType","reload","dispatch_data","arg","payload","control","JSON","parse","process_control","process_message","command","clearInterval","ows","chan","next_channel","process_init","version","csrf_token","func","send_data","send_message","output","buffer","send_control","hint","stringify","register","control_cb","message_cb","unregister","ensure_transport","callback","transport","Channel","closed","waiting","received_done","sent_done","id","queue","valid","on_message","on_close","resolve","on_ready","on_control","done","send_payload","trans","item","shift","wait","defer","reject","promise","then","squash","consumed","block","resolve_path_dots","parts","out","part","pop","factory","event_target","manifests","Utf8TextEncoder","encoding","encode","string","unescape","encodeURIComponent","Utf8TextDecoder","fatal","decode","stream","beg","p","ok","decodeURIComponent","escape","utf8_encoder","utf8_decoder","kill","group","inject","filter","uri","later_queue","later_timeout","later_drain","later_invoke","promise_then","state","fulfilled","rejected","updated","result","Deferred","pending","status","schedule_process_queue","create_promise","Promise","target","catch_","finally_","handle_callback","fail","always","progress","state_","process_queue","fn","deferred","process_scheduled","pur","values","deferred_resolve","deferred_reject","deferred_notify","callbacks","notify","Error","prep_promise","resolved","is_resolved","callback_output","when","all","promises","counter","results","forEach","fmt_re","format","fmt","m","y","format_number","number","toLocaleString","language","toFixed","maximumSignificantDigits","minimumSignificantDigits","format_units","suffixes","factor","separate","quotient","keys","divisor","sort","reverse","Math","pow","string_representation","ret","byte_suffixes","1000","1024","format_bytes","get_byte_units","guide_value","unit","index","units","selected","byte_sec_suffixes","format_bytes_per_sec","bit_suffixes","format_bits_per_sec","StorageHelper","storageName","storage","prefixedKey","both","setItem","removeItem","clear","full","lookup_storage","win","StorageCache","org_key","provider","consumer","trigger","last","claimed","floor","random","ev","initStorageEvent","claim","claiming","changed","unclaim","current_value","parseInt","newValue","oldValue","new_value","cache","SeriesSink","interval","identifier","fetch_callback","limit","setup_index","count","head","tail","search","idx","low","high","mid","fetch","end","for_walking","stash","load","at","entry","b","eb","en","fetches","items","max","min","process","mapping","remove","num","splice","next","registered","_register","grid","gdata","links","jlen","klen","row","map","f","t","input","remove_sink","series","unique","SeriesGrid","rows","sinks","suppress","walking","offset","add","sink","cb","sync","move_internal","stop_walking","move","now","Date","walk","start","BasicError","logout","disconnect","drop_privileges","info","system","the_user","user","dfd","dbus","bus","reply","Id","v","Name","full_name","Full","groups","Groups","home","Home","shell","Shell","classList","stopPropagation","last_loc","get_window_location_hash","href","Location","decode_path","pre_parts","concat","with_root","opt","query","push_option","first","hasOwnProperty","href_for_go_or_replace","go","hash","writable","defineProperty","get","jump","hiddenProp","hiddenHint","visibility_change","hidden","mozHidden","msHidden","webkitHidden","ProcessError","exit_status","exit_signal","_","trim","spawn_debug","spawn","bind","script","dbus_debug","DBusError","arg1","DBusCache","meta","connect","iface","emit","props","copy","update","lookup","each","ifa","DBusProxy","client","defined","waits","$","expando","define","methods","toLowerCase","properties","config","prop","flags","variant","signal","subscribe","interface","waited","watch","DBusProxies","path_namespace","match","proxy","DBusClient","track","owner","unique_name","subscribers","published","calls","constructors","*","ensure_cache","matches","member","arg0","msg","subscription","handle","close_perform","outstanding","last_cookie","method","method_call","rule","add-match","prev","remove-match","unwatch","unknown_interface","unknown_method","not_implemented","invoke","object","cookie","publish","unpublish","Constructor","proxies","shared_dbus","internal","session","shared","old_close","byte_array","file","read","modify","base_channel_options","syntax","read_promise","read_channel","opts","try_read","content_parts","fire_watch_callbacks","content","tag","replace_channel","new_content","expected_tag","file_content","batch","initial_content","initial_tag","new_tag","read_then_update","watch_callbacks","n_watch_callbacks","watch_channel","watch_tag","ensure_watch_channel","message_string","po_data","po_plural","locale","po","lang","header","translate","what","w","wlen","tlen","list","tasks","el","querySelectorAll","getAttribute","textContent","gettext","setAttribute","removeAttribute","context","translated","imply","ngettext","string1","stringN","noop","HttpError","reason","valueOf","http_debug","find_header","headers","HttpClient","endpoint","active_requests","unix","isNaN","address","capabilities","param","request","req","params","body","streamer","responsers","resp","response","post","reqs","http","authority","Permission","allowed","admin","decide","permission","timestamp","getTime","MetricsChannel","options_list","channels","following","fetch_for_series","archives","follow","transfer","is_archive","archive_source","close_options","data_len","last_len","dataj","dataj_len","lastj","lastj_len","message_len","drain","metrics","metric","","metrics_path_names","instances","instance","archive_options_list","oops","old_onerror","onerror","line","self_module_id","scripts","src","lastIndexOf","amd"],"mappings":"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","sourcesContent":["/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar url_root;\n\ntry {\n    // Sometimes this throws a SecurityError such as during testing\n    url_root = window.localStorage.getItem('url-root');\n} catch(e) { }\n\nvar mock = mock || { };\n\n(function() {\n\"use strict\";\n\nvar cockpit = { };\nevent_mixin(cockpit, { });\n\nif (typeof window.debugging === \"undefined\") {\n    try {\n        // Sometimes this throws a SecurityError such as during testing\n        window.debugging = window.sessionStorage[\"debugging\"] ||\n                           window.localStorage[\"debugging\"];\n    } catch(e) { }\n}\n\nfunction in_array(array, val) {\n    var length = array.length;\n    for (var i = 0; i < length; i++) {\n        if (val === array[i])\n            return true;\n    }\n    return false;\n}\n\n/* HACK: http://web.mit.edu/jwalden/www/isArray.html */\nfunction is_array(it) {\n    return Object.prototype.toString.call(it) === '[object Array]';\n}\n\nfunction is_function(x) {\n    return typeof x === 'function';\n}\n\nfunction is_object(x) {\n    return x !== null && typeof x === 'object';\n}\n\nfunction is_plain_object(x) {\n    return is_object(x) && Object.prototype.toString.call(x) === '[object Object]';\n}\n\n/* Also works for negative zero */\nfunction is_negative(n) {\n    return ((n = +n) || 1 / n) < 0;\n}\n\n/* Object.assign() workalike */\nfunction extend(to/* , from ... */) {\n    var j, len, key, from;\n    for (j = 1, len = arguments.length; j < len; j++) {\n        from = arguments[j];\n        if (from) {\n            for (key in from) {\n                if (from[key] !== undefined)\n                    to[key] = from[key];\n            }\n        }\n    }\n    return to;\n}\n\nfunction invoke_functions(functions, self, args) {\n    var length = functions ? functions.length : 0;\n    for (var i = 0; i < length; i++) {\n        if (functions[i])\n            functions[i].apply(self, args);\n    }\n}\n\n/* -------------------------------------------------------------------------\n * Channels\n *\n * Public: http://cockpit-project.org/guide/latest/api-base1.html\n */\n\nvar default_transport = null;\nvar public_transport = null;\nvar reload_after_disconnect = false;\nvar expect_disconnect = false;\nvar init_callback = null;\nvar default_host = null;\nvar process_hints = null;\nvar incoming_filters = null;\nvar outgoing_filters = null;\n\nvar transport_origin = window.location.origin;\n\nif (!transport_origin) {\n    transport_origin = window.location.protocol + \"//\" + window.location.hostname +\n        (window.location.port ? ':' + window.location.port: '');\n}\n\nfunction array_from_raw_string(str, constructor) {\n    var length = str.length;\n    /* jshint -W056 */\n    var data = new (constructor || Array)(length);\n    for (var i = 0; i < length; i++)\n        data[i] = str.charCodeAt(i) & 0xFF;\n    return data;\n}\n\nfunction array_to_raw_string(data) {\n    var length = data.length, str = \"\";\n    for (var i = 0; i < length; i++)\n        str += String.fromCharCode(data[i]);\n    return str;\n}\n\n/*\n * These are the polyfills from Mozilla. It's pretty nasty that\n * these weren't in the typed array standardization.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n */\n\nfunction uint6_to_b64 (x) {\n    return x < 26 ? x + 65 : x < 52 ? x + 71 : x < 62 ? x - 4 : x === 62 ? 43 : x === 63 ? 47 : 65;\n}\n\nfunction base64_encode(data) {\n    if (typeof data === \"string\")\n        return window.btoa(data);\n    /* For when the caller has chosen to use ArrayBuffer */\n    if (data instanceof window.ArrayBuffer)\n        data = new window.Uint8Array(data);\n    var length = data.length, mod3 = 2, str = \"\";\n    for (var uint24 = 0, i = 0; i < length; i++) {\n        mod3 = i % 3;\n        uint24 |= data[i] << (16 >>> mod3 & 24);\n        if (mod3 === 2 || length - i === 1) {\n            str += String.fromCharCode(uint6_to_b64(uint24 >>> 18 & 63),\n                                       uint6_to_b64(uint24 >>> 12 & 63),\n                                       uint6_to_b64(uint24 >>> 6 & 63),\n                                       uint6_to_b64(uint24 & 63));\n            uint24 = 0;\n        }\n    }\n\n    return str.substr(0, str.length - 2 + mod3) + (mod3 === 2 ? '' : mod3 === 1 ? '=' : '==');\n}\n\nfunction b64_to_uint6 (x) {\n    return x > 64 && x < 91 ? x - 65 : x > 96 && x < 123 ?\n        x - 71 : x > 47 && x < 58 ? x + 4 : x === 43 ? 62 : x === 47 ? 63 : 0;\n}\n\nfunction base64_decode(str, constructor) {\n    if (constructor === String)\n        return window.atob(str);\n    var ilen = str.length;\n    for (var eq = 0; eq < 3; eq++) {\n        if (str[ilen - (eq + 1)] != '=')\n            break;\n    }\n    var olen = (ilen * 3 + 1 >> 2) - eq;\n    /* jshint -W056 */\n    var data = new (constructor || Array)(olen);\n    for (var mod3, mod4, uint24 = 0, oi = 0, ii = 0; ii < ilen; ii++) {\n        mod4 = ii & 3;\n        uint24 |= b64_to_uint6(str.charCodeAt(ii)) << 18 - 6 * mod4;\n        if (mod4 === 3 || ilen - ii === 1) {\n            for (mod3 = 0; mod3 < 3 && oi < olen; mod3++, oi++)\n                data[oi] = uint24 >>> (16 >>> mod3 & 24) & 255;\n            uint24 = 0;\n        }\n    }\n    return data;\n}\n\nwindow.addEventListener('beforeunload', function() {\n    expect_disconnect = true;\n}, false);\n\nfunction transport_debug() {\n    if (window.debugging == \"all\" || window.debugging == \"channel\")\n        console.debug.apply(console, arguments);\n}\n\n/*\n * Extends an object to have the standard DOM style addEventListener\n * removeEventListener and dispatchEvent methods. The dispatchEvent\n * method has the additional capability to create a new event from a type\n * string and arguments.\n */\nfunction event_mixin(obj, handlers) {\n    Object.defineProperties(obj, {\n        addEventListener: {\n            enumerable: false,\n            value: function addEventListener(type, handler) {\n                if (handlers[type] === undefined)\n                    handlers[type] = [ ];\n                handlers[type].push(handler);\n            }\n        },\n        removeEventListener: {\n            enumerable: false,\n            value: function removeEventListener(type, handler) {\n                var length = handlers[type] ? handlers[type].length : 0;\n                for (var i = 0; i < length; i++) {\n                    if (handlers[type][i] === handler) {\n                        handlers[type][i] = null;\n                        break;\n                    }\n                }\n            }\n        },\n        dispatchEvent: {\n            enumerable: false,\n            value: function dispatchEvent(event) {\n                var type, args;\n                if (typeof event === \"string\") {\n                    type = event;\n                    args = Array.prototype.slice.call(arguments, 1);\n                    event = document.createEvent(\"CustomEvent\");\n                    if (arguments.length == 2)\n                        event.initCustomEvent(type, false, false, arguments[1]);\n                    else if (arguments.length > 2)\n                        event.initCustomEvent(type, false, false, args);\n                    else\n                        event.initCustomEvent(type, false, false, null);\n                    args.unshift(event);\n                } else {\n                    type = event.type;\n                    args = arguments;\n                }\n                if (is_function(obj['on' + type]))\n                    obj['on' + type].apply(obj, args);\n                invoke_functions(handlers[type], obj, args);\n            }\n        }\n    });\n}\n\nfunction calculate_application() {\n    var path = window.location.pathname || \"/\";\n    var _url_root = url_root;\n    if (window.mock && window.mock.pathname)\n        path = window.mock.pathname;\n    if (window.mock && window.mock.url_root)\n        _url_root = window.mock.url_root;\n\n    if (_url_root && path.indexOf('/' + _url_root) === 0)\n        path = path.replace('/' + _url_root, '') || '/';\n\n    if (path.indexOf(\"/cockpit/\") !== 0 && path.indexOf(\"/cockpit+\") !== 0) {\n        if (path.indexOf(\"/=\") === 0)\n            path = \"/cockpit+\" + path.split(\"/\")[1];\n        else\n            path = \"/cockpit\";\n    }\n\n    return path.split(\"/\")[1];\n}\n\nfunction calculate_url(suffix) {\n    if (!suffix)\n        suffix = \"socket\";\n    var window_loc = window.location.toString();\n    var _url_root = url_root;\n\n    if (window.mock && window.mock.url)\n        return window.mock.url;\n    if (window.mock && window.mock.url_root)\n        _url_root = window.mock.url_root;\n\n    var prefix = calculate_application();\n    if (_url_root)\n        prefix = _url_root + \"/\" + prefix;\n\n    if (window_loc.indexOf('http:') === 0) {\n        return \"ws://\" + window.location.host + \"/\" + prefix + \"/\" + suffix;\n    } else if (window_loc.indexOf('https:') === 0) {\n        return \"wss://\" + window.location.host + \"/\" + prefix + \"/\" + suffix;\n    } else {\n        transport_debug(\"Cockpit must be used over http or https\");\n        return null;\n    }\n}\n\nfunction join_data(buffers, binary) {\n    if (!binary)\n        return buffers.join(\"\");\n\n    var data;\n    var j, k, total = 0;\n    var i, length = buffers.length;\n    for (i = 0; i < length; i++)\n        total += buffers[i].length;\n\n    if (window.Uint8Array)\n        data = new window.Uint8Array(total);\n    else\n        data = new Array(total);\n\n    if (data.set) {\n        for (j = 0, i = 0; i < length; i++) {\n            data.set(buffers[i], j);\n            j += buffers[i].length;\n        }\n    } else {\n        for (j = 0, i = 0; i < length; i++) {\n            for (k = 0; k < buffers[i].length; k++)\n                data[i + j] = buffers[i][k];\n            j += buffers[i].length;\n        }\n    }\n\n    return data;\n}\n\n/*\n * A WebSocket that connects to parent frame. The mechanism\n * for doing this will eventually be documented publicly,\n * but for now:\n *\n *  * Forward raw cockpit1 string protocol messages via window.postMessage\n *  * Listen for cockpit1 string protocol messages via window.onmessage\n *  * Never accept or send messages to another origin\n *  * An empty string message means \"close\" (not completely used yet)\n */\nfunction ParentWebSocket(parent) {\n    var self = this;\n    self.readyState = 0;\n\n    window.addEventListener(\"message\", function receive(event) {\n        if (event.origin !== transport_origin || event.source !== parent)\n            return;\n        var data = event.data;\n        if (data === undefined || (data.length === undefined && data.byteLength === undefined))\n            return;\n        if (data.length === 0) {\n            self.readyState = 3;\n            self.onclose();\n        } else {\n            self.onmessage(event);\n        }\n    }, false);\n\n    self.send = function send(message) {\n        parent.postMessage(message, transport_origin);\n    };\n\n    self.close = function close() {\n        self.readyState = 3;\n        parent.postMessage(\"\", transport_origin);\n        self.onclose();\n    };\n\n    window.setTimeout(function() {\n        self.readyState = 1;\n        self.onopen();\n    }, 0);\n}\n\nfunction parse_channel(data) {\n    var binary, length, pos, channel;\n\n    /* A binary message, split out the channel */\n    if (data instanceof window.ArrayBuffer) {\n        binary = new window.Uint8Array(data);\n        length = binary.length;\n        for (pos = 0; pos < length; pos++) {\n            if (binary[pos] == 10) /* new line */\n                break;\n        }\n        if (pos === length) {\n            console.warn(\"binary message without channel\");\n            return null;\n        } else if (pos === 0) {\n            console.warn(\"binary control message\");\n            return null;\n        } else {\n            channel = String.fromCharCode.apply(null, binary.subarray(0, pos));\n        }\n\n    /* A textual message */\n    } else {\n        pos = data.indexOf('\\n');\n        if (pos === -1) {\n            console.warn(\"text message without channel\");\n            return null;\n        }\n        channel = data.substring(0, pos);\n    }\n\n    return channel;\n}\n\n/* Private Transport class */\nfunction Transport() {\n    var self = this;\n    self.application = calculate_application();\n\n    /* We can trigger events */\n    event_mixin(self, { });\n\n    var last_channel = 0;\n    var channel_seed = \"\";\n\n    if (window.mock)\n        window.mock.last_transport = self;\n\n    var ws;\n    var check_health_timer;\n    var ignore_health_check = false;\n    var got_message = false;\n\n    /* See if we should communicate via parent */\n    if (window.parent !== window && window.name.indexOf(\"cockpit1:\") === 0)\n        ws = new ParentWebSocket(window.parent);\n\n    /* HACK: Compatibility if we're hosted by older Cockpit versions */\n    try {\n           /* See if we should communicate via parent */\n           if (!ws && window.parent !== window && window.parent.options &&\n                window.parent.options.protocol == \"cockpit1\") {\n               ws = new ParentWebSocket(window.parent);\n            }\n    } catch (ex) {\n       /* permission access errors */\n    }\n\n    if (!ws) {\n        var ws_loc = calculate_url();\n        transport_debug(\"connecting to \" + ws_loc);\n\n        if (ws_loc) {\n            if (\"WebSocket\" in window) {\n                ws = new window.WebSocket(ws_loc, \"cockpit1\");\n            } else if (\"MozWebSocket\" in window) { // Firefox 6\n                ws = new window.MozWebSocket(ws_loc);\n            } else {\n                console.error(\"WebSocket not supported, application will not work!\");\n            }\n        }\n\n        check_health_timer = window.setInterval(function () {\n            if (!got_message) {\n                if (ignore_health_check) {\n                    console.log(\"health check failure ignored\");\n                } else {\n                    console.log(\"health check failed\");\n                    self.close({ \"problem\": \"timeout\" });\n                }\n            }\n            got_message = false;\n        }, 30000);\n    }\n\n    if (!ws) {\n        ws = { close: function() { } };\n        window.setTimeout(function() {\n            self.close({\"problem\": \"no-cockpit\"});\n        }, 50);\n    }\n\n    var control_cbs = { };\n    var message_cbs = { };\n    var waiting_for_init = true;\n    self.ready = false;\n\n    /* Called when ready for channels to interact */\n    function ready_for_channels() {\n        if (!self.ready) {\n            self.ready = true;\n            self.dispatchEvent(\"ready\");\n        }\n    }\n\n    ws.onopen = function() {\n        if (ws) {\n            if (typeof ws.binaryType !== \"undefined\")\n                ws.binaryType = \"arraybuffer\";\n            ws.send(\"\\n{ \\\"command\\\": \\\"init\\\", \\\"version\\\": 1 }\");\n        }\n    };\n\n    ws.onclose = function() {\n        transport_debug(\"WebSocket onclose\");\n        ws = null;\n        if (reload_after_disconnect) {\n            expect_disconnect = true;\n            window.location.reload(true);\n        }\n        self.close();\n    };\n\n    ws.onmessage = self.dispatch_data = function(arg) {\n        got_message = true;\n\n        /* The first line of a message is the channel */\n        var message = arg.data;\n\n        var channel = parse_channel(message);\n        if (channel === null)\n            return false;\n\n        var payload, control;\n        if (message instanceof window.ArrayBuffer)\n            payload = new window.Uint8Array(message, channel.length + 1);\n        else\n            payload = message.substring(channel.length + 1);\n\n        /* A control message, always string */\n        if (!channel) {\n            transport_debug(\"recv control:\", payload);\n            control = JSON.parse(payload);\n        } else  {\n            transport_debug(\"recv \" + channel + \":\", payload);\n        }\n\n        var i, length = incoming_filters ? incoming_filters.length : 0;\n        for (i = 0; i < length; i++) {\n            if (incoming_filters[i](message, channel, control) === false)\n                return false;\n        }\n\n        if (!channel)\n            process_control(control);\n        else\n            process_message(channel, payload);\n\n        return true;\n    };\n\n    self.close = function close(options) {\n        if (!options)\n            options = { \"problem\": \"disconnected\" };\n        options.command = \"close\";\n        window.clearInterval(check_health_timer);\n        var ows = ws;\n        ws = null;\n        if (ows)\n            ows.close();\n        if (expect_disconnect)\n            return;\n        ready_for_channels(); /* ready to fail */\n\n        /* Broadcast to everyone */\n        for (var chan in control_cbs)\n            control_cbs[chan].apply(null, [options]);\n    };\n\n    self.next_channel = function next_channel() {\n        last_channel++;\n        return channel_seed + String(last_channel);\n    };\n\n    function process_init(options) {\n        if (options.problem){\n            self.close({ \"problem\": options.problem });\n            return;\n        }\n\n        if (options.version !== 1) {\n            console.error(\"received unsupported version in init message: \" + options.version);\n            self.close({\"problem\": \"not-supported\"});\n            return;\n        }\n\n        if (options[\"channel-seed\"])\n            channel_seed = String(options[\"channel-seed\"]);\n        if (options[\"host\"])\n            default_host = options[\"host\"];\n\n        if (public_transport) {\n            public_transport.options = options;\n            public_transport.csrf_token = options[\"csrf-token\"];\n            public_transport.host = default_host;\n        }\n\n        if (init_callback)\n            init_callback(options);\n\n        if (waiting_for_init) {\n            waiting_for_init = false;\n            ready_for_channels();\n        }\n    }\n\n    function process_control(data) {\n        var channel = data.channel;\n        var func;\n\n        /* Init message received */\n        if (data.command == \"init\") {\n            process_init(data);\n\n        } else if (waiting_for_init) {\n            waiting_for_init = false;\n            if (data.command != \"close\" || channel) {\n                console.error(\"received message before init: \", data.command);\n                data = { \"problem\": \"protocol-error\" };\n            }\n            self.close(data);\n\n        } else if (data.command == \"ping\") {\n            /* 'ping' messages are ignored */\n\n        } else if (data.command == \"hint\") {\n            if (process_hints)\n                process_hints(data);\n\n        } else if (channel !== undefined) {\n            func = control_cbs[channel];\n            if (func)\n                func.apply(null, [data]);\n        }\n    }\n\n    function process_message(channel, payload) {\n        var func = message_cbs[channel];\n        if (func)\n            func.apply(null, [payload]);\n    }\n\n    /* The channel/control arguments is used by filters, and auto-populated if necessary */\n    self.send_data = function send_data(data, channel, control) {\n        if (!ws) {\n            console.log(\"transport closed, dropped message: \", data);\n            return false;\n        }\n\n        var i, length = outgoing_filters ? outgoing_filters.length : 0;\n        for (i = 0; i < length; i++) {\n            if (channel === undefined)\n                channel = parse_channel(data);\n            if (!channel && control === undefined)\n                control = JSON.parse(data);\n            if (outgoing_filters[i](data, channel, control) === false)\n                return false;\n        }\n\n        ws.send(data);\n        return true;\n    };\n\n    /* The control arguments is used by filters, and auto populated if necessary */\n    self.send_message = function send_message(payload, channel, control) {\n        if (channel)\n            transport_debug(\"send \" + channel, payload);\n        else\n            transport_debug(\"send control:\", payload);\n\n        /* A binary message */\n        if (payload.byteLength || is_array(payload)) {\n            if (payload instanceof window.ArrayBuffer)\n                payload = new window.Uint8Array(payload);\n            var output = join_data([array_from_raw_string(channel), [ 10 ], payload ], true);\n            return self.send_data(output.buffer, channel, control);\n\n        /* A string message */\n        } else {\n            return self.send_data(channel.toString() + \"\\n\" + payload, channel, control);\n        }\n    };\n\n    self.send_control = function send_control(data) {\n        if(!ws && (data.command == \"close\" || data.command == \"kill\"))\n            return; /* don't complain if closed and closing */\n        if (check_health_timer &&\n            data.command == \"hint\" && data.hint == \"ignore_transport_health_check\") {\n            /* This is for us, process it directly. */\n            ignore_health_check = data.data;\n            return;\n        }\n        return self.send_message(JSON.stringify(data), \"\", data);\n    };\n\n    self.register = function register(channel, control_cb, message_cb) {\n        control_cbs[channel] = control_cb;\n        message_cbs[channel] = message_cb;\n    };\n\n    self.unregister = function unregister(channel) {\n        delete control_cbs[channel];\n        delete message_cbs[channel];\n    };\n}\n\nfunction ensure_transport(callback) {\n    var transport;\n    if (!default_transport)\n        default_transport = new Transport();\n    transport = default_transport;\n    if (transport.ready) {\n        callback(transport);\n    } else {\n        transport.addEventListener(\"ready\", function() {\n            callback(transport);\n        });\n    }\n}\n\n/* Always close the transport explicitly: allows parent windows to track us */\nwindow.addEventListener(\"unload\", function() {\n    if (default_transport)\n        default_transport.close();\n});\n\nfunction Channel(options) {\n    var self = this;\n\n    /* We can trigger events */\n    event_mixin(self, { });\n\n    var transport;\n    var ready = null;\n    var closed = null;\n    var waiting = null;\n    var received_done = false;\n    var sent_done = false;\n    var id = null;\n    var binary = (options.binary === true);\n\n    /*\n     * Queue while waiting for transport, items are tuples:\n     * [is_control ? true : false, payload]\n     */\n    var queue = [ ];\n\n    /* Handy for callers, but not used by us */\n    self.valid = true;\n    self.options = options;\n    self.binary = binary;\n    self.id = id;\n\n    function on_message(payload) {\n        if (received_done) {\n            console.warn(\"received message after done\");\n            self.close(\"protocol-error\");\n        } else {\n            self.dispatchEvent(\"message\", payload);\n        }\n    }\n\n    function on_close(data) {\n        closed = data;\n        self.valid = false;\n        if (transport && id)\n            transport.unregister(id);\n        if (closed.message)\n            console.warn(closed.message);\n        self.dispatchEvent(\"close\", closed);\n        if (waiting)\n            waiting.resolve(closed);\n    }\n\n    function on_ready(data) {\n        ready = data;\n        self.dispatchEvent(\"ready\", ready);\n    }\n\n    function on_control(data) {\n        if (data.command == \"close\") {\n            on_close(data);\n            return;\n        } else if (data.command == \"ready\") {\n            on_ready(data);\n        }\n\n        var done = data.command === \"done\";\n        if (done && received_done) {\n            console.warn(\"received two done commands on channel\");\n            self.close(\"protocol-error\");\n\n        } else {\n            if (done)\n                received_done = true;\n            self.dispatchEvent(\"control\", data);\n        }\n    }\n\n    function send_payload(payload) {\n        if (!binary) {\n            if (typeof payload !== \"string\")\n                payload = String(payload);\n        }\n        transport.send_message(payload, id);\n    }\n\n    ensure_transport(function(trans) {\n        transport = trans;\n        if (closed)\n            return;\n\n        id = transport.next_channel();\n        self.id = id;\n\n        /* Register channel handlers */\n        transport.register(id, on_control, on_message);\n\n        /* Now open the channel */\n        var command = { };\n        for (var i in options)\n            command[i] = options[i];\n        command.command = \"open\";\n        command.channel = id;\n\n        if (!command.host) {\n            if (default_host)\n                command.host = default_host;\n        }\n\n        if (binary)\n            command.binary = \"raw\";\n        else\n            delete command.binary;\n\n        transport.send_control(command);\n\n        /* Now drain the queue */\n        while(queue.length > 0) {\n            var item = queue.shift();\n            if (item[0]) {\n                item[1][\"channel\"] = id;\n                transport.send_control(item[1]);\n            } else {\n                send_payload(item[1]);\n            }\n        }\n    });\n\n    self.send = function send(message) {\n        if (closed)\n            console.warn(\"sending message on closed channel\");\n        else if (sent_done)\n            console.warn(\"sending message after done\");\n        else if (!transport)\n            queue.push([false, message]);\n        else\n            send_payload(message);\n    };\n\n    self.control = function control(options) {\n        options = options || { };\n        if (!options.command)\n            options.command = \"options\";\n\tif (options.command === \"done\")\n            sent_done = true;\n        options.channel = id;\n        if (!transport)\n            queue.push([true, options]);\n        else\n            transport.send_control(options);\n    };\n\n    self.wait = function wait(callback) {\n        if (!waiting) {\n            waiting = cockpit.defer();\n            if (closed) {\n                waiting.reject(closed);\n            } else if (ready) {\n                waiting.resolve(ready);\n            } else {\n                self.addEventListener(\"ready\", function(event, data) {\n                    waiting.resolve(data);\n                });\n                self.addEventListener(\"close\", function(event, data) {\n                    waiting.reject(data);\n                });\n            }\n        }\n        var promise = waiting.promise;\n        if (callback)\n            promise.then(callback, callback);\n        return promise;\n    };\n\n    self.close = function close(options) {\n        if (closed)\n            return;\n\n        if (!options)\n            options = { };\n        else if (typeof options == \"string\")\n            options = { \"problem\" : options };\n        options[\"command\"] = \"close\";\n        options[\"channel\"] = id;\n\n        if (!transport)\n            queue.push([true, options]);\n        else\n            transport.send_control(options);\n        on_close(options);\n    };\n\n    self.buffer = function buffer(callback) {\n        var buffers = [];\n        buffers.callback = callback;\n        buffers.squash = function squash() {\n            return join_data(buffers, binary);\n        };\n\n        function on_message(event, data) {\n            var consumed, block;\n            buffers.push(data);\n            if (buffers.callback) {\n                block = join_data(buffers, binary);\n                if (block.length > 0) {\n                    consumed = buffers.callback.call(self, block);\n                    if (typeof consumed !== \"number\" || consumed === block.length) {\n                        buffers.length = 0;\n                    } else if (consumed === 0) {\n                        buffers.length = 1;\n                        buffers[0] = block;\n                    } else if (consumed !== 0) {\n                        buffers.length = 1;\n                        if (block.subarray)\n                            buffers[0] = block.subarray(consumed);\n                        else if (block.substring)\n                            buffers[0] = block.substring(consumed);\n                        else\n                            buffers[0] = block.slice(consumed);\n                    }\n                }\n            }\n        }\n\n        function on_close() {\n            self.removeEventListener(\"message\", on_message);\n            self.removeEventListener(\"close\", on_close);\n        }\n\n        self.addEventListener(\"message\", on_message);\n        self.addEventListener(\"close\", on_close);\n\n        return buffers;\n    };\n\n    self.toString = function toString() {\n        var host = options[\"host\"] || \"localhost\";\n        return \"[Channel \" + (self.valid ? id : \"<invalid>\") + \" -> \" + host + \"]\";\n    };\n}\n\n/* Resolve dots and double dots */\nfunction resolve_path_dots(parts) {\n    var out = [ ];\n    var length = parts.length;\n    for (var i = 0; i < length; i++) {\n        var part = parts[i];\n        if (part === \"\" || part == \".\") {\n            continue;\n        } else if (part == \"..\") {\n            if (out.length === 0)\n                return null;\n            out.pop();\n        } else {\n            out.push(part);\n        }\n    }\n    return out;\n}\n\nfunction factory() {\n\n    cockpit.channel = function channel(options) {\n        return new Channel(options);\n    };\n\n    cockpit.event_target = function event_target(obj) {\n        event_mixin(obj, { });\n        return obj;\n    };\n\n    cockpit.extend = extend;\n\n    /* These can be filled in by loading ../manifests.js */\n    cockpit.manifests = { };\n\n    /* ------------------------------------------------------------\n     * Text Encoding\n     */\n\n    function Utf8TextEncoder(constructor) {\n        var self = this;\n        self.encoding = \"utf-8\";\n\n        self.encode = function encode(string, options) {\n            var data = window.unescape(encodeURIComponent(string));\n            if (constructor === String)\n                return data;\n            return array_from_raw_string(data, constructor);\n        };\n    }\n\n    function Utf8TextDecoder(fatal) {\n        var self = this;\n        var buffer = null;\n        self.encoding = \"utf-8\";\n\n        self.decode = function decode(data, options) {\n            var stream = options && options.stream;\n\n            if (data === null || data === undefined)\n                data = \"\";\n            if (typeof data !== \"string\")\n                data = array_to_raw_string(data);\n            if (buffer) {\n                data = buffer + data;\n                buffer = null;\n            }\n\n            /* We have to scan to do non-fatal and streaming */\n            var beg = 0, i = 0, len = data.length;\n            var p, x, j, ok;\n            var str = \"\";\n\n            while (i < len) {\n                p = data.charCodeAt(i);\n                x = p == 255 ? 0 :\n                    p > 251 && p < 254 ? 6 :\n                    p > 247 && p < 252 ? 5 :\n                    p > 239 && p < 248 ? 4 :\n                    p > 223 && p < 240 ? 3 :\n                    p > 191 && p < 224 ? 2 :\n                    p < 128 ? 1 : 0;\n\n                ok = (i + x <= len);\n                if (!ok && stream) {\n                    buffer = data.substring(i);\n                    break;\n                }\n                if (x === 0)\n                    ok = false;\n                for (j = 1; ok && j < x; j++)\n                    ok = (data.charCodeAt(i + j) & 0x80) !== 0;\n\n                if (!ok) {\n                    if (fatal) {\n                        i = len;\n                        break;\n                    }\n\n                    str += decodeURIComponent(window.escape(data.substring(beg, i)));\n                    str += \"\\ufffd\";\n                    i++;\n                    beg = i;\n                } else {\n                    i += x;\n                }\n            }\n\n            str += decodeURIComponent(window.escape(data.substring(beg, i)));\n            return str;\n        };\n    }\n\n    cockpit.utf8_encoder = function utf8_encoder(constructor) {\n        return new Utf8TextEncoder(constructor);\n    };\n\n    cockpit.utf8_decoder = function utf8_decoder(fatal) {\n        return new Utf8TextDecoder(!!fatal);\n    };\n\n    cockpit.base64_encode = base64_encode;\n    cockpit.base64_decode = base64_decode;\n\n    cockpit.kill = function kill(host, group) {\n        var options = { };\n        if (host)\n            options.host = host;\n        if (group)\n            options.group = group;\n        cockpit.transport.control(\"kill\", options);\n    };\n\n    /* Not public API ... yet? */\n    cockpit.hint = function hint(name, options) {\n        if (!default_transport)\n            return;\n        if (!options)\n            options = default_host;\n        if (typeof options == \"string\")\n            options = { \"host\": options };\n        options[\"hint\"] = name;\n        cockpit.transport.control(\"hint\", options);\n    };\n\n    cockpit.transport = public_transport = {\n        wait: ensure_transport,\n        inject: function inject(message, out) {\n            if (!default_transport)\n                return false;\n            if (out === undefined || out)\n                return default_transport.send_data(message);\n            else\n                return default_transport.dispatch_data({ data: message });\n        },\n        filter: function filter(callback, out) {\n            if (out) {\n                if (!outgoing_filters)\n                    outgoing_filters = [ ];\n                outgoing_filters.push(callback);\n            } else {\n                if (!incoming_filters)\n                    incoming_filters = [ ];\n                incoming_filters.push(callback);\n            }\n        },\n        close: function close(problem) {\n            var options;\n            if (problem)\n                options = {\"problem\": problem };\n            if (default_transport)\n                default_transport.close(options);\n            default_transport = null;\n            this.options = { };\n        },\n        origin: transport_origin,\n        options: { },\n        uri: calculate_url,\n        control: function(command, options) {\n            options = extend({ }, options);\n            options[\"command\"] = command;\n            ensure_transport(function(transport) {\n                transport.send_control(options);\n            });\n        },\n        application: function () {\n            if (!default_transport || window.mock)\n                return calculate_application();\n            return default_transport.application;\n        },\n    };\n\n    /* ------------------------------------------------------------------------------------\n     * An ordered queue of functions that should be called later.\n     */\n\n    var later_queue = [];\n    var later_timeout = null;\n\n    function later_drain() {\n        var func, queue = later_queue;\n        later_timeout = null;\n        later_queue = [];\n        for (;;) {\n            func = queue.shift();\n            if (!func)\n                break;\n            func();\n        }\n    }\n\n    function later_invoke(func) {\n        if (func)\n            later_queue.push(func);\n        if (later_timeout === null)\n            later_timeout = window.setTimeout(later_drain, 0);\n    }\n\n    /* ------------------------------------------------------------------------------------\n     * Promises.\n     * Based on Q and angular promises, with some jQuery compatibility. See the angular\n     * license in COPYING.node for license lineage. There are some key differences with\n     * both Q and jQuery.\n     *\n     *  * Exceptions thrown in handlers are not treated as rejections or failures.\n     *    Exceptions remain actual exceptions.\n     *  * Unlike jQuery callbacks added to an already completed promise don't execute\n     *    immediately. Wait until control is returned to the browser.\n     */\n\n    function promise_then(state, fulfilled, rejected, updated) {\n        if (fulfilled === undefined && rejected === undefined && updated === undefined)\n            return null;\n        var result = new Deferred();\n        state.pending = state.pending || [];\n        state.pending.push([result, fulfilled, rejected, updated]);\n        if (state.status > 0)\n            schedule_process_queue(state);\n        return result.promise;\n    }\n\n    function create_promise(state) {\n\n        /* Like jQuery the promise object is callable */\n        var self = function Promise(target) {\n            if (target) {\n                extend(target, self);\n                return target;\n            }\n            return self;\n        };\n\n        state.status = 0;\n\n        self.then = function then(fulfilled, rejected, updated) {\n            return promise_then(state, fulfilled, rejected, updated) || self;\n        };\n\n        self[\"catch\"] = function catch_(callback) {\n            return promise_then(state, null, callback) || self;\n        };\n\n        self[\"finally\"] = function finally_(callback, updated) {\n            return promise_then(state, function() {\n                return handle_callback(arguments, true, callback);\n            }, function() {\n                return handle_callback(arguments, false, callback);\n            }, updated) || self;\n        };\n\n        /* Basic jQuery Promise compatibility */\n        self.done = function done(fulfilled) {\n            promise_then(state, fulfilled);\n            return self;\n        };\n\n        self.fail = function fail(rejected) {\n            promise_then(state, null, rejected);\n            return self;\n        };\n\n        self.always = function always(callback) {\n            promise_then(state, callback, callback);\n            return self;\n        };\n\n        self.progress = function progress(updated) {\n            promise_then(state, null, null, updated);\n            return self;\n        };\n\n        self.state = function state_() {\n            if (state.status == 1)\n                return \"resolved\";\n            if (state.status == 2)\n                return \"rejected\";\n            return \"pending\";\n        };\n\n        /* Promises are recursive like jQuery */\n        self.promise = self;\n\n        return self;\n    }\n\n    function process_queue(state) {\n        var fn, deferred, pending;\n\n        pending = state.pending;\n        state.process_scheduled = false;\n        state.pending = undefined;\n        for (var i = 0, ii = pending.length; i < ii; ++i) {\n            state.pur = true;\n            deferred = pending[i][0];\n            fn = pending[i][state.status];\n            if (is_function(fn)) {\n                deferred.resolve(fn.apply(state.promise, state.values));\n            } else if (state.status === 1) {\n                deferred.resolve.apply(deferred.resolve, state.values);\n            } else {\n                deferred.reject.apply(deferred.reject, state.values);\n            }\n        }\n    }\n\n    function schedule_process_queue(state) {\n        if (state.process_scheduled || !state.pending)\n            return;\n        state.process_scheduled = true;\n        later_invoke(function() { process_queue(state); });\n    }\n\n    function deferred_resolve(state, values) {\n        var then, done = false;\n        if (is_object(values[0]) || is_function(values[0]))\n            then = values[0] && values[0].then;\n        if (is_function(then)) {\n            state.status = -1;\n            then.call(values, function(/* ... */) {\n                if (done)\n                    return;\n                done = true;\n                deferred_resolve(state, arguments);\n            }, function(/* ... */) {\n                if (done)\n                    return;\n                done = true;\n                deferred_reject(state, arguments);\n            }, function(/* ... */) {\n                deferred_notify(state, arguments);\n            });\n        } else {\n            state.values = values;\n            state.status = 1;\n            schedule_process_queue(state);\n        }\n    }\n\n    function deferred_reject(state, values) {\n        state.values = values;\n        state.status = 2;\n        schedule_process_queue(state);\n    }\n\n    function deferred_notify(state, values) {\n        var callbacks = state.pending;\n        if ((state.status <= 0) && callbacks && callbacks.length) {\n            later_invoke(function() {\n                var callback, result;\n                for (var i = 0, ii = callbacks.length; i < ii; i++) {\n                    result = callbacks[i][0];\n                    callback = callbacks[i][3];\n                    if (is_function(callback))\n                        result.notify(callback.apply(state.promise, values));\n                    else\n                        result.notify.apply(result, values);\n                }\n            });\n        }\n    }\n\n    function Deferred() {\n        var self = this;\n        var state = { };\n        self.promise = state.promise = create_promise(state);\n\n        self.resolve = function resolve(/* ... */) {\n            if (arguments[0] === state.promise)\n                throw new Error(\"Expected promise to be resolved with other value than itself\");\n            if (!state.status)\n                deferred_resolve(state, arguments);\n            return self;\n        };\n\n        self.reject = function reject(/* ... */) {\n            if (state.status)\n                return;\n            deferred_reject(state, arguments);\n            return self;\n        };\n\n        self.notify = function notify(/* ... */) {\n            deferred_notify(state, arguments);\n            return self;\n        };\n    }\n\n    function prep_promise(values, resolved) {\n        var result = cockpit.defer();\n        if (resolved)\n            result.resolve.apply(result, values);\n        else\n            result.reject.apply(result, values);\n        return result.promise;\n    }\n\n    function handle_callback(values, is_resolved, callback) {\n        var callback_output = null;\n        if (is_function(callback))\n            callback_output = callback();\n        if (callback_output && is_function (callback_output.then)) {\n            return callback_output.then(function() {\n                return prep_promise(values, is_resolved);\n            }, function() {\n                return prep_promise(arguments, false);\n            });\n        } else {\n            return prep_promise(values, is_resolved);\n        }\n    }\n\n    cockpit.when = function when(value, fulfilled, rejected, updated) {\n        var result = cockpit.defer();\n        result.resolve(value);\n        return result.promise.then(fulfilled, rejected, updated);\n    };\n\n    cockpit.all = function all(promises) {\n        var deferred = cockpit.defer();\n        var counter = 0;\n        var results = [];\n\n        if (arguments.length != 1 && !is_array (promises))\n            promises = Array.prototype.slice.call(arguments);\n\n        promises.forEach(function(promise, key) {\n            counter++;\n            cockpit.when(promise).then(function(value) {\n                results[key] = value;\n                if (!(--counter))\n                    deferred.resolve.apply(deferred, results);\n            }, function(/* ... */) {\n                deferred.reject.apply(deferred, arguments);\n            });\n        });\n\n        if (counter === 0)\n            deferred.resolve(results);\n        return deferred.promise;\n    };\n\n    cockpit.resolve = function resolve(result) {\n        return cockpit.defer().resolve(result).promise;\n    };\n\n    cockpit.reject = function reject(ex) {\n        return cockpit.defer().reject(ex).promise;\n    };\n\n    cockpit.defer = function() {\n        return new Deferred();\n    };\n\n    /* ---------------------------------------------------------------------\n     * Utilities\n     */\n\n    var fmt_re = /\\$\\{([^}]+)\\}|\\$([a-zA-Z0-9_]+)/g;\n    cockpit.format = function format(fmt, args) {\n        if (arguments.length != 2 || !is_object(args) || args === null)\n            args = Array.prototype.slice.call(arguments, 1);\n\n        function replace(m, x, y) {\n            var value = args[x || y];\n\n            /* Special-case 0 (also catches 0.0). All other falsy values return\n             * the empty string.\n             */\n            if (value === 0)\n                return '0';\n\n            return value || '';\n        }\n\n        return fmt.replace(fmt_re, replace);\n    };\n\n    cockpit.format_number = function format_number(number) {\n        /* We show 3 digits of precison but avoid scientific notation.\n         * We also show integers without digits after the comma.\n         *\n         * We want to localise the decimal place, but we never want to\n         * show thousands separators (to avoid ambiguity).  For this\n         * reason, for integers and large enough numbers, we use\n         * non-localised conversions (and in both cases, show no\n         * fractional part).\n         */\n\n        if (!number && number !== 0)\n            return \"\";\n        else if (number % 1 === 0)\n            return number.toString();\n        else if (number > 0 && number <= 0.001)\n            return (0.001).toLocaleString(cockpit.language);\n        else if (number < 0 && number >= -0.001)\n            return (-0.001).toLocaleString(cockpit.language);\n        else if (number > 999 || number < -999)\n            return number.toFixed(0);\n        else\n            return number.toLocaleString(cockpit.language, {\n                maximumSignificantDigits: 3,\n                minimumSignificantDigits: 3\n            });\n    };\n\n    function format_units(number, suffixes, factor, separate) {\n        var quotient;\n        var suffix = null;\n        var key, keys;\n        var divisor;\n        var y, x, i;\n\n        /* Find that factor string */\n        if (!number && number !== 0) {\n            suffix = null;\n\n        } else if (typeof (factor) === \"string\") {\n            /* Prefer larger factors */\n            keys = [];\n            for (key in suffixes)\n                keys.push(key);\n            keys.sort().reverse();\n            for (y = 0; y < keys.length; y++) {\n                for (x = 0; x < suffixes[keys[y]].length; x++) {\n                    if (factor == suffixes[keys[y]][x]) {\n                        number = number / Math.pow(keys[y], x);\n                        suffix = factor;\n                        break;\n                    }\n                }\n                if (suffix)\n                    break;\n            }\n\n        /* @factor is a number */\n        } else if (factor in suffixes) {\n            divisor = 1;\n            for (i = 0; i < suffixes[factor].length; i++) {\n                quotient = number / divisor;\n                if (quotient < factor) {\n                    number = quotient;\n                    suffix = suffixes[factor][i];\n                    break;\n                }\n                divisor *= factor;\n            }\n        }\n\n        var string_representation = cockpit.format_number(number);\n        var ret;\n\n        if (string_representation && suffix)\n            ret = [string_representation, suffix];\n        else\n            ret = [string_representation];\n\n        if (!separate)\n            ret = ret.join(\" \");\n\n        return ret;\n    }\n\n    var byte_suffixes = {\n        1000: [ null, \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\" ],\n        1024: [ null, \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\" ]\n    };\n\n    cockpit.format_bytes = function format_bytes(number, factor, separate) {\n        if (factor === undefined)\n            factor = 1024;\n        return format_units(number, byte_suffixes, factor, separate);\n    };\n\n    cockpit.get_byte_units = function get_byte_units(guide_value, factor) {\n        if (factor === undefined || ! (factor in byte_suffixes))\n            factor = 1024;\n\n        function unit(index) {\n            return { name: byte_suffixes[factor][index],\n                     factor: Math.pow(factor, index)\n                   };\n        }\n\n        var units = [ unit(2), unit(3), unit(4) ];\n\n        // The default unit is the largest one that gives us at least\n        // two decimal digits in front of the comma.\n\n        for (var i = units.length-1; i >= 0; i--) {\n            if (i === 0 || (guide_value / units[i].factor) >= 10) {\n                units[i].selected = true;\n                break;\n            }\n        }\n\n        return units;\n    };\n\n    var byte_sec_suffixes = {\n        1024: [ \"B/s\", \"KiB/s\", \"MiB/s\", \"GiB/s\", \"TiB/s\", \"PiB/s\", \"EiB/s\", \"ZiB/s\" ]\n    };\n\n    cockpit.format_bytes_per_sec = function format_bytes_per_sec(number, factor, separate) {\n        if (factor === undefined)\n            factor = 1024;\n        return format_units(number, byte_sec_suffixes, factor, separate);\n    };\n\n    var bit_suffixes = {\n        1000: [ \"bps\", \"Kbps\", \"Mbps\", \"Gbps\", \"Tbps\", \"Pbps\", \"Ebps\", \"Zbps\" ]\n    };\n\n    cockpit.format_bits_per_sec = function format_bits_per_sec(number, factor, separate) {\n        if (factor === undefined)\n            factor = 1000;\n        return format_units(number, bit_suffixes, factor, separate);\n    };\n\n    /* ---------------------------------------------------------------------\n     * Storage Helper.\n     *\n     * Use application to prefix data stored in browser storage\n     * with helpers for compatibility.\n     */\n    function StorageHelper(storageName) {\n        var self = this;\n        var storage;\n\n        try {\n            storage = window[storageName];\n        } catch (e) { }\n\n        self.prefixedKey = function (key) {\n            return cockpit.transport.application() + \":\" + key;\n        };\n\n        self.getItem = function (key, both) {\n            var value = storage.getItem(self.prefixedKey(key));\n            if (!value && both)\n                value = storage.getItem(key);\n            return value;\n        };\n\n        self.setItem = function (key, value, both) {\n            storage.setItem(self.prefixedKey(key), value);\n            if (both)\n                storage.setItem(key, value);\n        };\n\n        self.removeItem = function(key, both) {\n            storage.removeItem(self.prefixedKey(key));\n            if (both)\n                storage.removeItem(key);\n        };\n\n        /* Instead of clearing, purge anything that isn't prefixed with an application\n         * and anything prefixed with our application.\n         */\n        self.clear = function(full) {\n            var i = 0;\n            while (i < storage.length) {\n                var k = storage.key(i);\n                if (full && k.indexOf(\"cockpit\") !== 0)\n                    storage.removeItem(k);\n                else if (k.indexOf(cockpit.transport.application()) === 0)\n                    storage.removeItem(k);\n                else\n                    i++;\n            }\n        };\n    }\n\n    cockpit.localStorage = new StorageHelper(\"localStorage\");\n    cockpit.sessionStorage = new StorageHelper(\"sessionStorage\");\n\n    /* ---------------------------------------------------------------------\n     * Shared data cache.\n     *\n     * We cannot use sessionStorage when keeping lots of data in memory and\n     * sharing it between frames. It has a rather paltry limit on the amount\n     * of data it can hold ... so we use window properties instead.\n     */\n\n    function lookup_storage(win) {\n        var storage;\n        if (win.parent && win.parent !== win)\n            storage = lookup_storage(win.parent);\n        if (!storage) {\n            try {\n                storage = win[\"cv1-storage\"];\n                if (!storage)\n                    win[\"cv1-storage\"] = storage = { };\n            } catch(ex) { }\n        }\n        return storage;\n    }\n\n    function StorageCache(org_key, provider, consumer) {\n        var self = this;\n        var key = cockpit.transport.application() + \":\" + org_key;\n\n        /* For triggering events and ownership */\n        var trigger = window.sessionStorage;\n        var last;\n\n        var storage = lookup_storage(window);\n\n        var claimed = false;\n        var source;\n\n        function callback() {\n            var value;\n\n            /* Only run the callback if we have a result */\n            if (storage[key] !== undefined) {\n                value = storage[key];\n                window.setTimeout(function() {\n                    if (consumer(value, org_key) === false)\n                        self.close();\n                });\n            }\n        }\n\n        function result(value) {\n            if (source && !claimed)\n                claimed = true;\n            if (!claimed)\n                return;\n\n            // use a random number to avoid races by separate instances\n            var version = Math.floor(Math.random() * 10000000) + 1;\n\n            /* Event for the local window */\n            var ev = document.createEvent(\"StorageEvent\");\n            ev.initStorageEvent(\"storage\", false, false, key, null,\n                                version, window.location, trigger);\n\n            storage[key] = value;\n            trigger.setItem(key, version);\n            ev.self = self;\n            window.dispatchEvent(ev);\n        }\n\n        self.claim = function claim() {\n            if (source)\n                return;\n\n            /* In case we're unclaimed during the callback */\n            var claiming = { close: function() { } };\n            source = claiming;\n\n            var changed = provider(result, org_key);\n            if (source === claiming)\n                source = changed;\n            else\n                changed.close();\n        };\n\n        function unclaim() {\n            if (source && source.close)\n                source.close();\n            source = null;\n\n            if (!claimed)\n                return;\n\n            claimed = false;\n\n            var current_value = trigger.getItem(key);\n            if (current_value)\n                current_value = parseInt(current_value, 10);\n            else\n                current_value = null;\n\n            if (last && last === current_value) {\n                var ev = document.createEvent(\"StorageEvent\");\n                var version = trigger[key];\n                ev.initStorageEvent(\"storage\", false, false, key, version,\n                                    null, window.location, trigger);\n                delete storage[key];\n                trigger.removeItem(key);\n                ev.self = self;\n                window.dispatchEvent(ev);\n            }\n        }\n\n        function changed(event) {\n            if (event.key !== key)\n                return;\n\n            /* check where the event came from\n               - it came from someone else:\n                   if it notifies their unclaim (new value null) and we haven't already claimed, do so\n               - it came from ourselves:\n                   if the new value doesn't match the actual value in the cache, and\n                   we tried to claim (from null to a number), cancel our claim\n             */\n            if (event.self !== self) {\n                if (!event.newValue && !claimed) {\n                    self.claim();\n                    return;\n                }\n            } else if (claimed && !event.oldValue && (event.newValue !== trigger.getItem(key))) {\n                unclaim();\n            }\n\n            var new_value = null;\n            if (event.newValue)\n                new_value = parseInt(event.newValue, 10);\n            if (last !== new_value) {\n                last = new_value;\n                callback();\n            }\n        }\n\n        self.close = function() {\n            window.removeEventListener(\"storage\", changed, true);\n            unclaim();\n        };\n\n        window.addEventListener(\"storage\", changed, true);\n\n        /* Always clear this data on unload */\n        window.addEventListener(\"beforeunload\", function() {\n            self.close();\n        });\n        window.addEventListener(\"unload\", function() {\n            self.close();\n        });\n\n        if (trigger.getItem(key))\n            callback();\n        else\n            self.claim();\n    }\n\n    cockpit.cache = function cache(key, provider, consumer) {\n        return new StorageCache(key, provider, consumer);\n    };\n\n    /* ---------------------------------------------------------------------\n     * Metrics\n     *\n     * Implements the cockpit.series and cockpit.grid. Part of the metrics\n     * implementations that do not require jquery.\n     */\n\n    function SeriesSink(interval, identifier, fetch_callback) {\n        var self = this;\n\n        self.interval = interval;\n        self.limit = identifier ? 64 * 1024 : 1024;\n\n        /*\n         * The cache sits on a window, either our own or a parent\n         * window whichever we can access properly.\n         *\n         * Entries in the index are:\n         *\n         * { beg: N, items: [], mapping: { }, next: item }\n         */\n        var index = setup_index(identifier);\n\n        /*\n         * A linked list through the index, that we use for expiry\n         * of the cache.\n         */\n        var count = 0;\n        var head = null;\n        var tail = null;\n\n        function setup_index(id) {\n            if (!id)\n                return [];\n\n            /* Try and find a good place to cache data */\n            var storage = lookup_storage(window);\n\n            var index = storage[id];\n            if (!index)\n                storage[id] = index = [];\n            return index;\n        }\n\n        function search(idx, beg) {\n            var low = 0;\n            var high = idx.length - 1;\n            var mid, val;\n\n            while (low <= high) {\n                mid = (low + high) / 2 | 0;\n                val = idx[mid].beg;\n                if (val < beg)\n                    low = mid + 1;\n                else if (val > beg)\n                    high = mid - 1;\n                else\n                    return mid; /* key found */\n            }\n            return low;\n        }\n\n        function fetch(beg, end, for_walking) {\n            if (fetch_callback) {\n                if (!for_walking) {\n                    /* Stash some fake data synchronously so that we don't ask\n                     * again for the same range while they are still fetching\n                     * it asynchronously.\n                     */\n                    stash(beg, new Array(end-beg), { });\n                }\n                fetch_callback(beg, end, for_walking);\n            }\n        }\n\n        self.load = function load(beg, end, for_walking) {\n            if (end <= beg)\n                return;\n\n            var at = search(index, beg);\n\n            var entry;\n            var b, e, eb, en, i, len = index.length;\n            var last = beg;\n\n            /* We do this in two phases: First, we walk the index to\n             * process what we already have and at the same time make\n             * notes about what we need to fetch.  Then we go over the\n             * notes and actually fetch what we need.  That way, the\n             * fetch callbacks in the second phase can modify the\n             * index data structure without disturbing the walk in the\n             * first phase.\n             */\n\n            var fetches = [ ];\n\n            /* Data relevant to this range can be at the found index, or earlier */\n            for (i = at > 0 ? at - 1 : at; i < len; i++) {\n                entry = index[i];\n                en = entry.items.length;\n                if (!en)\n                    continue;\n\n                eb = entry.beg;\n                b = Math.max(eb, beg);\n                e = Math.min(eb + en, end);\n\n                if (b < e) {\n                    if (b > last)\n                        fetches.push([ last, b ]);\n                    process(b, entry.items.slice(b - eb, e - eb), entry.mapping);\n                    last = e;\n                } else if (i >= at) {\n                    break; /* no further intersections */\n                }\n            }\n\n            for (i = 0; i < fetches.length; i++)\n                fetch(fetches[i][0], fetches[i][1], for_walking);\n\n            if (last != end)\n                fetch(last, end, for_walking);\n        };\n\n        function stash(beg, items, mapping) {\n            if (!items.length)\n                return;\n\n            var at = search(index, beg);\n\n            var end = beg + items.length;\n            var remove = [ ];\n            var entry;\n            var num;\n\n            var b, e, eb, en, i, len = index.length;\n            for (i = at > 0 ? at - 1 : at; i < len; i++) {\n                entry = index[i];\n                en = entry.items.length;\n                if (!en)\n                    continue;\n\n                eb = entry.beg;\n                b = Math.max(eb, beg);\n                e = Math.min(eb + en, end);\n\n                /*\n                 * We truncate blocks that intersect with this one\n                 *\n                 * We could adjust them, but in general the loaders are\n                 * intelligent enough to only load the required data, so\n                 * not doing this optimization yet.\n                 */\n\n                if (b < e) {\n                    num = e - b;\n                    entry.items.splice(b - eb, num);\n                    count -= num;\n                    if (b - eb === 0)\n                        entry.beg += (e - eb);\n                } else if (i >= at) {\n                    break; /* no further intersections */\n                }\n            }\n\n            /* Insert our item into the array */\n            entry = { beg: beg, items: items, mapping: mapping };\n            if (!head)\n                head = entry;\n            if (tail)\n                tail.next = entry;\n            tail = entry;\n            count += items.length;\n            index.splice(at, 0, entry);\n\n            /* Remove any items with zero length around insertion point */\n            for (at--; at <= i; at++) {\n                entry = index[at];\n                if (entry && !entry.items.length) {\n                    index.splice(at, 1);\n                    at--;\n                }\n            }\n\n            /* If our index has gotten too big, expire entries */\n            while (head && count > self.limit) {\n                count -= head.items.length;\n                head.items = [];\n                head.mapping = null;\n                head = head.next || null;\n            }\n\n            /* Remove any entries with zero length at beginning */\n            len = index.length;\n            for (i = 0; i < len; i++) {\n                if (index[i].items.length > 0)\n                    break;\n            }\n            index.splice(0, i);\n        }\n\n        /*\n         * Used to populate grids, the keys are grid ids and\n         * the values are objects: { grid, rows, notify }\n         *\n         * The rows field is an object indexed by paths\n         * container aliases, and the values are: [ row, path ]\n         */\n        var registered = { };\n\n        /* An undocumented function called by DataGrid */\n        self._register = function _register(grid, id) {\n            if (grid.interval != interval)\n                throw \"mismatched metric interval between grid and sink\";\n            var gdata = registered[id];\n            if (!gdata) {\n                gdata = registered[id] = { grid: grid, links: [ ] };\n                gdata.links.remove = function remove() {\n                    delete registered[id];\n                };\n            }\n            return gdata.links;\n        };\n\n        function process(beg, items, mapping) {\n            var i, j, jlen, k, klen;\n            var data, path, row, map;\n            var id, gdata, grid;\n            var f, t, n, b, e;\n\n            var end = beg + items.length;\n\n            for (id in registered) {\n                gdata = registered[id];\n                grid = gdata.grid;\n\n                b = Math.max(beg, grid.beg);\n                e = Math.min(end, grid.end);\n\n                /* Does this grid overlap the bounds of item? */\n                if (b < e) {\n\n                    /* Where in the items to take from */\n                    f = b - beg;\n\n                    /* Where and how many to place */\n                    t = b - grid.beg;\n\n                    /* How many to process */\n                    n = e - b;\n\n                    for (i = 0; i < n; i++) {\n                        klen = gdata.links.length;\n                        for (k = 0; k < klen; k++) {\n                            path = gdata.links[k][0];\n                            row = gdata.links[k][1];\n\n                            /* Calulate the data field to fill in */\n                            data = items[f + i];\n                            map = mapping;\n                            jlen = path.length;\n                            for (j = 0; data !== undefined && j < jlen; j++) {\n                                if (!data) {\n                                    data = undefined;\n                                } else if (map !== undefined && map !== null) {\n                                    map = map[path[j]];\n                                    if (map)\n                                        data = data[map[\"\"]];\n                                    else\n                                        data = data[path[j]];\n                                } else {\n                                    data = data[path[j]];\n                                }\n                            }\n\n                            row[t + i] = data;\n                        }\n                    }\n\n                    /* Notify the grid, so it can call any functions */\n                    grid.notify(t, n);\n                }\n            }\n        }\n\n        self.input = function input(beg, items, mapping) {\n            process(beg, items, mapping);\n            stash(beg, items, mapping);\n        };\n\n        self.close = function () {\n            var grid, id;\n            for (id in registered) {\n                grid = registered[id];\n                if (grid && grid.grid)\n                    grid.grid.remove_sink(self);\n            }\n        };\n    }\n\n    cockpit.series = function series(interval, cache, fetch) {\n        return new SeriesSink(interval, cache, fetch);\n    };\n\n    var unique = 1;\n\n    function SeriesGrid(interval, beg, end) {\n        var self = this;\n\n        /* We can trigger events */\n        event_mixin(self, { });\n\n        var rows = [];\n\n        self.interval = interval;\n        self.beg = 0;\n        self.end = 0;\n\n        /*\n         * Used to populate table data, the values are:\n         * [ callback, row ]\n         */\n        var callbacks = [ ];\n\n        var sinks = [ ];\n\n        var suppress = 0;\n\n        var id = \"g1-\" + unique;\n        unique += 1;\n\n        /* Used while walking */\n        var walking = null;\n        var offset = null;\n\n        self.notify = function notify(x, n) {\n            if (suppress)\n                return;\n            if (x + n > self.end - self.beg)\n                n = (self.end - self.beg) - x;\n            if (n <= 0)\n                return;\n            var j, jlen = callbacks.length;\n            var callback, row;\n            for (j = 0; j < jlen; j++) {\n                callback = callbacks[j][0];\n                row = callbacks[j][1];\n                callback.call(self, row, x, n);\n            }\n\n            self.dispatchEvent(\"notify\", x, n);\n        };\n\n        self.add = function add(/* sink, path */) {\n            var row = [];\n            rows.push(row);\n\n            var registered, sink, path, links, cb;\n\n            /* Called as add(sink, path) */\n            if (is_object(arguments[0])) {\n                sink = arguments[0];\n                sink = sink[\"series\"] || sink;\n\n                /* The path argument can be an array, or a dot separated string */\n                path = arguments[1];\n                if (!path)\n                    path = [];\n                else if (typeof (path) === \"string\")\n                    path = path.split(\".\");\n\n                links = sink._register(self, id);\n                if (!links.length)\n                    sinks.push({ sink: sink, links: links });\n                links.push([path, row]);\n\n            /* Called as add(callback) */\n            } else if (is_function(arguments[0])) {\n                cb = [ arguments[0], row ];\n                if (arguments[1] === true)\n                    callbacks.unshift(cb);\n                else\n                    callbacks.push(cb);\n\n            /* Not called as add() */\n            } else if (arguments.length !== 0) {\n                throw \"invalid args to grid.add()\";\n            }\n\n            return row;\n        };\n\n        self.remove = function remove(row) {\n            var j, i, ilen, jlen;\n\n            /* Remove from the sinks */\n            ilen = sinks.length;\n            for (i = 0; i < ilen; i++) {\n                jlen = sinks[i].links.length;\n                for (j = 0; j < jlen; j++) {\n                    if (sinks[i].links[j][1] === row) {\n                        sinks[i].links.splice(j, 1);\n                        break;\n                    }\n                }\n            }\n\n            /* Remove from our list of rows */\n            ilen = rows.length;\n            for (i = 0; i < ilen; i++) {\n                if (rows[i] === row) {\n                    rows.splice(i, 1);\n                    break;\n                }\n            }\n        };\n\n        self.remove_sink = function remove_sink(sink) {\n            var i, len = sinks.length;\n            for (i = 0; i < len; i++) {\n                if (sinks[i].sink === sink) {\n                    sinks[i].links.remove();\n                    sinks.splice(i, 1);\n                    break;\n                }\n            }\n        };\n\n        self.sync = function sync(for_walking) {\n            /* Suppress notifications */\n            suppress++;\n\n            /* Ask all sinks to load data */\n            var sink, i, len = sinks.length;\n            for (i = 0; i < len; i++) {\n                sink = sinks[i].sink;\n                sink.load(self.beg, self.end, for_walking);\n            }\n\n            suppress--;\n\n            /* Notify for all rows */\n            self.notify(0, self.end - self.beg);\n        };\n\n        function move_internal(beg, end, for_walking) {\n            if (end === undefined)\n                end = beg + (self.end - self.beg);\n\n            if (end < beg)\n                beg = end;\n\n            self.beg = beg;\n            self.end = end;\n\n            if (!rows.length)\n                return;\n\n            rows.forEach(function(row) {\n                row.length = 0;\n            });\n\n            self.sync(for_walking);\n        }\n\n        function stop_walking() {\n            window.clearInterval(walking);\n            walking = null;\n            offset = null;\n        }\n\n        self.move = function move(beg, end) {\n            stop_walking();\n            /* Some code paths use now twice.\n             * They should use the same value.\n             */\n            var now = null;\n\n            /* Treat negative numbers relative to now */\n            if (beg === undefined) {\n                beg = 0;\n            } else if (is_negative(beg)) {\n                now = Date.now();\n                beg = Math.floor(now / self.interval) + beg;\n            }\n            if (end !== undefined && is_negative(end)) {\n                if (now === null)\n                    now = Date.now();\n                end = Math.floor(now / self.interval) + end;\n            }\n\n            move_internal(beg, end, false);\n        };\n\n        self.walk = function walk() {\n            /* Don't overflow 32 signed bits with the interval since\n             * many browsers will mishandle it.  This means that plots\n             * that would make about one step every month don't walk\n             * at all, but I guess that is ok.\n             *\n             * For example,\n             * https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout\n             * says:\n             *\n             *    Browsers including Internet Explorer, Chrome,\n             *    Safari, and Firefox store the delay as a 32-bit\n             *    signed Integer internally. This causes an Integer\n             *    overflow when using delays larger than 2147483647,\n             *    resulting in the timeout being executed immediately.\n             */\n\n            var start = Date.now();\n            if (self.interval > 2000000000)\n                return;\n\n            stop_walking();\n            offset = start - self.beg * self.interval;\n            walking = window.setInterval(function() {\n                var now = Date.now();\n                move_internal(Math.floor((now - offset) / self.interval), undefined, true);\n            }, self.interval);\n        };\n\n        self.close = function close() {\n            stop_walking();\n            while (sinks.length)\n                (sinks.pop()).links.remove();\n        };\n\n        self.move(beg, end);\n    }\n\n    cockpit.grid = function grid(interval, beg, end) {\n        return new SeriesGrid(interval, beg, end);\n    };\n\n    /* --------------------------------------------------------------------\n     * Basic utilities.\n     */\n\n    function BasicError(problem, message) {\n        this.problem = problem;\n        this.message = message || cockpit.message(problem);\n        this.toString = function() {\n            return this.message;\n        };\n    }\n\n    cockpit.logout = function logout(reload) {\n        /* fully clear session storage */\n        cockpit.sessionStorage.clear(true);\n\n        /* Only clean application data from localStorage,\n         * except for login-data. Clear that completely */\n        cockpit.localStorage.removeItem('login-data', true);\n        cockpit.localStorage.clear(false);\n\n        if (reload !== false)\n            reload_after_disconnect = true;\n        ensure_transport(function(transport) {\n            if (!transport.send_control({ \"command\": \"logout\", \"disconnect\": true }))\n                window.location.reload(reload_after_disconnect);\n        });\n        window.sessionStorage.setItem(\"logout-intent\", \"explicit\");\n    };\n\n    /* Not public API ... yet? */\n    cockpit.drop_privileges = function drop_privileges() {\n        ensure_transport(function(transport) {\n            transport.send_control({ \"command\": \"logout\", \"disconnect\": false });\n        });\n    };\n\n    /* ---------------------------------------------------------------------\n     * User and system information\n     */\n\n    cockpit.info = { };\n    event_mixin(cockpit.info, { });\n\n    init_callback = function(options) {\n        if (options.system)\n            extend(cockpit.info, options.system);\n        if (options.system)\n            cockpit.info.dispatchEvent(\"changed\");\n    };\n\n    var the_user = null;\n    cockpit.user = function () {\n        var dfd = cockpit.defer();\n        var dbus;\n        if (!the_user) {\n            dbus = cockpit.dbus(null, { \"bus\": \"internal\" });\n            dbus.call(\"/user\", \"org.freedesktop.DBus.Properties\", \"GetAll\",\n                      [ \"cockpit.User\" ], { \"type\": \"s\" })\n                .done(function(reply) {\n                    var user = reply[0];\n                    dfd.resolve({\n                        id: user.Id.v,\n                        name: user.Name.v,\n                        full_name: user.Full.v,\n                        groups: user.Groups.v,\n                        home: user.Home.v,\n                        shell: user.Shell.v\n                    });\n                })\n                .fail(function(ex) {\n                    dfd.reject(ex);\n                })\n                .always(function() {\n                    dbus.close();\n                });\n        } else {\n            dfd.resolve(the_user);\n        }\n\n        return dfd.promise;\n    };\n\n    /* ------------------------------------------------------------------------\n     * Override for broken browser behavior\n     */\n\n    document.addEventListener(\"click\", function(ev) {\n        if (ev.target.classList && in_array(ev.target.classList, 'disabled'))\n          ev.stopPropagation();\n    }, true);\n\n    /* ------------------------------------------------------------------------\n     * Cockpit location\n     */\n\n    /* HACK: Mozilla will unescape 'window.location.hash' before returning\n     * it, which is broken.\n     *\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=135309\n     */\n\n    var last_loc = null;\n\n    function get_window_location_hash() {\n        return (window.location.href.split('#')[1] || '');\n    }\n\n    function Location() {\n        var self = this;\n        var application = cockpit.transport.application();\n        self.url_root = url_root || \"\";\n        if (application.indexOf(\"cockpit+=\") === 0) {\n            if (self.url_root)\n                self.url_root += '/';\n            self.url_root = self.url_root + application.replace(\"cockpit+\", '');\n        }\n\n        var href = get_window_location_hash();\n        var options = { };\n        var path = decode(href, options);\n\n        function decode_path(input) {\n            var parts = input.split('/').map(decodeURIComponent);\n            var result, i, pre_parts = [];\n\n            if (self.url_root)\n                pre_parts = self.url_root.split('/').map(decodeURIComponent);\n\n            if (input && input[0] !== \"/\") {\n                result = [].concat(path);\n                result.pop();\n                result = result.concat(parts);\n            } else {\n                result = parts;\n            }\n\n            result = resolve_path_dots(result);\n            for (i = 0; i < pre_parts.length; i++) {\n                if (pre_parts[i] !== result[i])\n                    break;\n            }\n            if (i == pre_parts.length)\n                result.splice(0, pre_parts.length);\n\n            return result;\n        }\n\n        function encode(path, options, with_root) {\n            if (typeof path == \"string\")\n                path = decode_path(path, self.path);\n\n            var href = \"/\" + path.map(encodeURIComponent).join(\"/\");\n            if (with_root && self.url_root && href.indexOf(\"/\" + self.url_root + \"/\" !== 0))\n                href = \"/\" + self.url_root + href;\n\n            /* Undo unnecessary encoding of these */\n            href = href.replace(\"%40\", \"@\");\n            href = href.replace(\"%3D\", \"=\");\n            href = href.replace(/%2B/g, \"+\");\n\n            var i, opt, value, query = [];\n            function push_option(v) {\n                query.push(encodeURIComponent(opt) + \"=\" + encodeURIComponent(v));\n            }\n\n            if (options) {\n                for (opt in options) {\n                    value = options[opt];\n                    if (!is_array(value))\n                        value = [ value ];\n                    value.forEach(push_option);\n                }\n                if (query.length > 0)\n                    href += \"?\" + query.join(\"&\");\n            }\n            return href;\n        }\n\n        function decode(href, options) {\n            if (href[0] == '#')\n                href = href.substr(1);\n\n            var pos = href.indexOf('?');\n            var first = href;\n            if (pos === -1)\n                first = href;\n            else\n                first = href.substr(0, pos);\n            var path = decode_path(first);\n            if (pos !== -1 && options) {\n                href.substring(pos + 1).split(\"&\").forEach(function(opt) {\n                    var last, parts = opt.split('=');\n                    var name = decodeURIComponent(parts[0]);\n                    var value = decodeURIComponent(parts[1]);\n                    if (options.hasOwnProperty(name)) {\n                        last = options[name];\n                        if (!is_array(value))\n                            last = options[name] = [ last ];\n                        last.push(value);\n                    } else {\n                        options[name] = value;\n                    }\n                });\n            }\n\n            return path;\n        }\n\n        function href_for_go_or_replace(/* ... */) {\n            var href;\n            if (arguments.length == 1 && arguments[0] instanceof Location) {\n                href = String(arguments[0]);\n            } else if (typeof arguments[0] == \"string\") {\n                var options = arguments[1] || { };\n                href = encode(decode(arguments[0], options), options);\n            } else {\n                href = encode.apply(self, arguments);\n            }\n            return href;\n        }\n\n        function replace(/* ... */) {\n            if (self !== last_loc)\n                return;\n            var href = href_for_go_or_replace.apply(self, arguments);\n            window.location.replace(window.location.pathname + '#' + href);\n        }\n\n        function go(/* ... */) {\n            if (self !== last_loc)\n                return;\n            var href = href_for_go_or_replace.apply(self, arguments);\n            window.location.hash = '#' + href;\n        }\n\n        Object.defineProperties(self, {\n            path: {\n                enumerable: true,\n                writable: false,\n                value: path\n            },\n            options: {\n                enumerable: true,\n                writable: false,\n                value: options\n            },\n            href: {\n                enumerable: true,\n                value: href\n            },\n            go: { value: go },\n            replace: { value: replace },\n            encode: { value: encode },\n            decode: { value: decode },\n            toString: { value: function() { return href; } }\n        });\n    }\n\n    Object.defineProperty(cockpit, \"location\", {\n        enumerable: true,\n        get: function() {\n            if (!last_loc || last_loc.href !== get_window_location_hash())\n                last_loc = new Location();\n            return last_loc;\n        },\n        set: function(v) {\n            cockpit.location.go(v);\n        }\n    });\n\n    window.addEventListener(\"hashchange\", function() {\n        last_loc = null;\n        var hash = window.location.hash;\n        if (hash.indexOf(\"#\") === 0)\n            hash = hash.substring(1);\n        cockpit.hint(\"location\", { \"hash\": hash });\n        cockpit.dispatchEvent(\"locationchanged\");\n    });\n\n    /* ------------------------------------------------------------------------\n     * Cockpit jump\n     */\n\n    cockpit.jump = function jump(path, host) {\n        if (is_array(path))\n            path = \"/\" + path.map(encodeURIComponent).join(\"/\").replace(\"%40\", \"@\").replace(\"%3D\", \"=\").replace(/%2B/g, \"+\");\n        else\n            path = \"\" + path;\n\n        /* When host is not given (undefined), use current transport's host. If\n         * it is null, use localhost.\n         */\n        if (host === undefined)\n            host = cockpit.transport.host;\n\n        var options = { command: \"jump\", location: path, host: host };\n        cockpit.transport.inject(\"\\n\" + JSON.stringify(options));\n    };\n\n    /* ---------------------------------------------------------------------\n     * Cockpit Page Visibility\n     */\n\n    (function() {\n        var hiddenProp;\n        var hiddenHint = false;\n\n        function visibility_change() {\n            var value = document[hiddenProp];\n            if (!hiddenProp || typeof value === \"undefined\")\n                value = false;\n            if (value === false)\n                value = hiddenHint;\n            if (cockpit.hidden !== value) {\n                cockpit.hidden = value;\n                cockpit.dispatchEvent(\"visibilitychange\");\n            }\n        }\n\n        if (typeof document.hidden !== \"undefined\") {\n            hiddenProp = \"hidden\";\n            document.addEventListener(\"visibilitychange\", visibility_change);\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hiddenProp = \"mozHidden\";\n            document.addEventListener(\"mozvisibilitychange\", visibility_change);\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hiddenProp = \"msHidden\";\n            document.addEventListener(\"msvisibilitychange\", visibility_change);\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hiddenProp = \"webkitHidden\";\n            document.addEventListener(\"webkitvisibilitychange\", visibility_change);\n        }\n\n        /*\n         * Wait for changes in visibility of just our iframe. These are delivered\n         * via a hint message from the parent. For now we are the only handler of\n         * hint messages, so this is implemented rather simply on purpose.\n         */\n        process_hints = function(data) {\n            if (\"hidden\" in data) {\n                hiddenHint = data.hidden;\n                visibility_change();\n            }\n        };\n\n        /* The first time */\n        visibility_change();\n    }());\n\n    /* ---------------------------------------------------------------------\n     * Spawning\n     */\n\n    function ProcessError(options, name) {\n        this.problem = options.problem || null;\n        this.exit_status = options[\"exit-status\"];\n        if (this.exit_status === undefined)\n            this.exit_status = null;\n        this.exit_signal = options[\"exit-signal\"];\n        if (this.exit_signal === undefined)\n            this.exit_signal = null;\n        this.message = options.message;\n\n        if (this.message === undefined) {\n            if (this.problem)\n                this.message = cockpit.message(options.problem);\n            else if (this.exit_signal !== null)\n                this.message = cockpit.format(_(\"$0 killed with signal $1\"), name, this.exit_signal);\n            else if (this.exit_status !== undefined)\n                this.message = cockpit.format(_(\"$0 exited with code $1\"), name, this.exit_status);\n            else\n                this.message = cockpit.format(_(\"$0 failed\"), name);\n        } else {\n            this.message = this.message.trim();\n        }\n\n        this.toString = function() {\n            return this.message;\n        };\n    }\n\n    function spawn_debug() {\n        if (window.debugging == \"all\" || window.debugging == \"spawn\")\n            console.debug.apply(console, arguments);\n    }\n\n    /* public */\n    cockpit.spawn = function(command, options) {\n        var dfd = cockpit.defer();\n\n        var args = { \"payload\": \"stream\", \"spawn\": [] };\n        if (command instanceof Array) {\n            for (var i = 0; i < command.length; i++)\n                args[\"spawn\"].push(String(command[i]));\n        } else {\n            args[\"spawn\"].push(String(command));\n        }\n        if (options !== undefined)\n            extend(args, options);\n\n        var name = args[\"spawn\"][0] || \"process\";\n        var channel = cockpit.channel(args);\n\n        /* Callback that wants a stream response, see below */\n        var buffer = channel.buffer(null);\n\n        channel.addEventListener(\"close\", function(event, options) {\n            var data = buffer.squash();\n            spawn_debug(\"process closed:\", JSON.stringify(options));\n            if (data)\n                spawn_debug(\"process output:\", data);\n            if (options.message !== undefined)\n                spawn_debug(\"process error:\", options.message);\n\n            if (options.problem)\n                dfd.reject(new ProcessError(options, name));\n            else if (options[\"exit-status\"] || options[\"exit-signal\"])\n                dfd.reject(new ProcessError(options, name), data);\n            else if (options.message !== undefined)\n                dfd.resolve(data, options.message);\n            else\n                dfd.resolve(data);\n        });\n\n        var ret = dfd.promise;\n        ret.stream = function(callback) {\n            buffer.callback = callback.bind(ret);\n            return this;\n        };\n\n        ret.input = function(message, stream) {\n            if (message !== null && message !== undefined) {\n                spawn_debug(\"process input:\", message);\n                channel.send(message);\n            }\n            if (!stream)\n                channel.control({ command: \"done\" });\n            return this;\n        };\n\n        ret.close = function(problem) {\n            spawn_debug(\"process closing:\", problem);\n            if (channel.valid)\n                channel.close(problem);\n            return this;\n        };\n\n        return ret;\n    };\n\n    /* public */\n    cockpit.script = function(script, args, options) {\n        if (!options && is_plain_object(args)) {\n            options = args;\n            args = [];\n        }\n        var command = [ \"/bin/sh\", \"-c\", script, \"--\" ];\n        command.push.apply(command, args);\n        return cockpit.spawn(command, options);\n    };\n\n    function dbus_debug() {\n        if (window.debugging == \"all\" || window.debugging == \"dbus\")\n            console.debug.apply(console, arguments);\n    }\n\n    function DBusError(arg, arg1) {\n        if (typeof(arg) == \"string\") {\n            this.problem = arg;\n            this.name = null;\n            this.message = arg1 || cockpit.message(arg);\n        } else {\n            this.problem = null;\n            this.name = arg[0];\n            this.message = arg[1][0] || arg[0];\n        }\n        this.toString = function() {\n            return this.message;\n        };\n    }\n\n    function DBusCache() {\n        var self = this;\n\n        var callbacks = [ ];\n        self.data = { };\n        self.meta = { };\n\n        self.connect = function connect(path, iface, callback, first) {\n            var cb = [path, iface, callback];\n            if (first)\n                callbacks.unshift(cb);\n            else\n                callbacks.push(cb);\n            return {\n                remove: function remove() {\n                    var i, length = callbacks.length;\n                    for (i = 0; i < length; i++) {\n                        var cb = callbacks[i];\n                        if (cb[0] === path && cb[1] === iface && cb[2] === callback) {\n                            delete cb[i];\n                            break;\n                        }\n                    }\n                }\n            };\n        };\n\n        function emit(path, iface, props) {\n            var copy = callbacks.slice();\n            var i, length = copy.length;\n            for (i = 0; i < length; i++) {\n                var cb = copy[i];\n                if ((!cb[0] || cb[0] === path) &&\n                    (!cb[1] || cb[1] === iface)) {\n                    cb[2](props, path);\n                }\n            }\n        }\n\n        self.update = function update(path, iface, props) {\n            if (!self.data[path])\n                self.data[path] = { };\n            if (!self.data[path][iface])\n                self.data[path][iface] = props;\n            else\n                props = extend(self.data[path][iface], props);\n            emit(path, iface, props);\n        };\n\n        self.remove = function remove(path, iface) {\n            if (self.data[path]) {\n                delete self.data[path][iface];\n                emit(path, iface, null);\n            }\n        };\n\n        self.lookup = function lookup(path, iface) {\n            if (self.data[path])\n                return self.data[path][iface];\n            return undefined;\n        };\n\n        self.each = function each(iface, callback) {\n            var path, ifa;\n            for (path in self.data) {\n                for (iface in self.data[path]) {\n                    if (ifa == iface)\n                        callback(self.data[path][iface], path);\n                }\n            }\n        };\n\n        self.close = function close() {\n            self.data = { };\n            var copy = callbacks;\n            callbacks = [ ];\n            var i, length = copy.length;\n            for (i = 0; i < length; i++)\n                copy[i].callback();\n        };\n    }\n\n    function DBusProxy(client, cache, iface, path, options) {\n        var self = this;\n        event_mixin(self, { });\n\n        var valid = false;\n        var defined = false;\n        var waits = cockpit.defer();\n\n        /* No enumeration on these properties */\n        Object.defineProperties(self, {\n            \"client\": { value: client, enumerable: false, writable: false },\n            \"path\": { value: path, enumerable: false, writable: false },\n            \"iface\": { value: iface, enumerable: false, writable: false },\n            \"valid\": { get: function() { return valid; }, enumerable: false },\n            \"wait\": { enumerable: false, writable: false,\n                value: function(func) {\n                    if (func)\n                        waits.promise.always(func);\n                    return waits.promise;\n                }\n            },\n            \"call\": { value: function(name, args, options) { return client.call(path, iface, name, args, options); },\n                      enumerable: false, writable: false },\n            \"data\": { value: { }, enumerable: false }\n        });\n\n        if (typeof window.$ === \"function\") {\n            Object.defineProperty(self, window.$.expando, {\n                value: { }, writable: true, enumerable: false\n            });\n        }\n\n        if (!options)\n            options = { };\n\n        function define() {\n            if (!cache.meta[iface])\n                return;\n\n            var meta = cache.meta[iface];\n            defined = true;\n\n            Object.keys(meta.methods || { }).forEach(function(name) {\n                if (name[0].toLowerCase() == name[0])\n                    return; /* Only map upper case */\n\n                /* Again, make sure these don't show up in enumerations */\n                Object.defineProperty(self, name, {\n                    enumerable: false,\n                    value: function() {\n                        var dfd = cockpit.defer();\n                        client.call(path, iface, name, Array.prototype.slice.call(arguments)).\n                            done(function(reply) { dfd.resolve.apply(dfd, reply); }).\n                            fail(function(ex) { dfd.reject(ex); });\n                        return dfd.promise;\n                    }\n                });\n            });\n\n            Object.keys(meta.properties || { }).forEach(function(name) {\n                if (name[0].toLowerCase() == name[0])\n                    return; /* Only map upper case */\n\n                var config = {\n                    enumerable: true,\n                    get: function() { return self.data[name]; },\n                    set: function(v) { throw name + \"is not writable\"; }\n                };\n\n                var prop = meta.properties[name];\n                if (prop.flags && prop.flags.indexOf('w') !== -1) {\n                    config.set = function(v) {\n                        client.call(path, \"org.freedesktop.DBus.Properties\", \"Set\",\n                                [ iface, name, cockpit.variant(prop.type, v) ]).\n                            fail(function(ex) {\n                                console.log(\"Couldn't set \" + iface + \" \" + name +\n                                            \" at \" + path + \": \" + ex);\n                            });\n                    };\n                }\n\n                /* Again, make sure these don't show up in enumerations */\n                Object.defineProperty(self, name, config);\n            });\n        }\n\n        function update(props) {\n            if (props) {\n                extend(self.data, props);\n                if (!defined)\n                    define();\n                valid = true;\n            } else {\n                valid = false;\n            }\n            self.dispatchEvent(\"changed\", props);\n        }\n\n        cache.connect(path, iface, update, true);\n        update(cache.lookup(path, iface));\n\n        function signal(path, iface, name, args) {\n            self.dispatchEvent(\"signal\", name, args);\n            if (name[0].toLowerCase() != name[0]) {\n                args = args.slice();\n                args.unshift(name);\n                self.dispatchEvent.apply(self, args);\n            }\n        }\n\n        client.subscribe({ \"path\": path, \"interface\": iface }, signal, options.subscribe !== false);\n\n        function waited(ex) {\n            if (valid)\n                waits.resolve();\n            else\n                waits.reject(ex);\n        }\n\n        /* If watching then do a proper watch, otherwise object is done */\n        if (options.watch !== false)\n            client.watch({ \"path\": path, \"interface\": iface }).always(waited);\n        else\n            waited();\n    }\n\n    function DBusProxies(client, cache, iface, path_namespace, options) {\n        var self = this;\n        event_mixin(self, { });\n\n        var waits;\n\n        Object.defineProperties(self, {\n            \"client\": { value: client, enumerable: false, writable: false },\n            \"iface\": { value: iface, enumerable: false, writable: false },\n            \"path_namespace\": { value: path_namespace, enumerable: false, writable: false },\n            \"wait\": { enumerable: false, writable: false,\n                value: function(func) {\n                    if (func)\n                        waits.always(func);\n                    return waits;\n                }\n            }\n        });\n\n        if (typeof window.$ === \"function\") {\n            Object.defineProperty(self, window.$.expando, {\n                value: { }, writable: true, enumerable: false\n            });\n        }\n\n        /* Subscribe to signals once for all proxies */\n        var match = { \"interface\": iface, \"path_namespace\": path_namespace };\n\n        /* Callbacks added by proxies */\n        client.subscribe(match);\n\n        /* Watch for property changes */\n        if (options.watch !== false) {\n            waits = client.watch(match);\n        } else {\n            waits = cockpit.defer().resolve().promise;\n        }\n\n        /* Already added watch/subscribe, tell proxies not to */\n        options = extend({ watch: false, subscribe: false }, options);\n\n        function update(props, path) {\n            var proxy = self[path];\n            if (!path) {\n                return;\n            } else if (!props && proxy) {\n                delete self[path];\n                self.dispatchEvent(\"removed\", proxy);\n            } else if (props) {\n                if (!proxy) {\n                    proxy = self[path] = client.proxy(iface, path, options);\n                    self.dispatchEvent(\"added\", proxy);\n                }\n                self.dispatchEvent(\"changed\", proxy);\n            }\n        }\n\n        cache.connect(null, iface, update, false);\n        cache.each(iface, update);\n    }\n\n    function DBusClient(name, options) {\n        var self = this;\n        event_mixin(self, { });\n\n        var args = { };\n        var track = false;\n        var owner = null;\n\n        if (options) {\n            if (options.track)\n                track = true;\n\n            delete options['track'];\n            extend(args, options);\n        }\n        args.payload = \"dbus-json3\";\n        if (name)\n            args.name = name;\n        self.options = options;\n        self.unique_name = null;\n\n        dbus_debug(\"dbus open: \", args);\n\n        var channel = cockpit.channel(args);\n        var subscribers = { };\n        var published = { };\n        var calls = { };\n        var cache;\n\n        /* The problem we closed with */\n        var closed;\n\n        self.constructors = { \"*\": DBusProxy };\n\n        /* Allows waiting on the channel if necessary */\n        self.wait = channel.wait;\n\n        function ensure_cache() {\n            if (!cache)\n                cache = new DBusCache();\n        }\n\n        function send(payload) {\n            if (channel && channel.valid) {\n                dbus_debug(\"dbus:\", payload);\n                channel.send(payload);\n                return true;\n            }\n            return false;\n        }\n\n        function matches(signal, match) {\n            if (match.path && signal[0] !== match.path)\n                return false;\n            if (match.path_namespace && signal[0].indexOf(match.path_namespace) !== 0)\n                return false;\n            if (match[\"interface\"] && signal[1] !== match[\"interface\"])\n                return false;\n            if (match.member && signal[2] !== match.member)\n                return false;\n            if (match.arg0 && (!signal[3] || signal[3][0] !== match.arg0))\n                return false;\n            return true;\n        }\n\n        function on_message(event, payload) {\n            dbus_debug(\"dbus:\", payload);\n            var msg;\n            try {\n                msg = JSON.parse(payload);\n            } catch(ex) {\n                console.warn(\"received invalid dbus json message:\", ex);\n            }\n            if (msg === undefined) {\n                channel.close({\"problem\": \"protocol-error\"});\n                return;\n            }\n            var dfd, options;\n            if (msg.id !== undefined)\n                dfd = calls[msg.id];\n            if (msg.reply) {\n                if (dfd) {\n                    options = { };\n                    if (msg.type)\n                        options.type = msg.type;\n                    if (msg.flags)\n                        options.flags = msg.flags;\n                    dfd.resolve(msg.reply[0] || [], options);\n                    delete calls[msg.id];\n                }\n                return;\n\n            } else if (msg.error) {\n                if (dfd) {\n                    dfd.reject(new DBusError(msg.error));\n                    delete calls[msg.id];\n                }\n                return;\n            }\n\n            /*\n             * The above promise resolutions or failures are triggered via\n             * later_invoke(). In order to preserve ordering guarantees we\n             * also have to process other events that way too.\n             */\n            later_invoke(function() {\n                var id, subscription;\n                if (msg.signal) {\n                    for (id in subscribers) {\n                        subscription = subscribers[id];\n                        if (subscription.callback) {\n                            if (matches(msg.signal, subscription.match))\n                                subscription.callback.apply(self, msg.signal);\n                        }\n                    }\n                } else if (msg.call) {\n                    handle(msg.call, msg.id);\n                } else if (msg.notify) {\n                    notify(msg.notify);\n                } else if (msg.meta) {\n                    meta(msg.meta);\n                } else if (msg.owner !== undefined) {\n                    self.dispatchEvent(\"owner\", msg.owner);\n\n                    /*\n                     * We won't get this signal with the same\n                     * owner twice so if we've seen an owner\n                     * before that means it has changed.\n                     */\n                    if (track && owner)\n                        self.close();\n\n                    owner = msg.owner;\n                } else {\n                    dbus_debug(\"received unexpected dbus json message:\", payload);\n                }\n            });\n        }\n\n        function meta(data) {\n            ensure_cache();\n            extend(cache.meta, data);\n            self.dispatchEvent(\"meta\", data);\n        }\n\n        self.meta = function(data, options) {\n            if (!channel || !channel.valid)\n                return;\n\n            var message = extend({ }, options, {\n                \"meta\": data\n            });\n\n            send(JSON.stringify(message));\n            meta(data);\n        };\n\n        function notify(data) {\n            ensure_cache();\n            var path, iface, props;\n            for (path in data) {\n                for (iface in data[path]) {\n                    props = data[path][iface];\n                    if (!props)\n                        cache.remove(path, iface);\n                    else\n                        cache.update(path, iface, props);\n                }\n            }\n            self.dispatchEvent(\"notify\", data);\n        }\n\n        this.notify = notify;\n\n        function close_perform(options) {\n            closed = options.problem || \"disconnected\";\n            var id, outstanding = calls;\n            calls = { };\n            for (id in outstanding) {\n                outstanding[id].reject(new DBusError(closed, options.message));\n            }\n            self.dispatchEvent(\"close\", options);\n        }\n\n        this.close = function close(options) {\n            if (typeof options == \"string\")\n                options = { \"problem\": options };\n            if (!options)\n                options = { };\n            if (channel)\n                channel.close(options);\n            else\n                close_perform(options);\n        };\n\n        function on_ready(event, message) {\n            dbus_debug(\"dbus ready:\", options);\n            self.unique_name = message[\"unique-name\"];\n        }\n\n        function on_close(event, options) {\n            dbus_debug(\"dbus close:\", options);\n            channel.removeEventListener(\"ready\", on_ready);\n            channel.removeEventListener(\"message\", on_message);\n            channel.removeEventListener(\"close\", on_close);\n            channel = null;\n            close_perform(options);\n        }\n\n        channel.addEventListener(\"ready\", on_ready);\n        channel.addEventListener(\"message\", on_message);\n        channel.addEventListener(\"close\", on_close);\n\n        var last_cookie = 1;\n\n        this.call = function call(path, iface, method, args, options) {\n            var dfd = cockpit.defer();\n            var id = String(last_cookie);\n            last_cookie++;\n            var method_call = extend({ }, options, {\n                \"call\": [ path, iface, method, args || [] ],\n                \"id\": id\n            });\n\n            var msg = JSON.stringify(method_call);\n            if (send(msg))\n                calls[id] = dfd;\n            else\n                dfd.reject(new DBusError(closed));\n\n            return dfd.promise;\n        };\n\n        self.signal = function signal(path, iface, member, args, options) {\n            if (!channel || !channel.valid)\n                return;\n\n            var message = extend({ }, options, {\n                \"signal\": [ path, iface, member, args || [] ]\n            });\n\n            send(JSON.stringify(message));\n        };\n\n        this.subscribe = function subscribe(match, callback, rule) {\n            var msg, subscription = {\n                match: extend({ }, match),\n                callback: callback\n            };\n\n            if (rule !== false)\n                send(JSON.stringify({ \"add-match\": subscription.match }));\n\n            var id;\n            if (callback) {\n                id = String(last_cookie);\n                last_cookie++;\n                subscribers[id] = subscription;\n            }\n\n            return {\n                remove: function() {\n                    var prev;\n                    if (id) {\n                        prev = subscribers[id];\n                        if (prev)\n                            delete subscribers[id];\n                    }\n                    if (rule !== false && prev)\n                        send(JSON.stringify({ \"remove-match\": prev.match }));\n                }\n            };\n        };\n\n        self.watch = function watch(path) {\n            var match;\n            if (is_plain_object(path))\n                match = extend({ }, path);\n            else\n                match = { path: String(path) };\n\n            var id = String(last_cookie);\n            last_cookie++;\n            var dfd = cockpit.defer();\n\n            var msg = JSON.stringify({ \"watch\": match, \"id\": id });\n            if (send(msg))\n                calls[id] = dfd;\n            else\n                dfd.reject(new DBusError(closed));\n\n            var ret = dfd.promise;\n            ret.remove = function remove() {\n                if (id in calls) {\n                    dfd.reject(new DBusError(\"cancelled\"));\n                    delete calls[id];\n                }\n                send(JSON.stringify({ \"unwatch\": match }));\n            };\n            return ret;\n        };\n\n        function unknown_interface(path, iface) {\n            var message = \"DBus interface \" + iface + \" not available at \" + path;\n            return cockpit.reject(new DBusError([ \"org.freedesktop.DBus.Error.UnknownInterface\", [ message ] ]));\n        }\n\n        function unknown_method(path, iface, method) {\n            var message = \"DBus method \" + iface + \" \" + method + \" not available at \" + path;\n            return cockpit.reject(new DBusError([ \"org.freedesktop.DBus.Error.UnknownMethod\", [ message ] ]));\n        }\n\n        function not_implemented(path, iface, method) {\n            console.warn(\"method is not implemented properly: \", path, iface, method);\n            return unknown_method(path, iface, method);\n        }\n\n        function invoke(call) {\n            var path = call[0];\n            var iface = call[1];\n            var method = call[2];\n            var object = published[path + \"\\n\" + iface];\n            var info = cache.meta[iface];\n            if (!object || !info)\n                return unknown_interface(path, iface);\n            if (!info.methods || !(method in info.methods))\n                return unknown_method(path, iface, method);\n            if (typeof object[method] != \"function\")\n                return not_implemented(path, iface, method);\n            return object[method].apply(object, call[3]);\n        }\n\n        function handle(call, cookie) {\n            var result = invoke(call);\n            if (!cookie)\n                return; /* Discard result */\n            cockpit.when(result).then(function() {\n                var out = Array.prototype.slice.call(arguments, 0);\n                if (out.length == 1 && typeof out[0] == \"undefined\")\n                    out = [ ];\n                send(JSON.stringify({ \"reply\": [ out ], \"id\": cookie }));\n            }, function(ex) {\n                var error = [ ];\n                error[0] = ex.name || \" org.freedesktop.DBus.Error.Failed\";\n                error[1] = [ cockpit.message(ex) || error[0] ];\n                send(JSON.stringify({ \"error\": error, \"id\": cookie }));\n            });\n        }\n\n        self.publish = function(path, iface, object, options) {\n            var publish = [ path, iface ];\n\n            var id = String(last_cookie);\n            last_cookie++;\n            var dfd = calls[id] = cockpit.defer();\n\n            var payload = JSON.stringify(extend({ }, options, {\n                \"publish\": publish,\n                \"id\": id,\n            }));\n\n            if (send(payload))\n                calls[id] = dfd;\n            else\n                dfd.reject(new DBusError(closed));\n\n            var key = path + \"\\n\" + iface;\n            dfd.promise.then(function() {\n                published[key] = object;\n            });\n\n            /* Return a way to remove this object */\n            var ret = dfd.promise;\n            ret.remove = function remove() {\n                if (id in calls) {\n                    dfd.reject(new DBusError(\"cancelled\"));\n                    delete calls[id];\n                }\n                delete published[key];\n                send(JSON.stringify({ \"unpublish\": publish }));\n            };\n            return ret;\n        };\n\n        self.proxy = function proxy(iface, path, options) {\n            if (!iface)\n                iface = name;\n            iface = String(iface);\n            if (!path)\n                path = \"/\" + iface.replace(/\\./g, \"/\");\n            var Constructor = self.constructors[iface];\n            if (!Constructor)\n                Constructor = self.constructors[\"*\"];\n            if (!options)\n                options = { };\n            ensure_cache();\n            return new Constructor(self, cache, iface, String(path), options);\n        };\n\n        self.proxies = function proxies(iface, path_namespace, options) {\n            if (!iface)\n                iface = name;\n            if (!path_namespace)\n                path_namespace = \"/\";\n            if (!options)\n                options = { };\n            ensure_cache();\n            return new DBusProxies(self, cache, String(iface), String(path_namespace), options);\n        };\n\n    }\n\n    /* Well known busses */\n    var shared_dbus = {\n        internal: null,\n        session: null,\n        system: null,\n    };\n\n    /* public */\n    cockpit.dbus = function dbus(name, options) {\n        if (!options)\n            options = { \"bus\": \"system\" };\n\n        /*\n         * Figure out if this we should use a shared bus.\n         *\n         * This is only the case if a null name *and* the\n         * options are just a simple { \"bus\": \"xxxx\" }\n         */\n        var keys = Object.keys(options);\n        var bus = options.bus;\n        var shared = !name && keys.length == 1 && bus in shared_dbus;\n\n        if (shared && shared_dbus[bus])\n            return shared_dbus[bus];\n\n        var client = new DBusClient(name, options);\n\n        /*\n         * Store the shared bus for next time. Override the\n         * close function to only work when a problem is\n         * indicated.\n         */\n        var old_close;\n        if (shared) {\n            client.close = function() {\n                if (arguments.length > 0)\n                    old_close.apply(client, arguments);\n            };\n            client.addEventListener(\"close\", function() {\n                if (shared_dbus[bus] == client)\n                    shared_dbus[bus] = null;\n            });\n            shared_dbus[bus] = client;\n        }\n\n        return client;\n    };\n\n    cockpit.variant = function variant(type, value) {\n        return { 'v': value, 't': type };\n    };\n\n    cockpit.byte_array = function byte_array(string) {\n        return window.btoa(string);\n    };\n\n    /* File access\n     */\n\n    cockpit.file = function file(path, options) {\n        options = options || { };\n        var binary = options.binary;\n\n        var self = {\n            path: path,\n            read: read,\n            replace: replace,\n            modify: modify,\n\n            watch: watch,\n\n            close: close\n        };\n\n        var base_channel_options = extend({ }, options);\n        delete base_channel_options.syntax;\n\n        function parse(str) {\n            if (options.syntax && options.syntax.parse)\n                return options.syntax.parse(str);\n            else\n                return str;\n        }\n\n        function stringify(obj) {\n            if (options.syntax && options.syntax.stringify)\n                return options.syntax.stringify(obj);\n            else\n                return obj;\n        }\n\n        var read_promise = null;\n        var read_channel;\n\n        function read() {\n            if (read_promise)\n                return read_promise;\n\n            var dfd = cockpit.defer();\n            var opts = extend({ }, base_channel_options, {\n                payload: \"fsread1\",\n                path: path\n            });\n\n            function try_read() {\n                read_channel = cockpit.channel(opts);\n                var content_parts = [ ];\n                read_channel.addEventListener(\"message\", function (event, message) {\n                    content_parts.push(message);\n                });\n                read_channel.addEventListener(\"close\", function (event, message) {\n                    read_channel = null;\n\n                    if (message.problem == \"change-conflict\") {\n                        try_read();\n                        return;\n                    }\n\n                    read_promise = null;\n\n                    if (message.problem) {\n                        var error = new BasicError(message.problem, message.message);\n                        fire_watch_callbacks(null, null, error);\n                        dfd.reject(error);\n                        return;\n                    }\n\n                    var content;\n                    if (message.tag == \"-\")\n                        content = null;\n                    else {\n                        try {\n                            content = parse(join_data(content_parts, binary));\n                        } catch (e) {\n                            fire_watch_callbacks(null, null, e);\n                            dfd.reject(e);\n                            return;\n                        }\n                    }\n\n                    fire_watch_callbacks(content, message.tag);\n                    dfd.resolve(content, message.tag);\n                });\n            }\n\n            try_read();\n\n            read_promise = dfd.promise;\n            return read_promise;\n        }\n\n        var replace_channel = null;\n\n        function replace(new_content, expected_tag) {\n            var dfd = cockpit.defer();\n\n            var file_content;\n            try {\n                if (new_content === null)\n                    file_content = null;\n                else\n                    file_content = stringify(new_content);\n            }\n            catch (e) {\n                dfd.reject(e);\n                return dfd.promise;\n            }\n\n            if (replace_channel)\n                replace_channel.close(\"abort\");\n\n            var opts = extend({ }, base_channel_options, {\n                payload: \"fsreplace1\",\n                path: path,\n                tag: expected_tag\n            });\n            replace_channel = cockpit.channel(opts);\n\n            replace_channel.addEventListener(\"close\", function (event, message) {\n                replace_channel = null;\n                if (message.problem) {\n                    dfd.reject(new BasicError(message.problem, message.message));\n                } else {\n                    fire_watch_callbacks(new_content, message.tag);\n                    dfd.resolve(message.tag);\n                }\n            });\n\n            var len = 0, binary = false;\n            if (file_content) {\n                if (file_content.byteLength) {\n                    len = file_content.byteLength;\n                    binary = true;\n                } else if (file_content.length) {\n                    len = file_content.length;\n                }\n            }\n\n            var i, n, batch = 16 * 1024;\n            for (i = 0; i < len; i += batch) {\n                n = Math.min(len - i, batch);\n                if (binary)\n                    replace_channel.send(new window.Uint8Array(file_content.buffer, i, n));\n                else\n                    replace_channel.send(file_content.substr(i, n));\n            }\n\n            replace_channel.control({ command: \"done\" });\n            return dfd.promise;\n        }\n\n        function modify(callback, initial_content, initial_tag) {\n            var dfd = cockpit.defer();\n\n            function update(content, tag) {\n                var new_content = callback(content);\n                if (new_content === undefined)\n                    new_content = content;\n                replace(new_content, tag).\n                    done(function (new_tag) {\n                        dfd.resolve(new_content, new_tag);\n                    }).\n                    fail(function (error) {\n                        if (error.problem == \"change-conflict\")\n                            read_then_update();\n                        else\n                            dfd.reject(error);\n                    });\n            }\n\n            function read_then_update() {\n                read().\n                    done(update).\n                    fail (function (error) {\n                        dfd.reject(error);\n                    });\n            }\n\n            if (initial_content === undefined)\n                read_then_update();\n            else\n                update(initial_content, initial_tag);\n\n            return dfd.promise;\n        }\n\n        var watch_callbacks = [];\n        var n_watch_callbacks = 0;\n\n        var watch_channel = null;\n        var watch_tag;\n\n        function ensure_watch_channel() {\n            if (n_watch_callbacks > 0) {\n                if (watch_channel)\n                    return;\n\n                var opts = extend({ }, base_channel_options, {\n                    payload: \"fswatch1\",\n                    path: path\n                });\n                watch_channel = cockpit.channel(opts);\n                watch_channel.addEventListener(\"message\", function (event, message_string) {\n                    var message;\n                    try      { message = JSON.parse(message_string); }\n                    catch(e) { message = null; }\n                    if (message && message.path == path && message.tag && message.tag != watch_tag)\n                        read();\n                });\n            } else {\n                if (watch_channel) {\n                    watch_channel.close();\n                    watch_channel = null;\n                }\n            }\n        }\n\n        function fire_watch_callbacks(/* content, tag, error */) {\n            watch_tag = arguments[1] || null;\n            invoke_functions(watch_callbacks, self, arguments);\n        }\n\n        function watch(callback) {\n            if (callback)\n                watch_callbacks.push(callback);\n            n_watch_callbacks += 1;\n            ensure_watch_channel();\n\n            watch_tag = null;\n            read();\n\n            return {\n                remove: function () {\n                    var index;\n                    if (callback) {\n                        index = watch_callbacks.indexOf(callback);\n                        if (index > -1)\n                            watch_callbacks[index] = null;\n                    }\n                    n_watch_callbacks -= 1;\n                    ensure_watch_channel();\n                }\n            };\n        }\n\n        function close() {\n            if (read_channel)\n                read_channel.close(\"cancelled\");\n            if (replace_channel)\n                replace_channel.close(\"cancelled\");\n            if (watch_channel)\n                watch_channel.close(\"cancelled\");\n        }\n\n        return self;\n    };\n\n    /* ---------------------------------------------------------------------\n     * Localization\n     */\n\n    var po_data = { };\n    var po_plural;\n\n    cockpit.language = undefined;\n\n    cockpit.locale = function locale(po) {\n        var lang = cockpit.language || \"en\";\n        var header;\n\n        if (po) {\n            extend(po_data, po);\n            header = po[\"\"];\n        } else if (po === null) {\n            po_data = { };\n        }\n\n        if (header) {\n            if (header[\"plural-forms\"])\n                po_plural = header[\"plural-forms\"];\n            if (header[\"language\"])\n                lang = header[\"language\"];\n        }\n\n        cockpit.language = lang;\n    };\n\n    cockpit.translate = function translate(/* ... */) {\n\tvar what;\n\n        /* Called without arguments, entire document */\n\tif (arguments.length === 0)\n            what = [ document ];\n\n        /* Called with a single array like argument */\n        else if (arguments.length === 1 && arguments[0].length)\n            what = arguments[0];\n\n        /* Called with 1 or more element arguments */\n        else\n            what = arguments;\n\n        /* Translate all the things */\n        var w, wlen, val, i, ilen, t, tlen, list, tasks, el;\n\tfor (w = 0, wlen = what.length; w < wlen; w++) {\n\n            /* The list of things to translate */\n            list = null;\n            if (what[w].querySelectorAll)\n                list = what[w].querySelectorAll(\"[translatable], [translate]\");\n            if (!list)\n                continue;\n\n            /* Each element */\n            for (i = 0, ilen = list.length; i < ilen; i++) {\n                el = list[i];\n\n                val = el.getAttribute(\"translate\") || el.getAttribute(\"translatable\") || \"yes\";\n                if (val == \"no\")\n                    continue;\n\n                /* Each thing to translate */\n                tasks = val.split(\" \");\n                val = el.getAttribute(\"translate-context\") || el.getAttribute(\"context\");\n                for (t = 0, tlen = tasks.length; t < tlen; t++) {\n                    if (tasks[t] == \"yes\" || tasks[t] == \"translate\")\n                        el.textContent = cockpit.gettext(val, el.textContent);\n                    else if (tasks[t])\n                        el.setAttribute(tasks[t], cockpit.gettext(val, el.getAttribute(tasks[t]) || \"\"));\n                }\n\n                /* Mark this thing as translated */\n                el.removeAttribute(\"translatable\");\n                el.removeAttribute(\"translate\");\n            }\n        }\n    };\n\n    cockpit.gettext = function gettext(context, string) {\n        /* Missing first parameter */\n        if (arguments.length == 1) {\n            string = context;\n            context = undefined;\n        }\n\n        var key = context ? context + '\\u0004' + string : string;\n        if (po_data) {\n            var translated = po_data[key];\n            if (translated && translated[1])\n                return translated[1];\n        }\n        return string;\n    };\n\n    function imply( val ) {\n        return (val === true ? 1 : val ? val : 0);\n    }\n\n    cockpit.ngettext = function ngettext(context, string1, stringN, num) {\n        /* Missing first parameter */\n        if (arguments.length == 3) {\n            num = stringN;\n            stringN = string1;\n            string1 = context;\n            context = undefined;\n        }\n\n        var key = context ? context + '\\u0004' + string1 : string1;\n        if (po_data && po_plural) {\n            var translated = po_data[key];\n            if (translated) {\n                var i = imply(po_plural(num)) + 1;\n                if (translated[i])\n                    return translated[i];\n            }\n        }\n        if (num == 1)\n            return string1;\n        return stringN;\n    };\n\n    cockpit.noop = function noop(arg0, arg1) {\n        return arguments[arguments.length - 1];\n    };\n\n    /* Only for _() calls here in the cockpit code */\n    var _ = cockpit.gettext;\n\n    cockpit.message = function message(arg) {\n        if (arg.message)\n            return arg.message;\n\n        var problem = null;\n        if (arg.problem)\n            problem = arg.problem;\n        else\n            problem = arg + \"\";\n        if (problem == \"terminated\")\n            return _(\"Your session has been terminated.\");\n        else if (problem == \"no-session\")\n            return _(\"Your session has expired. Please log in again.\");\n        else if (problem == \"access-denied\")\n            return _(\"Not permitted to perform this action.\");\n        else if (problem == \"authentication-failed\")\n            return _(\"Login failed\");\n        else if (problem == \"authentication-not-supported\")\n            return _(\"The server refused to authenticate using any supported methods.\");\n        else if (problem == \"unknown-hostkey\")\n            return _(\"Untrusted host\");\n        else if (problem == \"unknown-host\")\n            return _(\"Untrusted host\");\n        else if (problem == \"invalid-hostkey\")\n            return _(\"Host key is incorrect\");\n        else if (problem == \"internal-error\")\n            return _(\"Internal error\");\n        else if (problem == \"timeout\")\n            return _(\"Connection has timed out.\");\n        else if (problem == \"no-cockpit\")\n            return _(\"Cockpit is not installed on the system.\");\n        else if (problem == \"no-forwarding\")\n            return _(\"Cannot forward login credentials\");\n        else if (problem == \"disconnected\")\n            return _(\"Server has closed the connection.\");\n        else if (problem == \"not-supported\")\n            return _(\"Cockpit is not compatible with the software on the system.\");\n        else if (problem == \"no-host\")\n            return _(\"Cockpit could not contact the given host.\");\n        else if (problem == \"too-large\")\n            return _(\"Too much data\");\n        else\n            return problem;\n    };\n\n    function HttpError(arg0, arg1, message) {\n        this.status = parseInt(arg0, 10);\n        this.reason = arg1;\n        this.message = message || arg1;\n        this.problem = null;\n\n        this.valueOf = function() {\n            return this.status;\n        };\n        this.toString = function() {\n            return this.status + \" \" + this.message;\n        };\n    }\n\n    function http_debug() {\n        if (window.debugging == \"all\" || window.debugging == \"http\")\n            console.debug.apply(console, arguments);\n    }\n\n    function find_header(headers, name) {\n        if (!headers)\n            return undefined;\n        name = name.toLowerCase();\n        for (var head in headers) {\n            if (head.toLowerCase() == name)\n                return headers[head];\n        }\n        return undefined;\n    }\n\n    function HttpClient(endpoint, options) {\n        var self = this;\n\n        self.options = options;\n        options.payload = \"http-stream2\";\n\n        var active_requests = [ ];\n\n        if (endpoint !== undefined) {\n            if (endpoint.indexOf && endpoint.indexOf(\"/\") === 0) {\n                options.unix = endpoint;\n            } else {\n                var port = parseInt(endpoint, 10);\n                if (!isNaN(port))\n                    options.port = port;\n                else\n                    throw \"The endpoint must be either a unix path or port number\";\n            }\n        }\n\n        if (options.address) {\n            if (!options.capabilities)\n                options.capabilities = [];\n            options.capabilities.push(\"address\");\n        }\n\n        function param(obj) {\n            return Object.keys(obj).map(function(k) {\n                return encodeURIComponent(k) + '=' + encodeURIComponent(obj[k]);\n            }).join('&').split('%20').join('+'); /* split/join because phantomjs */\n        }\n\n        self.request = function request(req) {\n            var dfd = cockpit.defer();\n            var ret = dfd.promise;\n\n            if (!req.path)\n                req.path = \"/\";\n            if (!req.method)\n                req.method = \"GET\";\n            if (req.params) {\n                if (req.path.indexOf(\"?\") === -1)\n                    req.path += \"?\" + param(req.params);\n                else\n                    req.path += \"&\" + param(req.params);\n            }\n            delete req.params;\n\n            var input = req.body;\n            delete req.body;\n\n            var headers = req.headers;\n            delete req.headers;\n\n            extend(req, options);\n\n            /* Combine the headers */\n            if (options.headers && headers)\n                req.headers = extend({ }, options.headers, headers);\n            else if (options.headers)\n                req.headers = options.headers;\n            else\n                req.headers = headers;\n\n            http_debug(\"http request:\", JSON.stringify(req));\n\n            /* We need a channel for the request */\n            var channel = cockpit.channel(req);\n\n            if (input !== undefined) {\n                if (input !== \"\") {\n                    http_debug(\"http input:\", input);\n                    channel.send(input);\n                }\n                http_debug(\"http done\");\n                channel.control({ command: \"done\" });\n            }\n\n            /* Callbacks that want to stream or get headers */\n            var streamer = null;\n            var responsers = null;\n\n            var resp = null;\n\n            var buffer = channel.buffer(function(data) {\n                /* Fire any streamers */\n                if (resp && resp.status >= 200 && resp.status <= 299 && streamer)\n                    return streamer.call(ret, data);\n                return 0;\n            });\n\n            function on_control(event, options) {\n                /* Anyone looking for response details? */\n                if (options.command == \"response\") {\n                    resp = options;\n                    if (responsers) {\n                        resp.headers = resp.headers || { };\n                        invoke_functions(responsers, ret, [resp.status, resp.headers]);\n                    }\n                }\n            }\n\n            function on_close(event, options) {\n                var pos = active_requests.indexOf(ret);\n                if (pos >= 0)\n                    active_requests.splice(pos, 1);\n\n                if (options.problem) {\n                    http_debug(\"http problem: \", options.problem);\n                    dfd.reject(new BasicError(options.problem));\n\n                } else {\n                    var body = buffer.squash();\n\n                    /* An error, fail here */\n                    if (resp && (resp.status < 200 || resp.status > 299)) {\n                        var message;\n                        var type = find_header(resp.headers, \"Content-Type\");\n                        if (type && !channel.binary) {\n                            if (type.indexOf(\"text/plain\") === 0)\n                                message = body;\n                        }\n                        http_debug(\"http status: \", resp.status);\n                        dfd.reject(new HttpError(resp.status, resp.reason, message), body);\n\n                    } else {\n                        http_debug(\"http done\");\n                        dfd.resolve(body);\n                    }\n                }\n\n                channel.removeEventListener(\"control\", on_control);\n                channel.removeEventListener(\"close\", on_close);\n            }\n\n            channel.addEventListener(\"control\", on_control);\n            channel.addEventListener(\"close\", on_close);\n\n            ret.stream = function(callback) {\n                streamer = callback;\n                return ret;\n            };\n            ret.response = function(callback) {\n                if (responsers === null)\n                    responsers = [];\n                responsers.push(callback);\n                return ret;\n            };\n            ret.input = function(message, stream) {\n                if (message !== null && message !== undefined) {\n                    http_debug(\"http input:\", message);\n                    channel.send(message);\n                }\n                if (!stream) {\n                    http_debug(\"http done\");\n                    channel.control({ command: \"done\" });\n                }\n                return ret;\n            };\n            ret.close = function(problem) {\n                http_debug(\"http closing:\", problem);\n                channel.close(problem);\n                return ret;\n            };\n\n            active_requests.push(ret);\n            return ret;\n        };\n\n        self.get = function get(path, params, headers) {\n            return self.request({\n                \"method\": \"GET\",\n                \"params\": params,\n                \"path\": path,\n                \"body\": \"\",\n                \"headers\": headers\n            });\n        };\n\n        self.post = function post(path, body, headers) {\n            headers = headers || { };\n\n            if (is_plain_object(body) || is_array(body)) {\n                body = JSON.stringify(body);\n                if (find_header(headers, \"Content-Type\") === undefined)\n                    headers[\"Content-Type\"] = \"application/json\";\n            } else if (body === undefined || body === null) {\n                body = \"\";\n            } else if (typeof body !== \"string\") {\n                body = String(body);\n            }\n\n            return self.request({\n                \"method\": \"POST\",\n                \"path\": path,\n                \"body\": body,\n                \"headers\": headers\n            });\n        };\n\n        self.close = function close(problem) {\n            var reqs = active_requests.slice();\n            for (var i = 0; i < reqs.length; i++)\n                reqs[i].close(problem);\n        };\n\n    }\n\n    /* public */\n    cockpit.http = function(endpoint, options) {\n        if (is_plain_object(endpoint) && options === undefined) {\n            options = endpoint;\n            endpoint = undefined;\n        }\n        return new HttpClient(endpoint, options || { });\n    };\n\n    /* ---------------------------------------------------------------------\n     * Permission\n     */\n\n    var authority = null;\n\n    function Permission(options) {\n        var self = this;\n        event_mixin(self, { });\n\n        self.allowed = null;\n        self.user = options ? options.user : null;\n\n        var group = null;\n        var admin = false;\n\n        if (options)\n            group = options.group;\n\n        if (options && options.admin)\n            admin = true;\n\n        function decide(user) {\n            if (user.id === 0)\n                return true;\n\n            if (user.groups) {\n                var allowed = false;\n                user.groups.forEach(function(name) {\n                    if (name == group) {\n                        allowed = true;\n                        return false;\n                    }\n                    if (admin && (name == \"wheel\" || name == \"sudo\")) {\n                        allowed = true;\n                        return false;\n                    }\n                });\n                return allowed;\n            }\n\n            if (user.id === undefined)\n                return null;\n\n            return false;\n        }\n\n        if (self.user) {\n            self.allowed = decide(self.user);\n        } else {\n            cockpit.user().done(function (user) {\n                self.user = user;\n                var allowed = decide(user);\n                if (self.allowed !== allowed) {\n                    self.allowed = allowed;\n                    self.dispatchEvent(\"changed\");\n                }\n            });\n        }\n\n        self.close = function close() {\n            /* no-op for now */\n        };\n    }\n\n    cockpit.permission = function permission(arg) {\n        return new Permission(arg);\n    };\n\n    /* ---------------------------------------------------------------------\n     * Metrics\n     *\n     */\n\n    function timestamp(when, interval) {\n        if (typeof when == \"number\")\n            return when * interval;\n        else if (typeof when == \"string\")\n            when = new Date(when);\n        if (when instanceof Date)\n            return when.getTime();\n        else\n            throw \"invalid date or offset\";\n    }\n\n    function MetricsChannel(interval, options_list, cache) {\n        var self = this;\n        event_mixin(self, { });\n\n        if (options_list.length === undefined)\n            options_list = [ options_list ];\n\n        var channels = [ ];\n        var following = false;\n\n        self.series = cockpit.series(interval, cache, fetch_for_series);\n        self.archives = null;\n        self.meta = null;\n\n        function fetch_for_series(beg, end, for_walking) {\n            if (!for_walking)\n                self.fetch(beg, end);\n            else\n                self.follow();\n        }\n\n        function transfer(options_list, callback, is_archive) {\n            if (options_list.length === 0)\n                return;\n\n            if (!is_archive) {\n                if (following)\n                    return;\n                following = true;\n            }\n\n            var options = extend({\n                payload: \"metrics1\",\n                interval: interval,\n                source: \"internal\"\n            }, options_list[0]);\n\n            delete options.archive_source;\n\n            var channel = cockpit.channel(options);\n            channels.push(channel);\n\n            var meta = null;\n            var last = null;\n            var beg;\n\n            channel.addEventListener(\"close\", function(ev, close_options) {\n                if (!is_archive)\n                    following = false;\n\n                if (options_list.length > 1 &&\n                    (close_options.problem == \"not-supported\" || close_options.problem == \"not-found\")) {\n                    transfer(options_list.slice(1), callback);\n                } else if (close_options.problem) {\n                    if (close_options.problem != \"terminated\" &&\n                        close_options.problem != \"disconnected\" &&\n                        close_options.problem != \"authentication-failed\" &&\n                        (close_options.problem != \"not-found\" || !is_archive) &&\n                        (close_options.problem != \"not-supported\" || !is_archive)) {\n                        console.warn(\"metrics channel failed: \" + close_options.problem);\n                    }\n                } else if (is_archive) {\n                    if (!self.archives) {\n                        self.archives = true;\n                        self.dispatchEvent('changed');\n                    }\n                }\n            });\n\n            channel.addEventListener(\"message\", function(ev, payload) {\n                var message = JSON.parse(payload);\n\n                var data, data_len, last_len, dataj, dataj_len, lastj, lastj_len;\n                var i, j, k;\n                var timestamp;\n\n                /* A meta message? */\n                var message_len = message.length;\n                if (message_len === undefined) {\n                    meta = message;\n                    timestamp = 0;\n                    if (meta.now && meta.timestamp)\n                        timestamp = meta.timestamp + (Date.now() - meta.now);\n                    beg = Math.floor(timestamp / interval);\n                    callback(beg, meta, null, options_list[0]);\n\n                    /* Trigger to outside interest that meta changed */\n                    self.meta = meta;\n                    self.dispatchEvent('changed');\n\n                /* A data message */\n                } else if (meta) {\n\n                    /* Data decompression */\n                    for (i = 0; i < message_len; i++) {\n                        data = message[i];\n                        if (last) {\n                            data_len = data.length;\n                            last_len = last.length;\n                            for (j = 0; j < last_len; j++) {\n                                dataj = data[j];\n                                if (dataj === null || dataj === undefined) {\n                                    data[j] = last[j];\n                                } else {\n                                    dataj_len = dataj.length;\n                                    if (dataj_len !== undefined) {\n                                        lastj = last[j];\n                                        lastj_len = last[j].length;\n                                        for (k = 0; k < dataj_len; k++) {\n                                            if (dataj[k] === null)\n                                                dataj[k] = lastj[k];\n                                        }\n                                        for (; k < lastj_len; k++)\n                                            dataj[k] = lastj[k];\n                                    }\n                                }\n                            }\n                        }\n                        last = data;\n                    }\n\n                    /* Return the data */\n                    callback(beg, meta, message, options_list[0]);\n\n                    /* Bump timestamp for the next message */\n                    beg += message_len;\n                    meta.timestamp += (interval * message_len);\n                }\n            });\n        }\n\n        function drain(beg, meta, message, options) {\n            var mapping, map, name;\n\n            /* Generate a mapping object if necessary */\n            mapping = meta.mapping;\n            if (!mapping) {\n                mapping = { };\n                meta.metrics.forEach(function(metric, i) {\n                    map = { \"\": i };\n                    if (options.metrics_path_names)\n                        name = options.metrics_path_names[i];\n                    else\n                        name = metric.name;\n                    mapping[name] = map;\n                    if (metric.instances) {\n                        metric.instances.forEach(function(instance, i) {\n                            if (instance === \"\")\n                                instance = \"/\";\n                            map[instance] = { \"\": i };\n                        });\n                    }\n                });\n                meta.mapping = mapping;\n            }\n\n            if (message)\n                self.series.input(beg, message, mapping);\n        }\n\n        self.fetch = function fetch(beg, end) {\n            var timestamp = beg * interval - Date.now();\n            var limit = end - beg;\n\n            var archive_options_list = [ ];\n            for (var i = 0; i < options_list.length; i++) {\n                if (options_list[i].archive_source) {\n                    archive_options_list.push(extend({}, options_list[i],\n                                                       { \"source\": options_list[i].archive_source,\n                                                         timestamp: timestamp,\n                                                         limit: limit\n                                                       }));\n                }\n            }\n\n            transfer(archive_options_list, drain, true);\n        };\n\n        self.follow = function follow() {\n            transfer(options_list, drain);\n        };\n\n        self.close = function close(options) {\n            var i, len = channels.length;\n            if (self.series)\n                self.series.close();\n\n            for (i = 0; i < len; i++)\n                channels[i].close(options);\n        };\n    }\n\n    cockpit.metrics = function metrics(interval, options) {\n        return new MetricsChannel(interval, options);\n    };\n\n    /* ---------------------------------------------------------------------\n     * Ooops handling.\n     *\n     * If we're embedded, send oops to parent frame. Since everything\n     * could be broken at this point, just do it manually, without\n     * involving cockpit.transport or any of that logic.\n     */\n\n    cockpit.oops = function oops() {\n        if (window.parent !== window && window.name.indexOf(\"cockpit1:\") === 0)\n            window.parent.postMessage(\"\\n{ \\\"command\\\": \\\"oops\\\" }\", transport_origin);\n    };\n\n    var old_onerror = window.onerror;\n    window.onerror = function(msg, url, line) {\n        cockpit.oops();\n        if (old_onerror)\n            return old_onerror(msg, url, line);\n        return false;\n    };\n\n    return cockpit;\n} /* scope end */\n\n/*\n * Register this script as a module and/or with globals\n */\n\nvar self_module_id;\n\n/* Check how we're being loaded */\nvar last = document.scripts[document.scripts.length - 1].src || \"\";\nvar pos = last.indexOf(\"/cockpit.js\");\nif (pos === -1)\n    pos = last.indexOf(\"/cockpit.min.js\");\nif (pos !== -1)\n    pos = last.substring(0, pos).lastIndexOf(\"/\");\n\n/* cockpit.js is being loaded as a <script>  and no other loader around? */\nif (pos !== -1) {\n    self_module_id = last.substring(pos + 1, last.indexOf(\".\", pos + 1));\n    window.cockpit = factory();\n}\n\n/* Cockpit loaded via AMD loader */\nif (is_function(window.define) && window.define.amd) {\n    if (self_module_id)\n        define(self_module_id, [], window.cockpit);\n    else\n        define([], factory);\n}\n\n})();\n"]}