/* @preserve: WARNING: This javascript file in the base1 package is deprecated */
console.warn("Deprecated: " + (new Error().fileName || "This javascript file").split("/").reverse()[0] + " in the Cockpit base1 package is deprecated");

(function(e, t) {
    if (typeof exports === "object" && exports) {
        t(exports);
    } else {
        var r = {};
        t(r);
        if (typeof define === "function" && define.amd) {
            define(r);
        } else {
            e.Mustache = r;
        }
    }
})(this, function(e) {
    var t = RegExp.prototype.test;
    function r(e, r) {
        return t.call(e, r);
    }
    var n = /\S/;
    function i(e) {
        return !r(n, e);
    }
    var s = Object.prototype.toString;
    var a = Array.isArray || function(e) {
        return s.call(e) === "[object Array]";
    };
    function o(e) {
        return typeof e === "function";
    }
    function c(e) {
        return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
    }
    var l = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;"
    };
    function h(e) {
        return String(e).replace(/[&<>"'\/]/g, function(e) {
            return l[e];
        });
    }
    function f(e) {
        if (!a(e) || e.length !== 2) {
            throw new Error("Invalid tags: " + e);
        }
        return [ new RegExp(c(e[0]) + "\\s*"), new RegExp("\\s*" + c(e[1])) ];
    }
    var u = /\s*/;
    var p = /\s+/;
    var v = /\s*=/;
    var g = /\s*\}/;
    var w = /#|\^|\/|>|\{|&|=|!/;
    function d(t, r) {
        r = r || e.tags;
        t = t || "";
        if (typeof r === "string") {
            r = r.split(p);
        }
        var n = f(r);
        var s = new b(t);
        var a = [];
        var o = [];
        var l = [];
        var h = false;
        var d = false;
        function x() {
            if (h && !d) {
                while (l.length) {
                    delete o[l.pop()];
                }
            } else {
                l = [];
            }
            h = false;
            d = false;
        }
        var m, E, U, T, j, C;
        while (!s.eos()) {
            m = s.pos;
            U = s.scanUntil(n[0]);
            if (U) {
                for (var A = 0, R = U.length; A < R; ++A) {
                    T = U.charAt(A);
                    if (i(T)) {
                        l.push(o.length);
                    } else {
                        d = true;
                    }
                    o.push([ "text", T, m, m + 1 ]);
                    m += 1;
                    if (T === "\n") {
                        x();
                    }
                }
            }
            if (!s.scan(n[0])) break;
            h = true;
            E = s.scan(w) || "name";
            s.scan(u);
            if (E === "=") {
                U = s.scanUntil(v);
                s.scan(v);
                s.scanUntil(n[1]);
            } else if (E === "{") {
                U = s.scanUntil(new RegExp("\\s*" + c("}" + r[1])));
                s.scan(g);
                s.scanUntil(n[1]);
                E = "&";
            } else {
                U = s.scanUntil(n[1]);
            }
            if (!s.scan(n[1])) {
                throw new Error("Unclosed tag at " + s.pos);
            }
            j = [ E, U, m, s.pos ];
            o.push(j);
            if (E === "#" || E === "^") {
                a.push(j);
            } else if (E === "/") {
                C = a.pop();
                if (!C) {
                    throw new Error('Unopened section "' + U + '" at ' + m);
                }
                if (C[1] !== U) {
                    throw new Error('Unclosed section "' + C[1] + '" at ' + m);
                }
            } else if (E === "name" || E === "{" || E === "&") {
                d = true;
            } else if (E === "=") {
                n = f(r = U.split(p));
            }
        }
        C = a.pop();
        if (C) {
            throw new Error('Unclosed section "' + C[1] + '" at ' + s.pos);
        }
        return y(k(o));
    }
    function k(e) {
        var t = [];
        var r, n;
        for (var i = 0, s = e.length; i < s; ++i) {
            r = e[i];
            if (r) {
                if (r[0] === "text" && n && n[0] === "text") {
                    n[1] += r[1];
                    n[3] = r[3];
                } else {
                    t.push(r);
                    n = r;
                }
            }
        }
        return t;
    }
    function y(e) {
        var t = [];
        var r = t;
        var n = [];
        var i, s;
        for (var a = 0, o = e.length; a < o; ++a) {
            i = e[a];
            switch (i[0]) {
              case "#":
              case "^":
                r.push(i);
                n.push(i);
                r = i[4] = [];
                break;

              case "/":
                s = n.pop();
                s[5] = i[2];
                r = n.length > 0 ? n[n.length - 1][4] : t;
                break;

              default:
                r.push(i);
            }
        }
        return t;
    }
    function b(e) {
        this.string = e;
        this.tail = e;
        this.pos = 0;
    }
    b.prototype.eos = function() {
        return this.tail === "";
    };
    b.prototype.scan = function(e) {
        var t = this.tail.match(e);
        if (t && t.index === 0) {
            var r = t[0];
            this.tail = this.tail.substring(r.length);
            this.pos += r.length;
            return r;
        }
        return "";
    };
    b.prototype.scanUntil = function(e) {
        var t = this.tail.search(e), r;
        switch (t) {
          case -1:
            r = this.tail;
            this.tail = "";
            break;

          case 0:
            r = "";
            break;

          default:
            r = this.tail.substring(0, t);
            this.tail = this.tail.substring(t);
        }
        this.pos += r.length;
        return r;
    };
    function x(e, t) {
        this.view = e == null ? {} : e;
        this.cache = {
            ".": this.view
        };
        this.parent = t;
    }
    x.prototype.push = function(e) {
        return new x(e, this);
    };
    x.prototype.lookup = function(e) {
        var t;
        if (e in this.cache) {
            t = this.cache[e];
        } else {
            var r = this;
            while (r) {
                if (e.indexOf(".") > 0) {
                    t = r.view;
                    var n = e.split("."), i = 0;
                    while (t != null && i < n.length) {
                        t = t[n[i++]];
                    }
                } else {
                    t = r.view[e];
                }
                if (t != null) break;
                r = r.parent;
            }
            this.cache[e] = t;
        }
        if (o(t)) {
            t = t.call(this.view);
        }
        return t;
    };
    function m() {
        this.cache = {};
    }
    m.prototype.clearCache = function() {
        this.cache = {};
    };
    m.prototype.parse = function(e, t) {
        var r = this.cache;
        var n = r[e];
        if (n == null) {
            n = r[e] = d(e, t);
        }
        return n;
    };
    m.prototype.render = function(e, t, r) {
        var n = this.parse(e);
        var i = t instanceof x ? t : new x(t);
        return this.renderTokens(n, i, r, e);
    };
    m.prototype.renderTokens = function(t, r, n, i) {
        var s = "";
        var c = this;
        function l(e) {
            return c.render(e, r, n);
        }
        var h, f;
        for (var u = 0, p = t.length; u < p; ++u) {
            h = t[u];
            switch (h[0]) {
              case "#":
                f = r.lookup(h[1]);
                if (!f) continue;
                if (a(f)) {
                    for (var v = 0, g = f.length; v < g; ++v) {
                        s += this.renderTokens(h[4], r.push(f[v]), n, i);
                    }
                } else if (typeof f === "object" || typeof f === "string") {
                    s += this.renderTokens(h[4], r.push(f), n, i);
                } else if (o(f)) {
                    if (typeof i !== "string") {
                        throw new Error("Cannot use higher-order sections without the original template");
                    }
                    f = f.call(r.view, i.slice(h[3], h[5]), l);
                    if (f != null) s += f;
                } else {
                    s += this.renderTokens(h[4], r, n, i);
                }
                break;

              case "^":
                f = r.lookup(h[1]);
                if (!f || a(f) && f.length === 0) {
                    s += this.renderTokens(h[4], r, n, i);
                }
                break;

              case ">":
                if (!n) continue;
                f = o(n) ? n(h[1]) : n[h[1]];
                if (f != null) s += this.renderTokens(this.parse(f), r, n, f);
                break;

              case "&":
                f = r.lookup(h[1]);
                if (f != null) s += f;
                break;

              case "name":
                f = r.lookup(h[1]);
                if (f != null) s += e.escape(f);
                break;

              case "text":
                s += h[1];
                break;
            }
        }
        return s;
    };
    e.name = "mustache.js";
    e.version = "0.8.1";
    e.tags = [ "{{", "}}" ];
    var E = new m();
    e.clearCache = function() {
        return E.clearCache();
    };
    e.parse = function(e, t) {
        return E.parse(e, t);
    };
    e.render = function(e, t, r) {
        return E.render(e, t, r);
    };
    e.to_html = function(t, r, n, i) {
        var s = e.render(t, r, n);
        if (o(i)) {
            i(s);
        } else {
            return s;
        }
    };
    e.escape = h;
    e.Scanner = b;
    e.Context = x;
    e.Writer = m;
});
//# sourceMappingURL=mustache.min.js.map
