/* @preserve: WARNING: This javascript file in the base1 package is deprecated */
console.warn("Deprecated: " + (new Error().fileName || "This javascript file").split("/").reverse()[0] + " in the Cockpit base1 package is deprecated");

(function e(t, r) {
    if (typeof exports === "object" && exports && typeof exports.nodeName !== "string") {
        r(exports);
    } else if (typeof define === "function" && define.amd) {
        define([ "exports" ], r);
    } else {
        t.Mustache = {};
        r(t.Mustache);
    }
})(this, function t(e) {
    var t = Object.prototype.toString;
    var r = Array.isArray || function T(e) {
        return t.call(e) === "[object Array]";
    };
    function n(e) {
        return typeof e === "function";
    }
    function i(e) {
        return r(e) ? "array" : typeof e;
    }
    function s(e) {
        return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
    }
    function a(e, t) {
        return e != null && typeof e === "object" && t in e;
    }
    var o = RegExp.prototype.test;
    function u(e, t) {
        return o.call(e, t);
    }
    var l = /\S/;
    function f(e) {
        return !u(l, e);
    }
    var c = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;",
        "`": "&#x60;",
        "=": "&#x3D;"
    };
    function p(e) {
        return String(e).replace(/[&<>"'`=\/]/g, function t(e) {
            return c[e];
        });
    }
    var h = /\s*/;
    var v = /\s+/;
    var d = /\s*=/;
    var g = /\s*\}/;
    var w = /#|\^|\/|>|\{|&|=|!/;
    function y(t, n) {
        if (!t) return [];
        var i = [];
        var a = [];
        var o = [];
        var u = false;
        var l = false;
        function c() {
            if (u && !l) {
                while (o.length) delete a[o.pop()];
            } else {
                o = [];
            }
            u = false;
            l = false;
        }
        var p, y, m;
        function E(e) {
            if (typeof e === "string") e = e.split(v, 2);
            if (!r(e) || e.length !== 2) throw new Error("Invalid tags: " + e);
            p = new RegExp(s(e[0]) + "\\s*");
            y = new RegExp("\\s*" + s(e[1]));
            m = new RegExp("\\s*" + s("}" + e[1]));
        }
        E(n || e.tags);
        var U = new b(t);
        var T, j, C, S, V, A;
        while (!U.eos()) {
            T = U.pos;
            C = U.scanUntil(p);
            if (C) {
                for (var I = 0, R = C.length; I < R; ++I) {
                    S = C.charAt(I);
                    if (f(S)) {
                        o.push(a.length);
                    } else {
                        l = true;
                    }
                    a.push([ "text", S, T, T + 1 ]);
                    T += 1;
                    if (S === "\n") c();
                }
            }
            if (!U.scan(p)) break;
            u = true;
            j = U.scan(w) || "name";
            U.scan(h);
            if (j === "=") {
                C = U.scanUntil(d);
                U.scan(d);
                U.scanUntil(y);
            } else if (j === "{") {
                C = U.scanUntil(m);
                U.scan(g);
                U.scanUntil(y);
                j = "&";
            } else {
                C = U.scanUntil(y);
            }
            if (!U.scan(y)) throw new Error("Unclosed tag at " + U.pos);
            V = [ j, C, T, U.pos ];
            a.push(V);
            if (j === "#" || j === "^") {
                i.push(V);
            } else if (j === "/") {
                A = i.pop();
                if (!A) throw new Error('Unopened section "' + C + '" at ' + T);
                if (A[1] !== C) throw new Error('Unclosed section "' + A[1] + '" at ' + T);
            } else if (j === "name" || j === "{" || j === "&") {
                l = true;
            } else if (j === "=") {
                E(C);
            }
        }
        A = i.pop();
        if (A) throw new Error('Unclosed section "' + A[1] + '" at ' + U.pos);
        return x(k(a));
    }
    function k(e) {
        var t = [];
        var r, n;
        for (var i = 0, s = e.length; i < s; ++i) {
            r = e[i];
            if (r) {
                if (r[0] === "text" && n && n[0] === "text") {
                    n[1] += r[1];
                    n[3] = r[3];
                } else {
                    t.push(r);
                    n = r;
                }
            }
        }
        return t;
    }
    function x(e) {
        var t = [];
        var r = t;
        var n = [];
        var i, s;
        for (var a = 0, o = e.length; a < o; ++a) {
            i = e[a];
            switch (i[0]) {
              case "#":
              case "^":
                r.push(i);
                n.push(i);
                r = i[4] = [];
                break;

              case "/":
                s = n.pop();
                s[5] = i[2];
                r = n.length > 0 ? n[n.length - 1][4] : t;
                break;

              default:
                r.push(i);
            }
        }
        return t;
    }
    function b(e) {
        this.string = e;
        this.tail = e;
        this.pos = 0;
    }
    b.prototype.eos = function j() {
        return this.tail === "";
    };
    b.prototype.scan = function C(e) {
        var t = this.tail.match(e);
        if (!t || t.index !== 0) return "";
        var r = t[0];
        this.tail = this.tail.substring(r.length);
        this.pos += r.length;
        return r;
    };
    b.prototype.scanUntil = function S(e) {
        var t = this.tail.search(e), r;
        switch (t) {
          case -1:
            r = this.tail;
            this.tail = "";
            break;

          case 0:
            r = "";
            break;

          default:
            r = this.tail.substring(0, t);
            this.tail = this.tail.substring(t);
        }
        this.pos += r.length;
        return r;
    };
    function m(e, t) {
        this.view = e;
        this.cache = {
            ".": this.view
        };
        this.parent = t;
    }
    m.prototype.push = function V(e) {
        return new m(e, this);
    };
    m.prototype.lookup = function A(e) {
        var t = this.cache;
        var r;
        if (t.hasOwnProperty(e)) {
            r = t[e];
        } else {
            var i = this, s, o, u = false;
            while (i) {
                if (e.indexOf(".") > 0) {
                    r = i.view;
                    s = e.split(".");
                    o = 0;
                    while (r != null && o < s.length) {
                        if (o === s.length - 1) u = a(r, s[o]);
                        r = r[s[o++]];
                    }
                } else {
                    r = i.view[e];
                    u = a(i.view, e);
                }
                if (u) break;
                i = i.parent;
            }
            t[e] = r;
        }
        if (n(r)) r = r.call(this.view);
        return r;
    };
    function E() {
        this.cache = {};
    }
    E.prototype.clearCache = function I() {
        this.cache = {};
    };
    E.prototype.parse = function R(e, t) {
        var r = this.cache;
        var n = r[e];
        if (n == null) n = r[e] = y(e, t);
        return n;
    };
    E.prototype.render = function O(e, t, r) {
        var n = this.parse(e);
        var i = t instanceof m ? t : new m(t);
        return this.renderTokens(n, i, r, e);
    };
    E.prototype.renderTokens = function P(e, t, r, n) {
        var i = "";
        var s, a, o;
        for (var u = 0, l = e.length; u < l; ++u) {
            o = undefined;
            s = e[u];
            a = s[0];
            if (a === "#") o = this.renderSection(s, t, r, n); else if (a === "^") o = this.renderInverted(s, t, r, n); else if (a === ">") o = this.renderPartial(s, t, r, n); else if (a === "&") o = this.unescapedValue(s, t); else if (a === "name") o = this.escapedValue(s, t); else if (a === "text") o = this.rawValue(s);
            if (o !== undefined) i += o;
        }
        return i;
    };
    E.prototype.renderSection = function D(e, t, i, s) {
        var a = this;
        var o = "";
        var u = t.lookup(e[1]);
        function l(e) {
            return a.render(e, t, i);
        }
        if (!u) return;
        if (r(u)) {
            for (var f = 0, c = u.length; f < c; ++f) {
                o += this.renderTokens(e[4], t.push(u[f]), i, s);
            }
        } else if (typeof u === "object" || typeof u === "string" || typeof u === "number") {
            o += this.renderTokens(e[4], t.push(u), i, s);
        } else if (n(u)) {
            if (typeof s !== "string") throw new Error("Cannot use higher-order sections without the original template");
            u = u.call(t.view, s.slice(e[3], e[5]), l);
            if (u != null) o += u;
        } else {
            o += this.renderTokens(e[4], t, i, s);
        }
        return o;
    };
    E.prototype.renderInverted = function M(e, t, n, i) {
        var s = t.lookup(e[1]);
        if (!s || r(s) && s.length === 0) return this.renderTokens(e[4], t, n, i);
    };
    E.prototype.renderPartial = function N(e, t, r) {
        if (!r) return;
        var i = n(r) ? r(e[1]) : r[e[1]];
        if (i != null) return this.renderTokens(this.parse(i), t, r, i);
    };
    E.prototype.unescapedValue = function $(e, t) {
        var r = t.lookup(e[1]);
        if (r != null) return r;
    };
    E.prototype.escapedValue = function q(t, r) {
        var n = r.lookup(t[1]);
        if (n != null) return e.escape(n);
    };
    E.prototype.rawValue = function F(e) {
        return e[1];
    };
    e.name = "mustache.js";
    e.version = "2.3.0";
    e.tags = [ "{{", "}}" ];
    var U = new E();
    e.clearCache = function W() {
        return U.clearCache();
    };
    e.parse = function _(e, t) {
        return U.parse(e, t);
    };
    e.render = function z(e, t, r) {
        if (typeof e !== "string") {
            throw new TypeError('Invalid template! Template should be a "string" ' + 'but "' + i(e) + '" was given as the first ' + "argument for mustache#render(template, view, partials)");
        }
        return U.render(e, t, r);
    };
    e.to_html = function B(t, r, i, s) {
        var a = e.render(t, r, i);
        if (n(s)) {
            s(a);
        } else {
            return a;
        }
    };
    e.escape = p;
    e.Scanner = b;
    e.Context = m;
    e.Writer = E;
    return e;
});
//# sourceMappingURL=mustache.min.js.map