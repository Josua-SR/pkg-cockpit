!function(e) {
    function n(o) {
        if (t[o]) return t[o].exports;
        var r = t[o] = {
            exports: {},
            id: o,
            loaded: !1
        };
        return e[o].call(r.exports, r, r.exports, n), r.loaded = !0, r.exports;
    }
    var t = {};
    return n.m = e, n.c = t, n.p = "", n(0);
}({
    0: function(e, n, t) {
        e.exports = t(37);
    },
    4: function(e, n) {
        e.exports = cockpit;
    },
    37: function(e, n, t) {
        "use strict";
        !function() {
            function e() {
                var e = document.getElementById("speed");
                d || i ? (e.innerHTML = a.format_bytes_per_sec(1e3 * s / (Date.now() - c)), console.log(s)) : e.innerHTML = "";
                var n = document.getElementById("memory"), t = document.getElementById("pid");
                u || (u = a.script("echo $PPID && cat /proc/$PPID/statm"), u.then(function(e) {
                    var o = e.split("\n");
                    t.innerHTML = o[0], n.innerHTML = o[1], u = null;
                }, function(e) {
                    n.innerHTML = String(e), u = null;
                }));
            }
            function n(e) {
                function n(e, n) {
                    return n ? new window.ArrayBuffer(e) : new Array(e).join("x");
                }
                r();
                var t = "echo-sideband" == e.target.id, o = parseInt(document.getElementById("message").value, 10), u = parseInt(document.getElementById("batch").value, 10), f = parseInt(document.getElementById("interval").value, 10);
                if (isNaN(o) || isNaN(f) || isNaN(u)) return void window.alert("Bad value");
                var m = document.getElementById.checked, w = {
                    payload: "echo"
                }, p = n(o, m);
                if (c = new Date(), s = 0, t) m && (w.binary = "raw"), i = new window.WebSocket(a.transport.uri("channel/" + a.transport.csrf_token) + "?" + window.btoa(JSON.stringify(w))), 
                i.binaryType = "arraybuffer", i.onopen = function() {
                    for (var e = 0; e < u; e++) i.send(p);
                    l = window.setInterval(function() {
                        for (var e = 0; e < u; e++) i.send(p);
                    }, f);
                }, i.onmessage = function(e) {
                    s += m ? e.data.byteLength : e.data.length;
                }, i.onclose = function(e) {
                    i && window.alert("channel closed");
                }; else {
                    m && (w.binary = !0), d = a.channel(w), d.addEventListener("message", function(e, n) {
                        s += n.length;
                    }), d.addEventListener("close", function(e, n) {
                        n.problem && window.alert(n.problem);
                    });
                    for (var y = 0; y < u; y++) d.send(p);
                    l = window.setInterval(function() {
                        for (var e = 0; e < u; e++) d.send(p);
                    }, f);
                }
            }
            function o(e) {
                r();
                var n = "read-sideband" == e.target.id, t = document.getElementById("read-path"), o = {
                    payload: "fsread1",
                    path: t.value,
                    binary: !n || "raw"
                };
                c = Date.now(), s = 0, n ? (i = new window.WebSocket(a.transport.uri("channel/" + a.transport.csrf_token) + "?" + window.btoa(JSON.stringify(o))), 
                i.binaryType = "arraybuffer", i.onmessage = function(e) {
                    s += e.data.byteLength;
                }, i.onclose = function(e) {
                    i && window.alert("channel closed");
                }) : (d = a.channel(o), d.addEventListener("message", function(e, n) {
                    s += n.length;
                }), d.addEventListener("close", function(e, n) {
                    n.problem && window.alert(n.problem);
                }));
            }
            function r() {
                e(), d && d.close(), d = null;
                var n = i;
                i = null, n && n.close(), window.clearInterval(l), l = null;
            }
            var a = t(4), d = null, i = null, l = null, c = null, s = 0, u = null;
            a.transport.wait(function() {
                document.getElementById("echo-normal").addEventListener("click", n), document.getElementById("echo-sideband").addEventListener("click", n), 
                document.getElementById("read-normal").addEventListener("click", o), document.getElementById("read-sideband").addEventListener("click", o), 
                document.getElementById("stop").addEventListener("click", r), window.setInterval(e, 500), 
                document.body.style.display = "block";
            });
        }();
    }
});
//# sourceMappingURL=speed.min.js.map