{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"jQuery\"","webpack:///../node_modules/jquery-flot/jquery.flot.js","webpack:///../node_modules/jquery-flot/jquery.flot.selection.js","webpack:///../node_modules/jquery-flot/jquery.flot.time.js","webpack:///external \"cockpit\"","webpack:///../pkg/lib/plot.js","webpack:///../pkg/playground/plot.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","jQuery","$","color","make","g","b","a","add","length","charAt","normalize","scale","f","toString","join","clamp","min","max","parseInt","clone","extract","elem","css","toLowerCase","parent","nodeName","parse","str","res","exec","parseFloat","trim","lookupColors","aqua","azure","beige","black","blue","brown","cyan","darkblue","darkcyan","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkviolet","fuchsia","gold","green","indigo","khaki","lightblue","lightcyan","lightgreen","lightgrey","lightpink","lightyellow","lime","magenta","maroon","navy","olive","orange","pink","purple","violet","red","silver","white","yellow","Canvas","cls","container","element","children","document","createElement","className","direction","position","left","top","appendTo","getContext","window","G_vmlCanvasManager","Error","initElement","this","context","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","resize","width","height","textContainer","text","_textCache","Plot","placeholder","data_","options_","plugins","series","options","colors","legend","show","noColumns","labelFormatter","labelBoxBorderColor","margin","backgroundColor","backgroundOpacity","sorted","xaxis","font","tickColor","transform","inverseTransform","autoscaleMargin","ticks","tickFormatter","labelWidth","labelHeight","reserveSpace","tickLength","alignTicksWithAxis","tickDecimals","tickSize","minTickSize","yaxis","xaxes","yaxes","points","radius","lineWidth","fill","fillColor","symbol","lines","steps","bars","barWidth","align","horizontal","zero","shadowSize","highlightColor","grid","aboveData","borderColor","labelMargin","axisMargin","borderWidth","minBorderMargin","markings","markingsColor","markingsLineWidth","clickable","hoverable","autoHighlight","mouseActiveRadius","interaction","redrawOverlayInterval","hooks","surface","overlay","eventHolder","ctx","octx","plotOffset","right","bottom","plotWidth","plotHeight","processOptions","processRawData","processDatapoints","processOffset","drawBackground","drawSeries","draw","bindEvents","drawOverlay","shutdown","plot","executeHooks","hook","args","concat","apply","setData","extend","data","push","parseData","neededColors","maxIndex","sc","colorPool","colorPoolSize","variation","colori","v","getOrCreateAxis","axisNumber","fillInSeriesOptions","j","k","ps","val","format","topSentry","Number","POSITIVE_INFINITY","bottomSentry","NEGATIVE_INFINITY","fakeInfinity","MAX_VALUE","updateAxis","axis","datamin","datamax","each","allAxes","_","used","datapoints","x","number","required","y","autoscale","defaultValue","pointsize","insertSteps","nullify","isNaN","Infinity","xmin","ymin","xmax","ymax","delta","processData","obj","coord","grep","canvasToAxisCoords","pos","c2p","undefined","x1","y1","axes","redrawTimeout","clearTimeout","unbind","onMouseMove","onMouseLeave","onClick","allocateAxisBoxFirstPhase","lw","lh","isXAxis","padding","innermost","outermost","first","found","box","setupGrid","showGrid","axisOpts","opts","widen","setRange","allocatedAxes","noTicks","Math","sqrt","dec","floor","log","LN10","maxDec","size","magn","pow","norm","tickGenerator","prev","base","start","NaN","factor","formatted","round","decimal","indexOf","precision","substr","isFunction","otherAxis","niceTicks","extraDec","ts","test","toFixed","setupTickGeneration","oticks","label","setTicks","snapRangeToTicks","maxWidth","legacyStyles","layer","info","getTextInfo","measureTickLabels","minMargin","margins","ceil","adjustLayoutForThingsStickingOut","allocateAxisBoxSecondPhase","identity","it","abs","p2c","setTransformationHelpers","tick","halign","valign","removeText","addText","html","find","remove","fragments","entries","rowStarted","lf","sort","reverse","ascending","entry","table","replace","div","prependTo","insertLegend","clear","save","translate","fillStyle","getColorOrGradient","fillRect","restore","drawGrid","render","triggerRedrawOverlay","extractRange","ranges","from","to","tmp","bw","bc","getAxes","xrange","yrange","xequal","yequal","subPixel","beginPath","strokeStyle","moveTo","lineTo","stroke","xoff","yoff","strokeRect","plotLine","xoffset","yoffset","axisx","axisy","prevx","prevy","x2","y2","lineJoin","sw","angle","PI","sin","cos","getFillStyle","areaOpen","ypos","segmentStart","segmentEnd","x1old","x2old","plotLineArea","drawSeriesLines","barLeft","fillStyleCallback","barRight","drawBar","plotBars","drawSeriesBars","plotPoints","offset","shadow","arc","closePath","w","drawSeriesPoints","drawLeft","drawRight","drawTop","drawBottom","filloptions","seriesColor","getPlaceholder","getCanvas","getPlotOffset","getData","getXAxes","getYAxes","getOptions","highlight","unhighlight","pointOffset","point","destroy","removeData","empty","highlights","classes","init","initPlugins","axisOptions","axisCount","fontSize","fontSizeDefault","fontDefaults","style","variant","weight","family","lineHeight","x2axis","y2axis","coloredAreas","coloredAreasColor","parseOptions","filter","hasClass","existing","setupCanvases","mousemove","click","e","triggerClickHoverEvent","eventname","event","seriesFilter","canvasX","pageX","canvasY","pageY","item","mouseX","mouseY","maxDistance","smallestDistance","mx","my","maxx","maxy","dx","dy","dist","datapoint","slice","dataIndex","seriesIndex","findNearbyItem","h","auto","trigger","setTimeout","hi","drawBarHighlight","drawPointHighlight","indexOfHighlight","splice","pointRadius","spec","defaultColor","gradient","createLinearGradient","co","brightness","opacity","addColorStop","fn","detach","parentNode","removeChild","clearRect","cache","layerKey","getTextLayer","layerCache","styleKey","hide","styleCache","positions","active","rendered","append","insertAfter","addClass","textStyle","outerWidth","outerHeight","version","selection","second","savedhandlers","mouseUpHandler","updateSelection","getSelection","onMouseDown","which","body","focus","onselectstart","ondrag","setSelectionPos","selectionIsSane","triggerSelectedEvent","onMouseUp","one","c1","c2","p1","p2","clearSelection","preventEvent","minSize","setSelection","range","mousedown","shape","floorInBase","formatDate","fmt","monthNames","dayNames","strftime","hours12","leftPad","pad","escape","hours","getHours","isAM","getDay","getMonth","getDate","getMinutes","getSeconds","getFullYear","makeUtcWrapper","addProxyMethod","sourceObj","sourceMethod","targetObj","targetMethod","arguments","utc","date","props","dateGenerator","timezone","Date","timezoneJS","setTimezone","setTime","timeUnitSize","baseSpec","specMonths","specQuarters","axisName","unit","year","step","setSeconds","setMinutes","setHours","setMonth","setFullYear","setMilliseconds","minute","hour","day","setDate","month","quarter","carry","getTime","end","timeformat","useQuarters","span","suffix","hourCode","twelveHourClock","cockpit","C_","gettext","Metrics_series","constructor","desc","flot_data","interval","channel","chanopts_list","stop","close","remove_series","self","triggerHandler","build_metric","units","derive","hover_hit","hover","move_to_front","check_archives","archives","Metrics_sum_series","super","direct","source","archive_source","metrics","map","instances","host","pmcd","internal","flat_sum","sum","reset_series","metrics_row","threshold","row","beg","on","Metrics_difference_series","flat_difference","diff","Metrics_stacked_instances_series","last_instance","metrics_path_names","reset","add_instance","selector","instance_data","last","sync","clear_instances","index","x_range_seconds","x_stop_seconds","flot","refresh_pending","sync_suppressed","cur_hover_series","cur_hover_val","hover_on","hover_off","selecting","selected","refresh_now","setup_hook","post_hook","refresh","start_walking","walk","stop_walking","move","x_offset","count","set_options","get_options","add_metrics_sum_series","sum_series","add_metrics_difference_series","difference_series","add_metrics_stacked_instances_series","stacked_series","next_hover_series","next_hover_val","plot_simple_template","format_date_tick","memory_ticks","LN2","month_names","begin","bytes_tick_unit","format_bytes","format_bytes_tick_no_unit","setup_plot_controls","plots","plot_x_stop","plot_min_x_range","plot_zoom_steps","plot_x_range","zoom_history","update_plot_buttons","attr","update_selection_zooming","removeClass","forEach","plot_reset","seconds","ngettext","x_range","x_stop","zoom_plot_in","pop","zoom_plot_out","plot_direct","options_direct","plot_pmcd","options_pmcd"],"mappings":"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","file":"playground/plot.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = jQuery;","/* Javascript plotting library for jQuery, version 0.8.3.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\n// for convenience\n\n/* Plugin for jQuery for working with colors.\n *\n * Version 1.1.\n *\n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */\n(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\n// the actual Flot code\n(function($) {\n\n\t// Cache the prototype hasOwnProperty for faster access\n\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n    // operation produces the same effect as detach, i.e. removing the element\n    // without touching its jQuery data.\n\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\n    if (!$.fn.detach) {\n        $.fn.detach = function() {\n            return this.each(function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild( this );\n                }\n            });\n        };\n    }\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t//\n\t// @constructor\n\t// @param {string} cls List of classes to apply to the canvas.\n\t// @param {element} container Element onto which to append the canvas.\n\t//\n\t// Requiring a container is a little iffy, but unfortunately canvas\n\t// operations don't work unless the canvas is attached to the DOM.\n\n\tfunction Canvas(cls, container) {\n\n\t\tvar element = container.children(\".\" + cls)[0];\n\n\t\tif (element == null) {\n\n\t\t\telement = document.createElement(\"canvas\");\n\t\t\telement.className = cls;\n\n\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t.appendTo(container);\n\n\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\n\t\t\tif (!element.getContext) {\n\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element = element;\n\n\t\tvar context = this.context = element.getContext(\"2d\");\n\n\t\t// Determine the screen's ratio of physical to device-independent\n\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t// advertises and the number of pixels actually present in that space.\n\n\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\n\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\tbackingStoreRatio =\n\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\tcontext.backingStorePixelRatio || 1;\n\n\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\n\t\t// Size the canvas to match the internal dimensions of its container\n\n\t\tthis.resize(container.width(), container.height());\n\n\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\n\t\tthis.textContainer = null;\n\t\tthis.text = {};\n\n\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t// re-calculating them when the plot is re-rendered in a loop.\n\n\t\tthis._textCache = {};\n\t}\n\n\t// Resizes the canvas to the given dimensions.\n\t//\n\t// @param {number} width New width of the canvas, in pixels.\n\t// @param {number} width New height of the canvas, in pixels.\n\n\tCanvas.prototype.resize = function(width, height) {\n\n\t\tif (width <= 0 || height <= 0) {\n\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t}\n\n\t\tvar element = this.element,\n\t\t\tcontext = this.context,\n\t\t\tpixelRatio = this.pixelRatio;\n\n\t\t// Resize the canvas, increasing its density based on the display's\n\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t// size of its element, to take advantage of the fact that retina\n\t\t// displays have that many more pixels in the same advertised space.\n\n\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\n\t\tif (this.width != width) {\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.style.width = width + \"px\";\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tif (this.height != height) {\n\t\t\telement.height = height * pixelRatio;\n\t\t\telement.style.height = height + \"px\";\n\t\t\tthis.height = height;\n\t\t}\n\n\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t// restore ensure that we're really back at the initial state, and\n\t\t// should be safe even if we haven't saved the initial state yet.\n\n\t\tcontext.restore();\n\t\tcontext.save();\n\n\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t// appear at the same size; the extra pixels will just make them crisper.\n\n\t\tcontext.scale(pixelRatio, pixelRatio);\n\t};\n\n\t// Clears the entire canvas area, not including any overlaid HTML text\n\n\tCanvas.prototype.clear = function() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t};\n\n\t// Finishes rendering the canvas, including managing the text overlay.\n\n\tCanvas.prototype.render = function() {\n\n\t\tvar cache = this._textCache;\n\n\t\t// For each text layer, add elements marked as active that haven't\n\t\t// already been rendered, and remove those that are no longer active.\n\n\t\tfor (var layerKey in cache) {\n\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\n\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\tlayerCache = cache[layerKey];\n\n\t\t\t\tlayer.hide();\n\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlayer.show();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Creates (if necessary) and returns the text overlay container.\n\t//\n\t// @param {string} classes String of space-separated CSS classes used to\n\t//     uniquely identify the text layer.\n\t// @return {object} The jQuery-wrapped text-layer div.\n\n\tCanvas.prototype.getTextLayer = function(classes) {\n\n\t\tvar layer = this.text[classes];\n\n\t\t// Create the text layer if it doesn't exist\n\n\t\tif (layer == null) {\n\n\t\t\t// Create the text layer container, if it doesn't exist\n\n\t\t\tif (this.textContainer == null) {\n\t\t\t\tthis.textContainer = $(\"<div class='flot-text'></div>\")\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t})\n\t\t\t\t\t.insertAfter(this.element);\n\t\t\t}\n\n\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t.addClass(classes)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tbottom: 0,\n\t\t\t\t\tright: 0\n\t\t\t\t})\n\t\t\t\t.appendTo(this.textContainer);\n\t\t}\n\n\t\treturn layer;\n\t};\n\n\t// Creates (if necessary) and returns a text info object.\n\t//\n\t// The object looks like this:\n\t//\n\t// {\n\t//     width: Width of the text's wrapper div.\n\t//     height: Height of the text's wrapper div.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     positions: Array of positions at which this text is drawn.\n\t// }\n\t//\n\t// The positions array contains objects that look like this:\n\t//\n\t// {\n\t//     active: Flag indicating whether the text should be visible.\n\t//     rendered: Flag indicating whether the text is currently visible.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     x: X coordinate at which to draw the text.\n\t//     y: Y coordinate at which to draw the text.\n\t// }\n\t//\n\t// Each position after the first receives a clone of the original element.\n\t//\n\t// The idea is that that the width, height, and general 'identity' of the\n\t// text is constant no matter where it is placed; the placements are a\n\t// secondary property.\n\t//\n\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t// either returns the cached element or creates a new entry.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {string} text Text string to retrieve info for.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @return {object} a text info object.\n\n\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\n\t\tvar textStyle, layerCache, styleCache, info;\n\n\t\t// Cast the value to a string, in case we were given a number or such\n\n\t\ttext = \"\" + text;\n\n\t\t// If the font is a font-spec object, generate a CSS font definition\n\n\t\tif (typeof font === \"object\") {\n\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t} else {\n\t\t\ttextStyle = font;\n\t\t}\n\n\t\t// Retrieve (or create) the cache for the text's layer and styles\n\n\t\tlayerCache = this._textCache[layer];\n\n\t\tif (layerCache == null) {\n\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t}\n\n\t\tstyleCache = layerCache[textStyle];\n\n\t\tif (styleCache == null) {\n\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t}\n\n\t\tinfo = styleCache[text];\n\n\t\t// If we can't find a matching element in our cache, create a new one\n\n\t\tif (info == null) {\n\n\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t'max-width': width,\n\t\t\t\t\ttop: -9999\n\t\t\t\t})\n\t\t\t\t.appendTo(this.getTextLayer(layer));\n\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\telement.css({\n\t\t\t\t\tfont: textStyle,\n\t\t\t\t\tcolor: font.color\n\t\t\t\t});\n\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\telement.addClass(font);\n\t\t\t}\n\n\t\t\tinfo = styleCache[text] = {\n\t\t\t\twidth: element.outerWidth(true),\n\t\t\t\theight: element.outerHeight(true),\n\t\t\t\telement: element,\n\t\t\t\tpositions: []\n\t\t\t};\n\n\t\t\telement.detach();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t// Adds a text string to the canvas text overlay.\n\t//\n\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t// result in its addition to the canvas on the next render pass.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number} x X coordinate at which to draw the text.\n\t// @param {number} y Y coordinate at which to draw the text.\n\t// @param {string} text Text string to draw.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t//     \"center\" or \"right\".\n\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t//     \"middle\" or \"bottom\".\n\n\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\n\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\tpositions = info.positions;\n\n\t\t// Tweak the div's position to match the text's alignment\n\n\t\tif (halign == \"center\") {\n\t\t\tx -= info.width / 2;\n\t\t} else if (halign == \"right\") {\n\t\t\tx -= info.width;\n\t\t}\n\n\t\tif (valign == \"middle\") {\n\t\t\ty -= info.height / 2;\n\t\t} else if (valign == \"bottom\") {\n\t\t\ty -= info.height;\n\t\t}\n\n\t\t// Determine whether this text already exists at this position.\n\t\t// If so, mark it for inclusion in the next render pass.\n\n\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\tposition.active = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the text doesn't exist at this position, create a new entry\n\n\t\t// For the very first position we'll re-use the original element,\n\t\t// while for subsequent ones we'll clone it.\n\n\t\tposition = {\n\t\t\tactive: true,\n\t\t\trendered: false,\n\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\n\t\tpositions.push(position);\n\n\t\t// Move the element to its final position within the container\n\n\t\tposition.element.css({\n\t\t\ttop: Math.round(y),\n\t\t\tleft: Math.round(x),\n\t\t\t'text-align': halign\t// In case the text wraps\n\t\t});\n\t};\n\n\t// Removes one or more text strings from the canvas text overlay.\n\t//\n\t// If no parameters are given, all text within the layer is removed.\n\t//\n\t// Note that the text is not immediately removed; it is simply marked as\n\t// inactive, which will result in its removal on the next render pass.\n\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t// where we potentially get rid of all text on a layer, but will likely\n\t// add back most or all of it later, as when redrawing axes, for example.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number=} x X coordinate of the text.\n\t// @param {number=} y Y coordinate of the text.\n\t// @param {string=} text Text string to remove.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\n\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\tif (text == null) {\n\t\t\tvar layerCache = this._textCache[layer];\n\t\t\tif (layerCache != null) {\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The top-level container for the entire plot.\n\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                legend: {\n                    show: true,\n                    noColumns: 1, // number of colums in legend table\n                    labelFormatter: null, // fn: string -> string\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n                    position: \"ne\", // position of default legend container within plot\n                    margin: 5, // distance from grid edge to default legend container within plot\n                    backgroundColor: null, // null means auto-detect\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\n                    sorted: null    // default to no legend sorting\n                },\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null // number or [number, \"unit\"]\n                },\n                yaxis: {\n                    autoscaleMargin: 0.02,\n                    position: \"left\" // or \"right\"\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: \"circle\" // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled\n                        lineWidth: 2, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                        // Omit 'zero', so we can later default its value to\n                        // match that of the 'fill' option.\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        barWidth: 1, // in units of the x axis\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // \"left\", \"right\", or \"center\"\n                        horizontal: false,\n                        zero: true\n                    },\n                    shadowSize: 3,\n                    highlightColor: null\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    margin: 0, // distance from the canvas edge to the grid\n                    labelMargin: 5, // in pixels\n                    axisMargin: 8, // in pixels\n                    borderWidth: 2, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n                },\n                interaction: {\n                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n                },\n                hooks: {}\n            },\n        surface = null,     // the canvas for the plot itself\n        overlay = null,     // canvas for interactive stuff on top of plot\n        eventHolder = null, // jQuery object that events should be bound to\n        ctx = null, octx = null,\n        xaxes = [], yaxes = [],\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n        plotWidth = 0, plotHeight = 0,\n        hooks = {\n            processOptions: [],\n            processRawData: [],\n            processDatapoints: [],\n            processOffset: [],\n            drawBackground: [],\n            drawSeries: [],\n            draw: [],\n            bindEvents: [],\n            drawOverlay: [],\n            shutdown: []\n        },\n        plot = this;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() { return placeholder; };\n        plot.getCanvas = function() { return surface.element; };\n        plot.getPlotOffset = function() { return plotOffset; };\n        plot.width = function () { return plotWidth; };\n        plot.height = function () { return plotHeight; };\n        plot.offset = function () {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function () { return series; };\n        plot.getAxes = function () {\n            var res = {}, i;\n            $.each(xaxes.concat(yaxes), function (_, axis) {\n                if (axis)\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n            });\n            return res;\n        };\n        plot.getXAxes = function () { return xaxes; };\n        plot.getYAxes = function () { return yaxes; };\n        plot.c2p = canvasToAxisCoords;\n        plot.p2c = axisToCanvasCoords;\n        plot.getOptions = function () { return options; };\n        plot.highlight = highlight;\n        plot.unhighlight = unhighlight;\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.destroy = function () {\n            shutdown();\n            placeholder.removeData(\"plot\").empty();\n\n            series = [];\n            options = null;\n            surface = null;\n            overlay = null;\n            eventHolder = null;\n            ctx = null;\n            octx = null;\n            xaxes = [];\n            yaxes = [];\n            hooks = null;\n            highlights = [];\n            plot = null;\n        };\n        plot.resize = function () {\n        \tvar width = placeholder.width(),\n        \t\theight = placeholder.height();\n            surface.resize(width, height);\n            overlay.resize(width, height);\n        };\n\n        // public attributes\n        plot.hooks = hooks;\n\n        // initialize\n        initPlugins(plot);\n        parseOptions(options_);\n        setupCanvases();\n        setData(data_);\n        setupGrid();\n        draw();\n        bindEvents();\n\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i)\n                hook[i].apply(this, args);\n        }\n\n        function initPlugins() {\n\n            // References to key classes, allowing plugins to modify them\n\n            var classes = {\n                Canvas: Canvas\n            };\n\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot, classes);\n                if (p.options)\n                    $.extend(true, options, p.options);\n            }\n        }\n\n        function parseOptions(opts) {\n\n            $.extend(true, options, opts);\n\n            // $.extend merges arrays, rather than replacing them.  When less\n            // colors are provided than the size of the default palette, we\n            // end up with those colors plus the remaining defaults, which is\n            // not expected behavior; avoid it by replacing them here.\n\n            if (opts && opts.colors) {\n            \toptions.colors = opts.colors;\n            }\n\n            if (options.xaxis.color == null)\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            if (options.yaxis.color == null)\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\n            if (options.grid.borderColor == null)\n                options.grid.borderColor = options.grid.color;\n            if (options.grid.tickColor == null)\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            // Fill in defaults for axis options, including any unspecified\n            // font-spec fields, if a font-spec was provided.\n\n            // If no x/y axis options were provided, create one of each anyway,\n            // since the rest of the code assumes that they exist.\n\n            var i, axisOptions, axisCount,\n                fontSize = placeholder.css(\"font-size\"),\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n                fontDefaults = {\n                    style: placeholder.css(\"font-style\"),\n                    size: Math.round(0.8 * fontSizeDefault),\n                    variant: placeholder.css(\"font-variant\"),\n                    weight: placeholder.css(\"font-weight\"),\n                    family: placeholder.css(\"font-family\")\n                };\n\n            axisCount = options.xaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.xaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n                options.xaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            axisCount = options.yaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.yaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n                options.yaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            // backwards compatibility, to be removed in future\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n                options.xaxis.ticks = options.xaxis.noTicks;\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n                options.yaxis.ticks = options.yaxis.noTicks;\n            if (options.x2axis) {\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n                options.xaxes[1].position = \"top\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.x2axis.min == null) {\n                    options.xaxes[1].min = null;\n                }\n                if (options.x2axis.max == null) {\n                    options.xaxes[1].max = null;\n                }\n            }\n            if (options.y2axis) {\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n                options.yaxes[1].position = \"right\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.y2axis.min == null) {\n                    options.yaxes[1].min = null;\n                }\n                if (options.y2axis.max == null) {\n                    options.yaxes[1].max = null;\n                }\n            }\n            if (options.grid.coloredAreas)\n                options.grid.markings = options.grid.coloredAreas;\n            if (options.grid.coloredAreasColor)\n                options.grid.markingsColor = options.grid.coloredAreasColor;\n            if (options.lines)\n                $.extend(true, options.series.lines, options.lines);\n            if (options.points)\n                $.extend(true, options.series.points, options.points);\n            if (options.bars)\n                $.extend(true, options.series.bars, options.bars);\n            if (options.shadowSize != null)\n                options.series.shadowSize = options.shadowSize;\n            if (options.highlightColor != null)\n                options.series.highlightColor = options.highlightColor;\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i)\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            for (i = 0; i < options.yaxes.length; ++i)\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\n            // add hooks from options\n            for (var n in hooks)\n                if (options.hooks[n] && options.hooks[n].length)\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData();\n        }\n\n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                }\n                else\n                    s.data = d[i];\n                res.push(s);\n            }\n\n            return res;\n        }\n\n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a == \"object\") // if we got a real axis, extract number\n                a = a.n;\n            if (typeof a != \"number\")\n                a = 1; // default to first axis\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n        }\n\n        function canvasToAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes\n            var res = {}, i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used)\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used)\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n            }\n\n            if (res.x1 !== undefined)\n                res.x = res.x1;\n            if (res.y1 !== undefined)\n                res.y = res.y1;\n\n            return res;\n        }\n\n        function axisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {}, i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"x\";\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"y\";\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1])\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes == xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n                };\n\n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n\n            var neededColors = series.length, maxIndex = -1, i;\n\n            // Subtract the number of series that already have fixed colors or\n            // color indexes from the number that we still need to generate.\n\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    neededColors--;\n                    if (typeof sc == \"number\" && sc > maxIndex) {\n                        maxIndex = sc;\n                    }\n                }\n            }\n\n            // If any of the series have fixed color indexes, then we need to\n            // generate at least as many colors as the highest index.\n\n            if (neededColors <= maxIndex) {\n                neededColors = maxIndex + 1;\n            }\n\n            // Generate all the colors, using first the option colors and then\n            // variations on those colors once they're exhausted.\n\n            var c, colors = [], colorPool = options.colors,\n                colorPoolSize = colorPool.length, variation = 0;\n\n            for (i = 0; i < neededColors; i++) {\n\n                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\n                // Each time we exhaust the colors in the pool we adjust\n                // a scaling factor used to produce more variations on\n                // those colors. The factor alternates negative/positive\n                // to produce lighter/darker colors.\n\n                // Reset the variation after every few cycles, or else\n                // it will end up producing only white or black colors.\n\n                if (i % colorPoolSize == 0 && i) {\n                    if (variation >= 0) {\n                        if (variation < 0.5) {\n                            variation = -variation - 0.2;\n                        } else variation = 0;\n                    } else variation = -variation;\n                }\n\n                colors[i] = c.scale('rgb', 1 + variation);\n            }\n\n            // Finalize the series options, filling in their colors\n\n            var colori = 0, s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                }\n                else if (typeof s.color == \"number\")\n                    s.color = colors[s.color].toString();\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s)\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    if (show)\n                        s.lines.show = true;\n                }\n\n                // If nothing was provided for lines.zero, default it to match\n                // lines.fill, since areas by default should extend to zero.\n\n                if (s.lines.zero == null) {\n                    s.lines.zero = !!s.lines.fill;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n\n        function processData() {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                fakeInfinity = Number.MAX_VALUE,\n                i, j, k, m, length,\n                s, points, ps, x, y, axis, val, f, p,\n                data, format;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min != -fakeInfinity)\n                    axis.datamin = min;\n                if (max > axis.datamax && max != fakeInfinity)\n                    axis.datamax = max;\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                // init axis\n                axis.datamin = topSentry;\n                axis.datamax = bottomSentry;\n                axis.used = false;\n            });\n\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = { points: [] };\n\n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n            }\n\n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                data = s.data;\n                format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({ x: true, number: true, required: true });\n                    format.push({ y: true, number: true, required: true });\n\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n                        if (s.bars.horizontal) {\n                            delete format[format.length - 1].y;\n                            format[format.length - 1].x = true;\n                        }\n                    }\n\n                    s.datapoints.format = format;\n                }\n\n                if (s.datapoints.pointsize != null)\n                    continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n\n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                var insertSteps = s.lines.show && s.lines.steps;\n                s.xaxis.used = s.yaxis.used = true;\n\n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val))\n                                        val = null;\n                                    else if (val == Infinity)\n                                        val = fakeInfinity;\n                                    else if (val == -Infinity)\n                                        val = -fakeInfinity;\n                                }\n\n                                if (val == null) {\n                                    if (f.required)\n                                        nullify = true;\n\n                                    if (f.defaultValue != null)\n                                        val = f.defaultValue;\n                                }\n                            }\n\n                            points[k + m] = val;\n                        }\n                    }\n\n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.autoscale !== false) {\n                                    if (f.x) {\n                                        updateAxis(s.xaxis, val, val);\n                                    }\n                                    if (f.y) {\n                                        updateAxis(s.yaxis, val, val);\n                                    }\n                                }\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n                    else {\n                        // a little bit of line specific stuff that\n                        // perhaps shouldn't be here, but lacking\n                        // better means...\n                        if (insertSteps && k > 0\n                            && points[k - ps] != null\n                            && points[k - ps] != points[k]\n                            && points[k - ps + 1] != points[k + 1]) {\n                            // copy the point to make room for a middle point\n                            for (m = 0; m < ps; ++m)\n                                points[k + ps + m] = points[k + m];\n\n                            // middle point has same y\n                            points[k + 1] = points[k - ps + 1];\n\n                            // we've added a point, better reflect that\n                            k += ps;\n                        }\n                    }\n                }\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n                format = s.datapoints.format;\n\n                var xmin = topSentry, ymin = topSentry,\n                    xmax = bottomSentry, ymax = bottomSentry;\n\n                for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                    for (m = 0; m < ps; ++m) {\n                        val = points[j + m];\n                        f = format[m];\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n                            continue;\n\n                        if (f.x) {\n                            if (val < xmin)\n                                xmin = val;\n                            if (val > xmax)\n                                xmax = val;\n                        }\n                        if (f.y) {\n                            if (val < ymin)\n                                ymin = val;\n                            if (val > ymax)\n                                ymax = val;\n                        }\n                    }\n                }\n\n                if (s.bars.show) {\n                    // make sure we got room for the bar on the dancing floor\n                    var delta;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            delta = 0;\n                            break;\n                        case \"right\":\n                            delta = -s.bars.barWidth;\n                            break;\n                        default:\n                            delta = -s.bars.barWidth / 2;\n                    }\n\n                    if (s.bars.horizontal) {\n                        ymin += delta;\n                        ymax += delta + s.bars.barWidth;\n                    }\n                    else {\n                        xmin += delta;\n                        xmax += delta + s.bars.barWidth;\n                    }\n                }\n\n                updateAxis(s.xaxis, xmin, xmax);\n                updateAxis(s.yaxis, ymin, ymax);\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                if (axis.datamin == topSentry)\n                    axis.datamin = null;\n                if (axis.datamax == bottomSentry)\n                    axis.datamax = null;\n            });\n        }\n\n        function setupCanvases() {\n\n            // Make sure the placeholder is clear of everything except canvases\n            // from a previous plot in this container that we'll try to re-use.\n\n            placeholder.css(\"padding\", 0) // padding messes up the positioning\n                .children().filter(function(){\n                    return !$(this).hasClass(\"flot-overlay\") && !$(this).hasClass('flot-base');\n                }).remove();\n\n            if (placeholder.css(\"position\") == 'static')\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\n            surface = new Canvas(\"flot-base\", placeholder);\n            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\n            ctx = surface.context;\n            octx = overlay.context;\n\n            // define which element we're listening for events on\n            eventHolder = $(overlay.element).unbind();\n\n            // If we're re-using a plot object, shut down the old one\n\n            var existing = placeholder.data(\"plot\");\n\n            if (existing) {\n                existing.shutdown();\n                overlay.clear();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            // bind events\n            if (options.grid.hoverable) {\n                eventHolder.mousemove(onMouseMove);\n\n                // Use bind, rather than .mouseleave, because we officially\n                // still support jQuery 1.2.6, which doesn't define a shortcut\n                // for mouseenter or mouseleave.  This was a bug/oversight that\n                // was fixed somewhere around 1.3.x.  We can return to using\n                // .mouseleave when we drop support for 1.2.6.\n\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\n            }\n\n            if (options.grid.clickable)\n                eventHolder.click(onClick);\n\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function shutdown() {\n            if (redrawTimeout)\n                clearTimeout(redrawTimeout);\n\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n\n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n\n            function identity(x) { return x; }\n\n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n\n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction == \"x\") {\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                m = Math.min(t(axis.max), t(axis.min));\n            }\n            else {\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t == identity) // slight optimization\n                axis.p2c = function (p) { return (p - m) * s; };\n            else\n                axis.p2c = function (p) { return (t(p) - m) * s; };\n            // canvas coordinate to data point\n            if (!it)\n                axis.c2p = function (c) { return m + c / s; };\n            else\n                axis.c2p = function (c) { return it(m + c / s); };\n        }\n\n        function measureTickLabels(axis) {\n\n            var opts = axis.options,\n                ticks = axis.ticks || [],\n                labelWidth = opts.labelWidth || 0,\n                labelHeight = opts.labelHeight || 0,\n                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                font = opts.font || \"flot-tick-label tickLabel\";\n\n            for (var i = 0; i < ticks.length; ++i) {\n\n                var t = ticks[i];\n\n                if (!t.label)\n                    continue;\n\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\n                labelWidth = Math.max(labelWidth, info.width);\n                labelHeight = Math.max(labelHeight, info.height);\n            }\n\n            axis.labelWidth = opts.labelWidth || labelWidth;\n            axis.labelHeight = opts.labelHeight || labelHeight;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset; this first phase only looks at one\n            // dimension per axis, the other dimension depends on the\n            // other axes so will have to wait\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                isXAxis = axis.direction === \"x\",\n                tickLength = axis.options.tickLength,\n                axisMargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                innermost = true,\n                outermost = true,\n                first = true,\n                found = false;\n\n            // Determine the axis's position in its direction and on its side\n\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n                if (a && (a.show || a.reserveSpace)) {\n                    if (a === axis) {\n                        found = true;\n                    } else if (a.options.position === pos) {\n                        if (found) {\n                            outermost = false;\n                        } else {\n                            innermost = false;\n                        }\n                    }\n                    if (!found) {\n                        first = false;\n                    }\n                }\n            });\n\n            // The outermost axis on each side has no margin\n\n            if (outermost) {\n                axisMargin = 0;\n            }\n\n            // The ticks for the first axis in each direction stretch across\n\n            if (tickLength == null) {\n                tickLength = first ? \"full\" : 5;\n            }\n\n            if (!isNaN(+tickLength))\n                padding += +tickLength;\n\n            if (isXAxis) {\n                lh += padding;\n\n                if (pos == \"bottom\") {\n                    plotOffset.bottom += lh + axisMargin;\n                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n                }\n                else {\n                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n                    plotOffset.top += lh + axisMargin;\n                }\n            }\n            else {\n                lw += padding;\n\n                if (pos == \"left\") {\n                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n                    plotOffset.left += lw + axisMargin;\n                }\n                else {\n                    plotOffset.right += lw + axisMargin;\n                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n                }\n            }\n\n             // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.box.padding = padding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // now that all axis boxes have been placed in one\n            // dimension, we can set the remaining dimension coordinates\n            if (axis.direction == \"x\") {\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n            }\n            else {\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n            }\n        }\n\n        function adjustLayoutForThingsStickingOut() {\n            // possibly adjust plot offset to ensure everything stays\n            // inside the canvas and isn't clipped off\n\n            var minMargin = options.grid.minBorderMargin,\n                axis, i;\n\n            // check stuff from the plot (FIXME: this should just read\n            // a value from the series, otherwise it's impossible to\n            // customize)\n            if (minMargin == null) {\n                minMargin = 0;\n                for (i = 0; i < series.length; ++i)\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n            }\n\n            var margins = {\n                left: minMargin,\n                right: minMargin,\n                top: minMargin,\n                bottom: minMargin\n            };\n\n            // check axis labels, note we don't check the actual\n            // labels but instead use the overall width/height to not\n            // jump as much around with replots\n            $.each(allAxes(), function (_, axis) {\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n                    if (axis.direction === \"x\") {\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n                    } else {\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n                    }\n                }\n            });\n\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n        }\n\n        function setupGrid() {\n            var i, axes = allAxes(), showGrid = options.grid.show;\n\n            // Initialize the plot's offset from the edge of the canvas\n\n            for (var a in plotOffset) {\n                var margin = options.grid.margin || 0;\n                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n            }\n\n            executeHooks(hooks.processOffset, [plotOffset]);\n\n            // If the grid is visible, add its border width to the offset\n\n            for (var a in plotOffset) {\n                if(typeof(options.grid.borderWidth) == \"object\") {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n                }\n                else {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n                }\n            }\n\n            $.each(axes, function (_, axis) {\n                var axisOpts = axis.options;\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n                setRange(axis);\n            });\n\n            if (showGrid) {\n\n                var allocatedAxes = $.grep(axes, function (axis) {\n                    return axis.show || axis.reserveSpace;\n                });\n\n                $.each(allocatedAxes, function (_, axis) {\n                    // make the ticks\n                    setupTickGeneration(axis);\n                    setTicks(axis);\n                    snapRangeToTicks(axis, axis.ticks);\n                    // find labelWidth/Height for axis\n                    measureTickLabels(axis);\n                });\n\n                // with all dimensions calculated, we can compute the\n                // axis bounding boxes, start from the outside\n                // (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\n                // make sure we've got enough space for things that\n                // might stick out\n                adjustLayoutForThingsStickingOut();\n\n                $.each(allocatedAxes, function (_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n            }\n\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plot dimensions, we can compute the scaling\n            $.each(axes, function (_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (showGrid) {\n                drawAxisLabels();\n            }\n\n            insertLegend();\n        }\n\n        function setRange(axis) {\n            var opts = axis.options,\n                min = +(opts.min != null ? opts.min : axis.datamin),\n                max = +(opts.max != null ? opts.max : axis.datamax),\n                delta = max - min;\n\n            if (delta == 0.0) {\n                // degenerate case\n                var widen = max == 0 ? 1 : 0.01;\n\n                if (opts.min == null)\n                    min -= widen;\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (opts.max == null || opts.min != null)\n                    max += widen;\n            }\n            else {\n                // consider autoscaling\n                var margin = opts.autoscaleMargin;\n                if (margin != null) {\n                    if (opts.min == null) {\n                        min -= delta * margin;\n                        // make sure we don't go below zero if all values\n                        // are positive\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n                            min = 0;\n                    }\n                    if (opts.max == null) {\n                        max += delta * margin;\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n                            max = 0;\n                    }\n                }\n            }\n            axis.min = min;\n            axis.max = max;\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n\n            // estimate number of ticks\n            var noTicks;\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n                noTicks = opts.ticks;\n            else\n                // heuristic based on the model a*sqrt(x) fitted to\n                // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\n            var delta = (axis.max - axis.min) / noTicks,\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\n                maxDec = opts.tickDecimals;\n\n            if (maxDec != null && dec > maxDec) {\n                dec = maxDec;\n            }\n\n            var magn = Math.pow(10, -dec),\n                norm = delta / magn, // norm is between 1.0 and 10.0\n                size;\n\n            if (norm < 1.5) {\n                size = 1;\n            } else if (norm < 3) {\n                size = 2;\n                // special case for 2.5, requires an extra decimal\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n                    size = 2.5;\n                    ++dec;\n                }\n            } else if (norm < 7.5) {\n                size = 5;\n            } else {\n                size = 10;\n            }\n\n            size *= magn;\n\n            if (opts.minTickSize != null && size < opts.minTickSize) {\n                size = opts.minTickSize;\n            }\n\n            axis.delta = delta;\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n            axis.tickSize = opts.tickSize || size;\n\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n            // we'll add an especially friendly reminder to make sure they included it.\n\n            if (opts.mode == \"time\" && !axis.tickGenerator) {\n                throw new Error(\"Time mode requires the flot.time plugin.\");\n            }\n\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n            // like flot.time.js.\n\n            if (!axis.tickGenerator) {\n\n                axis.tickGenerator = function (axis) {\n\n                    var ticks = [],\n                        start = floorInBase(axis.min, axis.tickSize),\n                        i = 0,\n                        v = Number.NaN,\n                        prev;\n\n                    do {\n                        prev = v;\n                        v = start + i * axis.tickSize;\n                        ticks.push(v);\n                        ++i;\n                    } while (v < axis.max && v != prev);\n                    return ticks;\n                };\n\n\t\t\t\taxis.tickFormatter = function (value, axis) {\n\n\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\n\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\n\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n                    return formatted;\n                };\n            }\n\n            if ($.isFunction(opts.tickFormatter))\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = axis.tickGenerator(axis);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null)\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        if (opts.max == null && niceTicks.length > 1)\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                    }\n\n                    axis.tickGenerator = function (axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [], v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n\n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (!axis.mode && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n                            ts = axis.tickGenerator(axis);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n                            axis.tickDecimals = extraDec;\n                    }\n                }\n            }\n        }\n\n        function setTicks(axis) {\n            var oticks = axis.options.ticks, ticks = [];\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n                ticks = axis.tickGenerator(axis);\n            else if (oticks) {\n                if ($.isFunction(oticks))\n                    // generate the ticks\n                    ticks = oticks(axis);\n                else\n                    ticks = oticks;\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t == \"object\") {\n                    v = +t[0];\n                    if (t.length > 1)\n                        label = t[1];\n                }\n                else\n                    v = +t;\n                if (label == null)\n                    label = axis.tickFormatter(v, axis);\n                if (!isNaN(v))\n                    axis.ticks.push({ v: v, label: label });\n            }\n        }\n\n        function snapRangeToTicks(axis, ticks) {\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\n                // snap to ticks\n                if (axis.options.min == null)\n                    axis.min = Math.min(axis.min, ticks[0].v);\n                if (axis.options.max == null && ticks.length > 1)\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n            }\n        }\n\n        function draw() {\n\n            surface.clear();\n\n            executeHooks(hooks.drawBackground, [ctx]);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor)\n                drawBackground();\n\n            if (grid.show && !grid.aboveData) {\n                drawGrid();\n            }\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n\n            if (grid.show && grid.aboveData) {\n                drawGrid();\n            }\n\n            surface.render();\n\n            // A draw implies that either the axes or data have changed, so we\n            // should probably update the overlay highlights as well.\n\n            triggerRedrawOverlay();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (var i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawGrid() {\n            var i, axes, bw, bc;\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // draw markings\n            var markings = options.grid.markings;\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n\n                    markings = markings(axes);\n                }\n\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null)\n                        xrange.from = xrange.axis.min;\n                    if (xrange.to == null)\n                        xrange.to = xrange.axis.max;\n                    if (yrange.from == null)\n                        yrange.from = yrange.axis.min;\n                    if (yrange.to == null)\n                        yrange.to = yrange.axis.max;\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n                        continue;\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    var xequal = xrange.from === xrange.to,\n                        yequal = yrange.from === yrange.to;\n\n                    if (xequal && yequal) {\n                        continue;\n                    }\n\n                    // then draw\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\n                    if (xequal || yequal) {\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = lineWidth;\n                        if (xequal) {\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n                        } else {\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);                            \n                        }\n                        ctx.stroke();\n                    } else {\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                                     xrange.to - xrange.from,\n                                     yrange.from - yrange.to);\n                    }\n                }\n            }\n\n            // draw the ticks\n            axes = allAxes();\n            bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box,\n                    t = axis.tickLength, x, y, xoff, yoff;\n                if (!axis.show || axis.ticks.length == 0)\n                    continue;\n\n                ctx.lineWidth = 1;\n\n                // find the edges\n                if (axis.direction == \"x\") {\n                    x = 0;\n                    if (t == \"full\")\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\n                    else\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n                }\n                else {\n                    y = 0;\n                    if (t == \"full\")\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\n                    else\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n                }\n\n                // draw tick bar\n                if (!axis.innermost) {\n                    ctx.strokeStyle = axis.options.color;\n                    ctx.beginPath();\n                    xoff = yoff = 0;\n                    if (axis.direction == \"x\")\n                        xoff = plotWidth + 1;\n                    else\n                        yoff = plotHeight + 1;\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\") {\n                            y = Math.floor(y) + 0.5;\n                        } else {\n                            x = Math.floor(x) + 0.5;\n                        }\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                    ctx.stroke();\n                }\n\n                // draw ticks\n\n                ctx.strokeStyle = axis.options.tickColor;\n\n                ctx.beginPath();\n                for (i = 0; i < axis.ticks.length; ++i) {\n                    var v = axis.ticks[i].v;\n\n                    xoff = yoff = 0;\n\n                    if (isNaN(v) || v < axis.min || v > axis.max\n                        // skip those lying on the axes if we got a border\n                        || (t == \"full\"\n                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n                            && (v == axis.min || v == axis.max)))\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t == \"full\" ? -plotHeight : t;\n\n                        if (axis.position == \"top\")\n                            yoff = -yoff;\n                    }\n                    else {\n                        y = axis.p2c(v);\n                        xoff = t == \"full\" ? -plotWidth : t;\n\n                        if (axis.position == \"left\")\n                            xoff = -xoff;\n                    }\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\")\n                            x = Math.floor(x) + 0.5;\n                        else\n                            y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n\n                ctx.stroke();\n            }\n\n\n            // draw border\n            if (bw) {\n                // If either borderWidth or borderColor is an object, then draw the border\n                // line by line instead of as one rectangle\n                bc = options.grid.borderColor;\n                if(typeof bw == \"object\" || typeof bc == \"object\") {\n                    if (typeof bw !== \"object\") {\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n                    }\n                    if (typeof bc !== \"object\") {\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n                    }\n\n                    if (bw.top > 0) {\n                        ctx.strokeStyle = bc.top;\n                        ctx.lineWidth = bw.top;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.right > 0) {\n                        ctx.strokeStyle = bc.right;\n                        ctx.lineWidth = bw.right;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n                        ctx.stroke();\n                    }\n\n                    if (bw.bottom > 0) {\n                        ctx.strokeStyle = bc.bottom;\n                        ctx.lineWidth = bw.bottom;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.left > 0) {\n                        ctx.strokeStyle = bc.left;\n                        ctx.lineWidth = bw.left;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n                        ctx.lineTo(0- bw.left/2, 0);\n                        ctx.stroke();\n                    }\n                }\n                else {\n                    ctx.lineWidth = bw;\n                    ctx.strokeStyle = options.grid.borderColor;\n                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n                }\n            }\n\n            ctx.restore();\n        }\n\n        function drawAxisLabels() {\n\n            $.each(allAxes(), function (_, axis) {\n                var box = axis.box,\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\n                    tick, x, y, halign, valign;\n\n                // Remove text before checking for axis.show and ticks.length;\n                // otherwise plugins, like flot-tickrotor, that draw their own\n                // tick labels will end up with both theirs and the defaults.\n\n                surface.removeText(layer);\n\n                if (!axis.show || axis.ticks.length == 0)\n                    return;\n\n                for (var i = 0; i < axis.ticks.length; ++i) {\n\n                    tick = axis.ticks[i];\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        halign = \"center\";\n                        x = plotOffset.left + axis.p2c(tick.v);\n                        if (axis.position == \"bottom\") {\n                            y = box.top + box.padding;\n                        } else {\n                            y = box.top + box.height - box.padding;\n                            valign = \"bottom\";\n                        }\n                    } else {\n                        valign = \"middle\";\n                        y = plotOffset.top + axis.p2c(tick.v);\n                        if (axis.position == \"left\") {\n                            x = box.left + box.width - box.padding;\n                            halign = \"right\";\n                        } else {\n                            x = box.left + box.padding;\n                        }\n                    }\n\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n                }\n            });\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show)\n                drawSeriesLines(series);\n            if (series.bars.show)\n                drawSeriesBars(series);\n            if (series.points.show)\n                drawSeriesPoints(series);\n        }\n\n        function drawSeriesLines(series) {\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    prevx = null, prevy = null;\n\n                ctx.beginPath();\n                for (var i = ps; i < points.length; i += ps) {\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n                        x2 = points[i], y2 = points[i + 1];\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min) {\n                        if (y2 < axisy.min)\n                            continue;   // line segment is outside\n                        // compute new intersection point\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min) {\n                        if (y1 < axisy.min)\n                            continue;\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max) {\n                        if (y2 > axisy.max)\n                            continue;\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max) {\n                        if (y1 > axisy.max)\n                            continue;\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (x1 != prevx || y1 != prevy)\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\n                    prevx = x2;\n                    prevy = y2;\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n                }\n                ctx.stroke();\n            }\n\n            function plotLineArea(datapoints, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n                    i = 0, top, areaOpen = false,\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\n                // we process each segment in two turns, first forward\n                // direction to sketch out top, then once we hit the\n                // end we go backwards to sketch the bottom\n                while (true) {\n                    if (ps > 0 && i > points.length + ps)\n                        break;\n\n                    i += ps; // ps is negative if going backwards\n\n                    var x1 = points[i - ps],\n                        y1 = points[i - ps + ypos],\n                        x2 = points[i], y2 = points[i + ypos];\n\n                    if (areaOpen) {\n                        if (ps > 0 && x1 != null && x2 == null) {\n                            // at turning point\n                            segmentEnd = i;\n                            ps = -ps;\n                            ypos = 2;\n                            continue;\n                        }\n\n                        if (ps < 0 && i == segmentStart + ps) {\n                            // done with the reverse sweep\n                            ctx.fill();\n                            areaOpen = false;\n                            ps = -ps;\n                            ypos = 1;\n                            i = segmentStart = segmentEnd + ps;\n                            continue;\n                        }\n                    }\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip x values\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (!areaOpen) {\n                        // open area\n                        ctx.beginPath();\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                        areaOpen = true;\n                    }\n\n                    // now first check the case where both is outside\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                        continue;\n                    }\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                        continue;\n                    }\n\n                    // else it's a bit more complicated, there might\n                    // be a flat maxed out rectangle first, then a\n                    // triangular cutout or reverse; to find these\n                    // keep track of the current x values\n                    var x1old = x1, x2old = x2;\n\n                    // clip the y values, without shortcutting, we\n                    // go through all cases in turn\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // if the x value was changed we got a rectangle\n                    // to fill\n                    if (x1 != x1old) {\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                        // it goes to (x1, y1), but we fill that below\n                    }\n\n                    // fill triangular section, this sometimes result\n                    // in redundant points if (x1, y1) hasn't changed\n                    // from previous line to, but we just ignore that\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                    // fill the other rectangle if it's there\n                    if (x2 != x2old) {\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                    }\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            var lw = series.lines.lineWidth,\n                sw = series.shadowSize;\n            // FIXME: consider another form of shadow when filling is turned on\n            if (lw > 0 && sw > 0) {\n                // draw shadow as a thick and thin line with transparency\n                ctx.lineWidth = sw;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                // position shadow at angle from the mid of line\n                var angle = Math.PI/18;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n                ctx.lineWidth = sw/2;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n            }\n\n            if (lw > 0)\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function drawSeriesPoints(series) {\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i], y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                        continue;\n\n                    ctx.beginPath();\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n                    if (symbol == \"circle\")\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n                    else\n                        symbol(ctx, x, y, radius, shadow);\n                    ctx.closePath();\n\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                    ctx.stroke();\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var lw = series.points.lineWidth,\n                sw = series.shadowSize,\n                radius = series.points.radius,\n                symbol = series.points.symbol;\n\n            // If the user sets the line width to 0, we change it to a very \n            // small value. A line width of 0 seems to force the default of 1.\n            // Doing the conditional here allows the shadow setting to still be \n            // optional even with a lineWidth of 0.\n\n            if( lw == 0 )\n                lw = 0.0001;\n\n            if (lw > 0 && sw > 0) {\n                // draw shadow in two steps\n                var w = sw / 2;\n                ctx.lineWidth = w;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                plotPoints(series.datapoints, radius, null, w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            plotPoints(series.datapoints, radius,\n                       getFillStyle(series.points, series.color), 0, false,\n                       series.xaxis, series.yaxis, symbol);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left, right, bottom, top,\n                drawLeft, drawRight, drawTop, drawBottom,\n                tmp;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            }\n            else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n\n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max)\n                return;\n\n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n\n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n\n            // fill the bar\n            if (fillStyleCallback) {\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fillRect(left, top, right - left, bottom - top)\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom);\n                if (drawLeft)\n                    c.lineTo(left, top);\n                else\n                    c.moveTo(left, top);\n                if (drawTop)\n                    c.lineTo(right, top);\n                else\n                    c.moveTo(right, top);\n                if (drawRight)\n                    c.lineTo(right, bottom);\n                else\n                    c.moveTo(right, bottom);\n                if (drawBottom)\n                    c.lineTo(left, bottom);\n                else\n                    c.moveTo(left, bottom);\n                c.stroke();\n            }\n        }\n\n        function drawSeriesBars(series) {\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null)\n                        continue;\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n\n            var barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\n            var fill = filloptions.fill;\n            if (!fill)\n                return null;\n\n            if (filloptions.fillColor)\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill == \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n\n        function insertLegend() {\n\n            if (options.legend.container != null) {\n                $(options.legend.container).html(\"\");\n            } else {\n                placeholder.find(\".legend\").remove();\n            }\n\n            if (!options.legend.show) {\n                return;\n            }\n\n            var fragments = [], entries = [], rowStarted = false,\n                lf = options.legend.labelFormatter, s, label;\n\n            // Build a list of legend entries, with each having a label and a color\n\n            for (var i = 0; i < series.length; ++i) {\n                s = series[i];\n                if (s.label) {\n                    label = lf ? lf(s.label, s) : s.label;\n                    if (label) {\n                        entries.push({\n                            label: label,\n                            color: s.color\n                        });\n                    }\n                }\n            }\n\n            // Sort the legend using either the default or a custom comparator\n\n            if (options.legend.sorted) {\n                if ($.isFunction(options.legend.sorted)) {\n                    entries.sort(options.legend.sorted);\n                } else if (options.legend.sorted == \"reverse\") {\n                \tentries.reverse();\n                } else {\n                    var ascending = options.legend.sorted != \"descending\";\n                    entries.sort(function(a, b) {\n                        return a.label == b.label ? 0 : (\n                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n                        );\n                    });\n                }\n            }\n\n            // Generate markup for the list of entries, in their final order\n\n            for (var i = 0; i < entries.length; ++i) {\n\n                var entry = entries[i];\n\n                if (i % options.legend.noColumns == 0) {\n                    if (rowStarted)\n                        fragments.push('</tr>');\n                    fragments.push('<tr>');\n                    rowStarted = true;\n                }\n\n                fragments.push(\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n                );\n            }\n\n            if (rowStarted)\n                fragments.push('</tr>');\n\n            if (fragments.length == 0)\n                return;\n\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n            if (options.legend.container != null)\n                $(options.legend.container).html(table);\n            else {\n                var pos = \"\",\n                    p = options.legend.position,\n                    m = options.legend.margin;\n                if (m[0] == null)\n                    m = [m, m];\n                if (p.charAt(0) == \"n\")\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n                else if (p.charAt(0) == \"s\")\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n                if (p.charAt(1) == \"e\")\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n                else if (p.charAt(1) == \"w\")\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n                if (options.legend.backgroundOpacity != 0.0) {\n                    // put in the transparent background\n                    // separately to avoid blended labels and\n                    // label boxes\n                    var c = options.legend.backgroundColor;\n                    if (c == null) {\n                        c = options.grid.backgroundColor;\n                        if (c && typeof c == \"string\")\n                            c = $.color.parse(c);\n                        else\n                            c = $.color.extract(legend, 'background-color');\n                        c.a = 1;\n                        c = c.toString();\n                    }\n                    var div = legend.children();\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n                }\n            }\n        }\n\n\n        // interactive features\n\n        var highlights = [],\n            redrawTimeout = null;\n\n        // returns the data item the mouse is over, or null if none is found\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n            var maxDistance = options.grid.mouseActiveRadius,\n                smallestDistance = maxDistance * maxDistance + 1,\n                item = null, foundPoint = false, i, j, ps;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(series[i]))\n                    continue;\n\n                var s = series[i],\n                    axisx = s.xaxis,\n                    axisy = s.yaxis,\n                    points = s.datapoints.points,\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n                    my = axisy.c2p(mouseY),\n                    maxx = maxDistance / axisx.scale,\n                    maxy = maxDistance / axisy.scale;\n\n                ps = s.datapoints.pointsize;\n                // with inverse transforms, we can't use the maxx/maxy\n                // optimization, sadly\n                if (axisx.options.inverseTransform)\n                    maxx = Number.MAX_VALUE;\n                if (axisy.options.inverseTransform)\n                    maxy = Number.MAX_VALUE;\n\n                if (s.lines.show || s.points.show) {\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1];\n                        if (x == null)\n                            continue;\n\n                        // For points and lines, the cursor must be within a\n                        // certain distance to the data point\n                        if (x - mx > maxx || x - mx < -maxx ||\n                            y - my > maxy || y - my < -maxy)\n                            continue;\n\n                        // We have to calculate distances in pixels, not in\n                        // data units, because the scales of the axes may be different\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\n                            dist = dx * dx + dy * dy; // we save the sqrt\n\n                        // use <= to ensure last point takes precedence\n                        // (last generally means on top of)\n                        if (dist < smallestDistance) {\n                            smallestDistance = dist;\n                            item = [i, j / ps];\n                        }\n                    }\n                }\n\n                if (s.bars.show && !item) { // no other point can be nearby\n\n                    var barLeft, barRight;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            barLeft = 0;\n                            break;\n                        case \"right\":\n                            barLeft = -s.bars.barWidth;\n                            break;\n                        default:\n                            barLeft = -s.bars.barWidth / 2;\n                    }\n\n                    barRight = barLeft + s.bars.barWidth;\n\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\n                        if (x == null)\n                            continue;\n\n                        // for a bar graph, the cursor must be inside the bar\n                        if (series[i].bars.horizontal ?\n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n                             my >= y + barLeft && my <= y + barRight) :\n                            (mx >= x + barLeft && mx <= x + barRight &&\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n                                item = [i, j / ps];\n                    }\n                }\n            }\n\n            if (item) {\n                i = item[0];\n                j = item[1];\n                ps = series[i].datapoints.pointsize;\n\n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n                         dataIndex: j,\n                         series: series[i],\n                         seriesIndex: i };\n            }\n\n            return null;\n        }\n\n        function onMouseMove(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return s[\"hoverable\"] != false; });\n        }\n\n        function onMouseLeave(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return false; });\n        }\n\n        function onClick(e) {\n            triggerClickHoverEvent(\"plotclick\", e,\n                                   function (s) { return s[\"clickable\"] != false; });\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n            var offset = eventHolder.offset(),\n                canvasX = event.pageX - offset.left - plotOffset.left,\n                canvasY = event.pageY - offset.top - plotOffset.top,\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\n            pos.pageX = event.pageX;\n            pos.pageY = event.pageY;\n\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (var i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if (h.auto == eventname &&\n                        !(item && h.series == item.series &&\n                          h.point[0] == item.datapoint[0] &&\n                          h.point[1] == item.datapoint[1]))\n                        unhighlight(h.series, h.point);\n                }\n\n                if (item)\n                    highlight(item.series, item.datapoint, eventname);\n            }\n\n            placeholder.trigger(eventname, [ pos, item ]);\n        }\n\n        function triggerRedrawOverlay() {\n            var t = options.interaction.redrawOverlayInterval;\n            if (t == -1) {      // skip event queue\n                drawOverlay();\n                return;\n            }\n\n            if (!redrawTimeout)\n                redrawTimeout = setTimeout(drawOverlay, t);\n        }\n\n        function drawOverlay() {\n            redrawTimeout = null;\n\n            // draw highlights\n            octx.save();\n            overlay.clear();\n            octx.translate(plotOffset.left, plotOffset.top);\n\n            var i, hi;\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show)\n                    drawBarHighlight(hi.series, hi.point);\n                else\n                    drawPointHighlight(hi.series, hi.point);\n            }\n            octx.restore();\n\n            executeHooks(hooks.drawOverlay, [octx]);\n        }\n\n        function highlight(s, point, auto) {\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i == -1) {\n                highlights.push({ series: s, point: point, auto: auto });\n\n                triggerRedrawOverlay();\n            }\n            else if (!auto)\n                highlights[i].auto = false;\n        }\n\n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                triggerRedrawOverlay();\n                return;\n            }\n\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i != -1) {\n                highlights.splice(i, 1);\n\n                triggerRedrawOverlay();\n            }\n        }\n\n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series == s && h.point[0] == p[0]\n                    && h.point[1] == p[1])\n                    return i;\n            }\n            return -1;\n        }\n\n        function drawPointHighlight(series, point) {\n            var x = point[0], y = point[1],\n                axisx = series.xaxis, axisy = series.yaxis,\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                return;\n\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = highlightColor;\n            var radius = 1.5 * pointRadius;\n            x = axisx.p2c(x);\n            y = axisy.p2c(y);\n\n            octx.beginPath();\n            if (series.points.symbol == \"circle\")\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            else\n                series.points.symbol(octx, x, y, radius, false);\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point) {\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n                fillStyle = highlightColor,\n                barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = highlightColor;\n\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec == \"string\")\n                return spec;\n            else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c != \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null)\n                            co = co.scale('rgb', c.brightness);\n                        if (c.opacity != null)\n                            co.a *= c.opacity;\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n\n                return gradient;\n            }\n        }\n    }\n\n    // Add the plot function to the top level of the jQuery object\n\n    $.plot = function(placeholder, data, options) {\n        //var t0 = new Date();\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n        return plot;\n    };\n\n    $.plot.version = \"0.8.3\";\n\n    $.plot.plugins = [];\n\n    // Also add the plot function as a chainable property\n\n    $.fn.plot = function(data, options) {\n        return this.each(function() {\n            $.plot(this, data, options);\n        });\n    };\n\n    // round to nearby lower multiple of base\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n\n})(jQuery);\n","/* Flot plugin for selecting regions of a plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\nselection: {\n\tmode: null or \"x\" or \"y\" or \"xy\",\n\tcolor: color,\n\tshape: \"round\" or \"miter\" or \"bevel\",\n\tminSize: number of pixels\n}\n\nSelection support is enabled by setting the mode to one of \"x\", \"y\" or \"xy\".\nIn \"x\" mode, the user will only be able to specify the x range, similarly for\n\"y\" mode. For \"xy\", the selection becomes a rectangle where both ranges can be\nspecified. \"color\" is color of the selection (if you need to change the color\nlater on, you can get to it with plot.getOptions().selection.color). \"shape\"\nis the shape of the corners of the selection.\n\n\"minSize\" is the minimum size a selection can be in pixels. This value can\nbe customized to determine the smallest size a selection can be and still\nhave the selection rectangle be displayed. When customizing this value, the\nfact that it refers to pixels, not axis units must be taken into account.\nThus, for example, if there is a bar graph in time mode with BarWidth set to 1\nminute, setting \"minSize\" to 1 will not make the minimum selection size 1\nminute, but rather 1 pixel. Note also that setting \"minSize\" to 0 will prevent\n\"plotunselected\" events from being fired when the user clicks the mouse without\ndragging.\n\nWhen selection support is enabled, a \"plotselected\" event will be emitted on\nthe DOM element you passed into the plot function. The event handler gets a\nparameter with the ranges selected on the axes, like this:\n\n\tplaceholder.bind( \"plotselected\", function( event, ranges ) {\n\t\talert(\"You selected \" + ranges.xaxis.from + \" to \" + ranges.xaxis.to)\n\t\t// similar for yaxis - with multiple axes, the extra ones are in\n\t\t// x2axis, x3axis, ...\n\t});\n\nThe \"plotselected\" event is only fired when the user has finished making the\nselection. A \"plotselecting\" event is fired during the process with the same\nparameters as the \"plotselected\" event, in case you want to know what's\nhappening while it's happening,\n\nA \"plotunselected\" event with no arguments is emitted when the user clicks the\nmouse to remove the selection. As stated above, setting \"minSize\" to 0 will\ndestroy this behavior.\n\nThe plugin allso adds the following methods to the plot object:\n\n- setSelection( ranges, preventEvent )\n\n  Set the selection rectangle. The passed in ranges is on the same form as\n  returned in the \"plotselected\" event. If the selection mode is \"x\", you\n  should put in either an xaxis range, if the mode is \"y\" you need to put in\n  an yaxis range and both xaxis and yaxis if the selection mode is \"xy\", like\n  this:\n\n\tsetSelection({ xaxis: { from: 0, to: 10 }, yaxis: { from: 40, to: 60 } });\n\n  setSelection will trigger the \"plotselected\" event when called. If you don't\n  want that to happen, e.g. if you're inside a \"plotselected\" handler, pass\n  true as the second parameter. If you are using multiple axes, you can\n  specify the ranges on any of those, e.g. as x2axis/x3axis/... instead of\n  xaxis, the plugin picks the first one it sees.\n\n- clearSelection( preventEvent )\n\n  Clear the selection rectangle. Pass in true to avoid getting a\n  \"plotunselected\" event.\n\n- getSelection()\n\n  Returns the current selection in the same format as the \"plotselected\"\n  event. If there's currently no selection, the function returns null.\n\n*/\n\n(function ($) {\n    function init(plot) {\n        var selection = {\n                first: { x: -1, y: -1}, second: { x: -1, y: -1},\n                show: false,\n                active: false\n            };\n\n        // FIXME: The drag handling implemented here should be\n        // abstracted out, there's some similar code from a library in\n        // the navigation plugin, this should be massaged a bit to fit\n        // the Flot cases here better and reused. Doing this would\n        // make this plugin much slimmer.\n        var savedhandlers = {};\n\n        var mouseUpHandler = null;\n        \n        function onMouseMove(e) {\n            if (selection.active) {\n                updateSelection(e);\n                \n                plot.getPlaceholder().trigger(\"plotselecting\", [ getSelection() ]);\n            }\n        }\n\n        function onMouseDown(e) {\n            if (e.which != 1)  // only accept left-click\n                return;\n            \n            // cancel out any text selections\n            document.body.focus();\n\n            // prevent text selection and drag in old-school browsers\n            if (document.onselectstart !== undefined && savedhandlers.onselectstart == null) {\n                savedhandlers.onselectstart = document.onselectstart;\n                document.onselectstart = function () { return false; };\n            }\n            if (document.ondrag !== undefined && savedhandlers.ondrag == null) {\n                savedhandlers.ondrag = document.ondrag;\n                document.ondrag = function () { return false; };\n            }\n\n            setSelectionPos(selection.first, e);\n\n            selection.active = true;\n\n            // this is a bit silly, but we have to use a closure to be\n            // able to whack the same handler again\n            mouseUpHandler = function (e) { onMouseUp(e); };\n            \n            $(document).one(\"mouseup\", mouseUpHandler);\n        }\n\n        function onMouseUp(e) {\n            mouseUpHandler = null;\n            \n            // revert drag stuff for old-school browsers\n            if (document.onselectstart !== undefined)\n                document.onselectstart = savedhandlers.onselectstart;\n            if (document.ondrag !== undefined)\n                document.ondrag = savedhandlers.ondrag;\n\n            // no more dragging\n            selection.active = false;\n            updateSelection(e);\n\n            if (selectionIsSane())\n                triggerSelectedEvent();\n            else {\n                // this counts as a clear\n                plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n                plot.getPlaceholder().trigger(\"plotselecting\", [ null ]);\n            }\n\n            return false;\n        }\n\n        function getSelection() {\n            if (!selectionIsSane())\n                return null;\n            \n            if (!selection.show) return null;\n\n            var r = {}, c1 = selection.first, c2 = selection.second;\n            $.each(plot.getAxes(), function (name, axis) {\n                if (axis.used) {\n                    var p1 = axis.c2p(c1[axis.direction]), p2 = axis.c2p(c2[axis.direction]); \n                    r[name] = { from: Math.min(p1, p2), to: Math.max(p1, p2) };\n                }\n            });\n            return r;\n        }\n\n        function triggerSelectedEvent() {\n            var r = getSelection();\n\n            plot.getPlaceholder().trigger(\"plotselected\", [ r ]);\n\n            // backwards-compat stuff, to be removed in future\n            if (r.xaxis && r.yaxis)\n                plot.getPlaceholder().trigger(\"selected\", [ { x1: r.xaxis.from, y1: r.yaxis.from, x2: r.xaxis.to, y2: r.yaxis.to } ]);\n        }\n\n        function clamp(min, value, max) {\n            return value < min ? min: (value > max ? max: value);\n        }\n\n        function setSelectionPos(pos, e) {\n            var o = plot.getOptions();\n            var offset = plot.getPlaceholder().offset();\n            var plotOffset = plot.getPlotOffset();\n            pos.x = clamp(0, e.pageX - offset.left - plotOffset.left, plot.width());\n            pos.y = clamp(0, e.pageY - offset.top - plotOffset.top, plot.height());\n\n            if (o.selection.mode == \"y\")\n                pos.x = pos == selection.first ? 0 : plot.width();\n\n            if (o.selection.mode == \"x\")\n                pos.y = pos == selection.first ? 0 : plot.height();\n        }\n\n        function updateSelection(pos) {\n            if (pos.pageX == null)\n                return;\n\n            setSelectionPos(selection.second, pos);\n            if (selectionIsSane()) {\n                selection.show = true;\n                plot.triggerRedrawOverlay();\n            }\n            else\n                clearSelection(true);\n        }\n\n        function clearSelection(preventEvent) {\n            if (selection.show) {\n                selection.show = false;\n                plot.triggerRedrawOverlay();\n                if (!preventEvent)\n                    plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n            }\n        }\n\n        // function taken from markings support in Flot\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = plot.getAxes();\n\n            for (var k in axes) {\n                axis = axes[k];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? plot.getXAxes()[0] : plot.getYAxes()[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n            \n            return { from: from, to: to, axis: axis };\n        }\n        \n        function setSelection(ranges, preventEvent) {\n            var axis, range, o = plot.getOptions();\n\n            if (o.selection.mode == \"y\") {\n                selection.first.x = 0;\n                selection.second.x = plot.width();\n            }\n            else {\n                range = extractRange(ranges, \"x\");\n\n                selection.first.x = range.axis.p2c(range.from);\n                selection.second.x = range.axis.p2c(range.to);\n            }\n\n            if (o.selection.mode == \"x\") {\n                selection.first.y = 0;\n                selection.second.y = plot.height();\n            }\n            else {\n                range = extractRange(ranges, \"y\");\n\n                selection.first.y = range.axis.p2c(range.from);\n                selection.second.y = range.axis.p2c(range.to);\n            }\n\n            selection.show = true;\n            plot.triggerRedrawOverlay();\n            if (!preventEvent && selectionIsSane())\n                triggerSelectedEvent();\n        }\n\n        function selectionIsSane() {\n            var minSize = plot.getOptions().selection.minSize;\n            return Math.abs(selection.second.x - selection.first.x) >= minSize &&\n                Math.abs(selection.second.y - selection.first.y) >= minSize;\n        }\n\n        plot.clearSelection = clearSelection;\n        plot.setSelection = setSelection;\n        plot.getSelection = getSelection;\n\n        plot.hooks.bindEvents.push(function(plot, eventHolder) {\n            var o = plot.getOptions();\n            if (o.selection.mode != null) {\n                eventHolder.mousemove(onMouseMove);\n                eventHolder.mousedown(onMouseDown);\n            }\n        });\n\n\n        plot.hooks.drawOverlay.push(function (plot, ctx) {\n            // draw selection\n            if (selection.show && selectionIsSane()) {\n                var plotOffset = plot.getPlotOffset();\n                var o = plot.getOptions();\n\n                ctx.save();\n                ctx.translate(plotOffset.left, plotOffset.top);\n\n                var c = $.color.parse(o.selection.color);\n\n                ctx.strokeStyle = c.scale('a', 0.8).toString();\n                ctx.lineWidth = 1;\n                ctx.lineJoin = o.selection.shape;\n                ctx.fillStyle = c.scale('a', 0.4).toString();\n\n                var x = Math.min(selection.first.x, selection.second.x) + 0.5,\n                    y = Math.min(selection.first.y, selection.second.y) + 0.5,\n                    w = Math.abs(selection.second.x - selection.first.x) - 1,\n                    h = Math.abs(selection.second.y - selection.first.y) - 1;\n\n                ctx.fillRect(x, y, w, h);\n                ctx.strokeRect(x, y, w, h);\n\n                ctx.restore();\n            }\n        });\n        \n        plot.hooks.shutdown.push(function (plot, eventHolder) {\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mousedown\", onMouseDown);\n            \n            if (mouseUpHandler)\n                $(document).unbind(\"mouseup\", mouseUpHandler);\n        });\n\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: {\n            selection: {\n                mode: null, // one of null, \"x\", \"y\" or \"xy\"\n                color: \"#e8cfac\",\n                shape: \"round\", // one of \"round\", \"miter\", or \"bevel\"\n                minSize: 5 // minimum number of pixels\n            }\n        },\n        name: 'selection',\n        version: '1.1'\n    });\n})(jQuery);\n","/* Pretty handling of time axes.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/\n\n(function($) {\n\n\tvar options = {\n\t\txaxis: {\n\t\t\ttimezone: null,\t\t// \"browser\" for local to the client or timezone for timezone-js\n\t\t\ttimeformat: null,\t// format string to use\n\t\t\ttwelveHourClock: false,\t// 12 or 24 time in time mode\n\t\t\tmonthNames: null\t// list of names of months\n\t\t}\n\t};\n\n\t// round to nearby lower multiple of base\n\n\tfunction floorInBase(n, base) {\n\t\treturn base * Math.floor(n / base);\n\t}\n\n\t// Returns a string with the date d formatted according to fmt.\n\t// A subset of the Open Group's strftime format is supported.\n\n\tfunction formatDate(d, fmt, monthNames, dayNames) {\n\n\t\tif (typeof d.strftime == \"function\") {\n\t\t\treturn d.strftime(fmt);\n\t\t}\n\n\t\tvar leftPad = function(n, pad) {\n\t\t\tn = \"\" + n;\n\t\t\tpad = \"\" + (pad == null ? \"0\" : pad);\n\t\t\treturn n.length == 1 ? pad + n : n;\n\t\t};\n\n\t\tvar r = [];\n\t\tvar escape = false;\n\t\tvar hours = d.getHours();\n\t\tvar isAM = hours < 12;\n\n\t\tif (monthNames == null) {\n\t\t\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t}\n\n\t\tif (dayNames == null) {\n\t\t\tdayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t}\n\n\t\tvar hours12;\n\n\t\tif (hours > 12) {\n\t\t\thours12 = hours - 12;\n\t\t} else if (hours == 0) {\n\t\t\thours12 = 12;\n\t\t} else {\n\t\t\thours12 = hours;\n\t\t}\n\n\t\tfor (var i = 0; i < fmt.length; ++i) {\n\n\t\t\tvar c = fmt.charAt(i);\n\n\t\t\tif (escape) {\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'a': c = \"\" + dayNames[d.getDay()]; break;\n\t\t\t\t\tcase 'b': c = \"\" + monthNames[d.getMonth()]; break;\n\t\t\t\t\tcase 'd': c = leftPad(d.getDate()); break;\n\t\t\t\t\tcase 'e': c = leftPad(d.getDate(), \" \"); break;\n\t\t\t\t\tcase 'h':\t// For back-compat with 0.7; remove in 1.0\n\t\t\t\t\tcase 'H': c = leftPad(hours); break;\n\t\t\t\t\tcase 'I': c = leftPad(hours12); break;\n\t\t\t\t\tcase 'l': c = leftPad(hours12, \" \"); break;\n\t\t\t\t\tcase 'm': c = leftPad(d.getMonth() + 1); break;\n\t\t\t\t\tcase 'M': c = leftPad(d.getMinutes()); break;\n\t\t\t\t\t// quarters not in Open Group's strftime specification\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tc = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n\t\t\t\t\tcase 'S': c = leftPad(d.getSeconds()); break;\n\t\t\t\t\tcase 'y': c = leftPad(d.getFullYear() % 100); break;\n\t\t\t\t\tcase 'Y': c = \"\" + d.getFullYear(); break;\n\t\t\t\t\tcase 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n\t\t\t\t\tcase 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n\t\t\t\t\tcase 'w': c = \"\" + d.getDay(); break;\n\t\t\t\t}\n\t\t\t\tr.push(c);\n\t\t\t\tescape = false;\n\t\t\t} else {\n\t\t\t\tif (c == \"%\") {\n\t\t\t\t\tescape = true;\n\t\t\t\t} else {\n\t\t\t\t\tr.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn r.join(\"\");\n\t}\n\n\t// To have a consistent view of time-based data independent of which time\n\t// zone the client happens to be in we need a date-like object independent\n\t// of time zones.  This is done through a wrapper that only calls the UTC\n\t// versions of the accessor methods.\n\n\tfunction makeUtcWrapper(d) {\n\n\t\tfunction addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n\t\t\tsourceObj[sourceMethod] = function() {\n\t\t\t\treturn targetObj[targetMethod].apply(targetObj, arguments);\n\t\t\t};\n\t\t};\n\n\t\tvar utc = {\n\t\t\tdate: d\n\t\t};\n\n\t\t// support strftime, if found\n\n\t\tif (d.strftime != undefined) {\n\t\t\taddProxyMethod(utc, \"strftime\", d, \"strftime\");\n\t\t}\n\n\t\taddProxyMethod(utc, \"getTime\", d, \"getTime\");\n\t\taddProxyMethod(utc, \"setTime\", d, \"setTime\");\n\n\t\tvar props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\n\t\tfor (var p = 0; p < props.length; p++) {\n\t\t\taddProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n\t\t\taddProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n\t\t}\n\n\t\treturn utc;\n\t};\n\n\t// select time zone strategy.  This returns a date-like object tied to the\n\t// desired timezone\n\n\tfunction dateGenerator(ts, opts) {\n\t\tif (opts.timezone == \"browser\") {\n\t\t\treturn new Date(ts);\n\t\t} else if (!opts.timezone || opts.timezone == \"utc\") {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t} else if (typeof timezoneJS != \"undefined\" && typeof timezoneJS.Date != \"undefined\") {\n\t\t\tvar d = new timezoneJS.Date();\n\t\t\t// timezone-js is fickle, so be sure to set the time zone before\n\t\t\t// setting the time.\n\t\t\td.setTimezone(opts.timezone);\n\t\t\td.setTime(ts);\n\t\t\treturn d;\n\t\t} else {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t}\n\t}\n\t\n\t// map of app. size of time units in milliseconds\n\n\tvar timeUnitSize = {\n\t\t\"second\": 1000,\n\t\t\"minute\": 60 * 1000,\n\t\t\"hour\": 60 * 60 * 1000,\n\t\t\"day\": 24 * 60 * 60 * 1000,\n\t\t\"month\": 30 * 24 * 60 * 60 * 1000,\n\t\t\"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n\t\t\"year\": 365.2425 * 24 * 60 * 60 * 1000\n\t};\n\n\t// the allowed tick sizes, after 1 year we use\n\t// an integer algorithm\n\n\tvar baseSpec = [\n\t\t[1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n\t\t[30, \"second\"], \n\t\t[1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n\t\t[30, \"minute\"], \n\t\t[1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n\t\t[8, \"hour\"], [12, \"hour\"],\n\t\t[1, \"day\"], [2, \"day\"], [3, \"day\"],\n\t\t[0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n\t\t[2, \"month\"]\n\t];\n\n\t// we don't know which variant(s) we'll need yet, but generating both is\n\t// cheap\n\n\tvar specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n\t\t[1, \"year\"]]);\n\tvar specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n\t\t[1, \"year\"]]);\n\n\tfunction init(plot) {\n\t\tplot.hooks.processOptions.push(function (plot, options) {\n\t\t\t$.each(plot.getAxes(), function(axisName, axis) {\n\n\t\t\t\tvar opts = axis.options;\n\n\t\t\t\tif (opts.mode == \"time\") {\n\t\t\t\t\taxis.tickGenerator = function(axis) {\n\n\t\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t\tvar d = dateGenerator(axis.min, opts);\n\t\t\t\t\t\tvar minSize = 0;\n\n\t\t\t\t\t\t// make quarter use a possibility if quarters are\n\t\t\t\t\t\t// mentioned in either of these options\n\n\t\t\t\t\t\tvar spec = (opts.tickSize && opts.tickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ||\n\t\t\t\t\t\t\t(opts.minTickSize && opts.minTickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ? specQuarters : specMonths;\n\n\t\t\t\t\t\tif (opts.minTickSize != null) {\n\t\t\t\t\t\t\tif (typeof opts.tickSize == \"number\") {\n\t\t\t\t\t\t\t\tminSize = opts.tickSize;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tminSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < spec.length - 1; ++i) {\n\t\t\t\t\t\t\tif (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n\t\t\t\t\t\t\t\t\t\t\t  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n\t\t\t\t\t\t\t\t&& spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = spec[i][0];\n\t\t\t\t\t\tvar unit = spec[i][1];\n\n\t\t\t\t\t\t// special-case the possibility of several years\n\n\t\t\t\t\t\tif (unit == \"year\") {\n\n\t\t\t\t\t\t\t// if given a minTickSize in years, just use it,\n\t\t\t\t\t\t\t// ensuring that it's an integer\n\n\t\t\t\t\t\t\tif (opts.minTickSize != null && opts.minTickSize[1] == \"year\") {\n\t\t\t\t\t\t\t\tsize = Math.floor(opts.minTickSize[0]);\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n\t\t\t\t\t\t\t\tvar norm = (axis.delta / timeUnitSize.year) / magn;\n\n\t\t\t\t\t\t\t\tif (norm < 1.5) {\n\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t} else if (norm < 3) {\n\t\t\t\t\t\t\t\t\tsize = 2;\n\t\t\t\t\t\t\t\t} else if (norm < 7.5) {\n\t\t\t\t\t\t\t\t\tsize = 5;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsize = 10;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsize *= magn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// minimum size for years is 1\n\n\t\t\t\t\t\t\tif (size < 1) {\n\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taxis.tickSize = opts.tickSize || [size, unit];\n\t\t\t\t\t\tvar tickSize = axis.tickSize[0];\n\t\t\t\t\t\tunit = axis.tickSize[1];\n\n\t\t\t\t\t\tvar step = tickSize * timeUnitSize[unit];\n\n\t\t\t\t\t\tif (unit == \"second\") {\n\t\t\t\t\t\t\td.setSeconds(floorInBase(d.getSeconds(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"minute\") {\n\t\t\t\t\t\t\td.setMinutes(floorInBase(d.getMinutes(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"hour\") {\n\t\t\t\t\t\t\td.setHours(floorInBase(d.getHours(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"month\") {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"quarter\") {\n\t\t\t\t\t\t\td.setMonth(3 * floorInBase(d.getMonth() / 3,\n\t\t\t\t\t\t\t\ttickSize));\n\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\td.setFullYear(floorInBase(d.getFullYear(), tickSize));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset smaller components\n\n\t\t\t\t\t\td.setMilliseconds(0);\n\n\t\t\t\t\t\tif (step >= timeUnitSize.minute) {\n\t\t\t\t\t\t\td.setSeconds(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.hour) {\n\t\t\t\t\t\t\td.setMinutes(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day) {\n\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day * 4) {\n\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.month * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 3));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.quarter * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 6));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.year) {\n\t\t\t\t\t\t\td.setMonth(0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar carry = 0;\n\t\t\t\t\t\tvar v = Number.NaN;\n\t\t\t\t\t\tvar prev;\n\n\t\t\t\t\t\tdo {\n\n\t\t\t\t\t\t\tprev = v;\n\t\t\t\t\t\t\tv = d.getTime();\n\t\t\t\t\t\t\tticks.push(v);\n\n\t\t\t\t\t\t\tif (unit == \"month\" || unit == \"quarter\") {\n\t\t\t\t\t\t\t\tif (tickSize < 1) {\n\n\t\t\t\t\t\t\t\t\t// a bit complicated - we'll divide the\n\t\t\t\t\t\t\t\t\t// month/quarter up but we need to take\n\t\t\t\t\t\t\t\t\t// care of fractions so we don't end up in\n\t\t\t\t\t\t\t\t\t// the middle of a day\n\n\t\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t\t\tvar start = d.getTime();\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t(unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\tvar end = d.getTime();\n\t\t\t\t\t\t\t\t\td.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n\t\t\t\t\t\t\t\t\tcarry = d.getHours();\n\t\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\ttickSize * (unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\td.setFullYear(d.getFullYear() + tickSize);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\td.setTime(v + step);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (v < axis.max && v != prev);\n\n\t\t\t\t\t\treturn ticks;\n\t\t\t\t\t};\n\n\t\t\t\t\taxis.tickFormatter = function (v, axis) {\n\n\t\t\t\t\t\tvar d = dateGenerator(v, axis.options);\n\n\t\t\t\t\t\t// first check global format\n\n\t\t\t\t\t\tif (opts.timeformat != null) {\n\t\t\t\t\t\t\treturn formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// possibly use quarters if quarters are mentioned in\n\t\t\t\t\t\t// any of these places\n\n\t\t\t\t\t\tvar useQuarters = (axis.options.tickSize &&\n\t\t\t\t\t\t\t\taxis.options.tickSize[1] == \"quarter\") ||\n\t\t\t\t\t\t\t(axis.options.minTickSize &&\n\t\t\t\t\t\t\t\taxis.options.minTickSize[1] == \"quarter\");\n\n\t\t\t\t\t\tvar t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n\t\t\t\t\t\tvar span = axis.max - axis.min;\n\t\t\t\t\t\tvar suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n\t\t\t\t\t\tvar hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n\t\t\t\t\t\tvar fmt;\n\n\t\t\t\t\t\tif (t < timeUnitSize.minute) {\n\t\t\t\t\t\t\tfmt = hourCode + \":%M:%S\" + suffix;\n\t\t\t\t\t\t} else if (t < timeUnitSize.day) {\n\t\t\t\t\t\t\tif (span < 2 * timeUnitSize.day) {\n\t\t\t\t\t\t\t\tfmt = hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (t < timeUnitSize.month) {\n\t\t\t\t\t\t\tfmt = \"%b %d\";\n\t\t\t\t\t\t} else if ((useQuarters && t < timeUnitSize.quarter) ||\n\t\t\t\t\t\t\t(!useQuarters && t < timeUnitSize.year)) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"%b\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (useQuarters && t < timeUnitSize.year) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"Q%q\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"Q%q %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfmt = \"%Y\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n\t\t\t\t\t\treturn rt;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t$.plot.plugins.push({\n\t\tinit: init,\n\t\toptions: options,\n\t\tname: 'time',\n\t\tversion: '1.0'\n\t});\n\n\t// Time-axis support used to be in Flot core, which exposed the\n\t// formatDate function on the plot object.  Various plugins depend\n\t// on the function, so we need to re-expose it here.\n\n\t$.plot.formatDate = formatDate;\n\t$.plot.dateGenerator = dateGenerator;\n\n})(jQuery);\n","module.exports = cockpit;","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\nimport cockpit from 'cockpit';\n\nimport 'jquery-flot/jquery.flot';\nimport 'jquery-flot/jquery.flot.selection';\nimport 'jquery-flot/jquery.flot.time';\n\nconst C_ = cockpit.gettext;\n\n/* A thin abstraction over flot and metrics channels.  It mostly\n * shields you from hairy array acrobatics and having to know when it\n * is safe or required to create the flot object.\n *\n *\n * - plot = new plot.Plot(element, x_range, [x_stop])\n *\n * Creates a 'plot' object attached to the given DOM element.  It will\n * show 'x_range' seconds worth of samples, until 'x_stop'.\n *\n * If 'x_stop' is undefined, the plot will show the last 'x_range'\n * seconds until now and walking will work as expected (see below).\n *\n * If 'x_stop' is not undefined, it should be the number of seconds\n * since the epoch.\n *\n * - plot.start_walking()\n *\n * Scroll towards the future.\n *\n * - plot.stop_walking()\n *\n * Stop automatic scrolling.\n *\n * - plot.refresh()\n *\n * Draw the plot.\n *\n * - plot.resize()\n *\n * Resize the plot to fit into its DOM element.  This will\n * automatically refresh the plot.  You should also call this function\n * when 'element' has changed visibility as that might affect its\n * size.\n *\n * - plot.set_options(options)\n *\n * Set the global flot options.  You need to refresh the plot\n * afterwards.\n *\n * In addition to the flot options, you can also set the 'setup_hook'\n * field to a function.  This function will be called between\n * flot.setData() and flot.draw() and can be used to adjust the axes\n * limits, for example.  It is called with the flot object as its only\n * parameter.\n *\n * Setting the 'post_hook' to a function will call that function after\n * each refresh of the plot.  This is used to decorate a plot with the\n * unit strings, for example.\n *\n * - options = plot.get_options()\n *\n * Get the global flot options.  You can modify the object and then\n * pass it to set_options.  Don't forget to refresh the plot.\n *\n * - plot.reset(x_range, [x_stop])\n *\n * Resets the range of the plot.  All current sources are reinitialzed\n * but keep their current samples.\n *\n * - plot.destroy()\n *\n * Resets the plot to be empty.  The plot will disappear completely\n * from the DOM, including the grid.\n *\n * - series = plot.add_metrics_sum_series(desc, options)\n *\n * Adds a single series into the plot that is fed by a metrics\n * channel.  The series will have the given flot options.  The plot\n * will automatically refresh as data becomes available from the\n * channel.\n *\n * The single value for the series is computed by summing the values\n * for all metrics and all instances that are delivered by the\n * channel.\n *\n * The 'desc' argument determines the channel options:\n *\n *   metrics:         An array with the names of all metrics to monitor.\n *   units:           The common units string for all metrics.\n *   instances:       A optional list of instances to include.\n *   omit_instances:  A optional list of instances to omit.\n *   factor:          A factor to apply to the final sum of all samples.\n *\n * - series.options\n *\n * Direct access to the series options.  You need to refresh the plot\n * after changing it.\n *\n * - series.move_to_front()\n *\n * Move the series in front of all other series.  You need to refresh\n * the plot to see the effect immediately.\n *\n * - series.remove()\n *\n * Removes the series from its plot.  The plot will be refreshed.\n *\n * - $(series).on('hover', function (event, val) { ... })\n *\n * This event is triggered when the user hovers over the series ('val'\n * == true), or stops hovering over it ('val' == false).\n */\n\nclass Metrics_series {\n    constructor(desc, opts, grid, flot_data, interval) {\n        this.desc = desc;\n        this.options = opts;\n        this.grid = grid;\n        this.flot_data = flot_data;\n        this.interval = interval;\n        this.channel = null;\n        this.chanopts_list = [ ];\n    }\n\n    stop() {\n        if (this.channel)\n            this.channel.close();\n    }\n\n    remove_series() {\n        var pos = this.flot_data.indexOf(this.options);\n        if (pos >= 0)\n            this.flot_data.splice(pos, 1);\n    }\n\n    remove() {\n        this.stop();\n        this.remove_series();\n        $(self).triggerHandler('removed');\n    }\n\n    build_metric(n) {\n        return { name: n, units: this.desc.units, derive: this.desc.derive };\n    }\n\n    hover_hit(pos, item) {\n        return !!(item && (item.series.data == this.options.data));\n    }\n\n    hover(val) {\n        $(this).triggerHandler('hover', [ val ]);\n    }\n\n    move_to_front() {\n        var pos = this.flot_data.indexOf(this.options);\n        if (pos >= 0) {\n            this.flot_data.splice(pos, 1);\n            this.flot_data.push(this.options);\n        }\n    }\n\n    check_archives() {\n        if (this.channel.archives)\n            $(this).triggerHandler('changed');\n    }\n}\n\nclass Metrics_sum_series extends Metrics_series {\n    constructor(desc, opts, grid, flot_data, interval) {\n        super(desc, opts, grid, flot_data, interval);\n        if (this.desc.direct) {\n            this.chanopts_list.push({\n                source: 'direct',\n                archive_source: 'pcp-archive',\n                metrics: this.desc.direct.map(this.build_metric, this),\n                instances: this.desc.instances,\n                'omit-instances': this.desc['omit-instances'],\n                host: this.desc.host\n            });\n        }\n        if (this.desc.pmcd) {\n            this.chanopts_list.push({\n                source: 'pmcd',\n                metrics: this.desc.pmcd.map(this.build_metric, this),\n                instances: this.desc.instances,\n                'omit-instances': this.desc['omit-instances'],\n                host: this.desc.host\n            });\n        }\n        if (this.desc.internal) {\n            this.chanopts_list.push({\n                source: 'internal',\n                metrics: this.desc.internal.map(this.build_metric, this),\n                instances: this.desc.instances,\n                'omit-instances': this.desc['omit-instances'],\n                host: this.desc.host\n            });\n        }\n    }\n\n    flat_sum(val) {\n        var sum;\n\n        if (!val)\n            return 0;\n        if (val.length !== undefined) {\n            sum = 0;\n            for (let i = 0; i < val.length; i++)\n                sum += this.flat_sum(val[i]);\n            return sum;\n        }\n        return val;\n    }\n\n    reset_series() {\n        if (this.channel)\n            this.channel.close();\n\n        this.channel = cockpit.metrics(this.interval, this.chanopts_list);\n\n        var metrics_row = this.grid.add(this.channel, [ ]);\n        var factor = this.desc.factor || 1;\n        var threshold = this.desc.threshold || null;\n        var offset = this.desc.offset || 0;\n        this.options.data = this.grid.add((row, x, n) => {\n            for (let i = 0; i < n; i++) {\n                let value = offset + this.flat_sum(metrics_row[x + i]) * factor;\n                if (threshold !== null)\n                    row[x + i] = [ (this.grid.beg + x + i) * this.interval, Math.abs(value) > threshold ? value : null, threshold ];\n                else\n                    row[x + i] = [ (this.grid.beg + x + i) * this.interval, value ];\n            }\n        });\n\n        $(this.channel).on('changed', this.check_archives.bind(this));\n        this.check_archives();\n    }\n}\n\nclass Metrics_difference_series extends Metrics_series {\n    constructor(desc, opts, grid, flot_data, interval) {\n        super(desc, opts, grid, flot_data, interval);\n        if (this.desc.direct) {\n            this.chanopts_list.push({\n                source: 'direct',\n                archive_source: 'pcp-archive',\n                metrics: this.desc.direct.map(this.build_metric, this),\n                instances: this.desc.instances,\n                'omit-instances': this.desc['omit-instances'],\n                host: this.desc.host\n            });\n        }\n        if (this.desc.pmcd) {\n            this.chanopts_list.push({\n                source: 'pmcd',\n                metrics: this.desc.pmcd.map(this.build_metric, this),\n                instances: this.desc.instances,\n                'omit-instances': this.desc['omit-instances'],\n                host: this.desc.host\n            });\n        }\n        if (this.desc.internal) {\n            this.chanopts_list.push({\n                source: 'internal',\n                metrics: this.desc.internal.map(this.build_metric, this),\n                instances: this.desc.instances,\n                'omit-instances': this.desc['omit-instances'],\n                host: this.desc.host\n            });\n        }\n    }\n\n    flat_difference(val) {\n        var diff;\n\n        if (!val)\n            return 0;\n        if (val.length !== undefined) {\n            diff = val[0];\n            for (let i = 1; i < val.length; i++)\n                diff -= this.flat_difference(val[i]);\n            return diff;\n        }\n        return val;\n    }\n\n    reset_series() {\n        if (this.channel)\n            this.channel.close();\n\n        this.channel = cockpit.metrics(this.interval, this.chanopts_list);\n\n        var metrics_row = this.grid.add(this.channel, [ ]);\n        var factor = this.desc.factor || 1;\n        var threshold = this.desc.threshold || null;\n        var offset = this.desc.offset || 0;\n        this.options.data = this.grid.add((row, x, n) => {\n            for (let i = 0; i < n; i++) {\n                let value = offset + this.flat_difference(metrics_row[x + i]) * factor;\n                if (threshold !== null)\n                    row[x + i] = [ (this.grid.beg + x + i) * this.interval, Math.abs(value) > threshold ? value : null, threshold ];\n                else\n                    row[x + i] = [ (this.grid.beg + x + i) * this.interval, value ];\n            }\n        });\n\n        $(this.channel).on('changed', this.check_archives.bind(this));\n        this.check_archives();\n    }\n}\n\nclass Metrics_stacked_instances_series extends Metrics_series {\n    constructor(desc, opts, grid, flot_data, interval) {\n        super(desc, opts, grid, flot_data, interval);\n        this.instances = { };\n        this.last_instance = null;\n        if (this.desc.direct) {\n            this.chanopts_list.push({\n                source: 'direct',\n                archive_source: 'pcp-archive',\n                metrics: [ this.build_metric(this.desc.direct) ],\n                metrics_path_names: [ 'a' ],\n                instances: this.desc.instances,\n                'omit-instances': this.desc['omit-instances'],\n                host: this.desc.host\n            });\n        }\n        if (this.desc.pmcd) {\n            this.chanopts_list.push({\n                source: 'pmcd',\n                metrics: this.desc.pmcd.map(this.build_metric, this),\n                metrics_path_names: [ 'a' ],\n                instances: this.desc.instances,\n                'omit-instances': this.desc['omit-instances'],\n                host: this.desc.host\n            });\n        }\n\n        if (this.desc.internal) {\n            this.chanopts_list.push({\n                source: 'internal',\n                metrics: [ this.build_metric(this.desc.internal) ],\n                metrics_path_names: [ 'a' ],\n                instances: this.desc.instances,\n                'omit-instances': this.desc['omit-instances'],\n                host: this.desc.host\n            });\n        }\n    }\n\n    reset_series() {\n        if (this.channel)\n            this.channel.close();\n        this.channel = cockpit.metrics(this.interval, this.chanopts_list);\n        $(this.channel).on('changed', this.check_archives.bind(this));\n        this.check_archives();\n        for (let name in this.instances)\n            this.instances[name].reset();\n    }\n\n    add_instance(name, selector) {\n        if (this.instances[name])\n            return;\n\n        var instance_data = $.extend({ selector: selector }, this.options);\n        var factor = this.desc.factor || 1;\n        var threshold = this.desc.threshold || 0;\n        var metrics_row;\n        var last = this.last_instance;\n\n        function reset() {\n            metrics_row = this.grid.add(this.channel, [ 'a', name ]);\n            instance_data.data = this.grid.add((row, x, n) => {\n                for (let i = 0; i < n; i++) {\n                    let value = (metrics_row[x + i] || 0) * factor;\n                    let ts = (this.grid.beg + x + i) * this.interval;\n                    let floor = 0;\n\n                    if (last) {\n                        if (last.data[x + i][1])\n                            floor = last.data[x + i][1];\n                        else\n                            floor = last.data[x + i][2];\n                    }\n\n                    if (Math.abs(value) > threshold) {\n                        row[x + i] = [ ts, floor + value, floor ];\n                        if (row[x + i - 1] && row[x + i - 1][1] === null)\n                            row[x + i - 1][1] = row[x + i - 1][2];\n                    } else {\n                        row[x + i] = [ ts, null, floor ];\n                        if (row[x + i - 1] && row[x + i - 1][1] !== null)\n                            row[x + i - 1][1] = row[x + i - 1][2];\n                    }\n                }\n            });\n        }\n\n        function remove() {\n            this.grid.remove(metrics_row);\n            this.grid.remove(instance_data.data);\n            var pos = this.flot_data.indexOf(instance_data);\n            if (pos >= 0)\n                this.flot_data.splice(pos, 1);\n        }\n\n        instance_data.reset = reset.bind(this);\n        instance_data.remove = remove.bind(this);\n        this.last_instance = instance_data;\n        this.instances[name] = instance_data;\n        instance_data.reset();\n        this.flot_data.push(instance_data);\n        this.grid.sync();\n    }\n\n    clear_instances() {\n        for (let i in this.instances)\n            this.instances[i].remove();\n        this.instances = { };\n        this.last_instance = null;\n    }\n\n    hover_hit(pos, item) {\n        var index;\n\n        if (!this.grid)\n            return false;\n\n        index = Math.round(pos.x / this.interval) - this.grid.beg;\n        if (index < 0)\n            index = 0;\n\n        for (let name in this.instances) {\n            let d = this.instances[name].data;\n            if (d[index] && d[index][1] && d[index][2] <= pos.y && pos.y <= d[index][1])\n                return this.instances[name].selector || name;\n        }\n        return false;\n    }\n}\n\nexport class Plot {\n    constructor(element, x_range_seconds, x_stop_seconds) {\n        this.element = element;\n        this.options = { };\n\n        this.series = [ ];\n        this.flot_data = [ ];\n        this.flot = null;\n\n        this.interval = Math.ceil(x_range_seconds / 1000) * 1000;\n        this.grid = null;\n\n        this.refresh_pending = false;\n        this.sync_suppressed = 0;\n        this.archives = false;\n\n        this.cur_hover_series = null;\n        this.cur_hover_val = false;\n\n        $(this.element).on('plothover', null, this, this.hover_on);\n        $(this.element).on('mouseleave', null, this, this.hover_off);\n        $(this.element).on('plotselecting', null, this, this.selecting);\n        $(this.element).on('plotselected', null, this, this.selected);\n\n        // for testing\n        $(this.element).data('flot_data', this.flot_data);\n\n        this.reset(x_range_seconds, x_stop_seconds);\n    }\n\n    refresh_now() {\n        if (this.element.height() === 0 || this.element.width() === 0)\n            return;\n\n        if (this.flot === null)\n            this.flot = $.plot(this.element, this.flot_data, this.options);\n\n        this.flot.setData(this.flot_data);\n        var axes = this.flot.getAxes();\n\n        /* Walking and fetching samples are not synchronized, which\n         * means that a walk step might reveal a sample that hasn't\n         * been fetched yet.  To reduce flicker, we cut off one extra\n         * sample at the end.\n         */\n        axes.xaxis.options.min = this.grid.beg * this.interval;\n        axes.xaxis.options.max = (this.grid.end - 2) * this.interval;\n        if (this.options.setup_hook)\n            this.options.setup_hook(this.flot);\n\n        /* This makes sure that the axes are displayed even for an\n         * empty plot.\n         */\n        axes.xaxis.show = true;\n        axes.xaxis.used = true;\n        axes.yaxis.show = true;\n        axes.yaxis.used = true;\n\n        this.flot.setupGrid();\n        this.flot.draw();\n\n        if (this.options.post_hook)\n            this.options.post_hook(this.flot);\n    }\n\n    refresh() {\n        if (!this.refresh_pending) {\n            this.refresh_pending = true;\n            window.setTimeout(() => {\n                this.refresh_pending = false;\n                this.refresh_now();\n            }, 0);\n        }\n    }\n\n    start_walking() {\n        this.grid.walk();\n    }\n\n    stop_walking() {\n        this.grid.move(this.grid.beg, this.grid.end);\n    }\n\n    reset(x_range_seconds, x_stop_seconds) {\n        if (this.flot)\n            this.flot.clearSelection(true);\n\n        // Fill the plot with about 1000 samples, but don't sample\n        // faster than once per second.\n        //\n        // TODO - do this based on the actual size of the plot.\n        this.interval = Math.ceil(x_range_seconds / 1000) * 1000;\n\n        var x_offset;\n        if (x_stop_seconds !== undefined)\n            x_offset = (new Date().getTime()) - x_stop_seconds * 1000;\n        else\n            x_offset = 0;\n\n        var beg = -Math.ceil((x_range_seconds * 1000 + x_offset) / this.interval);\n        var end = -Math.floor(x_offset / this.interval);\n\n        if (this.grid && this.grid.interval == this.interval) {\n            this.grid.move(beg, end);\n        } else {\n            if (this.grid)\n                this.grid.close();\n            this.grid = cockpit.grid(this.interval, beg, end);\n            this.sync_suppressed++;\n            for (var i = 0; i < this.series.length; i++) {\n                this.series[i].stop();\n                this.series[i].interval = this.interval;\n                this.series[i].grid = this.grid;\n                this.series[i].reset_series();\n            }\n            this.sync_suppressed--;\n            this.sync();\n\n            $(this.grid).on('notify', (event, index, count) => {\n                this.refresh();\n            });\n        }\n    }\n\n    sync() {\n        if (this.sync_suppressed === 0)\n            this.grid.sync();\n    }\n\n    destroy() {\n        this.grid.close();\n        for (var i = 0; i < this.series.length; i++)\n            this.series[i].stop();\n\n        this.options = { };\n        this.series = [ ];\n        this.flot_data = [ ];\n        this.flot = null;\n        $(this.element).empty();\n        $(this.element).data('flot_data', null);\n    }\n\n    resize() {\n        if (this.element.height() === 0 || this.element.width() === 0)\n            return;\n        if (this.flot)\n            this.flot.resize();\n        this.refresh();\n    }\n\n    set_options(opts) {\n        this.options = opts;\n        this.flot = null;\n    }\n\n    get_options() {\n        return this.options;\n    }\n\n    check_archives() {\n        if (!this.archives) {\n            this.archives = true;\n            $(this).triggerHandler('changed');\n        }\n    }\n\n    add_metrics_sum_series(desc, opts) {\n        var sum_series = new Metrics_sum_series(desc, opts, this.grid, this.flot_data, this.interval);\n\n        $(sum_series).on('removed', this.refresh.bind(this));\n        $(sum_series).on('changed', this.check_archives.bind(this));\n        sum_series.reset_series();\n        sum_series.check_archives();\n\n        this.series.push(sum_series);\n        this.sync();\n        this.flot_data.push(opts);\n\n        return sum_series;\n    }\n\n    add_metrics_difference_series(desc, opts) {\n        var difference_series = new Metrics_difference_series(desc, opts, this.grid, this.flot_data, this.interval);\n\n        $(difference_series).on('removed', this.refresh.bind(this));\n        $(difference_series).on('changed', this.check_archives.bind(this));\n        difference_series.reset_series();\n        difference_series.check_archives();\n\n        this.series.push(difference_series);\n        this.sync();\n        this.flot_data.push(opts);\n\n        return difference_series;\n    }\n\n    add_metrics_stacked_instances_series(desc, opts) {\n        var stacked_series = new Metrics_stacked_instances_series(desc, opts, this.grid, this.flot_data, this.interval);\n\n        $(stacked_series).on('removed', this.refresh.bind(this));\n        $(stacked_series).on('changed', this.check_archives.bind(this));\n        stacked_series.reset_series();\n        stacked_series.check_archives();\n\n        this.series.push(stacked_series);\n        this.sync_suppressed++;\n        for (let name in stacked_series.instances)\n            stacked_series.instances[name].reset();\n        this.sync_suppressed--;\n        this.sync();\n\n        return stacked_series;\n    }\n\n    hover(next_hover_series, next_hover_val) {\n        if (this.cur_hover_series != next_hover_series) {\n            if (this.cur_hover_series)\n                this.cur_hover_series.hover(false);\n            this.cur_hover_series = next_hover_series;\n            this.cur_hover_val = next_hover_val;\n            if (this.cur_hover_series)\n                this.cur_hover_series.hover(this.cur_hover_val);\n        } else if (this.cur_hover_val != next_hover_val) {\n            this.cur_hover_val = next_hover_val;\n            if (this.cur_hover_series)\n                this.cur_hover_series.hover(this.cur_hover_val);\n        }\n    }\n\n    hover_on(event, pos, item) {\n        var next_hover_series = null;\n        var next_hover_val = false;\n        for (let i = 0; i < event.data.series.length; i++) {\n            next_hover_val = event.data.series[i].hover_hit(pos, item);\n            if (next_hover_val) {\n                next_hover_series = event.data.series[i];\n                break;\n            }\n        }\n        event.data.hover(next_hover_series, next_hover_val);\n    }\n\n    hover_off(event) {\n        event.data.hover(null, false);\n    }\n\n    selecting(event, ranges) {\n        if (ranges)\n            $(event.data).triggerHandler('zoomstart', [ ]);\n    }\n\n    selected(event, ranges) {\n        event.data.flot.clearSelection(true);\n        $(event.data).triggerHandler('zoom', [ (ranges.xaxis.to - ranges.xaxis.from) / 1000, ranges.xaxis.to / 1000 ]);\n    }\n}\n\nexport function plot_simple_template() {\n    var plot_colors = [\n        '#39a5dc',\n        '#008ff0',\n        '#2daaff',\n        '#69c2ff',\n        '#a5daff',\n        '#e1f3ff',\n        '#00243c',\n        '#004778'\n    ];\n\n    return {\n        colors: plot_colors,\n        legend: { show: false },\n        series: {\n            shadowSize: 0,\n            lines: {\n                lineWidth: 2.0,\n                fill: 1\n            }\n        },\n        xaxis: {\n            tickLength: 0,\n            mode: 'time',\n            tickFormatter: format_date_tick,\n            minTickSize: [ 1, 'minute' ],\n            reserveSpace: false\n        },\n        yaxis: {\n            tickColor: '#d1d1d1',\n            min: 0\n        },\n        /*\n         * The point radius influences the margin around the grid even if no points\n         * are plotted. We don't want any margin, so we set the radius to zero.\n         */\n        points: {\n            radius: 0\n        },\n        grid: {\n            borderWidth: 1,\n            aboveData: false,\n            color: 'black',\n            borderColor: $.color\n                    .parse('black')\n                    .scale('a', 0.22)\n                    .toString(),\n            labelMargin: 0\n        }\n    };\n}\n\nexport function memory_ticks(opts) {\n    // Not more than 5 ticks, nicely rounded to powers of 2.\n    var size = Math.pow(2.0, Math.ceil(Math.log(opts.max / 5) / Math.LN2));\n    var ticks = [ ];\n    for (let t = 0; t < opts.max; t += size)\n        ticks.push(t);\n    return ticks;\n}\n\nconst month_names = [\n    C_(\"month-name\", 'Jan'),\n    C_(\"month-name\", 'Feb'),\n    C_(\"month-name\", 'Mar'),\n    C_(\"month-name\", 'Apr'),\n    C_(\"month-name\", 'May'),\n    C_(\"month-name\", 'Jun'),\n    C_(\"month-name\", 'Jul'),\n    C_(\"month-name\", 'Aug'),\n    C_(\"month-name\", 'Sep'),\n    C_(\"month-name\", 'Oct'),\n    C_(\"month-name\", 'Nov'),\n    C_(\"month-name\", 'Dec')\n];\n\nexport function format_date_tick(val, axis) {\n    function pad(n) {\n        var str = n.toFixed();\n        if (str.length == 1)\n            str = '0' + str;\n        return str;\n    }\n\n    var year_index = 0;\n    var month_index = 1;\n    var day_index = 2;\n    var hour_minute_index = 3;\n\n    var begin;\n    var end;\n\n    // Determine the smallest unit according to the steps from one\n    // tick to the next.\n\n    var size = axis.tickSize[1];\n    if (size == 'minute' || size == 'hour')\n        end = hour_minute_index;\n    else if (size == 'day')\n        end = day_index;\n    else if (size == 'month')\n        end = month_index;\n    else\n        end = year_index;\n\n    // Determine biggest unit according to how far away the left edge\n    // of the graph is from 'now'.\n\n    var n = new Date();\n    var l = new Date(axis.min);\n\n    begin = year_index;\n    if (l.getFullYear() == n.getFullYear()) {\n        begin = month_index;\n        if (l.getMonth() == n.getMonth()) {\n            begin = day_index;\n            if (l.getDate() == n.getDate())\n                begin = hour_minute_index;\n        }\n    }\n\n    // Adjust so that it all makes sense\n\n    if (begin > end)\n        begin = end;\n    if (begin == day_index)\n        begin = month_index;\n\n    // And render it\n\n    var d = new Date(val);\n    var label = ' ';\n\n    if (year_index >= begin && year_index <= end)\n        label += d.getFullYear().toFixed() + ' ';\n    if (month_index >= begin && month_index <= end)\n        label += month_names[d.getMonth()] + ' ';\n    if (day_index >= begin && day_index <= end)\n        label += d.getDate().toFixed() + ' ';\n    if (hour_minute_index >= begin && hour_minute_index <= end)\n        label += pad(d.getHours()) + ':' + pad(d.getMinutes()) + ' ';\n\n    return label.substr(0, label.length - 1);\n}\n\nexport function bytes_tick_unit(axis) {\n    return cockpit.format_bytes(axis.max, 1024, true)[1];\n}\n\nexport function format_bytes_tick_no_unit(val, axis) {\n    return cockpit.format_bytes(val, bytes_tick_unit(axis), true)[0];\n}\n\nexport function format_bytes_tick(val, axis) {\n    return cockpit.format_bytes(val, 1024);\n}\n\nexport function bytes_per_sec_tick_unit(axis) {\n    return cockpit.format_bytes_per_sec(axis.max, 1024, true)[1];\n}\n\nexport function format_bytes_per_sec_tick_no_unit(val, axis) {\n    return cockpit.format_bytes_per_sec(val, bytes_per_sec_tick_unit(axis), true)[0];\n}\n\nexport function format_bytes_per_sec_tick(val, axis) {\n    return cockpit.format_bytes_per_sec(val, 1024);\n}\n\nexport function bits_per_sec_tick_unit(axis) {\n    return cockpit.format_bits_per_sec(axis.max * 8, 1000, true)[1];\n}\n\nexport function format_bits_per_sec_tick_no_unit(val, axis) {\n    return cockpit.format_bits_per_sec(val * 8, bits_per_sec_tick_unit(axis), true)[0];\n}\n\nexport function format_bits_per_sec_tick(val, axis) {\n    return cockpit.format_bits_per_sec(val * 8, 1000);\n}\n\nexport function setup_plot_controls(container, element, plots) {\n    var plot_min_x_range = 5 * 60;\n    var plot_zoom_steps = [ 5 * 60, 60 * 60, 6 * 60 * 60, 24 * 60 * 60, 7 * 24 * 60 * 60, 30 * 24 * 60 * 60, 365 * 24 * 60 * 60 ];\n    var plot_x_range = 5 * 60;\n    var plot_x_stop;\n    var zoom_history = [ ];\n\n    element.find('[data-range]').click(function () {\n        zoom_history = [ ];\n        plot_x_range = parseInt($(this).attr('data-range'), 10);\n        plot_reset();\n    });\n\n    element.find('[data-action=\"goto-now\"]').click(function () {\n        plot_x_stop = undefined;\n        plot_reset();\n    });\n\n    element.find('[data-action=\"scroll-left\"]').click(function () {\n        var step = plot_x_range / 10;\n        if (plot_x_stop === undefined)\n            plot_x_stop = (new Date()).getTime() / 1000;\n        plot_x_stop -= step;\n        plot_reset();\n    });\n\n    element.find('[data-action=\"scroll-right\"]').click(function () {\n        var step = plot_x_range / 10;\n        if (plot_x_stop !== undefined) {\n            plot_x_stop += step;\n            plot_reset();\n        }\n    });\n\n    element.find('[data-action=\"zoom-out\"]').click(function () {\n        zoom_plot_out();\n    });\n\n    function zoom_plot_start() {\n        if (plot_x_stop === undefined) {\n            plots.forEach(function (p) {\n                p.stop_walking();\n            });\n            plot_x_stop = (new Date()).getTime() / 1000;\n            update_plot_buttons();\n        }\n    }\n\n    function zoom_plot_in(x_range, x_stop) {\n        zoom_history.push(plot_x_range);\n        plot_x_range = x_range;\n        plot_x_stop = x_stop;\n        plot_reset();\n    }\n\n    function zoom_plot_out() {\n        var r = zoom_history.pop();\n        if (r === undefined) {\n            var i;\n            for (i = 0; i < plot_zoom_steps.length - 1; i++) {\n                if (plot_zoom_steps[i] > plot_x_range)\n                    break;\n            }\n            r = plot_zoom_steps[i];\n        }\n        if (plot_x_stop !== undefined)\n            plot_x_stop += (r - plot_x_range) / 2;\n        plot_x_range = r;\n        plot_reset();\n    }\n\n    function format_range(seconds) {\n        var n;\n        if (seconds >= 365 * 24 * 60 * 60) {\n            n = Math.ceil(seconds / (365 * 24 * 60 * 60));\n            return cockpit.format(cockpit.ngettext('$0 year', '$0 years', n), n);\n        } else if (seconds >= 30 * 24 * 60 * 60) {\n            n = Math.ceil(seconds / (30 * 24 * 60 * 60));\n            return cockpit.format(cockpit.ngettext('$0 month', '$0 months', n), n);\n        } else if (seconds >= 7 * 24 * 60 * 60) {\n            n = Math.ceil(seconds / (7 * 24 * 60 * 60));\n            return cockpit.format(cockpit.ngettext('$0 week', '$0 weeks', n), n);\n        } else if (seconds >= 24 * 60 * 60) {\n            n = Math.ceil(seconds / (24 * 60 * 60));\n            return cockpit.format(cockpit.ngettext('$0 day', '$0 days', n), n);\n        } else if (seconds >= 60 * 60) {\n            n = Math.ceil(seconds / (60 * 60));\n            return cockpit.format(cockpit.ngettext('$0 hour', '$0 hours', n), n);\n        } else {\n            n = Math.ceil(seconds / 60);\n            return cockpit.format(cockpit.ngettext('$0 minute', '$0 minutes', n), n);\n        }\n    }\n\n    function update_plot_buttons() {\n        element.find('[data-action=\"scroll-right\"]').attr('disabled', plot_x_stop === undefined);\n        element.find('[data-action=\"zoom-out\"]').attr('disabled', plot_x_range >= plot_zoom_steps[plot_zoom_steps.length - 1]);\n    }\n\n    function update_selection_zooming() {\n        var mode;\n\n        if (container.hasClass('show-zoom-controls') && plot_x_range > plot_min_x_range) {\n            container.addClass('show-zoom-cursor');\n            mode = 'x';\n        } else {\n            container.removeClass('show-zoom-cursor');\n            mode = null;\n        }\n\n        plots.forEach(function (p) {\n            var options = p.get_options();\n            if (!options.selection || options.selection.mode != mode) {\n                options.selection = { mode: mode, color: '#edf8ff' };\n                p.set_options(options);\n                p.refresh();\n            }\n        });\n    }\n\n    function plot_reset() {\n        if (plot_x_range < plot_min_x_range) {\n            plot_x_stop += (plot_min_x_range - plot_x_range) / 2;\n            plot_x_range = plot_min_x_range;\n        }\n        if (plot_x_stop >= (new Date()).getTime() / 1000 - 10)\n            plot_x_stop = undefined;\n\n        element.find('.dropdown-toggle span:first-child').text(format_range(plot_x_range));\n\n        plots.forEach(function (p) {\n            p.stop_walking();\n            p.reset(plot_x_range, plot_x_stop);\n            p.refresh();\n            if (plot_x_stop === undefined)\n                p.start_walking();\n\n            function check_archives() {\n                if (p.archives) {\n                    container.addClass('show-zoom-controls');\n                    update_selection_zooming();\n                }\n            }\n\n            $(p).on('changed', check_archives);\n            check_archives();\n        });\n\n        update_plot_buttons();\n        update_selection_zooming();\n    }\n\n    function reset(p) {\n        if (p === undefined)\n            p = [ ];\n        plots = p;\n        plots.forEach(function (p) {\n            $(p).on('zoomstart', function (event) { zoom_plot_start() });\n            $(p).on('zoom', function (event, x_range, x_stop) { zoom_plot_in(x_range, x_stop) });\n        });\n        plot_reset();\n    }\n\n    reset(plots);\n\n    return {\n        reset: reset\n    };\n}\n\nexport function setup_plot(graph_id, grid, data, user_options) {\n    var options = {\n        colors: [ '#0099d3' ],\n        legend: { show: false },\n        series: {\n            shadowSize: 0,\n            lines: {\n                lineWidth: 0.0,\n                fill: 1.0\n            }\n        },\n        xaxis: { tickFormatter: function() { return '' } },\n        yaxis: { tickFormatter: function() { return '' } },\n        // The point radius influences\n        // the margin around the grid\n        // even if no points are plotted.\n        // We don't want any margin, so\n        // we set the radius to zero.\n        points: { radius: 0 },\n        grid: {\n            borderWidth: 1,\n            aboveData: true,\n            color: 'black',\n            borderColor: $.color\n                    .parse('black')\n                    .scale('a', 0.22)\n                    .toString(),\n            labelMargin: 0\n        }\n    };\n\n    var plot;\n    var running = false;\n    var self;\n\n    $.extend(true, options, user_options);\n\n    // We put the plot inside its own div so that we can give that div\n    // a fixed size which only changes when we can also immediately\n    // call plot.resize().  Otherwise, the labels and legends briefly\n    // get out of sync during resizing.\n\n    var outer_div = $(graph_id);\n    var inner_div = $('<div/>');\n    var starting = null;\n    outer_div.empty();\n    outer_div.append(inner_div);\n\n    function sync_divs() {\n        inner_div.width(outer_div.width());\n        inner_div.height(outer_div.height());\n    }\n\n    // Updating flot options is tricky and somewhat implementation\n    // defined.  Different options needs different approaches.  So we\n    // just have very specific functions for changing specific options\n    // until a pattern emerges.\n\n    function set_yaxis_max (max) {\n        if (plot) {\n            plot.getAxes().yaxis.options.max = max;\n            refresh();\n        } else {\n            options.yaxis.max = max;\n        }\n    }\n\n    function start () {\n        running = true;\n        maybe_start();\n    }\n\n    function maybe_start() {\n        if (running && outer_div.width() > 0 && outer_div.height() > 0) {\n            if (!plot) {\n                sync_divs();\n                plot = $.plot(inner_div, data, options);\n            } else\n                resize();\n\n            if (starting)\n                window.clearInterval(starting);\n        } else if (!starting) {\n            starting = window.setInterval(maybe_start, 500);\n        }\n    }\n\n    function stop () {\n        running = false;\n    }\n\n    function refresh() {\n        if (plot && running) {\n            plot.setData(data);\n            if (user_options.setup_hook)\n                user_options.setup_hook(plot);\n            plot.setupGrid();\n            plot.draw();\n            if (user_options.post_hook)\n                user_options.post_hook(plot);\n        }\n    }\n\n    function resize() {\n        if (plot && running) {\n            sync_divs();\n            if (inner_div.width() > 0 && inner_div.height() > 0)\n                plot.resize();\n            refresh();\n        }\n    }\n\n    function destroy () {\n        $(self).trigger('destroyed');\n        $(window).off('resize', resize);\n        $(outer_div).empty();\n        plot = null;\n    }\n\n    $(grid).on('notify', refresh);\n    $(window).on('resize', resize);\n    maybe_start();\n\n    self = {\n        start: start, stop: stop,\n        resize: resize, element: inner_div[0],\n        set_yaxis_max: set_yaxis_max,\n        destroy: destroy\n    };\n    return self;\n}\n\nexport function setup_complicated_plot(graph_id, grid, series, options) {\n    function basic_flot_row(grid, input) {\n        return grid.add(function(row, x, n) {\n            for (var i = 0; i < n; i++)\n                row[x + i] = [i, input[x + i] || 0];\n        });\n    }\n\n    function stacked_flot_row(grid, input, last) {\n        return grid.add(function(row, x, n) {\n            var i, l, floor, val;\n            for (i = 0; i < n; i++) {\n                floor = 0;\n                if (last) {\n                    l = last[x + i];\n                    floor = l ? l[1] : 0;\n                }\n                val = (input[x + i] || 0);\n                row[x + i] = [i, val + floor, floor];\n            }\n        });\n    }\n\n    function offset_flot_row(grid, input, offset, factor) {\n        var f = factor || 1;\n        return grid.add(function(row, x, n) {\n            for (var i = 0; i < n; i++)\n                row[x + i] = [i, offset + (f * (input[x + i] || 0)), offset];\n        });\n    }\n\n    /* All the data row setup happens now */\n    var last = null;\n    series.forEach(function(ser, i) {\n        if (ser.offset)\n            ser.data = offset_flot_row(grid, ser.row, ser.offset, ser.factor);\n        else if (options.x_rh_stack_graphs)\n            ser.data = stacked_flot_row(grid, ser.row, last);\n        else\n            ser.data = basic_flot_row(grid, ser.row);\n        last = ser.data;\n    });\n    return setup_plot(graph_id, grid, series, options);\n}\n","import $ from \"jquery\";\nimport * as plot from \"plot.js\";\n\nimport \"plot.css\";\n\n$(function () {\n    var plot_direct = new plot.Plot($('#plot_direct'), 300);\n    var options_direct = plot.plot_simple_template();\n    $.extend(options_direct.yaxis, {\n        ticks: plot.memory_ticks,\n        tickFormatter: plot.format_bytes_tick_no_unit\n    });\n    options_direct.post_hook = function memory_post_hook(p) {\n        var axes = p.getAxes();\n        $('#plot_direct_unit').text(plot.bytes_tick_unit(axes.yaxis));\n    };\n    plot_direct.set_options(options_direct);\n    plot_direct.add_metrics_difference_series({\n        direct: [ \"mem.physmem\", \"mem.util.available\" ],\n        units: \"bytes\"\n    }, { });\n\n    var plot_pmcd = new plot.Plot($('#plot_pmcd'), 300);\n    var options_pmcd = plot.plot_simple_template();\n    $.extend(options_pmcd.yaxis, {\n        ticks: plot.memory_ticks,\n        tickFormatter: plot.format_bytes_tick_no_unit\n    });\n    options_pmcd.post_hook = function memory_post_hook(p) {\n        var axes = p.getAxes();\n        $('#plot_pmcd_unit').text(plot.bytes_tick_unit(axes.yaxis));\n    };\n    plot_pmcd.set_options(options_pmcd);\n    plot_pmcd.add_metrics_difference_series({\n        pmcd: [ \"mem.physmem\", \"mem.util.available\" ],\n        units: \"bytes\"\n    }, { });\n\n    $(\"body\").show();\n    $(\"#plot_direct\").css({ height: \"200px\" });\n    $(\"#plot_pmcd\").css({ height: \"200px\" });\n    plot_direct.resize();\n    plot_pmcd.resize();\n\n    var plot_controls = plot.setup_plot_controls($('body'), $('#toolbar'));\n    plot_controls.reset([ plot_direct, plot_pmcd ]);\n});\n"],"sourceRoot":""}