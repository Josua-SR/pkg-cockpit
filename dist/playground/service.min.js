!function(e) {
    function t(i) {
        if (n[i]) return n[i].exports;
        var o = n[i] = {
            exports: {},
            id: i,
            loaded: !1
        };
        return e[i].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports;
    }
    var n = {};
    return t.m = e, t.c = n, t.p = "", t(0);
}({
    0: function(e, t, n) {
        e.exports = n(38);
    },
    6: function(e, t) {
        e.exports = jQuery;
    },
    8: function(e, t) {
        e.exports = cockpit;
    },
    38: function(e, t, n) {
        "use strict";
        !function() {
            var e = n(6), t = n(8), i = n(39);
            e(function() {
                function n() {
                    function n() {
                        function t(t) {
                            e("#" + t).text(JSON.stringify(r[t]));
                        }
                        t("exists"), t("state"), t("enabled");
                    }
                    r = i.proxy(t.location.path[0] || ""), e(r).on("changed", n), n(), e("body").show();
                }
                function o(t) {
                    e("#" + t).on("click", function() {
                        r[t]().fail(function(e) {
                            console.log(e);
                        });
                    });
                }
                var r;
                o("start"), o("stop"), o("enable"), o("disable"), e(t).on("locationchanged", n), 
                n();
            });
        }();
    },
    39: function(e, t, n) {
        "use strict";
        !function() {
            function t(e, t) {
                e.wait(function() {
                    e.valid && t();
                });
            }
            function i(e) {
                a || (r = s.dbus("org.freedesktop.systemd1", {
                    superuser: "try"
                }), a = r.proxy("org.freedesktop.systemd1.Manager", "/org/freedesktop/systemd1"), 
                t(a, function() {
                    a.Subscribe().fail(function(e) {
                        "org.freedesktop.systemd1.AlreadySubscribed" != e.name && "org.freedesktop.DBus.Error.FileExists" != e.name && console.warn("Subscribing to systemd signals failed", e);
                    });
                })), t(a, e);
            }
            function o(e) {
                function n() {
                    m.exists = "not-found" != h.LoadState || "inactive" != h.ActiveState, "activating" == h.ActiveState ? m.state = "starting" : "deactivating" == h.ActiveState ? m.state = "stopping" : "active" == h.ActiveState || "reloading" == h.ActiveState ? m.state = "running" : "failed" == h.ActiveState ? m.state = "failed" : "inactive" == h.ActiveState && m.exists ? m.state = "stopped" : m.state = void 0, 
                    "enabled" == h.UnitFileState || "linked" == h.UnitFileState ? m.enabled = !0 : "disabled" == h.UnitFileState || "masked" == h.UnitFileState ? m.enabled = !1 : m.enabled = void 0, 
                    m.unit = h, m.dispatchEvent("changed"), U.resolve();
                }
                function o() {
                    m.service = k, m.dispatchEvent("changed");
                }
                function c() {
                    function e(e, t) {
                        r.call(e, "org.freedesktop.DBus.Properties", "GetAll", [ t ]).fail(function(e) {
                            console.log(e);
                        }).done(function(e) {
                            var n = {};
                            for (var i in e[0]) n[i] = e[0][i].v;
                            var o = {};
                            o[t] = n;
                            var a = {};
                            a[h.path] = o, r.notify(a);
                        });
                    }
                    h && k && (e(h.path, "org.freedesktop.systemd1.Unit"), e(k.path, "org.freedesktop.systemd1.Service"));
                }
                function d(t, n, i, o, r) {
                    o == e && c();
                }
                function u(e) {
                    U.promise.then(e);
                }
                function f(e, t) {
                    return r.call("/org/freedesktop/systemd1", "org.freedesktop.systemd1.Manager", e, t);
                }
                function l(e, t) {
                    var n = s.defer();
                    return f(e, t).done(function(e) {
                        var t = e[0];
                        E[t] = n;
                    }).fail(function(e) {
                        n.reject(e);
                    }), n.promise();
                }
                function p(e, t) {
                    return f(e, t).then(function() {
                        return f("Reload", []);
                    });
                }
                function v() {
                    return l("StartUnit", [ e, "replace" ]);
                }
                function g() {
                    return l("StopUnit", [ e, "replace" ]);
                }
                function b() {
                    return l("RestartUnit", [ e, "replace" ]);
                }
                function y() {
                    return l("TryRestartUnit", [ e, "replace" ]);
                }
                function x() {
                    return p("EnableUnitFiles", [ [ e ], !1, !1 ]);
                }
                function S() {
                    return p("DisableUnitFiles", [ [ e ], !1 ]);
                }
                var m = {
                    exists: null,
                    state: null,
                    enabled: null,
                    wait: u,
                    start: v,
                    stop: g,
                    restart: b,
                    tryRestart: y,
                    enable: x,
                    disable: S
                };
                s.event_target(m);
                var h, k, U = s.defer();
                e.indexOf(".") == -1 && (e += ".service"), i(function() {
                    a.LoadUnit(e).done(function(e) {
                        h = r.proxy("org.freedesktop.systemd1.Unit", e), h.addEventListener("changed", n), 
                        t(h, n), k = r.proxy("org.freedesktop.systemd1.Service", e), k.addEventListener("changed", o), 
                        t(k, o);
                    }).fail(function(e) {
                        m.exists = !1, m.dispatchEvent("changed");
                    });
                }), a.addEventListener("Reloading", function(e, t) {
                    t || c();
                }), a.addEventListener("JobNew", d), a.addEventListener("JobRemoved", d);
                var E = {};
                return a.addEventListener("JobRemoved", function(e, t, n, i, o) {
                    E[n] && ("done" == o ? E[n].resolve() : E[n].reject(o), delete E[n]);
                }), m;
            }
            var r, a, s = n(8);
            e.exports = {
                proxy: o
            };
        }();
    }
});
//# sourceMappingURL=service.min.js.map