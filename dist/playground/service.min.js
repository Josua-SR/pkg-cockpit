!function(e) {
    function t(i) {
        if (n[i]) return n[i].exports;
        var o = n[i] = {
            exports: {},
            id: i,
            loaded: !1
        };
        return e[i].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports;
    }
    var n = {};
    return t.m = e, t.c = n, t.p = "", t(0);
}({
    0: function(e, t, n) {
        e.exports = n(36);
    },
    2: function(e, t) {
        e.exports = jQuery;
    },
    4: function(e, t) {
        e.exports = cockpit;
    },
    36: function(e, t, n) {
        "use strict";
        !function() {
            var e = n(2), t = n(4), i = n(37);
            e(function() {
                function n() {
                    function n() {
                        function t(t) {
                            e("#" + t).text(JSON.stringify(r[t]));
                        }
                        t("exists"), t("state"), t("enabled");
                    }
                    r = i.proxy(t.location.path[0] || ""), e(r).on("changed", n), n(), e("body").show();
                }
                function o(t) {
                    e("#" + t).on("click", function() {
                        r[t]().fail(function(e) {
                            console.log(e);
                        });
                    });
                }
                var r;
                o("start"), o("stop"), o("enable"), o("disable"), e(t).on("locationchanged", n), 
                n();
            });
        }();
    },
    37: function(e, t, n) {
        "use strict";
        !function() {
            function t(e, t) {
                e.wait(function() {
                    e.valid && t();
                });
            }
            function i(e) {
                a || (r = s.dbus("org.freedesktop.systemd1", {
                    superuser: "try"
                }), a = r.proxy("org.freedesktop.systemd1.Manager", "/org/freedesktop/systemd1"), 
                t(a, function() {
                    a.Subscribe().fail(function(e) {
                        "org.freedesktop.systemd1.AlreadySubscribed" != e.name && "org.freedesktop.DBus.Error.FileExists" != e.name && console.warn("Subscribing to systemd signals failed", e);
                    });
                })), t(a, e);
            }
            function o(e) {
                function n() {
                    S.exists = "not-found" != m.LoadState || "inactive" != m.ActiveState, "activating" == m.ActiveState ? S.state = "starting" : "deactivating" == m.ActiveState ? S.state = "stopping" : "active" == m.ActiveState || "reloading" == m.ActiveState ? S.state = "running" : "failed" == m.ActiveState ? S.state = "failed" : "inactive" == m.ActiveState && S.exists ? S.state = "stopped" : S.state = void 0, 
                    "enabled" == m.UnitFileState || "linked" == m.UnitFileState ? S.enabled = !0 : "disabled" == m.UnitFileState || "masked" == m.UnitFileState ? S.enabled = !1 : S.enabled = void 0, 
                    S.unit = m, S.dispatchEvent("changed"), k.resolve();
                }
                function o() {
                    S.service = h, S.dispatchEvent("changed");
                }
                function c() {
                    function e(e, t) {
                        r.call(e, "org.freedesktop.DBus.Properties", "GetAll", [ t ]).fail(function(e) {
                            console.log(e);
                        }).done(function(e) {
                            var n = {};
                            for (var i in e[0]) n[i] = e[0][i].v;
                            var o = {};
                            o[t] = n;
                            var a = {};
                            a[m.path] = o, r.notify(a);
                        });
                    }
                    m && h && (e(m.path, "org.freedesktop.systemd1.Unit"), e(h.path, "org.freedesktop.systemd1.Service"));
                }
                function d(t, n, i, o, r) {
                    o == e && c();
                }
                function u(e) {
                    k.promise.then(e);
                }
                function f(e, t) {
                    return r.call("/org/freedesktop/systemd1", "org.freedesktop.systemd1.Manager", e, t);
                }
                function l(e, t) {
                    var n = s.defer();
                    return f(e, t).done(function(e) {
                        var t = e[0];
                        E[t] = n;
                    }).fail(function(e) {
                        n.reject(e);
                    }), n.promise();
                }
                function p(e, t) {
                    return f(e, t).then(function() {
                        return f("Reload", []);
                    });
                }
                function v() {
                    return l("StartUnit", [ e, "replace" ]);
                }
                function g() {
                    return l("StopUnit", [ e, "replace" ]);
                }
                function b() {
                    return l("RestartUnit", [ e, "replace" ]);
                }
                function x() {
                    return p("EnableUnitFiles", [ [ e ], !1, !1 ]);
                }
                function y() {
                    return p("DisableUnitFiles", [ [ e ], !1 ]);
                }
                var S = {
                    exists: null,
                    state: null,
                    enabled: null,
                    wait: u,
                    start: v,
                    stop: g,
                    restart: b,
                    enable: x,
                    disable: y
                };
                s.event_target(S);
                var m, h, k = s.defer();
                e.indexOf(".") == -1 && (e += ".service"), i(function() {
                    a.LoadUnit(e).done(function(e) {
                        m = r.proxy("org.freedesktop.systemd1.Unit", e), m.addEventListener("changed", n), 
                        t(m, n), h = r.proxy("org.freedesktop.systemd1.Service", e), h.addEventListener("changed", o), 
                        t(h, o);
                    }).fail(function(e) {
                        S.exists = !1, S.dispatchEvent("changed");
                    });
                }), a.addEventListener("Reloading", function(e, t) {
                    t || c();
                }), a.addEventListener("JobNew", d), a.addEventListener("JobRemoved", d);
                var E = {};
                return a.addEventListener("JobRemoved", function(e, t, n, i, o) {
                    E[n] && ("done" == o ? E[n].resolve() : E[n].reject(o), delete E[n]);
                }), S;
            }
            var r, a, s = n(4);
            e.exports = {
                proxy: o
            };
        }();
    }
});
//# sourceMappingURL=service.min.js.map