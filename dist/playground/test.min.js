!function(n) {
    function t(o) {
        if (e[o]) return e[o].exports;
        var c = e[o] = {
            exports: {},
            id: o,
            loaded: !1
        };
        return n[o].call(c.exports, c, c.exports, t), c.loaded = !0, c.exports;
    }
    var e = {};
    return t.m = n, t.c = e, t.p = "", t(0);
}({
    0: function(n, t, e) {
        n.exports = e(41);
    },
    6: function(n, t) {
        n.exports = jQuery;
    },
    8: function(n, t) {
        n.exports = cockpit;
    },
    41: function(n, t, e) {
        "use strict";
        !function() {
            var n = e(6), t = e(8);
            n(function() {
                function e() {
                    n("#nav").empty();
                    var e = [ "top" ].concat(t.location.path);
                    n(e).each(function(o, c) {
                        o < e.length - 1 ? n("#nav").append(n("<a>").text(c).click(function() {
                            t.location.go(e.slice(1, o + 1));
                        }), " >> ") : n("#nav").append(n("<span>").text(c));
                    });
                }
                function o(n) {
                    return n = n || {}, n.counter = n.counter || 0, n;
                }
                function c(t) {
                    n("#file-error").text(t.toString());
                }
                function i(t, e, i) {
                    return i ? c(i) : (n("#file-content").text(o(t).counter), void n("#file-error").empty());
                }
                function r() {
                    t.file("/tmp/counter").read().done(function(t) {
                        n("#edit-file").val(t);
                    });
                }
                function a() {
                    t.file("/tmp/counter").replace(n("#edit-file").val());
                }
                function l() {
                    n("#hidden").text(t.hidden ? "hidden" : "visible");
                }
                n("#hammer").on("click", function() {
                    n(this).hide();
                }), n(".cockpit-internal-reauthorize .btn").on("click", function() {
                    n(".cockpit-internal-reauthorize span").text("checking...");
                    var e = "pkcheck --action-id org.freedesktop.policykit.exec --process $$ -u 2>&1";
                    t.spawn([ "sh", "-c", e ]).stream(function(n) {
                        console.debug(n);
                    }).done(function() {
                        n(".cockpit-internal-reauthorize span").text("result: authorized");
                    }).fail(function() {
                        n(".cockpit-internal-reauthorize span").text("result: access-denied");
                    });
                }), n(".super-channel .btn").on("click", function() {
                    n(".super-channel span").text("checking..."), t.spawn([ "id" ], {
                        superuser: !0
                    }).done(function(t) {
                        console.log("done"), n(".super-channel span").text("result: " + t);
                    }).fail(function(t) {
                        console.log("fail"), n(".super-channel span").text("result: " + t.problem);
                    });
                }), n(t).on("locationchanged", e), e(), n("#go-down").click(function() {
                    var n = t.location.path.length;
                    t.location.go(t.location.path.concat(n.toString()), {
                        length: n.toString()
                    });
                });
                var u = t.file("/tmp/counter", {
                    syntax: JSON
                });
                u.watch(i), n("#modify-file").click(function() {
                    u.modify(function(n) {
                        return n = o(n), n.counter += 1, n;
                    }).fail(c);
                }), n("#load-file").click(r), n("#save-file").click(a), r(), n("#delete-file").click(function() {
                    t.spawn([ "rm", "-f", "tmp/counter" ]);
                }), n("body").show(), n(t).on("visibilitychange", l), l();
            });
        }();
    }
});
//# sourceMappingURL=test.min.js.map