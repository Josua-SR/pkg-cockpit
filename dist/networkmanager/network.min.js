!function(e) {
    function t(i) {
        if (n[i]) return n[i].exports;
        var o = n[i] = {
            exports: {},
            id: i,
            loaded: !1
        };
        return e[i].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports;
    }
    var n = {};
    return t.m = e, t.c = n, t.p = "", t(0);
}([ function(e, t, n) {
    n(1), e.exports = n(4);
}, function(e, t, n) {
    "use strict";
    function i() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(e) {
            var t = 16 * Math.random() | 0, n = "x" === e ? t : 3 & t | 8;
            return n.toString(16);
        });
    }
    function o(e) {
        var t = e.message || e || "???";
        console.warn(t), Z("#error-popup-message").text(t), Z('.modal[role="dialog"]').modal("hide"), 
        Z("#error-popup").modal("show");
    }
    function r(e, t, n) {
        function i(e) {
            return Z("<li>", {
                value: e.choice
            }).append(Z("<a>").text(e.title));
        }
        function o(e) {
            Z("button span", c).text(Z("li[value='" + e + "']", c).text()), a = e;
        }
        function r() {
            return a;
        }
        var a = t[0].choice, s = Z('<button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">').append(Z('<span class="pull-left"></span>'), Z('<div class="caret"></div>')), c = Z('<div class="btn-group bootstrap-select dropdown">').append(s, Z('<ul class="dropdown-menu">').append(t.map(i)));
        return c.on("click", "li", function() {
            a = Z(this).attr("value"), o(a), e(a);
        }), o(a), Z.data(c[0], "cockpit-select-btn-funcs", {
            select: o,
            selected: r
        }), n && c.addClass(n), c;
    }
    function a(e, t) {
        Z.data(e[0], "cockpit-select-btn-funcs").select(t);
    }
    function s(e) {
        return Z.data(e[0], "cockpit-select-btn-funcs").selected();
    }
    function c(e) {
        if (e && e.Settings && e.Settings.connection) return e.Settings.connection;
        console.warn("Incomplete 'Connection' object accessed", e);
        try {
            throw new Error();
        } catch (e) {
            console.log(e.stack);
        }
        return {};
    }
    function l() {
        function e() {
            console.warn.apply(console, arguments);
        }
        function t(e) {
            return function(t) {
                return a(t, e);
            };
        }
        function n(e) {
            return function(t) {
                return t.map(e);
            };
        }
        function i(e) {
            return e[" priv"];
        }
        function o() {
            B += 1;
        }
        function r() {
            B -= 1, 0 === B && _();
        }
        function a(e, t) {
            function n() {
                this[" priv"] = {}, i(this).type = t, i(this).path = e;
                for (var n in t.props) this[n] = t.props[n].def;
            }
            return "/" == e ? null : (L[e] || (n.prototype = t.prototype, L[e] = new n(), t.refresh && t.refresh(L[e]), 
            t.exporters && t.exporters[0] && t.exporters[0](L[e])), L[e]);
        }
        function s(e) {
            return L[e] || null;
        }
        function l(e) {
            var t = L[e];
            t && (i(t).type.drop && i(t).type.drop(t), delete L[e], _());
        }
        function d(e, t) {
            var n, o, r;
            o = i(e).type.props;
            for (n in o) r = t[o[n].prop || n], void 0 !== r && (o[n].conv && (r = o[n].conv(r)), 
            r !== e[n] && (e[n] = r, o[n].trigger && o[n].trigger(e)));
        }
        function u(e) {
            var t = {};
            for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n].v);
            return t;
        }
        function f(e) {
            return e && i(e).path ? i(e).path : "/";
        }
        function p(e, t, n) {
            var i = new Z.Deferred();
            return j.call(f(e), t, n, Array.prototype.slice.call(arguments, 3)).fail(function(e) {
                i.reject(e);
            }).done(function(e) {
                i.resolve.apply(i, e);
            }), i.promise();
        }
        function h(e) {
            e.forEach(function(e) {
                e.exporters && e.exporters.length > q && (q = e.exporters.length), e.interfaces.forEach(function(t) {
                    Y[t] = e;
                });
            });
        }
        function g(e, t, n, a) {
            var c = s(e);
            if (c) {
                var l = i(c).type;
                "PropertiesChanged" == n ? (o(), d(c, u(a[0])), r()) : l.signals && l.signals[n] && l.signals[n](c, a);
            }
        }
        function m(e, t, n) {
            var i = Y[t];
            i && d(a(e, i), n);
        }
        function v(e, t) {
            l(e);
        }
        function _() {
            function e() {
                var e, t, n, o;
                for (e = 0; e < q; e++) for (t in L) n = L[t], o = i(n).type.exporters, o && o[e] && o[e](n);
                Z($).trigger("changed"), G && (G.resolve(), G = null);
            }
            H || (H = !0, window.setTimeout(function() {
                H = !1, e();
            }, 300));
        }
        function x(e) {
            return [ te.ip4_to_text(e[0]), te.ip_prefix_to_text(e[1]), te.ip4_to_text(e[2], !0) ];
        }
        function b(e) {
            return [ te.ip4_from_text(e[0]), te.ip4_prefix_from_text(e[1]), te.ip4_from_text(e[2], !0) ];
        }
        function k(e) {
            return [ te.ip4_to_text(e[0]), te.ip_prefix_to_text(e[1]), te.ip4_to_text(e[2], !0), te.ip_metric_to_text(e[3]) ];
        }
        function w(e) {
            return [ te.ip4_from_text(e[0]), te.ip4_prefix_from_text(e[1]), te.ip4_from_text(e[2], !0), te.ip_metric_from_text(e[3]) ];
        }
        function y(e) {
            return [ te.ip6_to_text(e[0]), te.ip_prefix_to_text(e[1]), te.ip6_to_text(e[2], !0) ];
        }
        function M(e) {
            return [ te.ip6_from_text(e[0]), parseInt(e[1], 10) || 64, te.ip6_from_text(e[2], !0) ];
        }
        function C(e) {
            return [ te.ip6_to_text(e[0]), te.ip_prefix_to_text(e[1]), te.ip6_to_text(e[2], !0), te.ip_metric_to_text(e[1]) ];
        }
        function S(e) {
            return [ te.ip6_from_text(e[0]), te.ip_prefix_from_text(e[1]), te.ip6_from_text(e[2], !0), te.ip_metric_from_text(e[3]) ];
        }
        function T(e) {
            function t(t, n, i) {
                return e[t] && e[t][n] ? e[t][n].v : i;
            }
            function n(e, n, i, o) {
                return {
                    method: t(e, "method", "auto"),
                    ignore_auto_dns: t(e, "ignore-auto-dns", !1),
                    ignore_auto_routes: t(e, "ignore-auto-routes", !1),
                    addresses: t(e, "addresses", []).map(n),
                    dns: t(e, "dns", []).map(o),
                    dns_search: t(e, "dns-search", []),
                    routes: t(e, "routes", []).map(i)
                };
            }
            function i(e) {
                try {
                    return JSON.parse(e);
                } catch (e) {
                    return null;
                }
            }
            var o = {
                connection: {
                    type: t("connection", "type"),
                    uuid: t("connection", "uuid"),
                    interface_name: t("connection", "interface-name"),
                    timestamp: t("connection", "timestamp", 0),
                    id: t("connection", "id", re("Unknown")),
                    autoconnect: t("connection", "autoconnect", !0),
                    autoconnect_slaves: t("connection", "autoconnect-slaves", -1),
                    slave_type: t("connection", "slave-type"),
                    master: t("connection", "master")
                }
            };
            return e.connection.master || (o.ipv4 = n("ipv4", x, k, te.ip4_to_text), o.ipv6 = n("ipv6", y, C, te.ip6_to_text)), 
            e["802-3-ethernet"] && (o.ethernet = {
                mtu: t("802-3-ethernet", "mtu"),
                assigned_mac_address: t("802-3-ethernet", "assigned-mac-address")
            }), e.bond && (o.bond = {
                options: Z.extend({}, t("bond", "options", {})),
                interface_name: t("bond", "interface-name")
            }), e.team && (o.team = {
                config: i(t("team", "config", "{}")),
                interface_name: t("team", "interface-name")
            }), (e["team-port"] || "team" == o.connection.slave_type) && (o.team_port = {
                config: i(t("team-port", "config", "{}"))
            }), e.bridge && (o.bridge = {
                interface_name: t("bridge", "interface-name"),
                stp: t("bridge", "stp", !0),
                priority: t("bridge", "priority", 32768),
                forward_delay: t("bridge", "forward-delay", 15),
                hello_time: t("bridge", "hello-time", 2),
                max_age: t("bridge", "max-age", 20),
                ageing_time: t("bridge", "ageing-time", 300)
            }), (e["bridge-port"] || "bridge" == o.connection.slave_type) && (o.bridge_port = {
                priority: t("bridge-port", "priority", 32),
                path_cost: t("bridge-port", "path-cost", 100),
                hairpin_mode: t("bridge-port", "hairpin-mode", !1)
            }), e.vlan && (o.vlan = {
                parent: t("vlan", "parent"),
                id: t("vlan", "id"),
                interface_name: t("vlan", "interface-name")
            }), o;
        }
        function I(e, t) {
            function n(e, t, n, i, r) {
                void 0 === i && (i = r), o[e] || (o[e] = {}), void 0 !== i ? o[e][t] = ee.variant(n, i) : delete o[e][t];
            }
            function i(t, i, r, a, s, c, l) {
                n(t, "method", "s", e[t].method), n(t, "ignore-auto-dns", "b", e[t].ignore_auto_dns), 
                n(t, "ignore-auto-routes", "b", e[t].ignore_auto_routes);
                var d = e[t].addresses;
                d && n(t, "addresses", i, d.map(r));
                var u = e[t].dns;
                u && n(t, "dns", c, u.map(l)), n(t, "dns-search", "as", e[t].dns_search);
                var f = e[t].routes;
                f && n(t, "routes", a, f.map(s)), delete o[t]["address-labels"];
            }
            var o = Z.extend(!0, {}, t);
            return n("connection", "id", "s", e.connection.id), n("connection", "autoconnect", "b", e.connection.autoconnect), 
            n("connection", "autoconnect-slaves", "i", e.connection.autoconnect_slaves), n("connection", "uuid", "s", e.connection.uuid), 
            n("connection", "interface-name", "s", e.connection.interface_name), n("connection", "type", "s", e.connection.type), 
            n("connection", "slave-type", "s", e.connection.slave_type), n("connection", "master", "s", e.connection.master), 
            e.ipv4 ? i("ipv4", "aau", b, "aau", w, "au", te.ip4_from_text) : delete o.ipv4, 
            e.ipv6 ? i("ipv6", "a(ayuay)", M, "a(ayuayu)", S, "aay", te.ip6_from_text) : delete o.ipv6, 
            e.bond ? (n("bond", "options", "a{ss}", e.bond.options), n("bond", "interface-name", "s", e.bond.interface_name)) : delete o.bond, 
            e.team ? (n("team", "config", "s", JSON.stringify(e.team.config)), n("team", "interface-name", "s", e.team.interface_name)) : delete o.team, 
            e.team_port ? n("team-port", "config", "s", JSON.stringify(e.team_port.config)) : delete o["team-port"], 
            e.bridge ? (n("bridge", "interface-name", "s", e.bridge.interface_name), n("bridge", "stp", "b", e.bridge.stp), 
            n("bridge", "priority", "u", e.bridge.priority), n("bridge", "forward-delay", "u", e.bridge.forward_delay), 
            n("bridge", "hello-time", "u", e.bridge.hello_time), n("bridge", "max-age", "u", e.bridge.max_age), 
            n("bridge", "ageing-time", "u", e.bridge.ageing_time)) : delete o.bridge, e.bridge_port ? (n("bridge-port", "priority", "u", e.bridge_port.priority), 
            n("bridge-port", "path-cost", "u", e.bridge_port.path_cost), n("bridge-port", "hairpin-mode", "b", e.bridge_port.hairpin_mode)) : delete o["bridge-port"], 
            e.vlan ? (n("vlan", "parent", "s", e.vlan.parent), n("vlan", "id", "u", e.vlan.id), 
            n("vlan", "interface-name", "s", e.vlan.interface_name), n("vlan", "flags", "u", 1)) : delete o.vlan, 
            e.ethernet ? (n("802-3-ethernet", "mtu", "u", e.ethernet.mtu), n("802-3-ethernet", "assigned-mac-address", "s", e.ethernet.assigned_mac_address), 
            delete o["802-3-ethernet"]["cloned-mac-address"]) : delete o["802-3-ethernet"], 
            o;
        }
        function N(e) {
            switch (e) {
              case 0:
                return "unknown";

              case 1:
                return "ethernet";

              case 2:
                return "802-11-wireless";

              case 3:
                return "unused1";

              case 4:
                return "unused2";

              case 5:
                return "bluetooth";

              case 6:
                return "802-11-olpc-mesh";

              case 7:
                return "wimax";

              case 8:
                return "modem";

              case 9:
                return "infiniband";

              case 10:
                return "bond";

              case 11:
                return "vlan";

              case 12:
                return "adsl";

              case 13:
                return "bridge";

              case 14:
                return "loopback";

              case 15:
                return "team";

              case 16:
                return "tun";

              case 17:
                return "ip_tunnel";

              case 18:
                return "macvlan";

              case 19:
                return "vxlan";

              case 20:
                return "veth";

              default:
                return "";
            }
        }
        function D(e) {
            switch (e) {
              case 0:
                return "?";

              case 10:
                return "";

              case 20:
                return re("Not available");

              case 30:
                return re("Inactive");

              case 40:
                return re("Preparing");

              case 50:
                return re("Configuring");

              case 60:
                return re("Authenticating");

              case 70:
                return re("Configuring IP");

              case 80:
                return re("Checking IP");

              case 90:
                return re("Waiting");

              case 100:
                return re("Active");

              case 110:
                return re("Deactivating");

              case 120:
                return re("Failed");

              default:
                return "";
            }
        }
        function A(e, t) {
            e.Settings && e.Settings.connection && e.Settings.connection.uuid && delete Q[e.Settings.connection.uuid], 
            e.Settings = t, t && t.connection && t.connection.uuid && (Q[t.connection.uuid] = e);
        }
        function z(t) {
            o(), j.call(f(t), "org.freedesktop.NetworkManager.Settings.Connection", "GetSettings").always(r).fail(e).done(function(e) {
                var n = e[0];
                n && (i(t).orig = n, A(t, T(n)));
            });
        }
        function O(e) {
            0 === e.Udi.indexOf("/sys/") && (o(), ee.spawn([ "udevadm", "info", e.Udi ], {
                err: "message"
            }).done(function(t) {
                function n(e, t, n) {
                    var o = "E: " + t + "=";
                    0 === e.indexOf(o) && (i[n] = e.substr(o.length));
                }
                var i = {};
                t.split("\n").forEach(function(e) {
                    n(e, "ID_MODEL_FROM_DATABASE", "IdModel"), n(e, "ID_VENDOR_FROM_DATABASE", "IdVendor");
                }), d(e, i);
            }).fail(function(e) {
                4 !== e.exit_status && (console.warn(e.message), console.warn(e));
            }).always(r));
        }
        function P(e) {
            z(e);
        }
        function E(e) {
            var t = a(":interface:" + e, se);
            return t.Name = e, t;
        }
        function W(e) {
            return s(":interface:" + e);
        }
        function F(e, t) {
            function n(e) {
                return e.split(".").map(function(e) {
                    return e ? parseInt(e, 10) : 0;
                });
            }
            var i, o = n(e), r = n(t), a = Math.min(o.length, r.length);
            for (i = 0; i < a; i++) if (o[i] != r[i]) return o[i] - r[i];
            return o.length - r.length;
        }
        var $ = this, R = {};
        ee.manifests.network && ee.manifests.network.hacks && (R = ee.manifests.network.hacks);
        var U = {};
        R.with_networkmanager_needs_root && (U.superuser = "try");
        var j = ee.dbus("org.freedesktop.NetworkManager", U);
        $.client = j;
        var H, L = {}, B = 0, Y = {}, q = 0, G = null;
        $.synchronize = function() {
            return 0 === B ? ee.resolve() : (G || (G = ee.defer()), G.promise());
        }, j.call("/org/freedesktop/NetworkManager", "org.freedesktop.DBus.Properties", "Get", [ "org.freedesktop.NetworkManager", "State" ], {
            flags: ""
        }).fail(e).done(function(e, t) {
            t.flags && (t.flags.indexOf(">") !== -1 ? te.set_byteorder("be") : t.flags.indexOf("<") !== -1 && te.set_byteorder("le"));
        });
        var V = j.subscribe({}, g), J = j.watch({});
        Z(j).on("notify", function(e, t) {
            Z.each(t, function(e, t) {
                Z.each(t, function(t, n) {
                    n ? m(e, t, n) : v(e, t);
                });
            });
        }), $.close = function() {
            V.remove(), J.remove(), Z(j).off("notify"), j.close("unused");
        };
        var X, Q = {}, K = {
            interfaces: [ "org.freedesktop.NetworkManager.IP4Config" ],
            props: {
                Addresses: {
                    conv: n(x),
                    def: []
                }
            }
        }, ne = {
            interfaces: [ "org.freedesktop.NetworkManager.IP6Config" ],
            props: {
                Addresses: {
                    conv: n(y),
                    def: []
                }
            }
        }, ie = {
            interfaces: [ "org.freedesktop.NetworkManager.Settings.Connection" ],
            props: {
                Unsaved: {}
            },
            signals: {
                Updated: P
            },
            refresh: z,
            drop: function(e) {
                A(e, null);
            },
            prototype: {
                copy_settings: function() {
                    return Z.extend(!0, {}, this.Settings);
                },
                apply_settings: function(e) {
                    var t = this;
                    try {
                        return p(t, "org.freedesktop.NetworkManager.Settings.Connection", "Update", I(e, i(t).orig)).done(function() {
                            A(t, e);
                        });
                    } catch (e) {
                        return ee.reject(e);
                    }
                },
                activate: function(e, t) {
                    return p(a("/org/freedesktop/NetworkManager", X), "org.freedesktop.NetworkManager", "ActivateConnection", f(this), f(e), f(t));
                },
                delete_: function() {
                    return p(this, "org.freedesktop.NetworkManager.Settings.Connection", "Delete");
                }
            },
            exporters: [ function(e) {
                e.Masters = [], e.Slaves = [], e.Interfaces = [];
            }, null, null, function(e) {
                function t(t) {
                    var n = c(t), i = c(e);
                    n.type == i.slave_type && (e.Masters.push(t), t.Slaves.push(e));
                }
                var n, i, o = c(e);
                o.slave_type && (n = Q[o.master], n ? (e.Masters.push(n), n.Slaves.push(e)) : (i = W(o.master), 
                i && i.Connections.forEach(t)));
            } ]
        }, oe = {
            interfaces: [ "org.freedesktop.NetworkManager.Connection.Active" ],
            props: {
                Connection: {
                    conv: t(ie)
                },
                Ip4Config: {
                    conv: t(K)
                },
                Ip6Config: {
                    conv: t(ne)
                }
            },
            prototype: {
                deactivate: function() {
                    return p(a("/org/freedesktop/NetworkManager", X), "org.freedesktop.NetworkManager", "DeactivateConnection", f(this));
                }
            }
        }, ae = {
            interfaces: [ "org.freedesktop.NetworkManager.Device", "org.freedesktop.NetworkManager.Device.Wired", "org.freedesktop.NetworkManager.Device.Bond", "org.freedesktop.NetworkManager.Device.Team", "org.freedesktop.NetworkManager.Device.Bridge", "org.freedesktop.NetworkManager.Device.Vlan" ],
            props: {
                DeviceType: {
                    conv: N
                },
                Interface: {},
                StateText: {
                    prop: "State",
                    conv: D,
                    def: re("Unknown")
                },
                State: {},
                HwAddress: {},
                AvailableConnections: {
                    conv: n(t(ie)),
                    def: []
                },
                ActiveConnection: {
                    conv: t(oe)
                },
                Ip4Config: {
                    conv: t(K)
                },
                Ip6Config: {
                    conv: t(ne)
                },
                Udi: {
                    trigger: O
                },
                IdVendor: {
                    def: ""
                },
                IdModel: {
                    def: ""
                },
                Driver: {
                    def: ""
                },
                Carrier: {
                    def: !0
                },
                Speed: {},
                Managed: {
                    def: !1
                }
            },
            prototype: {
                activate: function(e, t) {
                    return p(a("/org/freedesktop/NetworkManager", X), "org.freedesktop.NetworkManager", "ActivateConnection", f(e), f(this), f(t));
                },
                activate_with_settings: function(e, t) {
                    try {
                        return p(a("/org/freedesktop/NetworkManager", X), "org.freedesktop.NetworkManager", "AddAndActivateConnection", I(e), f(this), f(t));
                    } catch (e) {
                        return ee.reject(e);
                    }
                },
                disconnect: function() {
                    return p(this, "org.freedesktop.NetworkManager.Device", "Disconnect");
                }
            }
        }, se = {
            interfaces: [],
            exporters: [ function(e) {
                e.Device = null, e._NonDeviceConnections = [], e.Connections = [], e.MainConnection = null;
            }, null, function(e) {
                function t(t) {
                    (!e.MainConnection || c(e.MainConnection).timestamp < c(t).timestamp) && (e.MainConnection = t);
                }
                return e.Device || 0 !== e._NonDeviceConnections.length ? (e.Connections = e._NonDeviceConnections, 
                e.Device && e.Device.AvailableConnections.forEach(function(t) {
                    e.Connections.indexOf(t) == -1 && e.Connections.push(t);
                }), e.Connections.forEach(function(n) {
                    t(n), n.Interfaces.push(e);
                }), void (e.Device && e.Device.ActiveConnection && e.Device.ActiveConnection.Connection && (e.MainConnection = e.Device.ActiveConnection.Connection))) : void l(i(e).path);
            } ]
        }, ce = {
            interfaces: [ "org.freedesktop.NetworkManager.Settings" ],
            props: {
                Connections: {
                    conv: n(t(ie)),
                    def: []
                }
            },
            prototype: {
                add_connection: function(e) {
                    var t = Z.Deferred();
                    try {
                        p(this, "org.freedesktop.NetworkManager.Settings", "AddConnection", I(e, {})).done(function(e) {
                            t.resolve(a(e, ie));
                        }).fail(function(e) {
                            t.reject(e);
                        });
                    } catch (e) {
                        t.reject(e);
                    }
                    return t.promise();
                }
            },
            exporters: [ null, function(e) {
                e.Connections && e.Connections.forEach(function(e) {
                    function t(t) {
                        if (t) {
                            var n = E(t)._NonDeviceConnections;
                            n.indexOf(e) == -1 && n.push(e);
                        }
                    }
                    e.Settings && (e.Settings.connection && t(e.Settings.connection.interface_name), 
                    e.Settings.bond && t(e.Settings.bond.interface_name), e.Settings.team && t(e.Settings.team.interface_name), 
                    e.Settings.bridge && t(e.Settings.bridge.interface_name), e.Settings.vlan && t(e.Settings.vlan.interface_name));
                });
            } ]
        };
        return X = {
            interfaces: [ "org.freedesktop.NetworkManager" ],
            props: {
                Version: {},
                Devices: {
                    conv: n(t(ae)),
                    def: []
                },
                ActiveConnections: {
                    conv: n(t(oe)),
                    def: []
                }
            },
            prototype: {
                checkpoint_create: function(e, t) {
                    var n = Z.Deferred();
                    return p(this, "org.freedesktop.NetworkManager", "CheckpointCreate", e.map(f), t, 0).done(function(e) {
                        n.resolve(e);
                    }).fail(function(e) {
                        "org.freedesktop.DBus.Error.UnknownMethod" != e.name && console.warn(e.message || e), 
                        n.resolve(null);
                    }), n.promise();
                },
                checkpoint_destroy: function(e) {
                    return e ? p(this, "org.freedesktop.NetworkManager", "CheckpointDestroy", e) : Z.when();
                },
                checkpoint_rollback: function(e) {
                    return e ? p(this, "org.freedesktop.NetworkManager", "CheckpointRollback", e) : Z.when();
                }
            },
            exporters: [ null, function(e) {
                e.Devices.forEach(function(e) {
                    if (e.Interface) {
                        var t = E(e.Interface);
                        t.Device = e;
                    }
                });
            } ]
        }, oe.props.Master = {
            conv: t(ae)
        }, ae.props.Slaves = {
            conv: n(t(ae)),
            def: []
        }, $.list_interfaces = function() {
            var e, t, n = [];
            for (e in L) t = L[e], i(t).type === se && n.push(t);
            return n.sort(function(e, t) {
                return e.Name.localeCompare(t.Name);
            });
        }, $.find_interface = W, $.get_manager = function() {
            return a("/org/freedesktop/NetworkManager", X);
        }, $.get_settings = function() {
            return a("/org/freedesktop/NetworkManager/Settings", ce);
        }, $.at_least_version = function(e) {
            return F($.get_manager().Version, e) >= 0;
        }, h([ X, ce, ae, K, ne, ie, oe ]), a("/org/freedesktop/NetworkManager", X), a("/org/freedesktop/NetworkManager/Settings", ce), 
        $;
    }
    function d(e) {
        return Z("<a>").text(e).click(function() {
            ee.location.go([ e ]);
        });
    }
    function u(e) {
        return e ? 100 == e.State && e.Carrier === !1 ? re("No carrier") : e.Managed || e.ActiveConnection || e.Ip4Config && 0 !== e.Ip4Config.Addresses.length || e.Ip6Config && 0 !== e.Ip6Config.Addresses.length ? e.StateText : re("Inactive") : re("Inactive");
    }
    function f(e) {
        var t = Z("<span>").append(p(e.Interfaces.map(function(e) {
            return Z("<a>").text(e.Name).click(function() {
                ee.location.go([ e.Name ]);
            });
        }), ", "));
        return t;
    }
    function p(e, t) {
        for (var n = [], i = 0; i < e.length; i++) n.push(e[i]), i < e.length - 1 && n.push(t);
        return n;
    }
    function h(e, t, n) {
        function i(e) {
            return 0 === e.indexOf("fe8") || 0 === e.indexOf("fe9") || 0 === e.indexOf("fea") || 0 === e.indexOf("feb");
        }
        var o, r = [];
        if (!e) return "";
        if (o = e.ActiveConnection, o && o.Master) return Z("<span>").append(Z("<span>").text(re("Part of ")), t ? d(o.Master.Interface) : o.Master.Interface);
        var a = o ? o.Ip4Config : e.Ip4Config;
        a && a.Addresses.forEach(function(e) {
            r.push(e[0] + "/" + e[1]);
        });
        var s = o ? o.Ip6Config : e.Ip6Config;
        return s && s.Addresses.forEach(function(e) {
            n && i(e[0]) || r.push(e[0] + "/" + e[1]);
        }), Z("<span>").text(r.join(", "));
    }
    function g(e) {
        return function(t) {
            var n = t.getAxes();
            n.yaxis.datamax < 1e5 ? n.yaxis.options.max = 1e5 : n.yaxis.options.max = null, 
            n.yaxis.options.min = 0, Z(e).text(ie.bits_per_sec_tick_unit(n.yaxis));
        };
    }
    function m() {
        Z(".network-privileged").update_privileged(se, ee.format(re("The user <b>$0</b> is not permitted to modify network settings"), se.user ? se.user.name : ""));
    }
    function v() {
        ce || (le = {}, ce = ee.metrics(1e3, [ {
            source: "direct",
            metrics: [ {
                name: "network.interface.in.bytes",
                units: "bytes",
                derive: "rate"
            }, {
                name: "network.interface.out.bytes",
                units: "bytes",
                derive: "rate"
            } ],
            metrics_path_names: [ "rx", "tx" ]
        }, {
            source: "internal",
            metrics: [ {
                name: "network.interface.rx",
                units: "bytes",
                derive: "rate"
            }, {
                name: "network.interface.tx",
                units: "bytes",
                derive: "rate"
            } ],
            metrics_path_names: [ "rx", "tx" ]
        } ]), de = ee.grid(1e3, -1, -0), ce.follow(), de.walk());
    }
    function _(e) {
        le[e] = [ de.add(ce, [ "rx", e ]), de.add(ce, [ "tx", e ]) ];
    }
    function x(e, t) {
        return t ? (e.connection.id = t.Interface, e.connection.uuid = i(), void ("ethernet" == t.DeviceType ? (e.connection.type = "802-3-ethernet", 
        e.ethernet = {}) : e.connection.type = t.DeviceType)) : void console.warn("No device to complete settings", JSON.stringify(e));
    }
    function b(e, t, n) {
        return function(i) {
            return n ? n.apply_settings(i) : i.connection.type ? e.get_settings().add_connection(i) : t ? t.activate_with_settings(i) : (ee.warn("No way to apply settings", n, i), 
            ee.resolve());
        };
    }
    function k(e) {
        this._init(e);
    }
    function w(e, t, n) {
        for (var i = 0; i < e.length; i++) if (e[i].choice == t) return e[i].title;
        return n;
    }
    function y(e, t, n) {
        function i() {
            ee.hint("ignore_transport_health_check", {
                data: !0
            }), r = window.setTimeout(function() {
                r = null, l.show(), d.hide(), c.show();
            }, 1e3 * _e), a = window.setTimeout(function() {
                a = null, l.hide(), d.show();
            }, 1e3 * be);
        }
        function o() {
            r && window.clearTimeout(r), r = null, a && window.clearTimeout(a), c.hide(), ee.hint("ignore_transport_health_check", {
                data: !1
            });
        }
        var r, a, s = e.get_manager(), c = Z("#testing-connection-curtain"), l = Z("#testing-connection-curtain-testing"), d = Z("#testing-connection-curtain-restoring"), u = Z("#confirm-breaking-change-popup");
        return n.hack_does_add_or_remove ? void t() : void s.checkpoint_create(n.devices || [], be).done(function(r) {
            return r ? (i(), void t().done(function() {
                window.setTimeout(function() {
                    s.checkpoint_destroy(r).always(o).fail(function(i) {
                        u.find("#confirm-breaking-change-text").html(n.fail_text), u.find(".modal-footer .btn-danger").off("click").text(n.anyway_text).syn_click(e, function() {
                            u.modal("hide"), t();
                        }), u.modal("show");
                    });
                }, 1e3 * xe);
            }).fail(function() {
                o(), n.rollback_on_failure ? s.checkpoint_rollback(r) : s.checkpoint_destroy(r);
            })) : void t();
        });
    }
    function M(e) {
        this._init(e);
    }
    function C(e, t) {
        var n = Z('<div class="btn-onoff-ct">').onoff();
        return n.onoff("value", e), n.on("change", function() {
            t(n.onoff("value"));
        }), n;
    }
    function S(e, t, n) {
        y(e, t, Z.extend({
            fail_text: re("Changing the settings will break the connection to the server, and will make the administration UI unavailable."),
            anyway_text: re("Change the settings")
        }, n));
    }
    function T(e, t) {
        var n = t.message || t.toString();
        console.warn(n), Z(e).show().find("span").text(n);
    }
    function I(e) {
        var t = [];
        return e && e.Interfaces.forEach(function(e) {
            e.Device && t.push(e.Device);
        }), t;
    }
    function N() {
        this._init();
    }
    function D(e, t) {
        return t && t.Interfaces.indexOf(e) != -1;
    }
    function A(e) {
        return !e.Device || e.Device.Managed;
    }
    function z(e, t) {
        if (null === e || void 0 === e) throw new TypeError("Array.prototype.find called on null or undefined");
        if ("function" != typeof t) throw new TypeError("predicate must be a function");
        for (var n, i = Object(e), o = i.length >>> 0, r = arguments[1], a = 0; a < o; a++) if (a in i && (n = i[a], 
        t.call(r, n, a, i))) return n;
    }
    function O(e, t) {
        return e && z(e.Slaves, function(e) {
            return D(t, e);
        });
    }
    function P(e, t) {
        return e.list_interfaces().filter(function(e) {
            return !D(e, t) && A(e);
        });
    }
    function E(e, t) {
        return Z('<ul class="list-group available-interfaces-group dialog-list-ct">').append(P(e, t).map(function(e) {
            return Z('<li class="list-group-item">').append(Z('<div class="checkbox">').css("margin", "0px").append(Z("<label>").append(Z("<input>", {
                type: "checkbox",
                "data-iface": e.Name
            }).prop("checked", !!O(t, e)), Z("<span>").text(e.Name))));
        }));
    }
    function W(e, t) {
        var n = [ {
            title: "-",
            choice: "",
            is_default: !0
        } ];
        return t.find("input[data-iface]").each(function(e, t) {
            var i = Z(t).attr("data-iface");
            Z(t).prop("checked") && n.push({
                title: i,
                choice: i
            });
        }), r(e, n, "form-control");
    }
    function F(e) {
        var t = c(e);
        if (t.slave_type) return delete t.slave_type, delete t.master, delete e.Settings.team_port, 
        delete e.Settings.bridge_port, e.apply_settings(e.Settings);
    }
    function $(e, t, n, i, o, r) {
        var a, s;
        if (a = e.find_interface(o), !a) return !1;
        if (s = a.MainConnection, r) {
            var c;
            if (c = t ? t.Interfaces[0].Name : n.connection.interface_name, !c) return !1;
            var l;
            if (s) {
                if (l = s.Settings, l.connection.master == n.connection.uuid || l.connection.master == n.connection.id || l.connection.master == c) return ee.resolve();
                l.connection.slave_type = i, l.connection.master = c, l.connection.autoconnect = !0, 
                delete l.ipv4, delete l.ipv6, delete l.team_port, delete l.bridge_port;
            } else l = {
                connection: {
                    autoconnect: !0,
                    interface_name: a.Name,
                    slave_type: i,
                    master: c
                }
            }, x(l, a.Device);
            return b(e, a.Device, s)(l).then(function() {
                if (t) {
                    var e = t.Interfaces[0].Device;
                    if (e && e.ActiveConnection) return s.activate(a.Device);
                    if (a.Device.ActiveConnection) return a.Device.ActiveConnection.deactivate();
                }
            });
        }
        return s && s.Masters.indexOf(t) != -1 && F(s), !0;
    }
    function R(e, t, n, i, o, r) {
        function a() {
            var n = e.find("input[data-iface]").map(function(e, n) {
                return t.synchronize().then(function() {
                    return $(t, i, o, r, Z(n).attr("data-iface"), Z(n).prop("checked"));
                });
            });
            return ee.all(n.get());
        }
        var s, c = [];
        return i || (o.bond && o.bond.options && o.bond.options.primary ? (s = t.find_interface(o.bond.options.primary), 
        s && s.MainConnection && c.push(s.MainConnection.Settings)) : e.find("input[data-iface]").map(function(e, n) {
            var i;
            Z(n).prop("checked") && (i = t.find_interface(Z(n).attr("data-iface")), i.Device && i.Device.ActiveConnection && i.Device.ActiveConnection.Connection && c.push(i.Device.ActiveConnection.Connection.Settings));
        }), 1 == c.length && (o.ipv4 = Z.extend(!0, {}, c[0].ipv4), o.ipv6 = Z.extend(!0, {}, c[0].ipv6)), 
        o.connection.autoconnect_slaves = 1), a().then(function() {
            return n(o);
        });
    }
    function U(e, t, n) {
        function i(n, i) {
            e.append(Z('<li class="presentation">').append(Z("<a>").text(n).click(function() {
                t.val(i).trigger("change");
            })));
        }
        e.empty(), n.list_interfaces().forEach(function(e) {
            e.Device && e.Device.HwAddress && "00:00:00:00:00:00" !== e.Device.HwAddress && i(ee.format("$0 ($1)", e.Device.HwAddress, e.Name), e.Device.HwAddress);
        }), i(re("Permanent"), "permanent"), i(re("Preserve"), "preserve"), i(re("Random"), "random"), 
        i(re("Stable"), "stable");
    }
    function j() {
        this._init();
    }
    function H() {
        this._init();
    }
    function L() {
        this._init();
    }
    function B() {
        this._init();
    }
    function Y() {
        this._init();
    }
    function q() {
        this._init();
    }
    function G() {
        this._init();
    }
    function V() {
        this._init();
    }
    function J(e) {
        e.setup(), Z("#" + e.id).on("show.bs.modal", function() {
            e.enter();
        }).on("shown.bs.modal", function() {
            e.show();
        }).on("hidden.bs.modal", function() {
            e.leave();
        });
    }
    function X(e, t) {
        e._entered_ && e.leave(), e.enter(t), e._entered_ = !0, Z("#" + e.id).show(), e.show();
    }
    function Q(e) {
        Z("#" + e.id).hide(), e._entered_ && (e.leave(), e._entered_ = !1);
    }
    function K() {
        function e() {
            var e = ee.location.path;
            t.synchronize().then(function() {
                0 === e.length ? (Q(i), X(n)) : 1 === e.length ? (Q(n), X(i, e[0])) : (console.warn("not a networking location: " + e), 
                ee.location = ""), Z("body").show();
            });
        }
        var t, n, i;
        ee.translate(), t = new l(), n = new k(t), n.setup(), i = new M(t), i.setup(), J(new N()), 
        J(new j()), J(new H()), J(new L()), J(new B()), J(new Y()), J(new q()), J(new G()), 
        J(new V()), Z(ee).on("locationchanged", e), e();
    }
    var Z = n(2), ee = n(3), te = n(4), ne = n(5), ie = n(7), oe = n(11);
    n(15), n(16), n(18), n(19), n(20), n(21);
    var re = ee.gettext, ae = ee.gettext;
    Z.fn.extend({
        syn_click: function(e, t) {
            return this.click(function() {
                var n = this, i = arguments;
                e.synchronize().then(function() {
                    t.apply(n, i);
                });
            });
        }
    });
    var se = ee.permission({
        admin: !0
    });
    Z(se).on("changed", m);
    var ce, le, de;
    k.prototype = {
        _init: function(e) {
            this.id = "networking", this.model = e;
        },
        getTitle: function() {
            return ae("page-title", "Networking");
        },
        setup: function() {
            function e(e, t) {
                Z("#networking-interfaces tr").removeClass("highlight-ct"), t && Z('#networking-interfaces tr[data-interface="' + encodeURIComponent(t) + '"]').addClass("highlight-ct");
            }
            function t() {
                for (var e in le) {
                    var t = le[e], n = t[0][0], i = t[1][0], o = Z('#networking-interfaces tr[data-sample-id="' + encodeURIComponent(e) + '"]');
                    void 0 !== n && void 0 !== i && o.length > 0 && (o.find("td:nth-child(3)").text(ee.format_bits_per_sec(8 * i)), 
                    o.find("td:nth-child(4)").text(ee.format_bits_per_sec(8 * n)));
                }
            }
            var n = this;
            m(), Z("#networking-add-bond").syn_click(n.model, Z.proxy(this, "add_bond")), Z("#networking-add-team").syn_click(n.model, Z.proxy(this, "add_team")), 
            Z("#networking-add-bridge").syn_click(n.model, Z.proxy(this, "add_bridge")), Z("#networking-add-vlan").syn_click(n.model, Z.proxy(this, "add_vlan")), 
            Z("#networking-add-team").hide(), ee.script("test -f /usr/bin/teamd && ( test -f /usr/lib*/NetworkManager/libnm-device-plugin-team.so ||   test -f /usr/lib/*-linux-gnu/NetworkManager/libnm-device-plugin-team.so)", {
                err: "ignore"
            }).done(function() {
                Z("#networking-add-team").show();
            }).always(function() {
                Z("#networking-add-team").attr("data-test-stable", "yes");
            });
            var i = {
                direct: "network.interface.in.bytes",
                internal: "network.interface.rx",
                units: "bytes",
                derive: "rate",
                threshold: 200
            }, o = ie.plot_simple_template();
            Z.extend(o.yaxis, {
                tickFormatter: ie.format_bits_per_sec_tick_no_unit
            }), Z.extend(o.grid, {
                hoverable: !0,
                autoHighlight: !1
            }), o.setup_hook = g("#networking-rx-unit"), this.rx_plot = ie.plot(Z("#networking-rx-graph"), 300), 
            this.rx_plot.set_options(o), this.rx_series = this.rx_plot.add_metrics_stacked_instances_series(i, {}), 
            this.rx_plot.start_walking(), Z(this.rx_series).on("hover", e);
            var r = {
                direct: "network.interface.out.bytes",
                internal: "network.interface.tx",
                units: "bytes",
                derive: "rate",
                threshold: 200
            }, a = ie.plot_simple_template();
            Z.extend(a.yaxis, {
                tickFormatter: ie.format_bits_per_sec_tick_no_unit
            }), Z.extend(a.grid, {
                hoverable: !0,
                autoHighlight: !1
            }), a.setup_hook = g("#networking-tx-unit"), this.tx_plot = ie.plot(Z("#networking-tx-graph"), 300), 
            this.tx_plot.set_options(a), this.tx_series = this.tx_plot.add_metrics_stacked_instances_series(r, {}), 
            this.tx_plot.start_walking(), Z(this.tx_series).on("hover", e), Z(ee).on("resize", function() {
                n.rx_plot.resize(), n.tx_plot.resize();
            });
            var s = ie.setup_plot_controls(Z("#networking"), Z("#networking-graph-toolbar"));
            s.reset([ this.rx_plot, this.tx_plot ]), v(), Z(de).on("notify", function(e, n, i) {
                t();
            }), Z(window).on("resize", function() {
                n.rx_plot.resize(), n.tx_plot.resize();
            });
        },
        enter: function() {
            this.log_box = oe.logbox([ "_SYSTEMD_UNIT=NetworkManager.service", "_SYSTEMD_UNIT=firewalld.service" ], 10), 
            Z("#networking-log").empty().append(this.log_box), Z(this.model).on("changed.networking", Z.proxy(this, "update_devices")), 
            this.update_devices();
        },
        show: function() {
            this.rx_plot.resize(), this.tx_plot.resize();
        },
        leave: function() {
            this.log_box && this.log_box.stop(), Z(this.model).off(".networking");
        },
        update_devices: function() {
            var e, t, n = this;
            e = Z("#networking-interfaces tbody"), e.empty(), t = Z("#networking-unmanaged-interfaces tbody"), 
            t.empty(), Z("#networking-unmanaged-interfaces").hide(), n.model.list_interfaces().forEach(function(i) {
                function o(e) {
                    return e.Device && e.Device.ActiveConnection && e.Device.ActiveConnection.Master || e.MainConnection && e.MainConnection.Masters.length > 0;
                }
                if (!(i.Device && "loopback" == i.Device.DeviceType || o(i))) {
                    var r = i.Device, a = r && (100 == r.State || 10 == r.State) && r.Carrier === !0;
                    n.rx_series.add_instance(i.Name), n.tx_series.add_instance(i.Name), _(i.Name);
                    var s = Z("<tr>", {
                        "data-interface": encodeURIComponent(i.Name),
                        "data-sample-id": a ? encodeURIComponent(i.Name) : null
                    }).append(Z("<td>").text(i.Name), Z("<td>").html(h(r, !1, !0)), a ? [ Z("<td>").text(""), Z("<td>").text("") ] : Z('<td colspan="2">').text(u(r)));
                    !r || r.Managed ? e.append(s.click(function() {
                        ee.location.go([ i.Name ]);
                    })) : (t.append(s), Z("#networking-unmanaged-interfaces").show());
                }
            });
        },
        add_bond: function() {
            var e, t, n;
            for (n = i(), t = 0; t < 100 && (e = "bond" + t, this.model.find_interface(e)); t++) ;
            j.model = this.model, j.done = null, j.connection = null, j.apply_settings = b(this.model), 
            j.ghost_settings = {
                connection: {
                    id: e,
                    autoconnect: !0,
                    type: "bond",
                    uuid: n,
                    interface_name: e
                },
                bond: {
                    options: {
                        mode: "active-backup"
                    },
                    interface_name: e
                }
            }, Z("#network-bond-settings-dialog").modal("show");
        },
        add_team: function() {
            var e, t, n;
            for (n = i(), t = 0; t < 100 && (e = "team" + t, this.model.find_interface(e)); t++) ;
            H.model = this.model, H.done = null, H.connection = null, H.apply_settings = b(this.model), 
            H.ghost_settings = {
                connection: {
                    id: e,
                    autoconnect: !0,
                    type: "team",
                    uuid: n,
                    interface_name: e
                },
                team: {
                    config: {},
                    interface_name: e
                }
            }, Z("#network-team-settings-dialog").modal("show");
        },
        add_bridge: function() {
            var e, t, n;
            for (n = i(), t = 0; t < 100 && (e = "bridge" + t, this.model.find_interface(e)); t++) ;
            B.model = this.model, B.done = null, B.connection = null, B.apply_settings = b(this.model), 
            B.ghost_settings = {
                connection: {
                    id: e,
                    autoconnect: !0,
                    type: "bridge",
                    uuid: n,
                    interface_name: e
                },
                bridge: {
                    interface_name: e,
                    stp: !1,
                    priority: 32768,
                    forward_delay: 15,
                    hello_time: 2,
                    max_age: 20,
                    ageing_time: 300
                }
            }, Z("#network-bridge-settings-dialog").modal("show");
        },
        add_vlan: function() {
            var e;
            e = i(), q.model = this.model, q.done = null, q.connection = null, q.apply_settings = b(this.model), 
            q.ghost_settings = {
                connection: {
                    id: "",
                    autoconnect: !0,
                    type: "vlan",
                    uuid: e,
                    interface_name: ""
                },
                vlan: {
                    interface_name: "",
                    parent: ""
                }
            }, Z("#network-vlan-settings-dialog").modal("show");
        }
    };
    var ue = [ {
        choice: "auto",
        title: re("Automatic (DHCP)")
    }, {
        choice: "link-local",
        title: re("Link local")
    }, {
        choice: "manual",
        title: re("Manual")
    }, {
        choice: "shared",
        title: re("Shared")
    }, {
        choice: "disabled",
        title: re("Disabled")
    } ], fe = [ {
        choice: "auto",
        title: re("Automatic")
    }, {
        choice: "dhcp",
        title: re("Automatic (DHCP only)")
    }, {
        choice: "link-local",
        title: re("Link local")
    }, {
        choice: "manual",
        title: re("Manual")
    }, {
        choice: "ignore",
        title: re("Ignore")
    } ], pe = [ {
        choice: "balance-rr",
        title: re("Round Robin")
    }, {
        choice: "active-backup",
        title: re("Active Backup")
    }, {
        choice: "balance-xor",
        title: re("XOR")
    }, {
        choice: "broadcast",
        title: re("Broadcast")
    }, {
        choice: "802.3ad",
        title: re("802.3ad")
    }, {
        choice: "balance-tlb",
        title: re("Adaptive transmit load balancing")
    }, {
        choice: "balance-alb",
        title: re("Adaptive load balancing")
    } ], he = [ {
        choice: "mii",
        title: re("MII (Recommended)")
    }, {
        choice: "arp",
        title: re("ARP")
    } ], ge = [ {
        choice: "roundrobin",
        title: re("Round Robin")
    }, {
        choice: "activebackup",
        title: re("Active Backup")
    }, {
        choice: "loadbalance",
        title: re("Load Balancing")
    }, {
        choice: "broadcast",
        title: re("Broadcast")
    }, {
        choice: "lacp",
        title: re("802.3ad LACP")
    } ], me = [ {
        choice: "none",
        title: re("Passive")
    }, {
        choice: "basic",
        title: re("Active")
    } ], ve = [ {
        choice: "ethtool",
        title: re("Ethtool")
    }, {
        choice: "arp-ping",
        title: re("ARP Ping")
    }, {
        choice: "nsna-ping",
        title: re("NSNA Ping")
    } ], _e = .5, xe = .3, be = 15;
    M.prototype = {
        _init: function(e) {
            this.id = "network-interface", this.model = e;
        },
        getTitle: function() {
            return ae("page-title", "Networking");
        },
        setup: function() {
            function e(e, t) {
                Z("#network-interface-slaves tr").removeClass("highlight-ct"), t && Z('#network-interface-slaves tr[data-interface="' + encodeURIComponent(t) + '"]').addClass("highlight-ct");
            }
            function t() {
                for (var e in le) {
                    var t = le[e], n = t[0][0], i = t[1][0], o = Z('#network-interface-slaves tr[data-sample-id="' + encodeURIComponent(e) + '"]');
                    o.length > 0 && (o.find("td:nth-child(2)").text(ee.format_bits_per_sec(8 * i)), 
                    o.find("td:nth-child(3)").text(ee.format_bits_per_sec(8 * n)));
                }
            }
            var n = this;
            Z("#network-interface .breadcrumb a").on("click", function() {
                ee.location.go("/");
            }), Z("#network-interface-delete").syn_click(n.model, Z.proxy(this, "delete_connections")), 
            this.device_onoff = Z("#network-interface-delete-switch").onoff().on("change", function() {
                var e = Z(this).onoff("value");
                e ? n.connect() : n.disconnect();
            });
            var i = {
                direct: "network.interface.in.bytes",
                internal: "network.interface.rx",
                units: "bytes",
                derive: "rate"
            }, o = ie.plot_simple_template();
            Z.extend(o.yaxis, {
                tickFormatter: ie.format_bits_per_sec_tick_no_unit
            }), Z.extend(o.grid, {
                hoverable: !0,
                autoHighlight: !1
            }), o.setup_hook = g("#network-interface-rx-unit"), this.rx_plot = ie.plot(Z("#network-interface-rx-graph"), 300), 
            this.rx_plot.set_options(o), this.rx_series = this.rx_plot.add_metrics_stacked_instances_series(i, {}), 
            this.rx_plot.start_walking(), Z(this.rx_series).on("hover", e);
            var r = {
                direct: "network.interface.out.bytes",
                internal: "network.interface.tx",
                units: "bytes",
                derive: "rate"
            }, a = ie.plot_simple_template();
            Z.extend(a.yaxis, {
                tickFormatter: ie.format_bits_per_sec_tick_no_unit
            }), Z.extend(a.grid, {
                hoverable: !0,
                autoHighlight: !1
            }), a.setup_hook = g("#network-interface-tx-unit"), this.tx_plot = ie.plot(Z("#network-interface-tx-graph"), 300), 
            this.tx_plot.set_options(a), this.tx_series = this.tx_plot.add_metrics_stacked_instances_series(r, {}), 
            this.tx_plot.start_walking(), Z(this.tx_series).on("hover", e), Z(ee).on("resize", function() {
                n.rx_plot.resize(), n.tx_plot.resize();
            });
            var s = ie.setup_plot_controls(Z("#network-interface"), Z("#network-interface-graph-toolbar"));
            s.reset([ this.rx_plot, this.tx_plot ]), v(), Z(de).on("notify", function(e, n, i) {
                t();
            }), Z(window).on("resize", function() {
                n.rx_plot.resize(), n.tx_plot.resize();
            });
        },
        enter: function(e) {
            var t = this;
            Z(t.model).on("changed.network-interface", Z.proxy(t, "update")), t.dev_name = e, 
            Z("#network-interface .breadcrumb .active").text(t.dev_name), t.rx_series.clear_instances(), 
            t.tx_series.clear_instances(), Z("#network-interface-delete").hide(), t.dev = null, 
            t.update();
        },
        show: function() {
            this.rx_plot.resize(), this.tx_plot.resize();
        },
        leave: function() {
            Z(this.model).off(".network-interface"), this.dev = null;
        },
        show_dialog: function(e, t) {
            function n() {
                if (r && a && a.ActiveConnection && a.ActiveConnection.Connection === r) return r.Settings.connection.interface_name && r.Settings.connection.interface_name != a.Interface ? a.disconnect().then(function() {
                    return r.activate(null, null);
                }).fail(o) : r.activate(a, null).fail(o);
            }
            var i = this, r = i.main_connection, a = i.dev;
            e.model = i.model, e.connection = i.main_connection, e.ghost_settings = i.ghost_settings, 
            e.apply_settings = b(i.model, i.dev, r), e.done = n, Z(t).modal("show");
        },
        set_mac: function() {
            this.show_dialog(V, "#network-mac-settings-dialog");
        },
        delete_connections: function() {
            function e(e) {
                return ee.all(e.delete_(), ee.all(e.Slaves.map(function(e) {
                    return F(e);
                })));
            }
            function t(t) {
                return ee.all(t.map(e));
            }
            function n(e) {
                return t(e.Connections);
            }
            function i() {
                return n(r.iface).done(function() {
                    a.go("/");
                }).fail(o);
            }
            var r = this, a = ee.location;
            r.iface && y(r.model, i, {
                devices: r.dev ? [ r.dev ] : [],
                fail_text: ee.format(re("Deleting <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), r.dev_name),
                anyway_text: ee.format(re("Delete $0"), r.dev_name),
                hack_does_add_or_remove: !0,
                rollback_on_failure: !0
            });
        },
        connect: function() {
            function e(e) {
                o(e), n.update();
            }
            function t() {
                return n.main_connection ? n.main_connection.activate(n.dev, null).fail(e) : n.dev.activate_with_settings(n.ghost_settings, null).fail(e);
            }
            var n = this;
            return n.main_connection || n.dev && n.ghost_settings ? void y(n.model, t, {
                devices: n.dev ? [ n.dev ] : [],
                fail_text: ee.format(re("Switching on <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), n.dev_name),
                anyway_text: ee.format(re("Switch on $0"), n.dev_name)
            }) : void n.update();
        },
        disconnect: function() {
            function e() {
                return t.dev.disconnect().fail(function(e) {
                    o(e), t.update();
                });
            }
            var t = this;
            return t.dev ? void y(t.model, e, {
                devices: [ t.dev ],
                fail_text: ee.format(re("Switching off <b>$0</b>  will break the connection to the server, and will make the administration UI unavailable."), t.dev_name),
                anyway_text: ee.format(re("Switch off $0"), t.dev_name)
            }) : (console.log("Trying to switch off without a device?"), void t.update());
        },
        update: function() {
            function e() {
                return l && void 0 !== l.Carrier ? Z("<tr>").append(Z("<td>").text(re("Carrier")), Z("<td>").append(l.Carrier ? l.Speed ? ee.format_bits_per_sec(1e6 * l.Speed) : re("Yes") : re("No"))) : null;
            }
            function t() {
                var e;
                return a.main_connection && a.main_connection.Masters.length > 0 ? null : (e = l ? d && 100 != l.State ? l.StateText : null : re("Inactive"), 
                Z("<tr>").append(Z("<td>").text(re("Status")), Z("<td>").append(h(l, !0, !1), " ", e ? Z("<span>").text(e) : null)));
            }
            function n(e, t) {
                function n(e) {
                    var n = t[e], i = [];
                    "manual" != n.method && i.push(w("ipv4" == e ? ue : fe, n.method, re("Unknown configuration")));
                    var o = "manual" != n.method, r = [];
                    n.addresses.forEach(function(e) {
                        var t = e[0] + "/" + e[1];
                        e[2] && "0.0.0.0" != e[2] && "0:0:0:0:0:0:0:0" != e[2] && (t += " via " + e[2]), 
                        r.push(t);
                    }), r.length > 0 && i.push(ee.format(re(o ? "Additional address $val" : "Address $val"), {
                        val: r.join(", ")
                    }));
                    var a = !n["ignore-auto-dns"] && "manual" != n.method;
                    return n.dns.length > 0 && i.push(ee.format(re(a ? "Additional DNS $val" : "DNS $val"), {
                        val: n.dns.join(", ")
                    })), n.dns_search.length > 0 && i.push(ee.format(re(a ? "Additional DNS Search Domains $val" : "DNS Search Domains $val"), {
                        val: n.dns_search.join(", ")
                    })), i;
                }
                function i(e) {
                    N.topic = e, a.show_dialog(N, "#network-ip-settings-dialog");
                }
                function o() {
                    a.show_dialog(j, "#network-bond-settings-dialog");
                }
                function r() {
                    a.show_dialog(H, "#network-team-settings-dialog");
                }
                function s() {
                    L.master_settings = I, a.show_dialog(L, "#network-teamport-settings-dialog");
                }
                function c() {
                    a.show_dialog(B, "#network-bridge-settings-dialog");
                }
                function l() {
                    a.show_dialog(Y, "#network-bridgeport-settings-dialog");
                }
                function u() {
                    a.show_dialog(q, "#network-vlan-settings-dialog");
                }
                function h() {
                    a.show_dialog(G, "#network-mtu-settings-dialog");
                }
                function g() {
                    if (void 0 !== t.connection.autoconnect) return Z("<tr>").append(Z("<td>").text(re("General")), Z('<td class="networking-controls">').append(Z("<label>").append(Z('<input type="checkbox">').prop("checked", t.connection.autoconnect).change(function() {
                        t.connection.autoconnect = Z(this).prop("checked"), b(a.model, a.dev, e)(t);
                    }), Z("<span>").text(re("Connect automatically")))));
                }
                function m(e, t, n) {
                    for (var i = [], o = 0; o < t.length; o++) i.push(t[o]), o < t.length - 1 && i.push(Z("<br>"));
                    return 0 === i.length && i.push(re("Configure")), Z("<tr>").append(Z("<td>").text(e).css("vertical-align", t.length > 1 ? "top" : "center"), Z("<td>").append(Z('<a class="network-privileged">').append(i).syn_click(a.model, function() {
                        n();
                    })));
                }
                function v(e, o) {
                    return t[e] ? m(o, n(e), function() {
                        i(e);
                    }) : null;
                }
                function _() {
                    function e(e, t) {
                        n.push(ee.format(e, t));
                    }
                    var n = [], i = t.ethernet;
                    return i ? (i.mtu ? e(re("$mtu"), i) : e(re("Automatic"), i), m(re("MTU"), n, h)) : null;
                }
                function x() {
                    return e && e.Masters.length > 0 ? Z("<tr>").append(Z("<td>").text(re("Master")), Z("<td>").append(p(e.Masters.map(f), ", "))) : null;
                }
                function k() {
                    var e, n = [], i = [];
                    return t.bond ? (e = t.bond.options, n.push(w(pe, e.mode, e.mode)), e.arp_interval && n.push(re("ARP Monitoring")), 
                    n.length > 0 && i.push(n.join(", ")), m(re("Bond"), i, o)) : null;
                }
                function y() {
                    var e = [], n = [];
                    if (!t.team) return null;
                    var i = t.team.config;
                    return null === i ? e.push(re("Broken configuration")) : (i.runner && e.push(w(ge, i.runner.name, i.runner.name)), 
                    i.link_watch && "ethtool" != i.link_watch.name && e.push(w(ve, i.link_watch.name, i.link_watch.name))), 
                    e.length > 0 && n.push(e.join(", ")), m(re("Team"), n, r);
                }
                function M() {
                    var e = [], n = [];
                    if (!t.team_port) return null;
                    if (!I || !I.team || !I.team.config || !I.team.config.runner || "activebackup" != I.team.config.runner.name && "lacp" != I.team.config.runner.name) return null;
                    var i = t.team_port.config;
                    return null === i && e.push(re("Broken configuration")), e.length > 0 && n.push(e.join(", ")), 
                    m(re("Team Port"), n, s);
                }
                function C() {
                    function e(e, t) {
                        n.push(ee.format(e, t));
                    }
                    var n = [], i = t.bridge;
                    return i ? (i.stp && (e(re("Spanning Tree Protocol")), 32768 != i.priority && e(re("Priority $priority"), i), 
                    15 != i.forward_delay && e(re("Forward delay $forward_delay"), i), 2 != i.hello_time && e(re("Hello time $hello_time"), i), 
                    20 != i.max_age && e(re("Maximum message age $max_age"), i)), m(re("Bridge"), n, c)) : null;
                }
                function S() {
                    function e(e, t) {
                        n.push(ee.format(e, t));
                    }
                    var n = [], i = t.bridge_port;
                    return i ? (32 != i.priority && e(re("Priority $priority"), i), 100 != i.path_cost && e(re("Path cost $path_cost"), i), 
                    i.hairpin_mode && e(re("Hairpin mode")), m(re("Bridge port"), n, l)) : null;
                }
                function T() {
                    function e(e, t) {
                        n.push(ee.format(e, t));
                    }
                    var n = [], i = t.vlan;
                    return i ? (e(re("Parent $parent"), i), e(re("Id $id"), i), m(re("VLAN"), n, u)) : null;
                }
                if (!d) return Z("<tr>").append(Z("<td>"), Z("<td>").text(re("This device cannot be managed here.")));
                if (!t) return [];
                var I = null;
                return e && e.Masters.length > 0 && (I = e.Masters[0].Settings), [ x(), g(), v("ipv4", re("IPv4")), v("ipv6", re("IPv6")), _(), T(), C(), S(), k(), y(), M() ];
            }
            function i() {
                var e = {
                    connection: {
                        interface_name: s.Name
                    },
                    ipv4: {
                        method: "auto",
                        addresses: [],
                        dns: [],
                        dns_search: [],
                        routes: []
                    },
                    ipv6: {
                        method: "auto",
                        addresses: [],
                        dns: [],
                        dns_search: [],
                        routes: []
                    }
                };
                return x(e, l), e;
            }
            function r(e) {
                var t = Z("#network-interface-slaves tbody"), n = {}, i = {};
                t.empty(), a.rx_series.clear_instances(), a.tx_series.clear_instances();
                var r = c(e);
                if (!e || "bond" != r.type && "team" != r.type && "bridge" != r.type) return a.rx_series.add_instance(a.dev_name), 
                void a.tx_series.add_instance(a.dev_name);
                Z("#network-interface-slaves thead th:first-child").text(re("bond" == r.type ? "Members" : "Ports")), 
                e.Slaves.forEach(function(e) {
                    e.Interfaces.forEach(function(t) {
                        if (t.MainConnection == e) {
                            var r = t.Device, s = r && 100 == r.State && r.Carrier === !0;
                            r && !r.Managed || (a.rx_series.add_instance(t.Name), a.tx_series.add_instance(t.Name), 
                            _(t.Name), i[t.Name] = !0, n[t.Name] = Z("<tr>", {
                                "data-interface": encodeURIComponent(t.Name),
                                "data-sample-id": s ? encodeURIComponent(t.Name) : null
                            }).append(Z("<td>").text(t.Name), s ? [ Z("<td>").text(""), Z("<td>").text("") ] : Z('<td colspan="2">').text(u(r)), Z('<td class="networking-row-configure">').append(C(!(!r || !r.ActiveConnection), function(n) {
                                n ? y(a.model, function() {
                                    return e.activate(r).fail(o);
                                }, {
                                    devices: r ? [ r ] : [],
                                    fail_text: ee.format(re("Switching on <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), t.Name),
                                    anyway_text: ee.format(re("Switch on $0"), t.Name)
                                }) : r && y(a.model, function() {
                                    return r.disconnect().fail(o);
                                }, {
                                    devices: [ r ],
                                    fail_text: ee.format(re("Switching off <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), t.Name),
                                    anyway_text: ee.format(re("Switch off $0"), t.Name)
                                });
                            }, "network-privileged")), Z('<td width="28px">').append(Z('<button class="btn btn-default btn-control-ct network-privileged fa fa-minus">').syn_click(a.model, function() {
                                return y(a.model, function() {
                                    return e.delete_().fail(o);
                                }, {
                                    devices: r ? [ r ] : [],
                                    fail_text: ee.format(re("Removing <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), t.Name),
                                    anyway_text: ee.format(re("Remove $0"), t.Name),
                                    hack_does_add_or_remove: !0
                                }), !1;
                            }))).click(function(e) {
                                Z(e.target).hasClass("btn") || ee.location.go([ t.Name ]);
                            }));
                        }
                    });
                }), Object.keys(n).sort().forEach(function(e) {
                    t.append(n[e]);
                });
                var s = Z("<div>", {
                    class: "dropdown"
                }).append(Z("<button>", {
                    class: "network-privileged btn btn-default btn-control-ct dropdown-toggle fa fa-plus",
                    "data-toggle": "dropdown"
                }), Z("<ul>", {
                    class: "dropdown-menu add-button",
                    role: "menu"
                }).append(a.model.list_interfaces().map(function(t) {
                    return A(t) && !i[t.Name] && t != a.iface ? Z('<li role="presentation">').append(Z('<a role="menuitem" class="network-privileged">').text(t.Name).syn_click(a.model, function() {
                        y(a.model, function() {
                            var n = c(e);
                            return $(a.model, e, e.Settings, n.type, t.Name, !0).fail(o);
                        }, {
                            devices: t.Device ? [ t.Device ] : [],
                            fail_text: ee.format(re("Adding <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), t.Name),
                            anyway_text: ee.format(re("Add $0"), t.Name),
                            hack_does_add_or_remove: !0
                        });
                    })) : null;
                })));
                Z("#network-interface-slaves thead th:nth-child(5)").html(s), Z("#network-interface-slaves").show(), 
                m();
            }
            var a = this, s = a.model.find_interface(a.dev_name), l = s && s.Device, d = s && (!l || l.Managed);
            a.iface = s, a.dev = l;
            var g, v;
            l ? g = "ethernet" == l.DeviceType || l.IdVendor || l.IdModel ? ee.format("$IdVendor $IdModel $Driver", l) : "bond" == l.DeviceType ? re("Bond") : "team" == l.DeviceType ? re("Team") : "vlan" == l.DeviceType ? re("VLAN") : "bridge" == l.DeviceType ? re("Bridge") : ee.format(re('Unknown "$0"'), l.DeviceType) : s ? (v = c(s.Connections[0]), 
            g = "bond" == v.type ? re("Bond") : "team" == v.type ? re("Team") : "vlan" == v.type ? re("VLAN") : "bridge" == v.type ? re("Bridge") : v.type ? ee.format(re('Unknown "$0"'), v.type) : re("Unknown")) : g = re("Unknown"), 
            Z("#network-interface-name").text(a.dev_name), Z("#network-interface-hw").text(g);
            var k;
            l && l.HwAddress ? k = l.HwAddress : s && s.MainConnection && s.MainConnection.Settings && s.MainConnection.Settings.ethernet && s.MainConnection.Settings.ethernet.assigned_mac_address && (k = s.MainConnection.Settings.ethernet.assigned_mac_address);
            var M = s && s.MainConnection && ("802-3-ethernet" == c(s.MainConnection).type && a.model.at_least_version("1.4") || "bond" == c(s.MainConnection).type && a.model.at_least_version("1.6"));
            Z("#network-interface-mac").empty(), M ? Z("#network-interface-mac").append(Z("<a>").text(k).syn_click(a.model, function() {
                a.set_mac();
            })) : Z("#network-interface-mac").text(k), this.device_onoff.onoff("disabled", !(s && (!l || 20 != l.State))), 
            this.device_onoff.onoff("value", !(!l || !l.ActiveConnection)), this.device_onoff.toggle(d);
            var S = s && !l || l && ("bond" == l.DeviceType || "team" == l.DeviceType || "vlan" == l.DeviceType || "bridge" == l.DeviceType);
            Z("#network-interface-delete").toggle(S && d), a.ghost_settings = null, a.main_connection = null, 
            a.connection_settings = null, s && (a.main_connection = s.MainConnection, a.main_connection ? a.connection_settings = a.main_connection.Settings : (a.ghost_settings = i(), 
            a.connection_settings = a.ghost_settings)), Z("#network-interface-settings").empty().append(t()).append(e()).append(n(a.main_connection, a.connection_settings)), 
            m(), Z("#network-interface-slaves").hide(), a.main_connection && r(a.main_connection);
        }
    }, N.prototype = {
        _init: function() {
            this.id = "network-ip-settings-dialog";
        },
        setup: function() {
            Z("#network-ip-settings-cancel").click(Z.proxy(this, "cancel")), Z("#network-ip-settings-apply").click(Z.proxy(this, "apply"));
        },
        enter: function() {
            Z("#network-ip-settings-error").hide(), this.settings = N.ghost_settings || N.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            function e(e, t) {
                var n = r(function(t) {
                    m[e] = t, h.update();
                }, t);
                return n.addClass("col-left"), a(n, m[e]), n;
            }
            function t(e, t) {
                var n, i = Z("<span>").append(Z('<span class="inverted-switchbox">').text(e), n = C(!m[t], function(e) {
                    m[t] = !e, h.update();
                }));
                return i.enable = function(e) {
                    n.onoff("disabled", !e);
                }, i;
            }
            function n(e, t, n, i, o) {
                function r(e, n) {
                    return d ? m[t][e] : m[t][e][n];
                }
                function a(e, n, i) {
                    d ? m[t][e] = i : m[t][e][n] = i;
                }
                function s() {
                    return function() {
                        m[t].push(i), h.update();
                    };
                }
                function c(e) {
                    return function() {
                        m[t].splice(e, 1), h.update();
                    };
                }
                var l, d = !1;
                "string" == typeof n && (d = !0, n = [ n ]);
                var u = Z('<div class="network-ip-settings-row">').append(Z("<div>").append(Z("<strong>").text(e), Z('<div class="pull-right">').append(o, l = Z('<button class="btn btn-default fa fa-plus">').css("margin-left", "10px").click(s()))), Z('<table width="100%">').append(m[t].map(function(e, t) {
                    return Z("<tr>").append(n.map(function(e, n) {
                        return Z("<td>").append(Z('<input class="form-control">').val(r(t, n)).attr("placeholder", e).change(function(e) {
                            a(t, n, Z(e.target).val());
                        }));
                    }), Z("<td>").append(Z('<button class="btn btn-default fa fa-minus">').click(c(t))));
                })));
                return u.attr("data-field", t), u.enable_add = function(e) {
                    l.prop("disabled", !e);
                }, u;
            }
            function i() {
                var i = re("ipv4" == g ? "Prefix length or Netmask" : "Prefix length"), r = Z("<div>").append(s = n(re("Addresses"), "addresses", [ "Address", i, "Gateway" ], [ "", "", "" ], o = e("method", "ipv4" == g ? ue : fe).css("display", "inline-block")), Z("<br>"), l = n(re("DNS"), "dns", "Server", "", c = t(re("Automatic"), "ignore_auto_dns")), Z("<br>"), u = n(re("DNS Search Domains"), "dns_search", "Search Domain", "", d = t(re("Automatic"), "ignore_auto_dns")), Z("<br>"), p = n(re("Routes"), "routes", [ "Address", i, "Gateway", "Metric" ], [ "", "", "", "" ], f = t(re("Automatic"), "ignore_auto_routes")));
                return r;
            }
            var o, s, c, l, d, u, f, p, h = this, g = N.topic, m = h.settings[g];
            "manual" == m.method && 0 === m.addresses.length && (m.addresses = [ [ "", "", "" ] ]);
            var v = "disabled" == m.method || "ignore" == m.method, _ = !("link-local" == m.method || "shared" == m.method || v);
            _ || (m.addresses = [], m.dns = [], m.dns_search = []), v && (m.routes = []), Z("#network-ip-settings-dialog .modal-title").text(re("ipv4" == g ? "IPv4 Settings" : "IPv6 Settings")), 
            Z("#network-ip-settings-body").html(i());
            var x = "auto" == m.method || "dhcp" == m.method;
            c.enable(x), d.enable(x), f.enable(x), s.enable_add(_), l.enable_add(_), u.enable_add(_), 
            p.enable_add(!v);
        },
        cancel: function() {
            Z("#network-ip-settings-dialog").modal("hide");
        },
        apply: function() {
            function e() {
                return N.apply_settings(t.settings).then(function() {
                    if (Z("#network-ip-settings-dialog").modal("hide"), N.done) return N.done();
                }).fail(function(e) {
                    T("#network-ip-settings-error", e);
                });
            }
            var t = this;
            S(N.model, e, {
                devices: I(N.connection)
            });
        }
    }, j.prototype = {
        _init: function() {
            this.id = "network-bond-settings-dialog", this.bond_settings_template = Z("#network-bond-settings-template").html(), 
            ne.parse(this.bond_settings_template);
        },
        setup: function() {
            Z("#network-bond-settings-cancel").click(Z.proxy(this, "cancel")), Z("#network-bond-settings-apply").click(Z.proxy(this, "apply"));
        },
        enter: function() {
            Z("#network-bond-settings-error").hide(), this.settings = j.ghost_settings || j.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        find_slave_con: function(e) {
            return j.connection ? z(j.connection.Slaves, function(t) {
                return t.Interfaces.indexOf(e) >= 0;
            }) || null : null;
        },
        update: function() {
            function e() {
                var e = W(n, o);
                d.replaceWith(e), d = e, a(d, x.primary), n(), m.slaves_changed = !0;
            }
            function t() {
                console.log("mac"), m.settings.ethernet || (m.settings.ethernet = {}), m.settings.ethernet.assigned_mac_address = c.val();
            }
            function n() {
                x.mode = s(l), d.parents("tr").toggle("active-backup" == x.mode), "active-backup" == x.mode ? x.primary = s(d) : delete x.primary;
            }
            function i() {
                var e = "mii" == s(u);
                p.parents("tr").toggle(!e), h.parents("tr").toggle(e), g.parents("tr").toggle(e), 
                e ? (x.miimon = f.val(), x.updelay = h.val(), x.downdelay = g.val(), delete x.arp_interval, 
                delete x.arp_ip_target) : (delete x.miimon, delete x.updelay, delete x.downdelay, 
                x.arp_interval = f.val(), x.arp_ip_target = p.val());
            }
            var o, c, l, d, u, f, p, h, g, m = this, v = j.model, _ = j.connection, x = m.settings.bond.options, b = m.settings.ethernet && m.settings.ethernet.assigned_mac_address || "", k = Z(ne.render(m.bond_settings_template, {
                interface_name: m.settings.bond.interface_name,
                assigned_mac_address: b,
                monitoring_interval: x.miimon || x.arp_interval || "100",
                monitoring_targets: x.arp_ip_targets,
                link_up_delay: x.updelay || "0",
                link_down_delay: x.downdelay || "0"
            }));
            k.find("#network-bond-settings-interface-name-input").change(function(e) {
                var t = Z(e.target).val();
                m.settings.bond.interface_name = t, m.settings.connection.id = t, m.settings.connection.interface_name = t;
            }), k.find("#network-bond-settings-members").append(o = E(v, _).change(e)), U(k.find("#network-bond-settings-mac-menu"), c = k.find("#network-bond-settings-mac-input"), v), 
            c.change(t), k.find("#network-bond-settings-mode-select").append(l = r(n, pe, "form-control")), 
            k.find("#network-bond-settings-primary-select").append(d = W(n, o, "form-control")), 
            k.find("#network-bond-settings-link-monitoring-select").append(u = r(i, he, "form-control")), 
            f = k.find("#network-bond-settings-monitoring-interval-input"), f.change(i), p = k.find("#network-bond-settings-monitoring-targets-input"), 
            p.change(i), h = k.find("#network-bond-settings-link-up-delay-input"), h.change(i), 
            g = k.find("#network-bond-settings-link-down-delay-input"), g.change(i), k.find("#network-bond-settings-mac-row").toggle(v.at_least_version("1.6")), 
            a(l, x.mode), a(u, 0 !== x.miimon ? "mii" : "arp"), e(), n(), i(), m.slaves_changed = !1, 
            Z("#network-bond-settings-body").html(k);
        },
        cancel: function() {
            Z("#network-bond-settings-dialog").modal("hide");
        },
        apply: function() {
            function e() {
                return R(Z("#network-bond-settings-body"), j.model, j.apply_settings, j.connection, t.settings, "bond").then(function() {
                    if (Z("#network-bond-settings-dialog").modal("hide"), j.connection && ee.location.go([ t.settings.connection.interface_name ]), 
                    j.done) return j.done();
                }).fail(function(e) {
                    T("#network-bond-settings-error", e);
                });
            }
            var t = this;
            j.connection ? S(j.model, e, {
                devices: t.slaves_changed ? [] : I(j.connection),
                hack_does_add_or_remove: t.slaves_changed,
                rollback_on_failure: t.slaves_changed
            }) : y(j.model, e, {
                fail_text: re("Creating this bond will break the connection to the server, and will make the administration UI unavailable."),
                anyway_text: re("Create it"),
                hack_does_add_or_remove: !0,
                rollback_on_failure: !0
            });
        }
    }, H.prototype = {
        _init: function() {
            this.id = "network-team-settings-dialog", this.team_settings_template = Z("#network-team-settings-template").html(), 
            ne.parse(this.team_settings_template);
        },
        setup: function() {
            Z("#network-team-settings-cancel").click(Z.proxy(this, "cancel")), Z("#network-team-settings-apply").click(Z.proxy(this, "apply"));
        },
        enter: function() {
            Z("#network-team-settings-error").hide(), this.settings = H.ghost_settings || H.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        find_slave_con: function(e) {
            return H.connection ? z(H.connection.Slaves, function(t) {
                return t.Interfaces.indexOf(e) >= 0;
            }) || null : null;
        },
        update: function() {
            function e() {
                h.slaves_changed = !0;
            }
            function t() {
                v.runner.name = s(o), c.parents("tr").toggle("loadbalance" == v.runner.name || "lacp" == v.runner.name);
            }
            function n() {
                var e = s(c);
                "none" == e ? v.runner.tx_balancer && delete v.runner.tx_balancer.name : (v.runner.tx_balancer || (v.runner.tx_balancer = {}), 
                v.runner.tx_balancer.name = e);
            }
            function i() {
                var e = s(l);
                d.parents("tr").toggle("ethtool" != e), u.parents("tr").toggle("ethtool" != e), 
                f.parents("tr").toggle("ethtool" == e), p.parents("tr").toggle("ethtool" == e), 
                v.link_watch = {
                    name: e
                }, "ethtool" == e ? (v.link_watch.delay_up = f.val(), v.link_watch.delay_down = p.val()) : (v.link_watch.interval = d.val(), 
                v.link_watch.target_host = u.val());
            }
            var o, c, l, d, u, f, p, h = this, g = H.model, m = H.connection, v = h.settings.team.config;
            v || (h.settings.team.config = v = {}), v.runner || (v.runner = {}), v.runner.name || (v.runner.name = "activebackup"), 
            v.link_watch || (v.link_watch = {}), v.link_watch.name || (v.link_watch.name = "ethtool"), 
            void 0 === v.link_watch.interval && (v.link_watch.interval = 100), void 0 === v.link_watch.delay_up && (v.link_watch.delay_up = 0), 
            void 0 === v.link_watch.delay_down && (v.link_watch.delay_down = 0);
            var _ = Z(ne.render(h.team_settings_template, {
                interface_name: h.settings.team.interface_name,
                config: v
            }));
            _.find("#network-team-settings-interface-name-input").change(function(e) {
                var t = Z(e.target).val();
                h.settings.team.interface_name = t, h.settings.connection.id = t, h.settings.connection.interface_name = t;
            }), _.find("#network-team-settings-members").append(E(g, m).change(e)), _.find("#network-team-settings-runner-select").append(o = r(t, ge, "form-control")), 
            _.find("#network-team-settings-balancer-select").append(c = r(n, me, "form-control")), 
            _.find("#network-team-settings-link-watch-select").append(l = r(i, ve, "form-control")), 
            d = _.find("#network-team-settings-ping-interval-input"), d.change(i), u = _.find("#network-team-settings-ping-target-input"), 
            u.change(i), f = _.find("#network-team-settings-link-up-delay-input"), f.change(i), 
            p = _.find("#network-team-settings-link-down-delay-input"), p.change(i), a(o, v.runner.name), 
            a(c, v.runner.tx_balancer && v.runner.tx_balancer.name || "none"), a(l, v.link_watch.name), 
            t(), i(), h.slaves_changed = !1, Z("#network-team-settings-body").html(_);
        },
        cancel: function() {
            Z("#network-team-settings-dialog").modal("hide");
        },
        apply: function() {
            function e() {
                return R(Z("#network-team-settings-body"), H.model, H.apply_settings, H.connection, t.settings, "team").then(function() {
                    if (Z("#network-team-settings-dialog").modal("hide"), H.connection && ee.location.go([ t.settings.connection.interface_name ]), 
                    H.done) return H.done();
                }).fail(function(e) {
                    T("#network-team-settings-error", e);
                });
            }
            var t = this;
            H.connection ? S(H.model, e, {
                devices: t.slaves_changed ? [] : I(H.connection),
                hack_does_add_or_remove: t.slaves_changed,
                rollback_on_failure: t.slaves_changed
            }) : y(H.model, e, {
                fail_text: re("Creating this team will break the connection to the server, and will make the administration UI unavailable."),
                anyway_text: re("Create it"),
                hack_does_add_or_remove: !0,
                rollback_on_failure: !0
            });
        }
    }, L.prototype = {
        _init: function() {
            this.id = "network-teamport-settings-dialog", this.team_port_settings_template = Z("#network-team-port-settings-template").html(), 
            ne.parse(this.team_port_settings_template);
        },
        setup: function() {
            Z("#network-teamport-settings-cancel").click(Z.proxy(this, "cancel")), Z("#network-teamport-settings-apply").click(Z.proxy(this, "apply"));
        },
        enter: function() {
            Z("#network-teamport-settings-error").hide(), this.settings = L.ghost_settings || L.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            function e() {
                "activebackup" == a.runner.name ? (s.prio = parseInt(t.val(), 10), s.sticky = n.prop("checked")) : "lacp" == a.runner.name && (s.lacp_prio = parseInt(i.val(), 10), 
                s.lacp_key = parseInt(o.val(), 10));
            }
            var t, n, i, o, r = this, a = L.master_settings.team.config, s = r.settings.team_port.config;
            s || (r.settings.team_port.config = s = {});
            var c = Z(ne.render(r.team_port_settings_template, s));
            t = c.find("#network-team-port-settings-ab-prio-input"), t.change(e), n = c.find("#network-team-port-settings-ab-sticky-input"), 
            n.change(e), i = c.find("#network-team-port-settings-lacp-prio-input"), i.change(e), 
            o = c.find("#network-team-port-settings-lacp-key-input"), o.change(e), t.parents("tr").toggle("activebackup" == a.runner.name), 
            n.parents("tr").toggle("activebackup" == a.runner.name), i.parents("tr").toggle("lacp" == a.runner.name), 
            o.parents("tr").toggle("lacp" == a.runner.name), Z("#network-teamport-settings-body").html(c);
        },
        cancel: function() {
            Z("#network-teamport-settings-dialog").modal("hide");
        },
        apply: function() {
            function e() {
                return L.apply_settings(t.settings).then(function() {
                    if (Z("#network-teamport-settings-dialog").modal("hide"), L.done) return L.done();
                }).fail(function(e) {
                    T("#network-teamport-settings-error", e);
                });
            }
            var t = this, n = L.model;
            S(n, e, {
                devices: I(L.connection)
            });
        }
    }, B.prototype = {
        _init: function() {
            this.id = "network-bridge-settings-dialog", this.bridge_settings_template = Z("#network-bridge-settings-template").html(), 
            ne.parse(this.bridge_settings_template);
        },
        setup: function() {
            Z("#network-bridge-settings-cancel").click(Z.proxy(this, "cancel")), Z("#network-bridge-settings-apply").click(Z.proxy(this, "apply"));
        },
        enter: function() {
            Z("#network-bridge-settings-error").hide(), this.settings = B.ghost_settings || B.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        find_slave_con: function(e) {
            return B.connection ? z(B.connection.Slaves, function(t) {
                return t.Interfaces.indexOf(e) >= 0;
            }) || null : null;
        },
        update: function() {
            function e() {
                s.slaves_changed = !0;
            }
            function t() {
                d.stp = n.prop("checked"), d.priority = parseInt(i.val(), 10), d.forward_delay = parseInt(o.val(), 10), 
                d.hello_time = parseInt(r.val(), 10), d.max_age = parseInt(a.val(), 10), i.parents("tr").toggle(d.stp), 
                o.parents("tr").toggle(d.stp), r.parents("tr").toggle(d.stp), a.parents("tr").toggle(d.stp);
            }
            var n, i, o, r, a, s = this, c = B.model, l = B.connection, d = s.settings.bridge, u = Z(ne.render(s.bridge_settings_template, {
                bridge_name: d.interface_name,
                stp_checked: d.stp,
                stp_priority: d.priority,
                stp_forward_delay: d.forward_delay,
                stp_hello_time: d.hello_time,
                stp_max_age: d.max_age
            }));
            u.find("#network-bridge-settings-name-input").change(function(e) {
                var t = Z(e.target).val();
                d.interface_name = t, s.settings.connection.id = t, s.settings.connection.interface_name = t;
            }), u.find("#network-bridge-settings-slave-interfaces").append(E(c, l).change(e)).parent().toggle(!l), 
            n = u.find("#network-bridge-settings-stp-enabled-input"), n.change(t), i = u.find("#network-bridge-settings-stp-priority-input"), 
            i.change(t), o = u.find("#network-bridge-settings-stp-forward-delay-input"), o.change(t), 
            r = u.find("#network-bridge-settings-stp-hello-time-input"), r.change(t), a = u.find("#network-bridge-settings-stp-max-age-input"), 
            a.change(t), t(), s.slaves_changed = !1, Z("#network-bridge-settings-body").html(u);
        },
        cancel: function() {
            Z("#network-bridge-settings-dialog").modal("hide");
        },
        apply: function() {
            function e() {
                return R(Z("#network-bridge-settings-body"), B.model, B.apply_settings, B.connection, t.settings, "bridge").then(function() {
                    if (Z("#network-bridge-settings-dialog").modal("hide"), B.connection && ee.location.go([ t.settings.connection.interface_name ]), 
                    B.done) return B.done();
                }).fail(function(e) {
                    Z("#network-bridge-settings-error").show().find("span").text(e.message || e.toString());
                });
            }
            var t = this;
            B.connection ? S(B.model, e, {
                devices: t.slaves_changed ? [] : I(B.connection),
                hack_does_add_or_remove: t.slaves_changed,
                rollback_on_failure: t.slaves_changed
            }) : y(B.model, e, {
                fail_text: re("Creating this bridge will break the connection to the server, and will make the administration UI unavailable."),
                anyway_text: re("Create it"),
                hack_does_add_or_remove: !0,
                rollback_on_failure: !0
            });
        }
    }, Y.prototype = {
        _init: function() {
            this.id = "network-bridgeport-settings-dialog", this.bridge_port_settings_template = Z("#network-bridge-port-settings-template").html(), 
            ne.parse(this.bridge_port_settings_template);
        },
        setup: function() {
            Z("#network-bridgeport-settings-cancel").click(Z.proxy(this, "cancel")), Z("#network-bridgeport-settings-apply").click(Z.proxy(this, "apply"));
        },
        enter: function() {
            Z("#network-bridgeport-settings-error").hide(), this.settings = Y.ghost_settings || Y.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            function e() {
                r.priority = parseInt(t.val(), 10), r.path_cost = parseInt(n.val(), 10), r.hairpin_mode = i.prop("checked");
            }
            var t, n, i, o = this, r = o.settings.bridge_port, a = Z(ne.render(o.bridge_port_settings_template, {
                priority: r.priority,
                path_cost: r.path_cost,
                hairpin_mode_checked: r.hairpin_mode
            }));
            t = a.find("#network-bridge-port-settings-priority-input"), t.change(e), n = a.find("#network-bridge-port-settings-path-cost-input"), 
            n.change(e), i = a.find("#network-bridge-port-settings-hairpin-mode-input"), i.change(e), 
            Z("#network-bridgeport-settings-body").html(a);
        },
        cancel: function() {
            Z("#network-bridgeport-settings-dialog").modal("hide");
        },
        apply: function() {
            function e() {
                return Y.apply_settings(t.settings).then(function() {
                    if (Z("#network-bridgeport-settings-dialog").modal("hide"), Y.done) return Y.done();
                }).fail(function(e) {
                    T("#network-bridgeport-settings-error", e);
                });
            }
            var t = this, n = Y.model;
            S(n, e, {
                devices: I(Y.connection)
            });
        }
    }, q.prototype = {
        _init: function() {
            this.id = "network-vlan-settings-dialog", this.vlan_settings_template = Z("#network-vlan-settings-template").html(), 
            ne.parse(this.vlan_settings_template);
        },
        setup: function() {
            Z("#network-vlan-settings-cancel").click(Z.proxy(this, "cancel")), Z("#network-vlan-settings-apply").click(Z.proxy(this, "apply"));
        },
        enter: function() {
            Z("#network-vlan-settings-error").hide(), this.settings = q.ghost_settings || q.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            function e() {
                d.parent = s(n), Z("#network-vlan-settings-apply").toggleClass("disabled", !d.parent), 
                d.id = parseInt(i.val(), 10), u && d.parent && d.id && o.val(d.parent + "." + d.id), 
                d.interface_name = o.val(), c.settings.connection.id = d.interface_name, c.settings.connection.interface_name = d.interface_name;
            }
            function t() {
                u = !1, e();
            }
            var n, i, o, c = this, l = q.model, d = c.settings.vlan, u = !0, f = [];
            l.list_interfaces().forEach(function(e) {
                !D(e, q.connection) && A(e) && f.push({
                    title: e.Name,
                    choice: e.Name
                });
            });
            var p = Z(ne.render(c.vlan_settings_template, {
                vlan_id: d.id || "1",
                interface_name: d.interface_name
            }));
            n = r(e, f, "form-control"), p.find("#network-vlan-settings-parent-select").html(n), 
            i = p.find("#network-vlan-settings-vlan-id-input").change(e).on("input", e), o = p.find("#network-vlan-settings-interface-name-input").change(t).on("input", t), 
            a(n, d.parent || (f[0] ? f[0].choice : "")), e(), Z("#network-vlan-settings-body").html(p);
        },
        cancel: function() {
            Z("#network-vlan-settings-dialog").modal("hide");
        },
        apply: function() {
            function e() {
                return q.apply_settings(t.settings).then(function() {
                    if (Z("#network-vlan-settings-dialog").modal("hide"), q.connection && ee.location.go([ t.settings.connection.interface_name ]), 
                    q.done) return q.done();
                }).fail(function(e) {
                    T("#network-vlan-settings-error", e);
                });
            }
            var t = this, n = q.model;
            q.connection ? S(n, e, {
                hack_does_add_or_remove: !0
            }) : y(q.model, e, {
                fail_text: re("Creating this VLAN will break the connection to the server, and will make the administration UI unavailable."),
                anyway_text: re("Create it"),
                hack_does_add_or_remove: !0
            });
        }
    }, G.prototype = {
        _init: function() {
            this.id = "network-mtu-settings-dialog", this.ethernet_settings_template = Z("#network-mtu-settings-template").html(), 
            ne.parse(this.ethernet_settings_template);
        },
        setup: function() {
            Z("#network-mtu-settings-cancel").click(Z.proxy(this, "cancel")), Z("#network-mtu-settings-apply").click(Z.proxy(this, "apply"));
        },
        enter: function() {
            Z("#network-mtu-settings-error").hide(), this.settings = G.ghost_settings || G.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            var e = this, t = e.settings.ethernet, n = Z(ne.render(e.ethernet_settings_template, t));
            Z("#network-mtu-settings-body").html(n), Z("#network-mtu-settings-input").focus(function() {
                Z("#network-mtu-settings-custom").prop("checked", !0);
            });
        },
        cancel: function() {
            Z("#network-mtu-settings-dialog").modal("hide");
        },
        apply: function() {
            function e(e) {
                T("#network-mtu-settings-error", e);
            }
            function t() {
                return G.apply_settings(n.settings).then(function() {
                    if (Z("#network-mtu-settings-dialog").modal("hide"), G.done) return G.done();
                }).fail(e);
            }
            var n = this, i = G.model;
            if (Z("#network-mtu-settings-auto").prop("checked")) n.settings.ethernet.mtu = 0; else {
                var o = Z("#network-mtu-settings-input").val();
                if (!/^[0-9]+$/.test(o)) return void e(re("MTU must be a positive number"));
                n.settings.ethernet.mtu = parseInt(o, 10);
            }
            S(i, t, {
                devices: I(G.connection)
            });
        }
    }, V.prototype = {
        _init: function() {
            this.id = "network-mac-settings-dialog", this.ethernet_settings_template = Z("#network-mac-settings-template").html(), 
            ne.parse(this.ethernet_settings_template);
        },
        setup: function() {
            Z("#network-mac-settings-cancel").click(Z.proxy(this, "cancel")), Z("#network-mac-settings-apply").click(Z.proxy(this, "apply"));
        },
        enter: function() {
            Z("#network-mac-settings-error").hide(), this.settings = V.ghost_settings || V.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            var e = this, t = e.settings.ethernet, n = Z(ne.render(e.ethernet_settings_template, t));
            Z("#network-mac-settings-body").html(n), U(Z("#network-mac-settings-menu"), Z("#network-mac-settings-input"), V.model);
        },
        cancel: function() {
            Z("#network-mac-settings-dialog").modal("hide");
        },
        apply: function() {
            function e(e) {
                T("#network-mac-settings-error", e);
            }
            function t() {
                return V.apply_settings(n.settings).then(function() {
                    if (Z("#network-mac-settings-dialog").modal("hide"), V.done) return V.done();
                }).fail(e);
            }
            var n = this, i = V.model;
            n.settings.ethernet || (n.settings.ethernet = {}), n.settings.ethernet.assigned_mac_address = Z("#network-mac-settings-input").val(), 
            S(i, t, {
                devices: I(V.connection)
            });
        }
    }, Z(K);
}, function(e, t) {
    e.exports = jQuery;
}, function(e, t) {
    e.exports = cockpit;
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e) {
            h = e;
        }
        function i(e) {
            return e.toString();
        }
        function o(e) {
            if (/^[0-9]+$/.test(e.trim())) return parseInt(e, 10);
            throw g.format(m("Invalid prefix $0"), e);
        }
        function r(e) {
            return e.toString();
        }
        function a(e) {
            if ("" === e) return 0;
            if (/^[0-9]+$/.test(e.trim())) return parseInt(e, 10);
            throw g.format(m("Invalid metric $0"), e);
        }
        function s(e) {
            return e.toString(10);
        }
        function c(e) {
            var t, n = [];
            if ("be" == h) for (t = 3; t >= 0; t--) n[t] = 255 & e, e >>>= 8; else for (t = 0; t < 4; t++) n[t] = 255 & e, 
            e >>>= 8;
            return n;
        }
        function l(e, t) {
            return 0 === e && t ? "" : c(e).map(s).join(".");
        }
        function d(e, t) {
            function n() {
                throw g.format(m("Invalid address $0"), e);
            }
            function i(e) {
                (isNaN(e) || e < 0 || e > 255) && n(), s = 256 * s + e;
            }
            if ("" === e && t) return 0;
            var o = e.split(".");
            4 != o.length && n();
            var r, a = o.map(function(e) {
                return /^[0-9]+$/.test(e.trim()) ? parseInt(e, 10) : void n();
            }), s = 0;
            if ("be" == h) for (r = 0; r < 4; r++) i(a[r]); else for (r = 3; r >= 0; r--) i(a[r]);
            return s;
        }
        function u(e) {
            function t() {
                throw g.format(m("Invalid prefix or netmask $0"), e);
            }
            if (/^[0-9]+$/.test(e.trim())) return parseInt(e, 10);
            var n = e.split(".");
            4 != n.length && t();
            var i, o = 0;
            for (i = 0; i < 4; i++) {
                var r = v[n[i].trim()];
                if (void 0 !== r) {
                    if (o += r, r < 8) break;
                } else t();
            }
            for (i += 1; i < 4; i++) /^0+$/.test(n[i].trim()) === !1 && t();
            return o;
        }
        function f(e, t) {
            for (var n = [], i = g.base64_decode(e), o = 0; o < 8; o++) n[o] = ((i[2 * o] << 8) + i[2 * o + 1]).toString(16);
            var r = n.join(":");
            return "0:0:0:0:0:0:0:0" == r && t ? "" : r;
        }
        function p(e, t) {
            function n() {
                throw g.format(m("Invalid address $0"), e);
            }
            if ("" === e && t) return g.base64_encode([ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]);
            var i = e.split(":");
            (i.length < 1 || i.length > 8) && n(), "" === i[0] && (i[0] = "0"), "" === i[i.length - 1] && (i[i.length - 1] = "0");
            var o, r, a, s = [], c = !1;
            for (r = 0, a = 0; r < i.length; r++, a++) if ("" === i[r]) for (c && n(), c = !0; a < r + (8 - i.length); ) s[2 * a] = s[2 * a + 1] = 0, 
            a++; else /^[0-9a-fA-F]+$/.test(i[r].trim()) || n(), o = parseInt(i[r], 16), (isNaN(o) || o < 0 || o > 65535) && n(), 
            s[2 * a] = o >> 8, s[2 * a + 1] = 255 & o;
            return 8 != a && n(), g.base64_encode(s);
        }
        var h, g = n(3), m = g.gettext, v = {
            "255": 8,
            "254": 7,
            "252": 6,
            "248": 5,
            "240": 4,
            "224": 3,
            "192": 2,
            "128": 1,
            "0": 0
        };
        e.exports = {
            set_byteorder: t,
            ip_prefix_to_text: i,
            ip_prefix_from_text: o,
            ip_metric_to_text: r,
            ip_metric_from_text: a,
            ip4_to_text: l,
            ip4_from_text: d,
            ip4_prefix_from_text: u,
            ip6_to_text: f,
            ip6_from_text: p
        };
    }();
}, function(e, t, n) {
    "use strict";
    function i(e) {
        if (e in a) return a[e];
        var t = document.createElement("div");
        t.innerHTML = e, o.translate(t);
        var n = t.innerHTML;
        return a[e] = n, n;
    }
    var o = n(3), r = n(6), a = {};
    e.exports = o.extend({}, r, {
        render: function(e, t, n) {
            return i(r.render(e, t, n));
        },
        to_html: function(e, t, n, o) {
            return i(r.to_html(e, t, n, o));
        },
        clearCache: function() {
            return a = {}, r.clearCache();
        }
    });
}, function(e, t, n) {
    var i, o;
    /*!
	 * mustache.js - Logic-less {{mustache}} templates with JavaScript
	 * http://github.com/janl/mustache.js
	 */
    !function(r, a) {
        if ("object" == typeof t && t) a(t); else {
            var s = {};
            a(s), i = s, o = "function" == typeof i ? i.call(t, n, t, e) : i, !(void 0 !== o && (e.exports = o));
        }
    }(this, function(e) {
        function t(e, t) {
            return p.call(e, t);
        }
        function n(e) {
            return !t(h, e);
        }
        function i(e) {
            return "function" == typeof e;
        }
        function o(e) {
            return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        }
        function r(e) {
            return String(e).replace(/[&<>"'\/]/g, function(e) {
                return v[e];
            });
        }
        function a(e) {
            if (!m(e) || 2 !== e.length) throw new Error("Invalid tags: " + e);
            return [ new RegExp(o(e[0]) + "\\s*"), new RegExp("\\s*" + o(e[1])) ];
        }
        function s(t, i) {
            function r() {
                if (S && !T) for (;C.length; ) delete M[C.pop()]; else C = [];
                S = !1, T = !1;
            }
            i = i || e.tags, t = t || "", "string" == typeof i && (i = i.split(x));
            for (var s, u, f, p, h, g, m = a(i), v = new d(t), y = [], M = [], C = [], S = !1, T = !1; !v.eos(); ) {
                if (s = v.pos, f = v.scanUntil(m[0])) for (var I = 0, N = f.length; I < N; ++I) p = f.charAt(I), 
                n(p) ? C.push(M.length) : T = !0, M.push([ "text", p, s, s + 1 ]), s += 1, "\n" === p && r();
                if (!v.scan(m[0])) break;
                if (S = !0, u = v.scan(w) || "name", v.scan(_), "=" === u ? (f = v.scanUntil(b), 
                v.scan(b), v.scanUntil(m[1])) : "{" === u ? (f = v.scanUntil(new RegExp("\\s*" + o("}" + i[1]))), 
                v.scan(k), v.scanUntil(m[1]), u = "&") : f = v.scanUntil(m[1]), !v.scan(m[1])) throw new Error("Unclosed tag at " + v.pos);
                if (h = [ u, f, s, v.pos ], M.push(h), "#" === u || "^" === u) y.push(h); else if ("/" === u) {
                    if (g = y.pop(), !g) throw new Error('Unopened section "' + f + '" at ' + s);
                    if (g[1] !== f) throw new Error('Unclosed section "' + g[1] + '" at ' + s);
                } else "name" === u || "{" === u || "&" === u ? T = !0 : "=" === u && (m = a(i = f.split(x)));
            }
            if (g = y.pop()) throw new Error('Unclosed section "' + g[1] + '" at ' + v.pos);
            return l(c(M));
        }
        function c(e) {
            for (var t, n, i = [], o = 0, r = e.length; o < r; ++o) t = e[o], t && ("text" === t[0] && n && "text" === n[0] ? (n[1] += t[1], 
            n[3] = t[3]) : (i.push(t), n = t));
            return i;
        }
        function l(e) {
            for (var t, n, i = [], o = i, r = [], a = 0, s = e.length; a < s; ++a) switch (t = e[a], 
            t[0]) {
              case "#":
              case "^":
                o.push(t), r.push(t), o = t[4] = [];
                break;

              case "/":
                n = r.pop(), n[5] = t[2], o = r.length > 0 ? r[r.length - 1][4] : i;
                break;

              default:
                o.push(t);
            }
            return i;
        }
        function d(e) {
            this.string = e, this.tail = e, this.pos = 0;
        }
        function u(e, t) {
            this.view = null == e ? {} : e, this.cache = {
                ".": this.view
            }, this.parent = t;
        }
        function f() {
            this.cache = {};
        }
        var p = RegExp.prototype.test, h = /\S/, g = Object.prototype.toString, m = Array.isArray || function(e) {
            return "[object Array]" === g.call(e);
        }, v = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;"
        }, _ = /\s*/, x = /\s+/, b = /\s*=/, k = /\s*\}/, w = /#|\^|\/|>|\{|&|=|!/;
        d.prototype.eos = function() {
            return "" === this.tail;
        }, d.prototype.scan = function(e) {
            var t = this.tail.match(e);
            if (t && 0 === t.index) {
                var n = t[0];
                return this.tail = this.tail.substring(n.length), this.pos += n.length, n;
            }
            return "";
        }, d.prototype.scanUntil = function(e) {
            var t, n = this.tail.search(e);
            switch (n) {
              case -1:
                t = this.tail, this.tail = "";
                break;

              case 0:
                t = "";
                break;

              default:
                t = this.tail.substring(0, n), this.tail = this.tail.substring(n);
            }
            return this.pos += t.length, t;
        }, u.prototype.push = function(e) {
            return new u(e, this);
        }, u.prototype.lookup = function(e) {
            var t;
            if (e in this.cache) t = this.cache[e]; else {
                for (var n = this; n; ) {
                    if (e.indexOf(".") > 0) {
                        t = n.view;
                        for (var o = e.split("."), r = 0; null != t && r < o.length; ) t = t[o[r++]];
                    } else t = n.view[e];
                    if (null != t) break;
                    n = n.parent;
                }
                this.cache[e] = t;
            }
            return i(t) && (t = t.call(this.view)), t;
        }, f.prototype.clearCache = function() {
            this.cache = {};
        }, f.prototype.parse = function(e, t) {
            var n = this.cache, i = n[e];
            return null == i && (i = n[e] = s(e, t)), i;
        }, f.prototype.render = function(e, t, n) {
            var i = this.parse(e), o = t instanceof u ? t : new u(t);
            return this.renderTokens(i, o, n, e);
        }, f.prototype.renderTokens = function(t, n, o, r) {
            function a(e) {
                return d.render(e, n, o);
            }
            for (var s, c, l = "", d = this, u = 0, f = t.length; u < f; ++u) switch (s = t[u], 
            s[0]) {
              case "#":
                if (c = n.lookup(s[1]), !c) continue;
                if (m(c)) for (var p = 0, h = c.length; p < h; ++p) l += this.renderTokens(s[4], n.push(c[p]), o, r); else if ("object" == typeof c || "string" == typeof c) l += this.renderTokens(s[4], n.push(c), o, r); else if (i(c)) {
                    if ("string" != typeof r) throw new Error("Cannot use higher-order sections without the original template");
                    c = c.call(n.view, r.slice(s[3], s[5]), a), null != c && (l += c);
                } else l += this.renderTokens(s[4], n, o, r);
                break;

              case "^":
                c = n.lookup(s[1]), (!c || m(c) && 0 === c.length) && (l += this.renderTokens(s[4], n, o, r));
                break;

              case ">":
                if (!o) continue;
                c = i(o) ? o(s[1]) : o[s[1]], null != c && (l += this.renderTokens(this.parse(c), n, o, c));
                break;

              case "&":
                c = n.lookup(s[1]), null != c && (l += c);
                break;

              case "name":
                c = n.lookup(s[1]), null != c && (l += e.escape(c));
                break;

              case "text":
                l += s[1];
            }
            return l;
        }, e.name = "mustache.js", e.version = "0.8.1", e.tags = [ "{{", "}}" ];
        var y = new f();
        e.clearCache = function() {
            return y.clearCache();
        }, e.parse = function(e, t) {
            return y.parse(e, t);
        }, e.render = function(e, t, n) {
            return y.render(e, t, n);
        }, e.to_html = function(t, n, o, r) {
            var a = e.render(t, n, o);
            return i(r) ? void r(a) : a;
        }, e.escape = r, e.Scanner = d, e.Context = u, e.Writer = f;
    });
}, function(e, t, n) {
    "use strict";
    function i(e, t, n, i) {
        function r() {
            _.width(v.width()), _.height(v.height());
        }
        function a(e) {
            p ? (p.getAxes().yaxis.options.max = e, d()) : g.yaxis.max = e;
        }
        function s() {
            m = !0, c();
        }
        function c() {
            m && v.width() > 0 && v.height() > 0 ? (p ? u() : (r(), p = o.plot(_, n, g)), x && window.clearInterval(x)) : x || (x = window.setInterval(c, 500));
        }
        function l() {
            m = !1;
        }
        function d() {
            p && m && (p.setData(n), i.setup_hook && i.setup_hook(p), p.setupGrid(), p.draw());
        }
        function u() {
            p && m && (r(), _.width() > 0 && _.height() > 0 && p.resize(), d());
        }
        function f() {
            o(h).trigger("destroyed"), o(window).off("resize", u), o(v).empty(), p = null;
        }
        var p, h, g = {
            colors: [ "#0099d3" ],
            legend: {
                show: !1
            },
            series: {
                shadowSize: 0,
                lines: {
                    lineWidth: 0,
                    fill: 1
                }
            },
            xaxis: {
                tickFormatter: function() {
                    return "";
                }
            },
            yaxis: {
                tickFormatter: function() {
                    return "";
                }
            },
            points: {
                radius: 0
            },
            grid: {
                borderWidth: 1,
                aboveData: !0,
                color: "black",
                borderColor: o.color.parse("black").scale("a", .22).toString(),
                labelMargin: 0
            }
        }, m = !1;
        o.extend(!0, g, i);
        var v = o(e), _ = o("<div/>"), x = null;
        return v.empty(), v.append(_), o(t).on("notify", d), o(window).on("resize", u), 
        c(), h = {
            start: s,
            stop: l,
            resize: u,
            element: _[0],
            set_yaxis_max: a,
            destroy: f
        };
    }
    var o = n(2), r = n(3);
    n(8), n(9), n(10);
    var a = {}, s = r.gettext;
    a.plot = function(e, t, n) {
        function i() {
            if (0 !== e.height() && 0 !== e.width()) {
                null === I && (I = o.plot(e, T, M)), I.setData(T);
                var t = I.getAxes();
                t.xaxis.options.min = y.beg * w, t.xaxis.options.max = (y.end - 2) * w, M.setup_hook && M.setup_hook(I), 
                t.xaxis.show = !0, t.xaxis.used = !0, t.yaxis.show = !0, t.yaxis.used = !0, I.setupGrid(), 
                I.draw();
            }
        }
        function a() {
            N || (N = !0, window.setTimeout(function() {
                N = !1, i();
            }, 0));
        }
        function s() {
            y.walk();
        }
        function c() {
            y.move(y.beg, y.end);
        }
        function l(e, t) {
            I && I.clearSelection(!0), w = 1e3 * Math.ceil(e / 1e3);
            var n;
            n = void 0 !== t ? new Date().getTime() - 1e3 * t : 0;
            var i = -Math.ceil((1e3 * e + n) / w), s = -Math.floor(n / w);
            if (y && y.interval == w) y.move(i, s); else {
                y && y.close(), y = r.grid(w, i, s), D++;
                for (var c = 0; c < S.length; c++) S[c].reset();
                D--, d(), o(y).on("notify", function(e, t, n) {
                    a();
                });
            }
        }
        function d() {
            0 === D && y.sync();
        }
        function u() {
            y.close();
            for (var t = 0; t < S.length; t++) S[t].stop();
            M = {}, S = [], T = [], I = null, o(e).empty(), o(e).data("flot_data", null);
        }
        function f() {
            0 !== e.height() && 0 !== e.width() && (I && I.resize(), a());
        }
        function p(e) {
            M = e, I = null;
        }
        function h() {
            return M;
        }
        function g(e, t) {
            function n() {
                m && m.close();
            }
            function i() {
                T.push(t);
            }
            function s() {
                var e = T.indexOf(t);
                e >= 0 && T.splice(e, 1);
            }
            function c() {
                var e = T.indexOf(t);
                e >= 0 && (T.splice(e, 1), T.push(t));
            }
            function l() {
                n(), s(), a();
            }
            function u(t) {
                return {
                    name: t,
                    units: e.units,
                    derive: e.derive
                };
            }
            function f(e) {
                var t, n;
                if (!e) return 0;
                if (void 0 !== e.length) {
                    for (n = 0, t = 0; t < e.length; t++) n += f(e[t]);
                    return n;
                }
                return e;
            }
            function p() {
                function n() {
                    m.archives && !C.archives && (C.archives = !0, o(C).triggerHandler("changed"));
                }
                m && m.close(), m = r.metrics(w, _);
                var i = y.add(m, []), a = e.factor || 1;
                t.data = y.add(function(e, t, n) {
                    for (var o = 0; o < n; o++) e[t + o] = [ (y.beg + t + o) * w, f(i[t + o]) * a ];
                }), o(m).on("changed", n), n(), d();
            }
            function h(e, n) {
                return !(!n || n.series.data != t.data);
            }
            function g(e) {
                o(v).triggerHandler("hover", [ e ]);
            }
            var m = null, v = {
                options: t,
                move_to_front: c,
                remove: l
            };
            S.push({
                stop: n,
                reset: p,
                hover_hit: h,
                hover: g
            });
            var _ = [];
            return e.direct && _.push({
                source: "direct",
                archive_source: "pcp-archive",
                metrics: e.direct.map(u),
                instances: e.instances,
                "omit-instances": e["omit-instances"],
                host: e.host
            }), e.internal && _.push({
                source: "internal",
                metrics: e.internal.map(u),
                instances: e.instances,
                "omit-instances": e["omit-instances"],
                host: e.host
            }), p(), i(), v;
        }
        function m(e, t) {
            function n() {
                f && f.close();
            }
            function i(t) {
                return {
                    name: t,
                    units: e.units,
                    derive: e.derive
                };
            }
            function a() {
                function e() {
                    f.archives && !C.archives && (C.archives = !0, o(C).triggerHandler("changed"));
                }
                f && f.close(), f = r.metrics(w, h), o(f).on("changed", e), e(), D++;
                for (var t in g) g[t].reset();
                D--, d();
            }
            function s(n, i) {
                function r() {
                    s = y.add(f, [ "a", n ]), c.data = y.add(function(e, t, n) {
                        for (var i = 0; i < n; i++) {
                            var o = (s[t + i] || 0) * l, r = (y.beg + t + i) * w, a = 0;
                            p && (a = p.data[t + i][1] ? p.data[t + i][1] : p.data[t + i][2]), Math.abs(o) > u ? (e[t + i] = [ r, a + o, a ], 
                            e[t + i - 1] && null === e[t + i - 1][1] && (e[t + i - 1][1] = e[t + i - 1][2])) : (e[t + i] = [ r, null, a ], 
                            e[t + i - 1] && null !== e[t + i - 1][1] && (e[t + i - 1][1] = e[t + i - 1][2]));
                        }
                    }), d();
                }
                function a() {
                    y.remove(s), y.remove(c.data);
                    var e = T.indexOf(c);
                    e >= 0 && T.splice(e, 1);
                }
                if (!g[n]) {
                    var s, c = o.extend({
                        selector: i
                    }, t), l = e.factor || 1, u = e.threshold || 0, p = m;
                    m = c, g[n] = c, c.reset = r, c.remove = a, r(), T.push(c);
                }
            }
            function c() {
                for (var e in g) g[e].remove();
                g = {}, m = null;
            }
            function l(e, t) {
                var n, i;
                if (!y) return !1;
                i = Math.round(e.x / w) - y.beg, i < 0 && (i = 0);
                for (n in g) {
                    var o = g[n].data;
                    if (o[i] && o[i][1] && o[i][2] <= e.y && e.y <= o[i][1]) return g[n].selector || n;
                }
                return !1;
            }
            function u(e) {
                o(p).triggerHandler("hover", [ e ]);
            }
            var f = null, p = {
                add_instance: s,
                clear_instances: c
            };
            S.push({
                stop: n,
                reset: a,
                hover_hit: l,
                hover: u
            });
            var h = [];
            e.direct && h.push({
                source: "direct",
                archive_source: "pcp-archive",
                metrics: [ i(e.direct) ],
                metrics_path_names: [ "a" ],
                instances: e.instances,
                "omit-instances": e["omit-instances"],
                host: e.host
            }), e.internal && h.push({
                source: "internal",
                metrics: [ i(e.internal) ],
                metrics_path_names: [ "a" ],
                instances: e.instances,
                "omit-instances": e["omit-instances"],
                host: e.host
            });
            var g = {}, m = null;
            return a(), p;
        }
        function v(e, t) {
            A != e ? (A && A.hover(!1), A = e, z = t, A && A.hover(z)) : z != t && (z = t, A && A.hover(z));
        }
        function _(e, t, n) {
            for (var i = null, o = !1, r = 0; r < S.length; r++) if (o = S[r].hover_hit(t, n)) {
                i = S[r];
                break;
            }
            v(i, o);
        }
        function x(e) {
            v(null, !1);
        }
        function b(e, t) {
            t && o(C).triggerHandler("zoomstart", []);
        }
        function k(e, t) {
            I.clearSelection(!0), o(C).triggerHandler("zoom", [ (t.xaxis.to - t.xaxis.from) / 1e3, t.xaxis.to / 1e3 ]);
        }
        var w, y, M = {}, C = {}, S = [], T = [], I = null, N = !1, D = 0, A = null, z = !1;
        return o(e).on("plothover", _), o(e).on("mouseleave", x), o(e).on("plotselecting", b), 
        o(e).on("plotselected", k), o(e).data("flot_data", T), l(t, n), o.extend(C, {
            archives: !1,
            start_walking: s,
            stop_walking: c,
            refresh: a,
            reset: l,
            destroy: u,
            resize: f,
            set_options: p,
            get_options: h,
            add_metrics_sum_series: g,
            add_metrics_stacked_instances_series: m
        }), C;
    };
    var c = [ "#006bb4", "#008ff0", "#2daaff", "#69c2ff", "#a5daff", "#e1f3ff", "#00243c", "#004778" ];
    a.plot_simple_template = function() {
        return {
            colors: c,
            legend: {
                show: !1
            },
            series: {
                shadowSize: 0,
                lines: {
                    lineWidth: 2,
                    fill: .4
                }
            },
            xaxis: {
                tickLength: 0,
                mode: "time",
                tickFormatter: a.format_date_tick,
                minTickSize: [ 1, "minute" ],
                reserveSpace: !1
            },
            yaxis: {
                tickColor: "#d1d1d1",
                min: 0
            },
            points: {
                radius: 0
            },
            grid: {
                borderWidth: 1,
                aboveData: !1,
                color: "black",
                borderColor: o.color.parse("black").scale("a", .22).toString(),
                labelMargin: 0
            }
        };
    }, a.memory_ticks = function(e) {
        for (var t = Math.pow(2, Math.ceil(Math.log(e.max / 5) / Math.LN2)), n = [], i = 0; i < e.max; i += t) n.push(i);
        return n;
    };
    var l = [ s("month-name", "Jan"), s("month-name", "Feb"), s("month-name", "Mar"), s("month-name", "Apr"), s("month-name", "May"), s("month-name", "Jun"), s("month-name", "Jul"), s("month-name", "Aug"), s("month-name", "Sep"), s("month-name", "Oct"), s("month-name", "Nov"), s("month-name", "Dec") ];
    a.format_date_tick = function(e, t) {
        function n(e) {
            var t = e.toFixed();
            return 1 == t.length && (t = "0" + t), t;
        }
        var i, o, r = 0, a = 1, s = 2, c = 3, d = t.tickSize[1];
        o = "minute" == d || "hour" == d ? c : "day" == d ? s : "month" == d ? a : r;
        var u = new Date(), f = new Date(t.min);
        i = r, f.getFullYear() == u.getFullYear() && (i = a, f.getMonth() == u.getMonth() && (i = s, 
        f.getDate() == u.getDate() && (i = c))), i > o && (i = o), i == s && (i = a);
        var p = new Date(e), h = " ";
        return r >= i && r <= o && (h += p.getFullYear().toFixed() + " "), a >= i && a <= o && (h += l[p.getMonth()] + " "), 
        s >= i && s <= o && (h += p.getDate().toFixed() + " "), c >= i && c <= o && (h += n(p.getHours()) + ":" + n(p.getMinutes()) + " "), 
        h.substr(0, h.length - 1);
    }, a.bytes_tick_unit = function(e) {
        return r.format_bytes(e.max, 1024, !0)[1];
    }, a.format_bytes_tick_no_unit = function(e, t) {
        return r.format_bytes(e, a.bytes_tick_unit(t), !0)[0];
    }, a.format_bytes_tick = function(e, t) {
        return r.format_bytes(e, 1024);
    }, a.bytes_per_sec_tick_unit = function(e) {
        return r.format_bytes_per_sec(e.max, 1024, !0)[1];
    }, a.format_bytes_per_sec_tick_no_unit = function(e, t) {
        return r.format_bytes_per_sec(e, a.bytes_per_sec_tick_unit(t), !0)[0];
    }, a.format_bytes_per_sec_tick = function(e, t) {
        return r.format_bytes_per_sec(e, 1024);
    }, a.bits_per_sec_tick_unit = function(e) {
        return r.format_bits_per_sec(8 * e.max, 1e3, !0)[1];
    }, a.format_bits_per_sec_tick_no_unit = function(e, t) {
        return r.format_bits_per_sec(8 * e, a.bits_per_sec_tick_unit(t), !0)[0];
    }, a.format_bits_per_sec_tick = function(e, t) {
        return r.format_bits_per_sec(8 * e, 1e3);
    }, a.setup_plot_controls = function(e, t, n) {
        function i() {
            void 0 === p && (n.forEach(function(e) {
                e.stop_walking();
            }), p = new Date().getTime() / 1e3, l());
        }
        function a(e, t) {
            v.push(m), m = e, p = t, u();
        }
        function s() {
            var e = v.pop();
            if (void 0 === e) {
                var t;
                for (t = 0; t < g.length - 1 && !(g[t] > m); t++) ;
                e = g[t];
            }
            void 0 !== p && (p += (e - m) / 2), m = e, u();
        }
        function c(e) {
            var t;
            return e >= 31536e3 ? (t = Math.ceil(e / 31536e3), r.format(r.ngettext("$0 year", "$0 years", t), t)) : e >= 2592e3 ? (t = Math.ceil(e / 2592e3), 
            r.format(r.ngettext("$0 month", "$0 months", t), t)) : e >= 604800 ? (t = Math.ceil(e / 604800), 
            r.format(r.ngettext("$0 week", "$0 weeks", t), t)) : e >= 86400 ? (t = Math.ceil(e / 86400), 
            r.format(r.ngettext("$0 day", "$0 days", t), t)) : e >= 3600 ? (t = Math.ceil(e / 3600), 
            r.format(r.ngettext("$0 hour", "$0 hours", t), t)) : (t = Math.ceil(e / 60), r.format(r.ngettext("$0 minute", "$0 minutes", t), t));
        }
        function l() {
            t.find('[data-action="scroll-right"]').attr("disabled", void 0 === p), t.find('[data-action="zoom-out"]').attr("disabled", m >= g[g.length - 1]);
        }
        function d() {
            var t;
            e.hasClass("show-zoom-controls") && m > h ? (e.addClass("show-zoom-cursor"), t = "x") : (e.removeClass("show-zoom-cursor"), 
            t = null), n.forEach(function(e) {
                var n = e.get_options();
                n.selection && n.selection.mode == t || (n.selection = {
                    mode: t,
                    color: "#d4edfa"
                }, e.set_options(n), e.refresh());
            });
        }
        function u() {
            m < h && (p += (h - m) / 2, m = h), p >= new Date().getTime() / 1e3 - 10 && (p = void 0), 
            t.find(".dropdown-toggle span:first-child").text(c(m)), n.forEach(function(t) {
                function n() {
                    t.archives && (e.addClass("show-zoom-controls"), d());
                }
                t.stop_walking(), t.reset(m, p), t.refresh(), void 0 === p && t.start_walking(), 
                o(t).on("changed", n), n();
            }), l(), d();
        }
        function f(e) {
            void 0 === e && (e = []), n = e, n.forEach(function(e) {
                o(e).on("zoomstart", function(e) {
                    i();
                }), o(e).on("zoom", function(e, t, n) {
                    a(t, n);
                });
            }), u();
        }
        var p, h = 300, g = [ 300, 3600, 21600, 86400, 604800, 2592e3, 31536e3 ], m = 300, v = [];
        return t.find("[data-range]").click(function() {
            v = [], m = parseInt(o(this).attr("data-range"), 10), u();
        }), t.find('[data-action="goto-now"]').click(function() {
            p = void 0, u();
        }), t.find('[data-action="scroll-left"]').click(function() {
            var e = m / 10;
            void 0 === p && (p = new Date().getTime() / 1e3), p -= e, u();
        }), t.find('[data-action="scroll-right"]').click(function() {
            var e = m / 10;
            void 0 !== p && (p += e, u());
        }), t.find('[data-action="zoom-out"]').click(function() {
            s();
        }), f(n), {
            reset: f
        };
    }, a.setup_complicated_plot = function(e, t, n, o) {
        function r(e, t) {
            return e.add(function(e, n, i) {
                for (var o = 0; o < i; o++) e[n + o] = [ o, t[n + o] || 0 ];
            });
        }
        function a(e, t, n) {
            return e.add(function(e, i, o) {
                var r, a, s, c;
                for (r = 0; r < o; r++) s = 0, n && (a = n[i + r], s = a ? a[1] : 0), c = t[i + r] || 0, 
                e[i + r] = [ r, c + s, s ];
            });
        }
        var s = null;
        return n.forEach(function(e, n) {
            o.x_rh_stack_graphs ? e.data = a(t, e.row, s) : e.data = r(t, e.row), s = e.data;
        }), i(e, t, n, o);
    }, e.exports = a;
}, function(e, t) {
    !function(e) {
        e.color = {}, e.color.make = function(t, n, i, o) {
            var r = {};
            return r.r = t || 0, r.g = n || 0, r.b = i || 0, r.a = null != o ? o : 1, r.add = function(e, t) {
                for (var n = 0; n < e.length; ++n) r[e.charAt(n)] += t;
                return r.normalize();
            }, r.scale = function(e, t) {
                for (var n = 0; n < e.length; ++n) r[e.charAt(n)] *= t;
                return r.normalize();
            }, r.toString = function() {
                return r.a >= 1 ? "rgb(" + [ r.r, r.g, r.b ].join(",") + ")" : "rgba(" + [ r.r, r.g, r.b, r.a ].join(",") + ")";
            }, r.normalize = function() {
                function e(e, t, n) {
                    return t < e ? e : t > n ? n : t;
                }
                return r.r = e(0, parseInt(r.r), 255), r.g = e(0, parseInt(r.g), 255), r.b = e(0, parseInt(r.b), 255), 
                r.a = e(0, r.a, 1), r;
            }, r.clone = function() {
                return e.color.make(r.r, r.b, r.g, r.a);
            }, r.normalize();
        }, e.color.extract = function(t, n) {
            var i;
            do {
                if (i = t.css(n).toLowerCase(), "" != i && "transparent" != i) break;
                t = t.parent();
            } while (t.length && !e.nodeName(t.get(0), "body"));
            return "rgba(0, 0, 0, 0)" == i && (i = "transparent"), e.color.parse(i);
        }, e.color.parse = function(n) {
            var i, o = e.color.make;
            if (i = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(n)) return o(parseInt(i[1], 10), parseInt(i[2], 10), parseInt(i[3], 10));
            if (i = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n)) return o(parseInt(i[1], 10), parseInt(i[2], 10), parseInt(i[3], 10), parseFloat(i[4]));
            if (i = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(n)) return o(2.55 * parseFloat(i[1]), 2.55 * parseFloat(i[2]), 2.55 * parseFloat(i[3]));
            if (i = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n)) return o(2.55 * parseFloat(i[1]), 2.55 * parseFloat(i[2]), 2.55 * parseFloat(i[3]), parseFloat(i[4]));
            if (i = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(n)) return o(parseInt(i[1], 16), parseInt(i[2], 16), parseInt(i[3], 16));
            if (i = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(n)) return o(parseInt(i[1] + i[1], 16), parseInt(i[2] + i[2], 16), parseInt(i[3] + i[3], 16));
            var r = e.trim(n).toLowerCase();
            return "transparent" == r ? o(255, 255, 255, 0) : (i = t[r] || [ 0, 0, 0 ], o(i[0], i[1], i[2]));
        };
        var t = {
            aqua: [ 0, 255, 255 ],
            azure: [ 240, 255, 255 ],
            beige: [ 245, 245, 220 ],
            black: [ 0, 0, 0 ],
            blue: [ 0, 0, 255 ],
            brown: [ 165, 42, 42 ],
            cyan: [ 0, 255, 255 ],
            darkblue: [ 0, 0, 139 ],
            darkcyan: [ 0, 139, 139 ],
            darkgrey: [ 169, 169, 169 ],
            darkgreen: [ 0, 100, 0 ],
            darkkhaki: [ 189, 183, 107 ],
            darkmagenta: [ 139, 0, 139 ],
            darkolivegreen: [ 85, 107, 47 ],
            darkorange: [ 255, 140, 0 ],
            darkorchid: [ 153, 50, 204 ],
            darkred: [ 139, 0, 0 ],
            darksalmon: [ 233, 150, 122 ],
            darkviolet: [ 148, 0, 211 ],
            fuchsia: [ 255, 0, 255 ],
            gold: [ 255, 215, 0 ],
            green: [ 0, 128, 0 ],
            indigo: [ 75, 0, 130 ],
            khaki: [ 240, 230, 140 ],
            lightblue: [ 173, 216, 230 ],
            lightcyan: [ 224, 255, 255 ],
            lightgreen: [ 144, 238, 144 ],
            lightgrey: [ 211, 211, 211 ],
            lightpink: [ 255, 182, 193 ],
            lightyellow: [ 255, 255, 224 ],
            lime: [ 0, 255, 0 ],
            magenta: [ 255, 0, 255 ],
            maroon: [ 128, 0, 0 ],
            navy: [ 0, 0, 128 ],
            olive: [ 128, 128, 0 ],
            orange: [ 255, 165, 0 ],
            pink: [ 255, 192, 203 ],
            purple: [ 128, 0, 128 ],
            violet: [ 128, 0, 128 ],
            red: [ 255, 0, 0 ],
            silver: [ 192, 192, 192 ],
            white: [ 255, 255, 255 ],
            yellow: [ 255, 255, 0 ]
        };
    }(jQuery), function(e) {
        function t(t, n) {
            var i = n.children("." + t)[0];
            if (null == i && (i = document.createElement("canvas"), i.className = t, e(i).css({
                direction: "ltr",
                position: "absolute",
                left: 0,
                top: 0
            }).appendTo(n), !i.getContext)) {
                if (!window.G_vmlCanvasManager) throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.");
                i = window.G_vmlCanvasManager.initElement(i);
            }
            this.element = i;
            var o = this.context = i.getContext("2d"), r = window.devicePixelRatio || 1, a = o.webkitBackingStorePixelRatio || o.mozBackingStorePixelRatio || o.msBackingStorePixelRatio || o.oBackingStorePixelRatio || o.backingStorePixelRatio || 1;
            this.pixelRatio = r / a, this.resize(n.width(), n.height()), this.textContainer = null, 
            this.text = {}, this._textCache = {};
        }
        function n(n, o, r, a) {
            function s(e, t) {
                t = [ me ].concat(t);
                for (var n = 0; n < e.length; ++n) e[n].apply(this, t);
            }
            function c() {
                for (var n = {
                    Canvas: t
                }, i = 0; i < a.length; ++i) {
                    var o = a[i];
                    o.init(me, n), o.options && e.extend(!0, oe, o.options);
                }
            }
            function l(t) {
                e.extend(!0, oe, t), t && t.colors && (oe.colors = t.colors), null == oe.xaxis.color && (oe.xaxis.color = e.color.parse(oe.grid.color).scale("a", .22).toString()), 
                null == oe.yaxis.color && (oe.yaxis.color = e.color.parse(oe.grid.color).scale("a", .22).toString()), 
                null == oe.xaxis.tickColor && (oe.xaxis.tickColor = oe.grid.tickColor || oe.xaxis.color), 
                null == oe.yaxis.tickColor && (oe.yaxis.tickColor = oe.grid.tickColor || oe.yaxis.color), 
                null == oe.grid.borderColor && (oe.grid.borderColor = oe.grid.color), null == oe.grid.tickColor && (oe.grid.tickColor = e.color.parse(oe.grid.color).scale("a", .22).toString());
                var i, o, r, a = n.css("font-size"), c = a ? +a.replace("px", "") : 13, l = {
                    style: n.css("font-style"),
                    size: Math.round(.8 * c),
                    variant: n.css("font-variant"),
                    weight: n.css("font-weight"),
                    family: n.css("font-family")
                };
                for (r = oe.xaxes.length || 1, i = 0; i < r; ++i) o = oe.xaxes[i], o && !o.tickColor && (o.tickColor = o.color), 
                o = e.extend(!0, {}, oe.xaxis, o), oe.xaxes[i] = o, o.font && (o.font = e.extend({}, l, o.font), 
                o.font.color || (o.font.color = o.color), o.font.lineHeight || (o.font.lineHeight = Math.round(1.15 * o.font.size)));
                for (r = oe.yaxes.length || 1, i = 0; i < r; ++i) o = oe.yaxes[i], o && !o.tickColor && (o.tickColor = o.color), 
                o = e.extend(!0, {}, oe.yaxis, o), oe.yaxes[i] = o, o.font && (o.font = e.extend({}, l, o.font), 
                o.font.color || (o.font.color = o.color), o.font.lineHeight || (o.font.lineHeight = Math.round(1.15 * o.font.size)));
                for (oe.xaxis.noTicks && null == oe.xaxis.ticks && (oe.xaxis.ticks = oe.xaxis.noTicks), 
                oe.yaxis.noTicks && null == oe.yaxis.ticks && (oe.yaxis.ticks = oe.yaxis.noTicks), 
                oe.x2axis && (oe.xaxes[1] = e.extend(!0, {}, oe.xaxis, oe.x2axis), oe.xaxes[1].position = "top", 
                null == oe.x2axis.min && (oe.xaxes[1].min = null), null == oe.x2axis.max && (oe.xaxes[1].max = null)), 
                oe.y2axis && (oe.yaxes[1] = e.extend(!0, {}, oe.yaxis, oe.y2axis), oe.yaxes[1].position = "right", 
                null == oe.y2axis.min && (oe.yaxes[1].min = null), null == oe.y2axis.max && (oe.yaxes[1].max = null)), 
                oe.grid.coloredAreas && (oe.grid.markings = oe.grid.coloredAreas), oe.grid.coloredAreasColor && (oe.grid.markingsColor = oe.grid.coloredAreasColor), 
                oe.lines && e.extend(!0, oe.series.lines, oe.lines), oe.points && e.extend(!0, oe.series.points, oe.points), 
                oe.bars && e.extend(!0, oe.series.bars, oe.bars), null != oe.shadowSize && (oe.series.shadowSize = oe.shadowSize), 
                null != oe.highlightColor && (oe.series.highlightColor = oe.highlightColor), i = 0; i < oe.xaxes.length; ++i) m(de, i + 1).options = oe.xaxes[i];
                for (i = 0; i < oe.yaxes.length; ++i) m(ue, i + 1).options = oe.yaxes[i];
                for (var d in ge) oe.hooks[d] && oe.hooks[d].length && (ge[d] = ge[d].concat(oe.hooks[d]));
                s(ge.processOptions, [ oe ]);
            }
            function d(e) {
                ie = u(e), v(), _();
            }
            function u(t) {
                for (var n = [], i = 0; i < t.length; ++i) {
                    var o = e.extend(!0, {}, oe.series);
                    null != t[i].data ? (o.data = t[i].data, delete t[i].data, e.extend(!0, o, t[i]), 
                    t[i].data = o.data) : o.data = t[i], n.push(o);
                }
                return n;
            }
            function f(e, t) {
                var n = e[t + "axis"];
                return "object" == typeof n && (n = n.n), "number" != typeof n && (n = 1), n;
            }
            function p() {
                return e.grep(de.concat(ue), function(e) {
                    return e;
                });
            }
            function h(e) {
                var t, n, i = {};
                for (t = 0; t < de.length; ++t) n = de[t], n && n.used && (i["x" + n.n] = n.c2p(e.left));
                for (t = 0; t < ue.length; ++t) n = ue[t], n && n.used && (i["y" + n.n] = n.c2p(e.top));
                return void 0 !== i.x1 && (i.x = i.x1), void 0 !== i.y1 && (i.y = i.y1), i;
            }
            function g(e) {
                var t, n, i, o = {};
                for (t = 0; t < de.length; ++t) if (n = de[t], n && n.used && (i = "x" + n.n, null == e[i] && 1 == n.n && (i = "x"), 
                null != e[i])) {
                    o.left = n.p2c(e[i]);
                    break;
                }
                for (t = 0; t < ue.length; ++t) if (n = ue[t], n && n.used && (i = "y" + n.n, null == e[i] && 1 == n.n && (i = "y"), 
                null != e[i])) {
                    o.top = n.p2c(e[i]);
                    break;
                }
                return o;
            }
            function m(t, n) {
                return t[n - 1] || (t[n - 1] = {
                    n: n,
                    direction: t == de ? "x" : "y",
                    options: e.extend(!0, {}, t == de ? oe.xaxis : oe.yaxis)
                }), t[n - 1];
            }
            function v() {
                var t, n = ie.length, i = -1;
                for (t = 0; t < ie.length; ++t) {
                    var o = ie[t].color;
                    null != o && (n--, "number" == typeof o && o > i && (i = o));
                }
                n <= i && (n = i + 1);
                var r, a = [], s = oe.colors, c = s.length, l = 0;
                for (t = 0; t < n; t++) r = e.color.parse(s[t % c] || "#666"), t % c == 0 && t && (l = l >= 0 ? l < .5 ? -l - .2 : 0 : -l), 
                a[t] = r.scale("rgb", 1 + l);
                var d, u = 0;
                for (t = 0; t < ie.length; ++t) {
                    if (d = ie[t], null == d.color ? (d.color = a[u].toString(), ++u) : "number" == typeof d.color && (d.color = a[d.color].toString()), 
                    null == d.lines.show) {
                        var p, h = !0;
                        for (p in d) if (d[p] && d[p].show) {
                            h = !1;
                            break;
                        }
                        h && (d.lines.show = !0);
                    }
                    null == d.lines.zero && (d.lines.zero = !!d.lines.fill), d.xaxis = m(de, f(d, "x")), 
                    d.yaxis = m(ue, f(d, "y"));
                }
            }
            function _() {
                function t(e, t, n) {
                    t < e.datamin && t != -_ && (e.datamin = t), n > e.datamax && n != _ && (e.datamax = n);
                }
                var n, i, o, r, a, c, l, d, u, f, h, g, m = Number.POSITIVE_INFINITY, v = Number.NEGATIVE_INFINITY, _ = Number.MAX_VALUE;
                for (e.each(p(), function(e, t) {
                    t.datamin = m, t.datamax = v, t.used = !1;
                }), n = 0; n < ie.length; ++n) a = ie[n], a.datapoints = {
                    points: []
                }, s(ge.processRawData, [ a, a.data, a.datapoints ]);
                for (n = 0; n < ie.length; ++n) {
                    if (a = ie[n], h = a.data, g = a.datapoints.format, !g) {
                        if (g = [], g.push({
                            x: !0,
                            number: !0,
                            required: !0
                        }), g.push({
                            y: !0,
                            number: !0,
                            required: !0
                        }), a.bars.show || a.lines.show && a.lines.fill) {
                            var x = !!(a.bars.show && a.bars.zero || a.lines.show && a.lines.zero);
                            g.push({
                                y: !0,
                                number: !0,
                                required: !1,
                                defaultValue: 0,
                                autoscale: x
                            }), a.bars.horizontal && (delete g[g.length - 1].y, g[g.length - 1].x = !0);
                        }
                        a.datapoints.format = g;
                    }
                    if (null == a.datapoints.pointsize) {
                        a.datapoints.pointsize = g.length, l = a.datapoints.pointsize, c = a.datapoints.points;
                        var b = a.lines.show && a.lines.steps;
                        for (a.xaxis.used = a.yaxis.used = !0, i = o = 0; i < h.length; ++i, o += l) {
                            f = h[i];
                            var k = null == f;
                            if (!k) for (r = 0; r < l; ++r) d = f[r], u = g[r], u && (u.number && null != d && (d = +d, 
                            isNaN(d) ? d = null : d == 1 / 0 ? d = _ : d == -(1 / 0) && (d = -_)), null == d && (u.required && (k = !0), 
                            null != u.defaultValue && (d = u.defaultValue))), c[o + r] = d;
                            if (k) for (r = 0; r < l; ++r) d = c[o + r], null != d && (u = g[r], u.autoscale !== !1 && (u.x && t(a.xaxis, d, d), 
                            u.y && t(a.yaxis, d, d))), c[o + r] = null; else if (b && o > 0 && null != c[o - l] && c[o - l] != c[o] && c[o - l + 1] != c[o + 1]) {
                                for (r = 0; r < l; ++r) c[o + l + r] = c[o + r];
                                c[o + 1] = c[o - l + 1], o += l;
                            }
                        }
                    }
                }
                for (n = 0; n < ie.length; ++n) a = ie[n], s(ge.processDatapoints, [ a, a.datapoints ]);
                for (n = 0; n < ie.length; ++n) {
                    a = ie[n], c = a.datapoints.points, l = a.datapoints.pointsize, g = a.datapoints.format;
                    var w = m, y = m, M = v, C = v;
                    for (i = 0; i < c.length; i += l) if (null != c[i]) for (r = 0; r < l; ++r) d = c[i + r], 
                    u = g[r], u && u.autoscale !== !1 && d != _ && d != -_ && (u.x && (d < w && (w = d), 
                    d > M && (M = d)), u.y && (d < y && (y = d), d > C && (C = d)));
                    if (a.bars.show) {
                        var S;
                        switch (a.bars.align) {
                          case "left":
                            S = 0;
                            break;

                          case "right":
                            S = -a.bars.barWidth;
                            break;

                          default:
                            S = -a.bars.barWidth / 2;
                        }
                        a.bars.horizontal ? (y += S, C += S + a.bars.barWidth) : (w += S, M += S + a.bars.barWidth);
                    }
                    t(a.xaxis, w, M), t(a.yaxis, y, C);
                }
                e.each(p(), function(e, t) {
                    t.datamin == m && (t.datamin = null), t.datamax == v && (t.datamax = null);
                });
            }
            function x() {
                n.css("padding", 0).children().filter(function() {
                    return !e(this).hasClass("flot-overlay") && !e(this).hasClass("flot-base");
                }).remove(), "static" == n.css("position") && n.css("position", "relative"), re = new t("flot-base", n), 
                ae = new t("flot-overlay", n), ce = re.context, le = ae.context, se = e(ae.element).unbind();
                var i = n.data("plot");
                i && (i.shutdown(), ae.clear()), n.data("plot", me);
            }
            function b() {
                oe.grid.hoverable && (se.mousemove(Y), se.bind("mouseleave", q)), oe.grid.clickable && se.click(G), 
                s(ge.bindEvents, [ se ]);
            }
            function k() {
                _e && clearTimeout(_e), se.unbind("mousemove", Y), se.unbind("mouseleave", q), se.unbind("click", G), 
                s(ge.shutdown, [ se ]);
            }
            function w(e) {
                function t(e) {
                    return e;
                }
                var n, i, o = e.options.transform || t, r = e.options.inverseTransform;
                "x" == e.direction ? (n = e.scale = pe / Math.abs(o(e.max) - o(e.min)), i = Math.min(o(e.max), o(e.min))) : (n = e.scale = he / Math.abs(o(e.max) - o(e.min)), 
                n = -n, i = Math.max(o(e.max), o(e.min))), o == t ? e.p2c = function(e) {
                    return (e - i) * n;
                } : e.p2c = function(e) {
                    return (o(e) - i) * n;
                }, r ? e.c2p = function(e) {
                    return r(i + e / n);
                } : e.c2p = function(e) {
                    return i + e / n;
                };
            }
            function y(e) {
                for (var t = e.options, n = e.ticks || [], i = t.labelWidth || 0, o = t.labelHeight || 0, r = i || ("x" == e.direction ? Math.floor(re.width / (n.length || 1)) : null), a = e.direction + "Axis " + e.direction + e.n + "Axis", s = "flot-" + e.direction + "-axis flot-" + e.direction + e.n + "-axis " + a, c = t.font || "flot-tick-label tickLabel", l = 0; l < n.length; ++l) {
                    var d = n[l];
                    if (d.label) {
                        var u = re.getTextInfo(s, d.label, c, null, r);
                        i = Math.max(i, u.width), o = Math.max(o, u.height);
                    }
                }
                e.labelWidth = t.labelWidth || i, e.labelHeight = t.labelHeight || o;
            }
            function M(t) {
                var n = t.labelWidth, i = t.labelHeight, o = t.options.position, r = "x" === t.direction, a = t.options.tickLength, s = oe.grid.axisMargin, c = oe.grid.labelMargin, l = !0, d = !0, u = !0, f = !1;
                e.each(r ? de : ue, function(e, n) {
                    n && (n.show || n.reserveSpace) && (n === t ? f = !0 : n.options.position === o && (f ? d = !1 : l = !1), 
                    f || (u = !1));
                }), d && (s = 0), null == a && (a = u ? "full" : 5), isNaN(+a) || (c += +a), r ? (i += c, 
                "bottom" == o ? (fe.bottom += i + s, t.box = {
                    top: re.height - fe.bottom,
                    height: i
                }) : (t.box = {
                    top: fe.top + s,
                    height: i
                }, fe.top += i + s)) : (n += c, "left" == o ? (t.box = {
                    left: fe.left + s,
                    width: n
                }, fe.left += n + s) : (fe.right += n + s, t.box = {
                    left: re.width - fe.right,
                    width: n
                })), t.position = o, t.tickLength = a, t.box.padding = c, t.innermost = l;
            }
            function C(e) {
                "x" == e.direction ? (e.box.left = fe.left - e.labelWidth / 2, e.box.width = re.width - fe.left - fe.right + e.labelWidth) : (e.box.top = fe.top - e.labelHeight / 2, 
                e.box.height = re.height - fe.bottom - fe.top + e.labelHeight);
            }
            function S() {
                var t, n = oe.grid.minBorderMargin;
                if (null == n) for (n = 0, t = 0; t < ie.length; ++t) n = Math.max(n, 2 * (ie[t].points.radius + ie[t].points.lineWidth / 2));
                var i = {
                    left: n,
                    right: n,
                    top: n,
                    bottom: n
                };
                e.each(p(), function(e, t) {
                    t.reserveSpace && t.ticks && t.ticks.length && ("x" === t.direction ? (i.left = Math.max(i.left, t.labelWidth / 2), 
                    i.right = Math.max(i.right, t.labelWidth / 2)) : (i.bottom = Math.max(i.bottom, t.labelHeight / 2), 
                    i.top = Math.max(i.top, t.labelHeight / 2)));
                }), fe.left = Math.ceil(Math.max(i.left, fe.left)), fe.right = Math.ceil(Math.max(i.right, fe.right)), 
                fe.top = Math.ceil(Math.max(i.top, fe.top)), fe.bottom = Math.ceil(Math.max(i.bottom, fe.bottom));
            }
            function T() {
                var t, n = p(), i = oe.grid.show;
                for (var o in fe) {
                    var r = oe.grid.margin || 0;
                    fe[o] = "number" == typeof r ? r : r[o] || 0;
                }
                s(ge.processOffset, [ fe ]);
                for (var o in fe) "object" == typeof oe.grid.borderWidth ? fe[o] += i ? oe.grid.borderWidth[o] : 0 : fe[o] += i ? oe.grid.borderWidth : 0;
                if (e.each(n, function(e, t) {
                    var n = t.options;
                    t.show = null == n.show ? t.used : n.show, t.reserveSpace = null == n.reserveSpace ? t.show : n.reserveSpace, 
                    I(t);
                }), i) {
                    var a = e.grep(n, function(e) {
                        return e.show || e.reserveSpace;
                    });
                    for (e.each(a, function(e, t) {
                        N(t), D(t), A(t, t.ticks), y(t);
                    }), t = a.length - 1; t >= 0; --t) M(a[t]);
                    S(), e.each(a, function(e, t) {
                        C(t);
                    });
                }
                pe = re.width - fe.left - fe.right, he = re.height - fe.bottom - fe.top, e.each(n, function(e, t) {
                    w(t);
                }), i && W(), L();
            }
            function I(e) {
                var t = e.options, n = +(null != t.min ? t.min : e.datamin), i = +(null != t.max ? t.max : e.datamax), o = i - n;
                if (0 == o) {
                    var r = 0 == i ? 1 : .01;
                    null == t.min && (n -= r), null != t.max && null == t.min || (i += r);
                } else {
                    var a = t.autoscaleMargin;
                    null != a && (null == t.min && (n -= o * a, n < 0 && null != e.datamin && e.datamin >= 0 && (n = 0)), 
                    null == t.max && (i += o * a, i > 0 && null != e.datamax && e.datamax <= 0 && (i = 0)));
                }
                e.min = n, e.max = i;
            }
            function N(t) {
                var n, o = t.options;
                n = "number" == typeof o.ticks && o.ticks > 0 ? o.ticks : .3 * Math.sqrt("x" == t.direction ? re.width : re.height);
                var r = (t.max - t.min) / n, a = -Math.floor(Math.log(r) / Math.LN10), s = o.tickDecimals;
                null != s && a > s && (a = s);
                var c, l = Math.pow(10, -a), d = r / l;
                if (d < 1.5 ? c = 1 : d < 3 ? (c = 2, d > 2.25 && (null == s || a + 1 <= s) && (c = 2.5, 
                ++a)) : c = d < 7.5 ? 5 : 10, c *= l, null != o.minTickSize && c < o.minTickSize && (c = o.minTickSize), 
                t.delta = r, t.tickDecimals = Math.max(0, null != s ? s : a), t.tickSize = o.tickSize || c, 
                "time" == o.mode && !t.tickGenerator) throw new Error("Time mode requires the flot.time plugin.");
                if (t.tickGenerator || (t.tickGenerator = function(e) {
                    var t, n = [], o = i(e.min, e.tickSize), r = 0, a = Number.NaN;
                    do t = a, a = o + r * e.tickSize, n.push(a), ++r; while (a < e.max && a != t);
                    return n;
                }, t.tickFormatter = function(e, t) {
                    var n = t.tickDecimals ? Math.pow(10, t.tickDecimals) : 1, i = "" + Math.round(e * n) / n;
                    if (null != t.tickDecimals) {
                        var o = i.indexOf("."), r = o == -1 ? 0 : i.length - o - 1;
                        if (r < t.tickDecimals) return (r ? i : i + ".") + ("" + n).substr(1, t.tickDecimals - r);
                    }
                    return i;
                }), e.isFunction(o.tickFormatter) && (t.tickFormatter = function(e, t) {
                    return "" + o.tickFormatter(e, t);
                }), null != o.alignTicksWithAxis) {
                    var u = ("x" == t.direction ? de : ue)[o.alignTicksWithAxis - 1];
                    if (u && u.used && u != t) {
                        var f = t.tickGenerator(t);
                        if (f.length > 0 && (null == o.min && (t.min = Math.min(t.min, f[0])), null == o.max && f.length > 1 && (t.max = Math.max(t.max, f[f.length - 1]))), 
                        t.tickGenerator = function(e) {
                            var t, n, i = [];
                            for (n = 0; n < u.ticks.length; ++n) t = (u.ticks[n].v - u.min) / (u.max - u.min), 
                            t = e.min + t * (e.max - e.min), i.push(t);
                            return i;
                        }, !t.mode && null == o.tickDecimals) {
                            var p = Math.max(0, -Math.floor(Math.log(t.delta) / Math.LN10) + 1), h = t.tickGenerator(t);
                            h.length > 1 && /\..*0$/.test((h[1] - h[0]).toFixed(p)) || (t.tickDecimals = p);
                        }
                    }
                }
            }
            function D(t) {
                var n = t.options.ticks, i = [];
                null == n || "number" == typeof n && n > 0 ? i = t.tickGenerator(t) : n && (i = e.isFunction(n) ? n(t) : n);
                var o, r;
                for (t.ticks = [], o = 0; o < i.length; ++o) {
                    var a = null, s = i[o];
                    "object" == typeof s ? (r = +s[0], s.length > 1 && (a = s[1])) : r = +s, null == a && (a = t.tickFormatter(r, t)), 
                    isNaN(r) || t.ticks.push({
                        v: r,
                        label: a
                    });
                }
            }
            function A(e, t) {
                e.options.autoscaleMargin && t.length > 0 && (null == e.options.min && (e.min = Math.min(e.min, t[0].v)), 
                null == e.options.max && t.length > 1 && (e.max = Math.max(e.max, t[t.length - 1].v)));
            }
            function z() {
                re.clear(), s(ge.drawBackground, [ ce ]);
                var e = oe.grid;
                e.show && e.backgroundColor && P(), e.show && !e.aboveData && E();
                for (var t = 0; t < ie.length; ++t) s(ge.drawSeries, [ ce, ie[t] ]), F(ie[t]);
                s(ge.draw, [ ce ]), e.show && e.aboveData && E(), re.render(), J();
            }
            function O(e, t) {
                for (var n, i, o, r, a = p(), s = 0; s < a.length; ++s) if (n = a[s], n.direction == t && (r = t + n.n + "axis", 
                e[r] || 1 != n.n || (r = t + "axis"), e[r])) {
                    i = e[r].from, o = e[r].to;
                    break;
                }
                if (e[r] || (n = "x" == t ? de[0] : ue[0], i = e[t + "1"], o = e[t + "2"]), null != i && null != o && i > o) {
                    var c = i;
                    i = o, o = c;
                }
                return {
                    from: i,
                    to: o,
                    axis: n
                };
            }
            function P() {
                ce.save(), ce.translate(fe.left, fe.top), ce.fillStyle = ne(oe.grid.backgroundColor, he, 0, "rgba(255, 255, 255, 0)"), 
                ce.fillRect(0, 0, pe, he), ce.restore();
            }
            function E() {
                var t, n, i, o;
                ce.save(), ce.translate(fe.left, fe.top);
                var r = oe.grid.markings;
                if (r) for (e.isFunction(r) && (n = me.getAxes(), n.xmin = n.xaxis.min, n.xmax = n.xaxis.max, 
                n.ymin = n.yaxis.min, n.ymax = n.yaxis.max, r = r(n)), t = 0; t < r.length; ++t) {
                    var a = r[t], s = O(a, "x"), c = O(a, "y");
                    if (null == s.from && (s.from = s.axis.min), null == s.to && (s.to = s.axis.max), 
                    null == c.from && (c.from = c.axis.min), null == c.to && (c.to = c.axis.max), !(s.to < s.axis.min || s.from > s.axis.max || c.to < c.axis.min || c.from > c.axis.max)) {
                        s.from = Math.max(s.from, s.axis.min), s.to = Math.min(s.to, s.axis.max), c.from = Math.max(c.from, c.axis.min), 
                        c.to = Math.min(c.to, c.axis.max);
                        var l = s.from === s.to, d = c.from === c.to;
                        if (!l || !d) if (s.from = Math.floor(s.axis.p2c(s.from)), s.to = Math.floor(s.axis.p2c(s.to)), 
                        c.from = Math.floor(c.axis.p2c(c.from)), c.to = Math.floor(c.axis.p2c(c.to)), l || d) {
                            var u = a.lineWidth || oe.grid.markingsLineWidth, f = u % 2 ? .5 : 0;
                            ce.beginPath(), ce.strokeStyle = a.color || oe.grid.markingsColor, ce.lineWidth = u, 
                            l ? (ce.moveTo(s.to + f, c.from), ce.lineTo(s.to + f, c.to)) : (ce.moveTo(s.from, c.to + f), 
                            ce.lineTo(s.to, c.to + f)), ce.stroke();
                        } else ce.fillStyle = a.color || oe.grid.markingsColor, ce.fillRect(s.from, c.to, s.to - s.from, c.from - c.to);
                    }
                }
                n = p(), i = oe.grid.borderWidth;
                for (var h = 0; h < n.length; ++h) {
                    var g, m, v, _, x = n[h], b = x.box, k = x.tickLength;
                    if (x.show && 0 != x.ticks.length) {
                        for (ce.lineWidth = 1, "x" == x.direction ? (g = 0, m = "full" == k ? "top" == x.position ? 0 : he : b.top - fe.top + ("top" == x.position ? b.height : 0)) : (m = 0, 
                        g = "full" == k ? "left" == x.position ? 0 : pe : b.left - fe.left + ("left" == x.position ? b.width : 0)), 
                        x.innermost || (ce.strokeStyle = x.options.color, ce.beginPath(), v = _ = 0, "x" == x.direction ? v = pe + 1 : _ = he + 1, 
                        1 == ce.lineWidth && ("x" == x.direction ? m = Math.floor(m) + .5 : g = Math.floor(g) + .5), 
                        ce.moveTo(g, m), ce.lineTo(g + v, m + _), ce.stroke()), ce.strokeStyle = x.options.tickColor, 
                        ce.beginPath(), t = 0; t < x.ticks.length; ++t) {
                            var w = x.ticks[t].v;
                            v = _ = 0, isNaN(w) || w < x.min || w > x.max || "full" == k && ("object" == typeof i && i[x.position] > 0 || i > 0) && (w == x.min || w == x.max) || ("x" == x.direction ? (g = x.p2c(w), 
                            _ = "full" == k ? -he : k, "top" == x.position && (_ = -_)) : (m = x.p2c(w), v = "full" == k ? -pe : k, 
                            "left" == x.position && (v = -v)), 1 == ce.lineWidth && ("x" == x.direction ? g = Math.floor(g) + .5 : m = Math.floor(m) + .5), 
                            ce.moveTo(g, m), ce.lineTo(g + v, m + _));
                        }
                        ce.stroke();
                    }
                }
                i && (o = oe.grid.borderColor, "object" == typeof i || "object" == typeof o ? ("object" != typeof i && (i = {
                    top: i,
                    right: i,
                    bottom: i,
                    left: i
                }), "object" != typeof o && (o = {
                    top: o,
                    right: o,
                    bottom: o,
                    left: o
                }), i.top > 0 && (ce.strokeStyle = o.top, ce.lineWidth = i.top, ce.beginPath(), 
                ce.moveTo(0 - i.left, 0 - i.top / 2), ce.lineTo(pe, 0 - i.top / 2), ce.stroke()), 
                i.right > 0 && (ce.strokeStyle = o.right, ce.lineWidth = i.right, ce.beginPath(), 
                ce.moveTo(pe + i.right / 2, 0 - i.top), ce.lineTo(pe + i.right / 2, he), ce.stroke()), 
                i.bottom > 0 && (ce.strokeStyle = o.bottom, ce.lineWidth = i.bottom, ce.beginPath(), 
                ce.moveTo(pe + i.right, he + i.bottom / 2), ce.lineTo(0, he + i.bottom / 2), ce.stroke()), 
                i.left > 0 && (ce.strokeStyle = o.left, ce.lineWidth = i.left, ce.beginPath(), ce.moveTo(0 - i.left / 2, he + i.bottom), 
                ce.lineTo(0 - i.left / 2, 0), ce.stroke())) : (ce.lineWidth = i, ce.strokeStyle = oe.grid.borderColor, 
                ce.strokeRect(-i / 2, -i / 2, pe + i, he + i))), ce.restore();
            }
            function W() {
                e.each(p(), function(e, t) {
                    var n, i, o, r, a, s = t.box, c = t.direction + "Axis " + t.direction + t.n + "Axis", l = "flot-" + t.direction + "-axis flot-" + t.direction + t.n + "-axis " + c, d = t.options.font || "flot-tick-label tickLabel";
                    if (re.removeText(l), t.show && 0 != t.ticks.length) for (var u = 0; u < t.ticks.length; ++u) n = t.ticks[u], 
                    !n.label || n.v < t.min || n.v > t.max || ("x" == t.direction ? (r = "center", i = fe.left + t.p2c(n.v), 
                    "bottom" == t.position ? o = s.top + s.padding : (o = s.top + s.height - s.padding, 
                    a = "bottom")) : (a = "middle", o = fe.top + t.p2c(n.v), "left" == t.position ? (i = s.left + s.width - s.padding, 
                    r = "right") : i = s.left + s.padding), re.addText(l, i, o, n.label, d, null, null, r, a));
                });
            }
            function F(e) {
                e.lines.show && $(e), e.bars.show && j(e), e.points.show && R(e);
            }
            function $(e) {
                function t(e, t, n, i, o) {
                    var r = e.points, a = e.pointsize, s = null, c = null;
                    ce.beginPath();
                    for (var l = a; l < r.length; l += a) {
                        var d = r[l - a], u = r[l - a + 1], f = r[l], p = r[l + 1];
                        if (null != d && null != f) {
                            if (u <= p && u < o.min) {
                                if (p < o.min) continue;
                                d = (o.min - u) / (p - u) * (f - d) + d, u = o.min;
                            } else if (p <= u && p < o.min) {
                                if (u < o.min) continue;
                                f = (o.min - u) / (p - u) * (f - d) + d, p = o.min;
                            }
                            if (u >= p && u > o.max) {
                                if (p > o.max) continue;
                                d = (o.max - u) / (p - u) * (f - d) + d, u = o.max;
                            } else if (p >= u && p > o.max) {
                                if (u > o.max) continue;
                                f = (o.max - u) / (p - u) * (f - d) + d, p = o.max;
                            }
                            if (d <= f && d < i.min) {
                                if (f < i.min) continue;
                                u = (i.min - d) / (f - d) * (p - u) + u, d = i.min;
                            } else if (f <= d && f < i.min) {
                                if (d < i.min) continue;
                                p = (i.min - d) / (f - d) * (p - u) + u, f = i.min;
                            }
                            if (d >= f && d > i.max) {
                                if (f > i.max) continue;
                                u = (i.max - d) / (f - d) * (p - u) + u, d = i.max;
                            } else if (f >= d && f > i.max) {
                                if (d > i.max) continue;
                                p = (i.max - d) / (f - d) * (p - u) + u, f = i.max;
                            }
                            d == s && u == c || ce.moveTo(i.p2c(d) + t, o.p2c(u) + n), s = f, c = p, ce.lineTo(i.p2c(f) + t, o.p2c(p) + n);
                        }
                    }
                    ce.stroke();
                }
                function n(e, t, n) {
                    for (var i = e.points, o = e.pointsize, r = Math.min(Math.max(0, n.min), n.max), a = 0, s = !1, c = 1, l = 0, d = 0; ;) {
                        if (o > 0 && a > i.length + o) break;
                        a += o;
                        var u = i[a - o], f = i[a - o + c], p = i[a], h = i[a + c];
                        if (s) {
                            if (o > 0 && null != u && null == p) {
                                d = a, o = -o, c = 2;
                                continue;
                            }
                            if (o < 0 && a == l + o) {
                                ce.fill(), s = !1, o = -o, c = 1, a = l = d + o;
                                continue;
                            }
                        }
                        if (null != u && null != p) {
                            if (u <= p && u < t.min) {
                                if (p < t.min) continue;
                                f = (t.min - u) / (p - u) * (h - f) + f, u = t.min;
                            } else if (p <= u && p < t.min) {
                                if (u < t.min) continue;
                                h = (t.min - u) / (p - u) * (h - f) + f, p = t.min;
                            }
                            if (u >= p && u > t.max) {
                                if (p > t.max) continue;
                                f = (t.max - u) / (p - u) * (h - f) + f, u = t.max;
                            } else if (p >= u && p > t.max) {
                                if (u > t.max) continue;
                                h = (t.max - u) / (p - u) * (h - f) + f, p = t.max;
                            }
                            if (s || (ce.beginPath(), ce.moveTo(t.p2c(u), n.p2c(r)), s = !0), f >= n.max && h >= n.max) ce.lineTo(t.p2c(u), n.p2c(n.max)), 
                            ce.lineTo(t.p2c(p), n.p2c(n.max)); else if (f <= n.min && h <= n.min) ce.lineTo(t.p2c(u), n.p2c(n.min)), 
                            ce.lineTo(t.p2c(p), n.p2c(n.min)); else {
                                var g = u, m = p;
                                f <= h && f < n.min && h >= n.min ? (u = (n.min - f) / (h - f) * (p - u) + u, f = n.min) : h <= f && h < n.min && f >= n.min && (p = (n.min - f) / (h - f) * (p - u) + u, 
                                h = n.min), f >= h && f > n.max && h <= n.max ? (u = (n.max - f) / (h - f) * (p - u) + u, 
                                f = n.max) : h >= f && h > n.max && f <= n.max && (p = (n.max - f) / (h - f) * (p - u) + u, 
                                h = n.max), u != g && ce.lineTo(t.p2c(g), n.p2c(f)), ce.lineTo(t.p2c(u), n.p2c(f)), 
                                ce.lineTo(t.p2c(p), n.p2c(h)), p != m && (ce.lineTo(t.p2c(p), n.p2c(h)), ce.lineTo(t.p2c(m), n.p2c(h)));
                            }
                        }
                    }
                }
                ce.save(), ce.translate(fe.left, fe.top), ce.lineJoin = "round";
                var i = e.lines.lineWidth, o = e.shadowSize;
                if (i > 0 && o > 0) {
                    ce.lineWidth = o, ce.strokeStyle = "rgba(0,0,0,0.1)";
                    var r = Math.PI / 18;
                    t(e.datapoints, Math.sin(r) * (i / 2 + o / 2), Math.cos(r) * (i / 2 + o / 2), e.xaxis, e.yaxis), 
                    ce.lineWidth = o / 2, t(e.datapoints, Math.sin(r) * (i / 2 + o / 4), Math.cos(r) * (i / 2 + o / 4), e.xaxis, e.yaxis);
                }
                ce.lineWidth = i, ce.strokeStyle = e.color;
                var a = H(e.lines, e.color, 0, he);
                a && (ce.fillStyle = a, n(e.datapoints, e.xaxis, e.yaxis)), i > 0 && t(e.datapoints, 0, 0, e.xaxis, e.yaxis), 
                ce.restore();
            }
            function R(e) {
                function t(e, t, n, i, o, r, a, s) {
                    for (var c = e.points, l = e.pointsize, d = 0; d < c.length; d += l) {
                        var u = c[d], f = c[d + 1];
                        null == u || u < r.min || u > r.max || f < a.min || f > a.max || (ce.beginPath(), 
                        u = r.p2c(u), f = a.p2c(f) + i, "circle" == s ? ce.arc(u, f, t, 0, o ? Math.PI : 2 * Math.PI, !1) : s(ce, u, f, t, o), 
                        ce.closePath(), n && (ce.fillStyle = n, ce.fill()), ce.stroke());
                    }
                }
                ce.save(), ce.translate(fe.left, fe.top);
                var n = e.points.lineWidth, i = e.shadowSize, o = e.points.radius, r = e.points.symbol;
                if (0 == n && (n = 1e-4), n > 0 && i > 0) {
                    var a = i / 2;
                    ce.lineWidth = a, ce.strokeStyle = "rgba(0,0,0,0.1)", t(e.datapoints, o, null, a + a / 2, !0, e.xaxis, e.yaxis, r), 
                    ce.strokeStyle = "rgba(0,0,0,0.2)", t(e.datapoints, o, null, a / 2, !0, e.xaxis, e.yaxis, r);
                }
                ce.lineWidth = n, ce.strokeStyle = e.color, t(e.datapoints, o, H(e.points, e.color), 0, !1, e.xaxis, e.yaxis, r), 
                ce.restore();
            }
            function U(e, t, n, i, o, r, a, s, c, l, d) {
                var u, f, p, h, g, m, v, _, x;
                l ? (_ = m = v = !0, g = !1, u = n, f = e, h = t + i, p = t + o, f < u && (x = f, 
                f = u, u = x, g = !0, m = !1)) : (g = m = v = !0, _ = !1, u = e + i, f = e + o, 
                p = n, h = t, h < p && (x = h, h = p, p = x, _ = !0, v = !1)), f < a.min || u > a.max || h < s.min || p > s.max || (u < a.min && (u = a.min, 
                g = !1), f > a.max && (f = a.max, m = !1), p < s.min && (p = s.min, _ = !1), h > s.max && (h = s.max, 
                v = !1), u = a.p2c(u), p = s.p2c(p), f = a.p2c(f), h = s.p2c(h), r && (c.fillStyle = r(p, h), 
                c.fillRect(u, h, f - u, p - h)), d > 0 && (g || m || v || _) && (c.beginPath(), 
                c.moveTo(u, p), g ? c.lineTo(u, h) : c.moveTo(u, h), v ? c.lineTo(f, h) : c.moveTo(f, h), 
                m ? c.lineTo(f, p) : c.moveTo(f, p), _ ? c.lineTo(u, p) : c.moveTo(u, p), c.stroke()));
            }
            function j(e) {
                function t(t, n, i, o, r, a) {
                    for (var s = t.points, c = t.pointsize, l = 0; l < s.length; l += c) null != s[l] && U(s[l], s[l + 1], s[l + 2], n, i, o, r, a, ce, e.bars.horizontal, e.bars.lineWidth);
                }
                ce.save(), ce.translate(fe.left, fe.top), ce.lineWidth = e.bars.lineWidth, ce.strokeStyle = e.color;
                var n;
                switch (e.bars.align) {
                  case "left":
                    n = 0;
                    break;

                  case "right":
                    n = -e.bars.barWidth;
                    break;

                  default:
                    n = -e.bars.barWidth / 2;
                }
                var i = e.bars.fill ? function(t, n) {
                    return H(e.bars, e.color, t, n);
                } : null;
                t(e.datapoints, n, n + e.bars.barWidth, i, e.xaxis, e.yaxis), ce.restore();
            }
            function H(t, n, i, o) {
                var r = t.fill;
                if (!r) return null;
                if (t.fillColor) return ne(t.fillColor, i, o, n);
                var a = e.color.parse(n);
                return a.a = "number" == typeof r ? r : .4, a.normalize(), a.toString();
            }
            function L() {
                if (null != oe.legend.container ? e(oe.legend.container).html("") : n.find(".legend").remove(), 
                oe.legend.show) {
                    for (var t, i, o = [], r = [], a = !1, s = oe.legend.labelFormatter, c = 0; c < ie.length; ++c) t = ie[c], 
                    t.label && (i = s ? s(t.label, t) : t.label, i && r.push({
                        label: i,
                        color: t.color
                    }));
                    if (oe.legend.sorted) if (e.isFunction(oe.legend.sorted)) r.sort(oe.legend.sorted); else if ("reverse" == oe.legend.sorted) r.reverse(); else {
                        var l = "descending" != oe.legend.sorted;
                        r.sort(function(e, t) {
                            return e.label == t.label ? 0 : e.label < t.label != l ? 1 : -1;
                        });
                    }
                    for (var c = 0; c < r.length; ++c) {
                        var d = r[c];
                        c % oe.legend.noColumns == 0 && (a && o.push("</tr>"), o.push("<tr>"), a = !0), 
                        o.push('<td class="legendColorBox"><div style="border:1px solid ' + oe.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + d.color + ';overflow:hidden"></div></div></td><td class="legendLabel">' + d.label + "</td>");
                    }
                    if (a && o.push("</tr>"), 0 != o.length) {
                        var u = '<table style="font-size:smaller;color:' + oe.grid.color + '">' + o.join("") + "</table>";
                        if (null != oe.legend.container) e(oe.legend.container).html(u); else {
                            var f = "", p = oe.legend.position, h = oe.legend.margin;
                            null == h[0] && (h = [ h, h ]), "n" == p.charAt(0) ? f += "top:" + (h[1] + fe.top) + "px;" : "s" == p.charAt(0) && (f += "bottom:" + (h[1] + fe.bottom) + "px;"), 
                            "e" == p.charAt(1) ? f += "right:" + (h[0] + fe.right) + "px;" : "w" == p.charAt(1) && (f += "left:" + (h[0] + fe.left) + "px;");
                            var g = e('<div class="legend">' + u.replace('style="', 'style="position:absolute;' + f + ";") + "</div>").appendTo(n);
                            if (0 != oe.legend.backgroundOpacity) {
                                var m = oe.legend.backgroundColor;
                                null == m && (m = oe.grid.backgroundColor, m = m && "string" == typeof m ? e.color.parse(m) : e.color.extract(g, "background-color"), 
                                m.a = 1, m = m.toString());
                                var v = g.children();
                                e('<div style="position:absolute;width:' + v.width() + "px;height:" + v.height() + "px;" + f + "background-color:" + m + ';"> </div>').prependTo(g).css("opacity", oe.legend.backgroundOpacity);
                            }
                        }
                    }
                }
            }
            function B(e, t, n) {
                var i, o, r, a = oe.grid.mouseActiveRadius, s = a * a + 1, c = null;
                for (i = ie.length - 1; i >= 0; --i) if (n(ie[i])) {
                    var l = ie[i], d = l.xaxis, u = l.yaxis, f = l.datapoints.points, p = d.c2p(e), h = u.c2p(t), g = a / d.scale, m = a / u.scale;
                    if (r = l.datapoints.pointsize, d.options.inverseTransform && (g = Number.MAX_VALUE), 
                    u.options.inverseTransform && (m = Number.MAX_VALUE), l.lines.show || l.points.show) for (o = 0; o < f.length; o += r) {
                        var v = f[o], _ = f[o + 1];
                        if (null != v && !(v - p > g || v - p < -g || _ - h > m || _ - h < -m)) {
                            var x = Math.abs(d.p2c(v) - e), b = Math.abs(u.p2c(_) - t), k = x * x + b * b;
                            k < s && (s = k, c = [ i, o / r ]);
                        }
                    }
                    if (l.bars.show && !c) {
                        var w, y;
                        switch (l.bars.align) {
                          case "left":
                            w = 0;
                            break;

                          case "right":
                            w = -l.bars.barWidth;
                            break;

                          default:
                            w = -l.bars.barWidth / 2;
                        }
                        for (y = w + l.bars.barWidth, o = 0; o < f.length; o += r) {
                            var v = f[o], _ = f[o + 1], M = f[o + 2];
                            null != v && (ie[i].bars.horizontal ? p <= Math.max(M, v) && p >= Math.min(M, v) && h >= _ + w && h <= _ + y : p >= v + w && p <= v + y && h >= Math.min(M, _) && h <= Math.max(M, _)) && (c = [ i, o / r ]);
                        }
                    }
                }
                return c ? (i = c[0], o = c[1], r = ie[i].datapoints.pointsize, {
                    datapoint: ie[i].datapoints.points.slice(o * r, (o + 1) * r),
                    dataIndex: o,
                    series: ie[i],
                    seriesIndex: i
                }) : null;
            }
            function Y(e) {
                oe.grid.hoverable && V("plothover", e, function(e) {
                    return 0 != e.hoverable;
                });
            }
            function q(e) {
                oe.grid.hoverable && V("plothover", e, function(e) {
                    return !1;
                });
            }
            function G(e) {
                V("plotclick", e, function(e) {
                    return 0 != e.clickable;
                });
            }
            function V(e, t, i) {
                var o = se.offset(), r = t.pageX - o.left - fe.left, a = t.pageY - o.top - fe.top, s = h({
                    left: r,
                    top: a
                });
                s.pageX = t.pageX, s.pageY = t.pageY;
                var c = B(r, a, i);
                if (c && (c.pageX = parseInt(c.series.xaxis.p2c(c.datapoint[0]) + o.left + fe.left, 10), 
                c.pageY = parseInt(c.series.yaxis.p2c(c.datapoint[1]) + o.top + fe.top, 10)), oe.grid.autoHighlight) {
                    for (var l = 0; l < ve.length; ++l) {
                        var d = ve[l];
                        d.auto != e || c && d.series == c.series && d.point[0] == c.datapoint[0] && d.point[1] == c.datapoint[1] || K(d.series, d.point);
                    }
                    c && Q(c.series, c.datapoint, e);
                }
                n.trigger(e, [ s, c ]);
            }
            function J() {
                var e = oe.interaction.redrawOverlayInterval;
                return e == -1 ? void X() : void (_e || (_e = setTimeout(X, e)));
            }
            function X() {
                _e = null, le.save(), ae.clear(), le.translate(fe.left, fe.top);
                var e, t;
                for (e = 0; e < ve.length; ++e) t = ve[e], t.series.bars.show ? te(t.series, t.point) : ee(t.series, t.point);
                le.restore(), s(ge.drawOverlay, [ le ]);
            }
            function Q(e, t, n) {
                if ("number" == typeof e && (e = ie[e]), "number" == typeof t) {
                    var i = e.datapoints.pointsize;
                    t = e.datapoints.points.slice(i * t, i * (t + 1));
                }
                var o = Z(e, t);
                o == -1 ? (ve.push({
                    series: e,
                    point: t,
                    auto: n
                }), J()) : n || (ve[o].auto = !1);
            }
            function K(e, t) {
                if (null == e && null == t) return ve = [], void J();
                if ("number" == typeof e && (e = ie[e]), "number" == typeof t) {
                    var n = e.datapoints.pointsize;
                    t = e.datapoints.points.slice(n * t, n * (t + 1));
                }
                var i = Z(e, t);
                i != -1 && (ve.splice(i, 1), J());
            }
            function Z(e, t) {
                for (var n = 0; n < ve.length; ++n) {
                    var i = ve[n];
                    if (i.series == e && i.point[0] == t[0] && i.point[1] == t[1]) return n;
                }
                return -1;
            }
            function ee(t, n) {
                var i = n[0], o = n[1], r = t.xaxis, a = t.yaxis, s = "string" == typeof t.highlightColor ? t.highlightColor : e.color.parse(t.color).scale("a", .5).toString();
                if (!(i < r.min || i > r.max || o < a.min || o > a.max)) {
                    var c = t.points.radius + t.points.lineWidth / 2;
                    le.lineWidth = c, le.strokeStyle = s;
                    var l = 1.5 * c;
                    i = r.p2c(i), o = a.p2c(o), le.beginPath(), "circle" == t.points.symbol ? le.arc(i, o, l, 0, 2 * Math.PI, !1) : t.points.symbol(le, i, o, l, !1), 
                    le.closePath(), le.stroke();
                }
            }
            function te(t, n) {
                var i, o = "string" == typeof t.highlightColor ? t.highlightColor : e.color.parse(t.color).scale("a", .5).toString(), r = o;
                switch (t.bars.align) {
                  case "left":
                    i = 0;
                    break;

                  case "right":
                    i = -t.bars.barWidth;
                    break;

                  default:
                    i = -t.bars.barWidth / 2;
                }
                le.lineWidth = t.bars.lineWidth, le.strokeStyle = o, U(n[0], n[1], n[2] || 0, i, i + t.bars.barWidth, function() {
                    return r;
                }, t.xaxis, t.yaxis, le, t.bars.horizontal, t.bars.lineWidth);
            }
            function ne(t, n, i, o) {
                if ("string" == typeof t) return t;
                for (var r = ce.createLinearGradient(0, i, 0, n), a = 0, s = t.colors.length; a < s; ++a) {
                    var c = t.colors[a];
                    if ("string" != typeof c) {
                        var l = e.color.parse(o);
                        null != c.brightness && (l = l.scale("rgb", c.brightness)), null != c.opacity && (l.a *= c.opacity), 
                        c = l.toString();
                    }
                    r.addColorStop(a / (s - 1), c);
                }
                return r;
            }
            var ie = [], oe = {
                colors: [ "#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed" ],
                legend: {
                    show: !0,
                    noColumns: 1,
                    labelFormatter: null,
                    labelBoxBorderColor: "#ccc",
                    container: null,
                    position: "ne",
                    margin: 5,
                    backgroundColor: null,
                    backgroundOpacity: .85,
                    sorted: null
                },
                xaxis: {
                    show: null,
                    position: "bottom",
                    mode: null,
                    font: null,
                    color: null,
                    tickColor: null,
                    transform: null,
                    inverseTransform: null,
                    min: null,
                    max: null,
                    autoscaleMargin: null,
                    ticks: null,
                    tickFormatter: null,
                    labelWidth: null,
                    labelHeight: null,
                    reserveSpace: null,
                    tickLength: null,
                    alignTicksWithAxis: null,
                    tickDecimals: null,
                    tickSize: null,
                    minTickSize: null
                },
                yaxis: {
                    autoscaleMargin: .02,
                    position: "left"
                },
                xaxes: [],
                yaxes: [],
                series: {
                    points: {
                        show: !1,
                        radius: 3,
                        lineWidth: 2,
                        fill: !0,
                        fillColor: "#ffffff",
                        symbol: "circle"
                    },
                    lines: {
                        lineWidth: 2,
                        fill: !1,
                        fillColor: null,
                        steps: !1
                    },
                    bars: {
                        show: !1,
                        lineWidth: 2,
                        barWidth: 1,
                        fill: !0,
                        fillColor: null,
                        align: "left",
                        horizontal: !1,
                        zero: !0
                    },
                    shadowSize: 3,
                    highlightColor: null
                },
                grid: {
                    show: !0,
                    aboveData: !1,
                    color: "#545454",
                    backgroundColor: null,
                    borderColor: null,
                    tickColor: null,
                    margin: 0,
                    labelMargin: 5,
                    axisMargin: 8,
                    borderWidth: 2,
                    minBorderMargin: null,
                    markings: null,
                    markingsColor: "#f4f4f4",
                    markingsLineWidth: 2,
                    clickable: !1,
                    hoverable: !1,
                    autoHighlight: !0,
                    mouseActiveRadius: 10
                },
                interaction: {
                    redrawOverlayInterval: 1e3 / 60
                },
                hooks: {}
            }, re = null, ae = null, se = null, ce = null, le = null, de = [], ue = [], fe = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            }, pe = 0, he = 0, ge = {
                processOptions: [],
                processRawData: [],
                processDatapoints: [],
                processOffset: [],
                drawBackground: [],
                drawSeries: [],
                draw: [],
                bindEvents: [],
                drawOverlay: [],
                shutdown: []
            }, me = this;
            me.setData = d, me.setupGrid = T, me.draw = z, me.getPlaceholder = function() {
                return n;
            }, me.getCanvas = function() {
                return re.element;
            }, me.getPlotOffset = function() {
                return fe;
            }, me.width = function() {
                return pe;
            }, me.height = function() {
                return he;
            }, me.offset = function() {
                var e = se.offset();
                return e.left += fe.left, e.top += fe.top, e;
            }, me.getData = function() {
                return ie;
            }, me.getAxes = function() {
                var t = {};
                return e.each(de.concat(ue), function(e, n) {
                    n && (t[n.direction + (1 != n.n ? n.n : "") + "axis"] = n);
                }), t;
            }, me.getXAxes = function() {
                return de;
            }, me.getYAxes = function() {
                return ue;
            }, me.c2p = h, me.p2c = g, me.getOptions = function() {
                return oe;
            }, me.highlight = Q, me.unhighlight = K, me.triggerRedrawOverlay = J, me.pointOffset = function(e) {
                return {
                    left: parseInt(de[f(e, "x") - 1].p2c(+e.x) + fe.left, 10),
                    top: parseInt(ue[f(e, "y") - 1].p2c(+e.y) + fe.top, 10)
                };
            }, me.shutdown = k, me.destroy = function() {
                k(), n.removeData("plot").empty(), ie = [], oe = null, re = null, ae = null, se = null, 
                ce = null, le = null, de = [], ue = [], ge = null, ve = [], me = null;
            }, me.resize = function() {
                var e = n.width(), t = n.height();
                re.resize(e, t), ae.resize(e, t);
            }, me.hooks = ge, c(me), l(r), x(), d(o), T(), z(), b();
            var ve = [], _e = null;
        }
        function i(e, t) {
            return t * Math.floor(e / t);
        }
        var o = Object.prototype.hasOwnProperty;
        e.fn.detach || (e.fn.detach = function() {
            return this.each(function() {
                this.parentNode && this.parentNode.removeChild(this);
            });
        }), t.prototype.resize = function(e, t) {
            if (e <= 0 || t <= 0) throw new Error("Invalid dimensions for plot, width = " + e + ", height = " + t);
            var n = this.element, i = this.context, o = this.pixelRatio;
            this.width != e && (n.width = e * o, n.style.width = e + "px", this.width = e), 
            this.height != t && (n.height = t * o, n.style.height = t + "px", this.height = t), 
            i.restore(), i.save(), i.scale(o, o);
        }, t.prototype.clear = function() {
            this.context.clearRect(0, 0, this.width, this.height);
        }, t.prototype.render = function() {
            var e = this._textCache;
            for (var t in e) if (o.call(e, t)) {
                var n = this.getTextLayer(t), i = e[t];
                n.hide();
                for (var r in i) if (o.call(i, r)) {
                    var a = i[r];
                    for (var s in a) if (o.call(a, s)) {
                        for (var c, l = a[s].positions, d = 0; c = l[d]; d++) c.active ? c.rendered || (n.append(c.element), 
                        c.rendered = !0) : (l.splice(d--, 1), c.rendered && c.element.detach());
                        0 == l.length && delete a[s];
                    }
                }
                n.show();
            }
        }, t.prototype.getTextLayer = function(t) {
            var n = this.text[t];
            return null == n && (null == this.textContainer && (this.textContainer = e("<div class='flot-text'></div>").css({
                position: "absolute",
                top: 0,
                left: 0,
                bottom: 0,
                right: 0,
                "font-size": "smaller",
                color: "#545454"
            }).insertAfter(this.element)), n = this.text[t] = e("<div></div>").addClass(t).css({
                position: "absolute",
                top: 0,
                left: 0,
                bottom: 0,
                right: 0
            }).appendTo(this.textContainer)), n;
        }, t.prototype.getTextInfo = function(t, n, i, o, r) {
            var a, s, c, l;
            if (n = "" + n, a = "object" == typeof i ? i.style + " " + i.variant + " " + i.weight + " " + i.size + "px/" + i.lineHeight + "px " + i.family : i, 
            s = this._textCache[t], null == s && (s = this._textCache[t] = {}), c = s[a], null == c && (c = s[a] = {}), 
            l = c[n], null == l) {
                var d = e("<div></div>").html(n).css({
                    position: "absolute",
                    "max-width": r,
                    top: -9999
                }).appendTo(this.getTextLayer(t));
                "object" == typeof i ? d.css({
                    font: a,
                    color: i.color
                }) : "string" == typeof i && d.addClass(i), l = c[n] = {
                    width: d.outerWidth(!0),
                    height: d.outerHeight(!0),
                    element: d,
                    positions: []
                }, d.detach();
            }
            return l;
        }, t.prototype.addText = function(e, t, n, i, o, r, a, s, c) {
            var l = this.getTextInfo(e, i, o, r, a), d = l.positions;
            "center" == s ? t -= l.width / 2 : "right" == s && (t -= l.width), "middle" == c ? n -= l.height / 2 : "bottom" == c && (n -= l.height);
            for (var u, f = 0; u = d[f]; f++) if (u.x == t && u.y == n) return void (u.active = !0);
            u = {
                active: !0,
                rendered: !1,
                element: d.length ? l.element.clone() : l.element,
                x: t,
                y: n
            }, d.push(u), u.element.css({
                top: Math.round(n),
                left: Math.round(t),
                "text-align": s
            });
        }, t.prototype.removeText = function(e, t, n, i, r, a) {
            if (null == i) {
                var s = this._textCache[e];
                if (null != s) for (var c in s) if (o.call(s, c)) {
                    var l = s[c];
                    for (var d in l) if (o.call(l, d)) for (var u, f = l[d].positions, p = 0; u = f[p]; p++) u.active = !1;
                }
            } else for (var u, f = this.getTextInfo(e, i, r, a).positions, p = 0; u = f[p]; p++) u.x == t && u.y == n && (u.active = !1);
        }, e.plot = function(t, i, o) {
            var r = new n(e(t), i, o, e.plot.plugins);
            return r;
        }, e.plot.version = "0.8.3", e.plot.plugins = [], e.fn.plot = function(t, n) {
            return this.each(function() {
                e.plot(this, t, n);
            });
        };
    }(jQuery);
}, function(e, t) {
    !function(e) {
        function t(t) {
            function n(e) {
                h.active && (l(e), t.getPlaceholder().trigger("plotselecting", [ r() ]));
            }
            function i(t) {
                1 == t.which && (document.body.focus(), void 0 !== document.onselectstart && null == g.onselectstart && (g.onselectstart = document.onselectstart, 
                document.onselectstart = function() {
                    return !1;
                }), void 0 !== document.ondrag && null == g.ondrag && (g.ondrag = document.ondrag, 
                document.ondrag = function() {
                    return !1;
                }), c(h.first, t), h.active = !0, m = function(e) {
                    o(e);
                }, e(document).one("mouseup", m));
            }
            function o(e) {
                return m = null, void 0 !== document.onselectstart && (document.onselectstart = g.onselectstart), 
                void 0 !== document.ondrag && (document.ondrag = g.ondrag), h.active = !1, l(e), 
                p() ? a() : (t.getPlaceholder().trigger("plotunselected", []), t.getPlaceholder().trigger("plotselecting", [ null ])), 
                !1;
            }
            function r() {
                if (!p()) return null;
                if (!h.show) return null;
                var n = {}, i = h.first, o = h.second;
                return e.each(t.getAxes(), function(e, t) {
                    if (t.used) {
                        var r = t.c2p(i[t.direction]), a = t.c2p(o[t.direction]);
                        n[e] = {
                            from: Math.min(r, a),
                            to: Math.max(r, a)
                        };
                    }
                }), n;
            }
            function a() {
                var e = r();
                t.getPlaceholder().trigger("plotselected", [ e ]), e.xaxis && e.yaxis && t.getPlaceholder().trigger("selected", [ {
                    x1: e.xaxis.from,
                    y1: e.yaxis.from,
                    x2: e.xaxis.to,
                    y2: e.yaxis.to
                } ]);
            }
            function s(e, t, n) {
                return t < e ? e : t > n ? n : t;
            }
            function c(e, n) {
                var i = t.getOptions(), o = t.getPlaceholder().offset(), r = t.getPlotOffset();
                e.x = s(0, n.pageX - o.left - r.left, t.width()), e.y = s(0, n.pageY - o.top - r.top, t.height()), 
                "y" == i.selection.mode && (e.x = e == h.first ? 0 : t.width()), "x" == i.selection.mode && (e.y = e == h.first ? 0 : t.height());
            }
            function l(e) {
                null != e.pageX && (c(h.second, e), p() ? (h.show = !0, t.triggerRedrawOverlay()) : d(!0));
            }
            function d(e) {
                h.show && (h.show = !1, t.triggerRedrawOverlay(), e || t.getPlaceholder().trigger("plotunselected", []));
            }
            function u(e, n) {
                var i, o, r, a, s = t.getAxes();
                for (var c in s) if (i = s[c], i.direction == n && (a = n + i.n + "axis", e[a] || 1 != i.n || (a = n + "axis"), 
                e[a])) {
                    o = e[a].from, r = e[a].to;
                    break;
                }
                if (e[a] || (i = "x" == n ? t.getXAxes()[0] : t.getYAxes()[0], o = e[n + "1"], r = e[n + "2"]), 
                null != o && null != r && o > r) {
                    var l = o;
                    o = r, r = l;
                }
                return {
                    from: o,
                    to: r,
                    axis: i
                };
            }
            function f(e, n) {
                var i, o = t.getOptions();
                "y" == o.selection.mode ? (h.first.x = 0, h.second.x = t.width()) : (i = u(e, "x"), 
                h.first.x = i.axis.p2c(i.from), h.second.x = i.axis.p2c(i.to)), "x" == o.selection.mode ? (h.first.y = 0, 
                h.second.y = t.height()) : (i = u(e, "y"), h.first.y = i.axis.p2c(i.from), h.second.y = i.axis.p2c(i.to)), 
                h.show = !0, t.triggerRedrawOverlay(), !n && p() && a();
            }
            function p() {
                var e = t.getOptions().selection.minSize;
                return Math.abs(h.second.x - h.first.x) >= e && Math.abs(h.second.y - h.first.y) >= e;
            }
            var h = {
                first: {
                    x: -1,
                    y: -1
                },
                second: {
                    x: -1,
                    y: -1
                },
                show: !1,
                active: !1
            }, g = {}, m = null;
            t.clearSelection = d, t.setSelection = f, t.getSelection = r, t.hooks.bindEvents.push(function(e, t) {
                var o = e.getOptions();
                null != o.selection.mode && (t.mousemove(n), t.mousedown(i));
            }), t.hooks.drawOverlay.push(function(t, n) {
                if (h.show && p()) {
                    var i = t.getPlotOffset(), o = t.getOptions();
                    n.save(), n.translate(i.left, i.top);
                    var r = e.color.parse(o.selection.color);
                    n.strokeStyle = r.scale("a", .8).toString(), n.lineWidth = 1, n.lineJoin = o.selection.shape, 
                    n.fillStyle = r.scale("a", .4).toString();
                    var a = Math.min(h.first.x, h.second.x) + .5, s = Math.min(h.first.y, h.second.y) + .5, c = Math.abs(h.second.x - h.first.x) - 1, l = Math.abs(h.second.y - h.first.y) - 1;
                    n.fillRect(a, s, c, l), n.strokeRect(a, s, c, l), n.restore();
                }
            }), t.hooks.shutdown.push(function(t, o) {
                o.unbind("mousemove", n), o.unbind("mousedown", i), m && e(document).unbind("mouseup", m);
            });
        }
        e.plot.plugins.push({
            init: t,
            options: {
                selection: {
                    mode: null,
                    color: "#e8cfac",
                    shape: "round",
                    minSize: 5
                }
            },
            name: "selection",
            version: "1.1"
        });
    }(jQuery);
}, function(e, t) {
    !function(e) {
        function t(e, t) {
            return t * Math.floor(e / t);
        }
        function n(e, t, n, i) {
            if ("function" == typeof e.strftime) return e.strftime(t);
            var o = function(e, t) {
                return e = "" + e, t = "" + (null == t ? "0" : t), 1 == e.length ? t + e : e;
            }, r = [], a = !1, s = e.getHours(), c = s < 12;
            null == n && (n = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]), 
            null == i && (i = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ]);
            var l;
            l = s > 12 ? s - 12 : 0 == s ? 12 : s;
            for (var d = 0; d < t.length; ++d) {
                var u = t.charAt(d);
                if (a) {
                    switch (u) {
                      case "a":
                        u = "" + i[e.getDay()];
                        break;

                      case "b":
                        u = "" + n[e.getMonth()];
                        break;

                      case "d":
                        u = o(e.getDate());
                        break;

                      case "e":
                        u = o(e.getDate(), " ");
                        break;

                      case "h":
                      case "H":
                        u = o(s);
                        break;

                      case "I":
                        u = o(l);
                        break;

                      case "l":
                        u = o(l, " ");
                        break;

                      case "m":
                        u = o(e.getMonth() + 1);
                        break;

                      case "M":
                        u = o(e.getMinutes());
                        break;

                      case "q":
                        u = "" + (Math.floor(e.getMonth() / 3) + 1);
                        break;

                      case "S":
                        u = o(e.getSeconds());
                        break;

                      case "y":
                        u = o(e.getFullYear() % 100);
                        break;

                      case "Y":
                        u = "" + e.getFullYear();
                        break;

                      case "p":
                        u = c ? "am" : "pm";
                        break;

                      case "P":
                        u = c ? "AM" : "PM";
                        break;

                      case "w":
                        u = "" + e.getDay();
                    }
                    r.push(u), a = !1;
                } else "%" == u ? a = !0 : r.push(u);
            }
            return r.join("");
        }
        function i(e) {
            function t(e, t, n, i) {
                e[t] = function() {
                    return n[i].apply(n, arguments);
                };
            }
            var n = {
                date: e
            };
            void 0 != e.strftime && t(n, "strftime", e, "strftime"), t(n, "getTime", e, "getTime"), 
            t(n, "setTime", e, "setTime");
            for (var i = [ "Date", "Day", "FullYear", "Hours", "Milliseconds", "Minutes", "Month", "Seconds" ], o = 0; o < i.length; o++) t(n, "get" + i[o], e, "getUTC" + i[o]), 
            t(n, "set" + i[o], e, "setUTC" + i[o]);
            return n;
        }
        function o(e, t) {
            if ("browser" == t.timezone) return new Date(e);
            if (t.timezone && "utc" != t.timezone) {
                if ("undefined" != typeof timezoneJS && "undefined" != typeof timezoneJS.Date) {
                    var n = new timezoneJS.Date();
                    return n.setTimezone(t.timezone), n.setTime(e), n;
                }
                return i(new Date(e));
            }
            return i(new Date(e));
        }
        function r(i) {
            i.hooks.processOptions.push(function(i, r) {
                e.each(i.getAxes(), function(e, i) {
                    var r = i.options;
                    "time" == r.mode && (i.tickGenerator = function(e) {
                        var n = [], i = o(e.min, r), a = 0, c = r.tickSize && "quarter" === r.tickSize[1] || r.minTickSize && "quarter" === r.minTickSize[1] ? d : l;
                        null != r.minTickSize && (a = "number" == typeof r.tickSize ? r.tickSize : r.minTickSize[0] * s[r.minTickSize[1]]);
                        for (var u = 0; u < c.length - 1 && !(e.delta < (c[u][0] * s[c[u][1]] + c[u + 1][0] * s[c[u + 1][1]]) / 2 && c[u][0] * s[c[u][1]] >= a); ++u) ;
                        var f = c[u][0], p = c[u][1];
                        if ("year" == p) {
                            if (null != r.minTickSize && "year" == r.minTickSize[1]) f = Math.floor(r.minTickSize[0]); else {
                                var h = Math.pow(10, Math.floor(Math.log(e.delta / s.year) / Math.LN10)), g = e.delta / s.year / h;
                                f = g < 1.5 ? 1 : g < 3 ? 2 : g < 7.5 ? 5 : 10, f *= h;
                            }
                            f < 1 && (f = 1);
                        }
                        e.tickSize = r.tickSize || [ f, p ];
                        var m = e.tickSize[0];
                        p = e.tickSize[1];
                        var v = m * s[p];
                        "second" == p ? i.setSeconds(t(i.getSeconds(), m)) : "minute" == p ? i.setMinutes(t(i.getMinutes(), m)) : "hour" == p ? i.setHours(t(i.getHours(), m)) : "month" == p ? i.setMonth(t(i.getMonth(), m)) : "quarter" == p ? i.setMonth(3 * t(i.getMonth() / 3, m)) : "year" == p && i.setFullYear(t(i.getFullYear(), m)), 
                        i.setMilliseconds(0), v >= s.minute && i.setSeconds(0), v >= s.hour && i.setMinutes(0), 
                        v >= s.day && i.setHours(0), v >= 4 * s.day && i.setDate(1), v >= 2 * s.month && i.setMonth(t(i.getMonth(), 3)), 
                        v >= 2 * s.quarter && i.setMonth(t(i.getMonth(), 6)), v >= s.year && i.setMonth(0);
                        var _, x = 0, b = Number.NaN;
                        do if (_ = b, b = i.getTime(), n.push(b), "month" == p || "quarter" == p) if (m < 1) {
                            i.setDate(1);
                            var k = i.getTime();
                            i.setMonth(i.getMonth() + ("quarter" == p ? 3 : 1));
                            var w = i.getTime();
                            i.setTime(b + x * s.hour + (w - k) * m), x = i.getHours(), i.setHours(0);
                        } else i.setMonth(i.getMonth() + m * ("quarter" == p ? 3 : 1)); else "year" == p ? i.setFullYear(i.getFullYear() + m) : i.setTime(b + v); while (b < e.max && b != _);
                        return n;
                    }, i.tickFormatter = function(e, t) {
                        var i = o(e, t.options);
                        if (null != r.timeformat) return n(i, r.timeformat, r.monthNames, r.dayNames);
                        var a, c = t.options.tickSize && "quarter" == t.options.tickSize[1] || t.options.minTickSize && "quarter" == t.options.minTickSize[1], l = t.tickSize[0] * s[t.tickSize[1]], d = t.max - t.min, u = r.twelveHourClock ? " %p" : "", f = r.twelveHourClock ? "%I" : "%H";
                        a = l < s.minute ? f + ":%M:%S" + u : l < s.day ? d < 2 * s.day ? f + ":%M" + u : "%b %d " + f + ":%M" + u : l < s.month ? "%b %d" : c && l < s.quarter || !c && l < s.year ? d < s.year ? "%b" : "%b %Y" : c && l < s.year ? d < s.year ? "Q%q" : "Q%q %Y" : "%Y";
                        var p = n(i, a, r.monthNames, r.dayNames);
                        return p;
                    });
                });
            });
        }
        var a = {
            xaxis: {
                timezone: null,
                timeformat: null,
                twelveHourClock: !1,
                monthNames: null
            }
        }, s = {
            second: 1e3,
            minute: 6e4,
            hour: 36e5,
            day: 864e5,
            month: 2592e6,
            quarter: 7776e6,
            year: 525949.2 * 60 * 1e3
        }, c = [ [ 1, "second" ], [ 2, "second" ], [ 5, "second" ], [ 10, "second" ], [ 30, "second" ], [ 1, "minute" ], [ 2, "minute" ], [ 5, "minute" ], [ 10, "minute" ], [ 30, "minute" ], [ 1, "hour" ], [ 2, "hour" ], [ 4, "hour" ], [ 8, "hour" ], [ 12, "hour" ], [ 1, "day" ], [ 2, "day" ], [ 3, "day" ], [ .25, "month" ], [ .5, "month" ], [ 1, "month" ], [ 2, "month" ] ], l = c.concat([ [ 3, "month" ], [ 6, "month" ], [ 1, "year" ] ]), d = c.concat([ [ 1, "quarter" ], [ 2, "quarter" ], [ 1, "year" ] ]);
        e.plot.plugins.push({
            init: r,
            options: a,
            name: "time",
            version: "1.0"
        }), e.plot.formatDate = n, e.plot.dateGenerator = o;
    }(jQuery);
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e) {
            function t(e, t, n, i, r, s) {
                var c = {
                    cursor: s.__CURSOR,
                    time: r,
                    message: n,
                    service: e
                };
                return i > 1 && (c.count = i), "abrt-notification" === e ? (c.problem = !0, c.service = s.PROBLEM_BINARY) : t < 4 && (c.warning = !0), 
                o.render(a, c);
            }
            function n() {
                return u;
            }
            function i(e) {
                return o.render(r, {
                    day: e
                });
            }
            function l(e) {
                var t = document.createElement("div");
                return t.innerHTML = e.trim(), t.children[0];
            }
            e.jquery && (e = e[0]), o.parse(r), o.parse(a), o.parse(s);
            var d = c("Reboot"), u = o.render(s, {
                message: d
            });
            return {
                render_line: t,
                render_day_header: i,
                render_reboot_separator: n,
                append: function(t) {
                    "string" == typeof t && (t = l(t)), e.appendChild(t);
                },
                prepend: function(t) {
                    "string" == typeof t && (t = l(t)), e.firstChild ? e.insertBefore(t, e.firstChild) : e.appendChild(t);
                },
                remove_last: function() {
                    e.lastChild && e.removeChild(e.lastChild);
                },
                remove_first: function() {
                    e.firstChild && e.removeChild(e.firstChild);
                }
            };
        }
        var i = n(3), o = n(5), r = n(12), a = n(13), s = n(14), c = i.gettext, l = i.gettext, d = {};
        d.journalctl = function() {
            function e() {
                var e, t;
                if (u.length && d.length > 0) for (e = d, d = [], t = 0; t < u.length; t++) u[t].apply(s, [ e ]); else window.clearInterval(f), 
                f = null;
            }
            var t, n, o = [], r = {
                follow: !0
            };
            for (t = 0; t < arguments.length; t++) if (n = arguments[t], "string" == typeof n) o.push(n); else if ("object" == typeof n) {
                if (!(n instanceof Array)) {
                    i.extend(r, n);
                    break;
                }
                o.push.apply(o, n);
            } else console.warn("journal.journalctl called with invalid argument:", n);
            void 0 === r.count && (r.follow ? r.count = 10 : r.count = null);
            var a = [ "journalctl", "-q", "--output=json" ];
            r.count ? a.push("--lines=" + r.count) : a.push("--no-tail"), r.directory && a.push("--directory=" + r.directory), 
            r.boot ? a.push("--boot=" + r.boot) : void 0 !== r.boot && a.push("--boot"), r.since && a.push("--since=" + r.since), 
            r.until && a.push("--until=" + r.until), r.cursor && a.push("--cursor=" + r.cursor), 
            r.after && a.push("--after=" + r.after), r.reverse ? a.push("--reverse") : r.follow && a.push("--follow"), 
            a.push("--"), a.push.apply(a, o);
            var s, c = new i.defer(), l = "", d = [], u = [], f = null, p = i.spawn(a, {
                host: r.host,
                batch: 8192,
                latency: 300,
                superuser: "try"
            }).stream(function(t) {
                l && (t = l + t), l = "";
                var n = t.split("\n"), i = n.length - 1;
                n.forEach(function(e, t) {
                    if (t == i) l = e; else if (e && 0 !== e.indexOf("-- ")) try {
                        d.push(JSON.parse(e));
                    } catch (t) {
                        console.warn(t, e);
                    }
                }), u.length && null === f && (f = window.setInterval(e, 300));
            }).done(function() {
                e(), c.resolve(d);
            }).fail(function(t) {
                "cancelled" == t.problem || 1 === t.exit_status ? (e(), c.resolve(d)) : c.reject(t);
            }).always(function() {
                window.clearInterval(f);
            });
            return s = c.promise(), s.stream = function(e) {
                return u.push(e), this;
            }, s.stop = function() {
                p.close("cancelled");
            }, s;
        }, d.printable = function(e) {
            return void 0 === e || null === e ? c("[no data]") : "string" == typeof e ? e : void 0 !== e.length ? i.format(c("[$0 bytes of binary data]"), e.length) : c("[binary data]");
        };
        var u = [ l("month-name", "January"), l("month-name", "February"), l("month-name", "March"), l("month-name", "April"), l("month-name", "May"), l("month-name", "June"), l("month-name", "July"), l("month-name", "August"), l("month-name", "September"), l("month-name", "October"), l("month-name", "November"), l("month-name", "December") ];
        d.renderer = function(e) {
            function n(e) {
                var t = {};
                for (var n in e) t[n] = e[n];
                return t;
            }
            function i(e) {
                function t(e) {
                    var t = e.toFixed();
                    return 1 == t.length && (t = "0" + t), t;
                }
                var n = new Date(e.__REALTIME_TIMESTAMP / 1e3);
                return {
                    cursor: e.__CURSOR,
                    full: e,
                    day: u[n.getMonth()] + " " + n.getDate().toFixed() + ", " + n.getFullYear().toFixed(),
                    time: t(n.getHours()) + ":" + t(n.getMinutes()),
                    bootid: e._BOOT_ID,
                    ident: e.SYSLOG_IDENTIFIER || e._COMM,
                    prio: e.PRIORITY,
                    message: d.printable(e.MESSAGE)
                };
            }
            function o(e, t) {
                return e && t && e.day == t.day && e.bootid == t.bootid && e.ident == t.ident && e.prio == t.prio && e.message == t.message;
            }
            function r(e) {
                return g.render_line(e.entry.ident, e.entry.prio, e.entry.message, e.count, e.last_time, e.entry.full);
            }
            function a() {
                m === v && m.entry && (m = n(v));
            }
            function s() {
                m.header_present && (g.remove_first(), m.header_present = !1), m.line_present && (g.remove_first(), 
                m.line_present = !1), m.entry && (g.prepend(r(m)), m.line_present = !0);
            }
            function c(e) {
                var t = i(e);
                o(m.entry, t) ? (m.count += 1, m.first_time = t.time) : (s(), m.entry && (t.bootid != m.entry.bootid && g.prepend(g.render_reboot_separator()), 
                t.day != m.entry.day && g.prepend(g.render_day_header(m.entry.day))), a(), m.entry = t, 
                m.count = 1, m.first_time = m.last_time = t.time, m.line_present = !1);
            }
            function l() {
                s(), m.entry && (g.prepend(g.render_day_header(m.entry.day)), m.header_present = !0);
            }
            function f() {
                v.line_present && (g.remove_last(), v.line_present = !1), v.entry && (g.append(r(v)), 
                v.line_present = !0);
            }
            function p(e) {
                var t = i(e);
                o(v.entry, t) ? (v.count += 1, v.last_time = t.time) : (f(), v.entry && t.day == v.entry.day || (g.append(g.render_day_header(t.day)), 
                v.header_present = !0), v.entry && t.bootid != v.entry.bootid && g.append(g.render_reboot_separator()), 
                a(), v.entry = t, v.count = 1, v.first_time = v.last_time = t.time, v.line_present = !1);
            }
            function h() {
                f();
            }
            var g;
            g = e.render_line ? e : t(e);
            var m, v;
            return m = v = {}, {
                prepend: c,
                prepend_flush: l,
                append: p,
                append_flush: h
            };
        }, d.logbox = function(e, t) {
            function n() {
                for (var e = d.renderer(o); o.firstChild; ) o.removeChild(o.firstChild);
                for (var t = 0; t < i.length; t++) e.prepend(i[t]);
                e.prepend_flush(), i.length > 0 ? o.removeAttribute("hidden") : o.setAttribute("hidden", "hidden");
            }
            var i = [], o = document.createElement("div");
            n();
            var r = d.journalctl(e, {
                count: t
            }).stream(function(e) {
                i = i.concat(e), i.length > t && (i = i.slice(-t)), n();
            }).fail(function(e) {
                o.appendChild(document.createTextNode(e.message)), o.removeAttribute("hidden");
            });
            return r.promise(o);
        }, e.exports = d;
    }();
}, function(e, t) {
    e.exports = '<div class="panel-heading">{{day}}</div>\n';
}, function(e, t) {
    e.exports = '<div class="cockpit-logline" data-cursor="{{cursor}}">\n  <div class="cockpit-log-warning">{{#warning}}\n    <i class="fa fa-exclamation-triangle"></i>\n  {{/warning}}{{#problem}}\n    <i class="fa fa-times-circle-o"></i>\n  {{/problem}}\n  </div>\n  <div class="cockpit-log-time">{{time}}</div>\n  <span class="cockpit-log-message">{{message}}</span>\n  {{! if we have count (repeated messages), show service name and badge - otherwise just the service }}\n  {{#count}}\n  <div class="cockpit-log-service-container">\n    <div class="cockpit-log-service-reduced">{{service}}</div>\n    <span class="badge">{{count}}&#160;<i class="fa fa-caret-right"></i></span>\n  </div>\n  {{/count}}{{^count}}\n  <div class="cockpit-log-service">{{service}}</div>\n  {{/count}}\n</div>\n';
}, function(e, t) {
    e.exports = '<div class="cockpit-logline">\n  {{! placeholders for correct message alignment }}\n  <div class="cockpit-log-warning"></div>\n  <span class="cockpit-log-message cockpit-logmsg-reboot">{{message}}</span>\n</div>\n';
}, function(e, t, n) {
    "use strict";
    !function() {
        function e() {
            return x += 1, "unique" + -new Date() + -x;
        }
        function t(e) {
            e.find(".dialog-error").remove(), e.find(".has-error").removeClass("has-error"), 
            e.find(".dialog-wrapper").off(".dialog-error"), e.off(".dialog-error");
        }
        function i(e, t) {
            var n, i, o = e.parent();
            o.is(".dialog-wrapper") || (o = v("<div class='dialog-wrapper'>").insertBefore(e), 
            n = e.next(), n.is(".bootstrap-select") && n.selectpicker && (n.remove(), i = n.selectpicker), 
            e.remove().appendTo(o), i && i.call(e));
            var r;
            t.message && (r = v("<div class='dialog-error help-block'>").text(t.message)), o.addClass("has-error").append(r), 
            o.hasClass("error-keep") || o.on("keypress.dialog-error change.dialog-error", function() {
                o.removeClass("has-error").find(".dialog-error.help-block").css("visibility", "hidden");
            });
        }
        function o(e, t) {
            var n = v("<div class='alert alert-danger dialog-error'>"), i = t.message || t.toString();
            n.text(i), v("<span class='fa fa-exclamation-triangle'>").prependTo(n), console.warn(i);
            var o = e.find(".modal-footer");
            o.length ? n.prependTo(o) : n.appendTo(e);
        }
        function r(e, n) {
            t(e), 1 == n.length && v.isArray(n[0]) && (n = n[0]);
            var r = !1;
            n.forEach(function(t) {
                var n;
                t && (n = e.find(t.target), n && n.length ? i(n, t) : o(e, t), r = !0);
            }), r && e.on("show.bs.modal.dialog-error", function() {
                t(e);
            });
        }
        function a(e, t) {
            this.promise = e, this.disabled = [], this.handle = t;
        }
        function s(e) {
            var t = e.data("dialog-wait");
            e.data("dialog-wait", null), e.find(".dialog-wait-ct").remove(), e.find(".btn").off(".dialog-wait"), 
            e.off(".dialog-wait"), t && t.disabled.forEach(function(e) {
                e.removeAttr("disabled");
            });
        }
        function c(e, t, n) {
            function i() {
                var n, i = e.data("dialog-wait");
                i && i.promise === t && (s(e), n = t.state(), f || "resolved" == n && i.handle ? e.modal("hide") : "rejected" == n && i.handle && r(e, [ arguments[0] ]));
            }
            function o(n) {
                var i = e.data("dialog-wait");
                i && i.promise === t && ("string" != typeof n && (n = ""), l.text(n));
            }
            if (s(e), !t) return n && e.modal("hide"), e;
            n && r(e, []);
            var c = v("<div class='dialog-wait-ct pull-left'>");
            v("<div class='spinner spinner-sm'>").appendTo(c);
            var l = v("<span>").appendTo(c);
            e.find(".modal-footer button").first().before(c);
            var d = new a(t, n);
            e.data("dialog-wait", d);
            var u = t.cancel || t.close, f = !1, p = e.find(".form-control").add(".btn", e);
            return u && (p = p.not("[data-dismiss]").not(".btn-cancel")), p.each(function() {
                var e = v(this);
                e.attr("disabled") || (d.disabled.push(e), e.attr("disabled", "disabled"));
            }), e.find(".btn[data-dismiss], .btn-cancel").on("click.dialog-wait", function() {
                return f = !0, u && u.apply(t), !1;
            }), e.on("hide.bs.modal.dialog-wait", function() {
                s(e);
            }), t.always(i).progress(o), e;
        }
        function l(t) {
            var n = _.gettext || function(e) {
                return e;
            };
            return t = t.find(".btn-onoff-ct").andSelf().filter(".btn-onoff-ct"), t.each(function(t, i) {
                var o, r, a, s = v(i).attr("data-toggle", "buttons").addClass("btn-group"), c = s.onoff("value"), l = s.find(".btn"), d = s.find("input").first().attr("name") || e();
                for (o = l.length; o < 2; o++) r = v('<input type="radio" autocomplete="off">'), 
                a = document.createTextNode(n(0 === o ? "On" : "Off")), s.append(v('<label class="btn">').append(r, a)), 
                l = null;
                l = l || s.find(".btn"), l.find("input").attr("name", d), u(s, !!c);
            }), t;
        }
        function d(e) {
            return e.find(".btn").first().hasClass("active");
        }
        function u(e, t) {
            return e.each(function(e, n) {
                var i = v(n).find(".btn");
                i.first().toggleClass("active", !!t).find("input").prop("checked", !!t), i.last().toggleClass("active", !t).find("input").prop("checked", !t);
            });
        }
        function f(e, t, n, i) {
            var o = 0;
            i > n ? o = 1 : i < 0 || isNaN(i) ? o = 0 : !isNaN(n) && n > 0 && i >= 0 && (o = i / n), 
            v(t).css("width", 100 * o + "%").next("div").css("margin-left", v(t).css("width")), 
            e.value = o;
        }
        function p(e) {
            f(e, v(e).children("div.slider-bar").first()[0], 1, e.value);
        }
        function h(e) {
            v(e).toggleClass("slider-warning", e.offsetWidth < e.scrollWidth);
        }
        function g(e) {
            v(e).attr("unselectable", "on"), Object.defineProperty(e, "value", {
                get: function() {
                    return parseFloat(this.getAttribute("value"));
                },
                set: function(e) {
                    var t = String(e);
                    t != this.getAttribute("value") && this.setAttribute("value", e);
                }
            }), Object.defineProperty(e, "disabled", {
                get: function() {
                    return !!this.hasAttribute("disabled") && "false" != this.getAttribute("disabled").toLowerCase();
                },
                set: function(e) {
                    this.setAttribute("disabled", e ? "true" : "false");
                }
            }), p(e), h(e), v(e).on("change", function() {
                p(e), v(e).toggleClass("slider-disabled", e.disabled);
            }), e.disabled && v(e).addClass("slider-disabled"), v(e).on("mousedown", function(t) {
                if (e.disabled) return !0;
                var n, i = v(e).offset().left;
                if (v(t.target).hasClass("slider-thumb")) {
                    var o = t.offsetX || t.clientX - v(t.target).offset().left;
                    i += o - v(t.target).outerWidth() / 2, n = v(t.target).parent()[0];
                } else n = v(e).children("div.slider-bar").first()[0], f(e, n, v(e).width(), t.pageX - i), 
                v(e).trigger("change", [ e.value ]), h(e);
                return v(document).on("mousemove.slider", function(t) {
                    return f(e, n, v(e).width(), t.pageX - i), v(e).trigger("change", [ e.value ]), 
                    h(e), !1;
                }).on("mouseup.slider", function(e) {
                    return v(document).off("mousemove.slider").off("mouseup.slider"), !1;
                }), !1;
            });
        }
        function m() {
            v("div.slider").each(function() {
                g(this);
            });
        }
        var v = n(2), _ = n(3), x = 0;
        v.fn.dialog = function(e) {
            return "failure" === e ? r(this, Array.prototype.slice.call(arguments, 1)) : "wait" === e ? c(this, arguments[1]) : "promise" === e ? c(this, arguments[1], !0) : void console.warn("unknown dialog action: " + e);
        }, window.addEventListener("hashchange", function() {
            v(".modal").modal("hide");
        }), v.fn.onoff = function(e) {
            return 0 === arguments.length || "refresh" == e ? l(this) : "value" === e ? 1 === arguments.length ? d(this) : u(this, arguments[1]) : "disabled" == e ? this.find(".btn").toggleClass("disabled", arguments[1]) : void console.warn("unknown switch action: " + e);
        }, v.fn.slider = function(e) {
            var t = this;
            return 0 === arguments.length || "refresh" == e ? (t.each(function() {
                g(this);
            }), t) : void console.warn("unknown slider action: " + e);
        }, v(document).ready(m), v.fn.update_privileged = function(e, t, n) {
            var i = e.allowed !== !1, o = this;
            return o.each(function() {
                var e = "allowed-title";
                "undefined" != typeof v(this).data(e) && v(this).data(e) !== !1 || v(this).data(e, v(this).attr("title") || "");
                var o = {
                    html: !0
                };
                n && (o.placement = n), v(this).tooltip(o), v(this).hasClass("disabled") === i && (v(this).toggleClass("disabled", !i).attr("data-original-title", null), 
                i ? v(this).attr("title", v(this).data(e)) : v(this).attr("title", t), v(this).tooltip("fixTitle"));
            }), o;
        };
    }();
}, function(e, t) {}, , function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {} ]);
//# sourceMappingURL=network.min.js.map