!function(t) {
    function e(i) {
        if (n[i]) return n[i].exports;
        var o = n[i] = {
            exports: {},
            id: i,
            loaded: !1
        };
        return t[i].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;
    }
    var n = {};
    return e.m = t, e.c = n, e.p = "", e(0);
}([ function(t, e, n) {
    n(1), t.exports = n(4);
}, function(t, e, n) {
    "use strict";
    function i() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(t) {
            var e = 16 * Math.random() | 0, n = "x" === t ? e : 3 & e | 8;
            return n.toString(16);
        });
    }
    function o(t) {
        var e = t.message || t || "???";
        console.warn(e), J("#error-popup-message").text(e), J('.modal[role="dialog"]').modal("hide"), 
        J("#error-popup").modal("show");
    }
    function r(t, e, n) {
        function i(t) {
            return J("<li>", {
                value: t.choice
            }).append(J("<a>").text(t.title));
        }
        function o(t) {
            J("button span", c).text(J("li[value='" + t + "']", c).text()), a = t;
        }
        function r() {
            return a;
        }
        var a = e[0].choice, s = J('<button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">').append(J('<span class="pull-left"></span>'), J('<div class="caret"></div>')), c = J('<div class="btn-group bootstrap-select dropdown">').append(s, J('<ul class="dropdown-menu">').append(e.map(i)));
        return c.on("click", "li", function() {
            a = J(this).attr("value"), o(a), t(a);
        }), o(a), J.data(c[0], "cockpit-select-btn-funcs", {
            select: o,
            selected: r
        }), n && c.addClass(n), c;
    }
    function a(t, e) {
        J.data(t[0], "cockpit-select-btn-funcs").select(e);
    }
    function s(t) {
        return J.data(t[0], "cockpit-select-btn-funcs").selected();
    }
    function c(t) {
        var e = (t || {}).Settings || {};
        return e.connection || {};
    }
    function l() {
        function t() {
            console.warn.apply(console, arguments);
        }
        function e(t) {
            return function(e) {
                return a(e, t);
            };
        }
        function n(t) {
            return function(e) {
                return e.map(t);
            };
        }
        function i(t) {
            return t[" priv"];
        }
        function o() {
            B += 1;
        }
        function r() {
            B -= 1, 0 === B && _();
        }
        function a(t, e) {
            function n() {
                this[" priv"] = {}, i(this).type = e, i(this).path = t;
                for (var n in e.props) this[n] = e.props[n].def;
            }
            return "/" == t ? null : (L[t] || (n.prototype = e.prototype, L[t] = new n(), e.refresh && e.refresh(L[t]), 
            e.exporters && e.exporters[0] && e.exporters[0](L[t])), L[t]);
        }
        function s(t) {
            return L[t] || null;
        }
        function l(t) {
            var e = L[t];
            e && (i(e).type.drop && i(e).type.drop(e), delete L[t], _());
        }
        function d(t, e) {
            var n, o, r;
            o = i(t).type.props;
            for (n in o) r = e[o[n].prop || n], void 0 !== r && (o[n].conv && (r = o[n].conv(r)), 
            r !== t[n] && (t[n] = r, o[n].trigger && o[n].trigger(t)));
        }
        function u(t) {
            var e = {};
            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n].v);
            return e;
        }
        function f(t) {
            return t && i(t).path ? i(t).path : "/";
        }
        function p(t, e, n) {
            var i = new J.Deferred();
            return j.call(f(t), e, n, Array.prototype.slice.call(arguments, 3)).fail(function(t) {
                i.reject(t);
            }).done(function(t) {
                i.resolve.apply(i, t);
            }), i.promise();
        }
        function h(t) {
            t.forEach(function(t) {
                t.exporters && t.exporters.length > q && (q = t.exporters.length), t.interfaces.forEach(function(e) {
                    Y[e] = t;
                });
            });
        }
        function g(t, e, n, a) {
            var c = s(t);
            if (c) {
                var l = i(c).type;
                "PropertiesChanged" == n ? (o(), d(c, u(a[0])), r()) : l.signals && l.signals[n] && l.signals[n](c, a);
            }
        }
        function m(t, e, n) {
            var i = Y[e];
            i && d(a(t, i), n);
        }
        function v(t, e) {
            l(t);
        }
        function _() {
            function t() {
                var t, e, n, o;
                for (t = 0; t < q; t++) for (e in L) n = L[e], o = i(n).type.exporters, o && o[t] && o[t](n);
                J($).trigger("changed");
            }
            H || (H = !0, window.setTimeout(function() {
                H = !1, t();
            }, 300));
        }
        function x(t) {
            return [ Q.ip4_to_text(t[0]), Q.ip_prefix_to_text(t[1]), Q.ip4_to_text(t[2], !0) ];
        }
        function b(t) {
            return [ Q.ip4_from_text(t[0]), Q.ip4_prefix_from_text(t[1]), Q.ip4_from_text(t[2], !0) ];
        }
        function k(t) {
            return [ Q.ip4_to_text(t[0]), Q.ip_prefix_to_text(t[1]), Q.ip4_to_text(t[2], !0), Q.ip_metric_to_text(t[3]) ];
        }
        function w(t) {
            return [ Q.ip4_from_text(t[0]), Q.ip4_prefix_from_text(t[1]), Q.ip4_from_text(t[2], !0), Q.ip_metric_from_text(t[3]) ];
        }
        function y(t) {
            return [ Q.ip6_to_text(t[0]), Q.ip_prefix_to_text(t[1]), Q.ip6_to_text(t[2], !0) ];
        }
        function M(t) {
            return [ Q.ip6_from_text(t[0]), parseInt(t[1], 10) || 64, Q.ip6_from_text(t[2], !0) ];
        }
        function C(t) {
            return [ Q.ip6_to_text(t[0]), Q.ip_prefix_to_text(t[1]), Q.ip6_to_text(t[2], !0), Q.ip_metric_to_text(t[1]) ];
        }
        function S(t) {
            return [ Q.ip6_from_text(t[0]), Q.ip_prefix_from_text(t[1]), Q.ip6_from_text(t[2], !0), Q.ip_metric_from_text(t[3]) ];
        }
        function T(t) {
            function e(e, n, i) {
                return t[e] && t[e][n] ? t[e][n].v : i;
            }
            function n(t, n, i, o) {
                return {
                    method: e(t, "method", "auto"),
                    ignore_auto_dns: e(t, "ignore-auto-dns", !1),
                    ignore_auto_routes: e(t, "ignore-auto-routes", !1),
                    addresses: e(t, "addresses", []).map(n),
                    dns: e(t, "dns", []).map(o),
                    dns_search: e(t, "dns-search", []),
                    routes: e(t, "routes", []).map(i)
                };
            }
            function i(t) {
                try {
                    return JSON.parse(t);
                } catch (t) {
                    return null;
                }
            }
            var o = {
                connection: {
                    type: e("connection", "type"),
                    uuid: e("connection", "uuid"),
                    interface_name: e("connection", "interface-name"),
                    timestamp: e("connection", "timestamp", 0),
                    id: e("connection", "id", et("Unknown")),
                    autoconnect: e("connection", "autoconnect", !0),
                    slave_type: e("connection", "slave-type"),
                    master: e("connection", "master")
                }
            };
            return t.connection.master || (o.ipv4 = n("ipv4", x, k, Q.ip4_to_text), o.ipv6 = n("ipv6", y, C, Q.ip6_to_text)), 
            t["802-3-ethernet"] && (o.ethernet = {
                mtu: e("802-3-ethernet", "mtu")
            }), t.bond && (o.bond = {
                options: J.extend({}, e("bond", "options", {})),
                interface_name: e("bond", "interface-name")
            }), t.team && (o.team = {
                config: i(e("team", "config", "{}")),
                interface_name: e("team", "interface-name")
            }), (t["team-port"] || "team" == o.connection.slave_type) && (o.team_port = {
                config: i(e("team-port", "config", "{}"))
            }), t.bridge && (o.bridge = {
                interface_name: e("bridge", "interface-name"),
                stp: e("bridge", "stp", !0),
                priority: e("bridge", "priority", 32768),
                forward_delay: e("bridge", "forward-delay", 15),
                hello_time: e("bridge", "hello-time", 2),
                max_age: e("bridge", "max-age", 20),
                ageing_time: e("bridge", "ageing-time", 300)
            }), (t["bridge-port"] || "bridge" == o.connection.slave_type) && (o.bridge_port = {
                priority: e("bridge-port", "priority", 32),
                path_cost: e("bridge-port", "path-cost", 100),
                hairpin_mode: e("bridge-port", "hairpin-mode", !1)
            }), t.vlan && (o.vlan = {
                parent: e("vlan", "parent"),
                id: e("vlan", "id"),
                interface_name: e("vlan", "interface-name")
            }), o;
        }
        function I(t, e) {
            function n(t, e, n, i, r) {
                void 0 === i && (i = r), o[t] || (o[t] = {}), void 0 !== i ? o[t][e] = X.variant(n, i) : delete o[t][e];
            }
            function i(e, i, r, a, s, c, l) {
                n(e, "method", "s", t[e].method), n(e, "ignore-auto-dns", "b", t[e].ignore_auto_dns), 
                n(e, "ignore-auto-routes", "b", t[e].ignore_auto_routes);
                var d = t[e].addresses;
                d && n(e, "addresses", i, d.map(r));
                var u = t[e].dns;
                u && n(e, "dns", c, u.map(l)), n(e, "dns-search", "as", t[e].dns_search);
                var f = t[e].routes;
                f && n(e, "routes", a, f.map(s)), delete o[e]["address-labels"];
            }
            var o = J.extend(!0, {}, e);
            return n("connection", "id", "s", t.connection.id), n("connection", "autoconnect", "b", t.connection.autoconnect), 
            n("connection", "uuid", "s", t.connection.uuid), n("connection", "interface-name", "s", t.connection.interface_name), 
            n("connection", "type", "s", t.connection.type), n("connection", "slave-type", "s", t.connection.slave_type), 
            n("connection", "master", "s", t.connection.master), t.ipv4 ? i("ipv4", "aau", b, "aau", w, "au", Q.ip4_from_text) : delete o.ipv4, 
            t.ipv6 ? i("ipv6", "a(ayuay)", M, "a(ayuayu)", S, "aay", Q.ip6_from_text) : delete o.ipv6, 
            t.bond ? (n("bond", "options", "a{ss}", t.bond.options), n("bond", "interface-name", "s", t.bond.interface_name)) : delete o.bond, 
            t.team ? (n("team", "config", "s", JSON.stringify(t.team.config)), n("team", "interface-name", "s", t.team.interface_name)) : delete o.team, 
            t.team_port ? n("team-port", "config", "s", JSON.stringify(t.team_port.config)) : delete o["team-port"], 
            t.bridge ? (n("bridge", "interface-name", "s", t.bridge.interface_name), n("bridge", "stp", "b", t.bridge.stp), 
            n("bridge", "priority", "u", t.bridge.priority), n("bridge", "forward-delay", "u", t.bridge.forward_delay), 
            n("bridge", "hello-time", "u", t.bridge.hello_time), n("bridge", "max-age", "u", t.bridge.max_age), 
            n("bridge", "ageing-time", "u", t.bridge.ageing_time)) : delete o.bridge, t.bridge_port ? (n("bridge-port", "priority", "u", t.bridge_port.priority), 
            n("bridge-port", "path-cost", "u", t.bridge_port.path_cost), n("bridge-port", "hairpin-mode", "b", t.bridge_port.hairpin_mode)) : delete o["bridge-port"], 
            t.vlan ? (n("vlan", "parent", "s", t.vlan.parent), n("vlan", "id", "u", t.vlan.id), 
            n("vlan", "interface-name", "s", t.vlan.interface_name), n("vlan", "flags", "u", 1)) : delete o.vlan, 
            t.ethernet ? n("802-3-ethernet", "mtu", "u", t.ethernet.mtu) : delete o["802-3-ethernet"], 
            o;
        }
        function N(t) {
            switch (t) {
              case 0:
                return "unknown";

              case 1:
                return "ethernet";

              case 2:
                return "wifi";

              case 3:
                return "unused1";

              case 4:
                return "unused2";

              case 5:
                return "bt";

              case 6:
                return "olpc_mesh";

              case 7:
                return "wimax";

              case 8:
                return "modem";

              case 9:
                return "infiniband";

              case 10:
                return "bond";

              case 11:
                return "vlan";

              case 12:
                return "adsl";

              case 13:
                return "bridge";

              case 14:
                return "loopback";

              case 15:
                return "team";

              case 16:
                return "tun";

              case 17:
                return "ip_tunnel";

              case 18:
                return "macvlan";

              case 19:
                return "vxlan";

              case 20:
                return "veth";

              default:
                return "";
            }
        }
        function A(t) {
            switch (t) {
              case 0:
                return "?";

              case 10:
                return "";

              case 20:
                return et("Not available");

              case 30:
                return et("Inactive");

              case 40:
                return et("Preparing");

              case 50:
                return et("Configuring");

              case 60:
                return et("Authenticating");

              case 70:
                return et("Configuring IP");

              case 80:
                return et("Checking IP");

              case 90:
                return et("Waiting");

              case 100:
                return et("Active");

              case 110:
                return et("Deactivating");

              case 120:
                return et("Failed");

              default:
                return "";
            }
        }
        function D(t, e) {
            var n = c(t);
            n.uuid && delete Z[n.uuid], t.Settings = e, n = c(t), n.uuid && (Z[n.uuid] = t);
        }
        function z(e) {
            o(), e.Settings || (e.Settings = {
                connection: {}
            }), j.call(f(e), "org.freedesktop.NetworkManager.Settings.Connection", "GetSettings").always(r).fail(t).done(function(t) {
                var n = t[0];
                n && (i(e).orig = n, D(e, T(n)));
            });
        }
        function O(t) {
            0 === t.Udi.indexOf("/sys/") && (o(), X.spawn([ "udevadm", "info", t.Udi ], {
                err: "message"
            }).done(function(e) {
                function n(t, e, n) {
                    var o = "E: " + e + "=";
                    0 === t.indexOf(o) && (i[n] = t.substr(o.length));
                }
                var i = {};
                e.split("\n").forEach(function(t) {
                    n(t, "ID_MODEL_FROM_DATABASE", "IdModel"), n(t, "ID_VENDOR_FROM_DATABASE", "IdVendor");
                }), d(t, i);
            }).fail(function(t) {
                4 !== t.exit_status && (console.warn(t.message), console.warn(t));
            }).always(r));
        }
        function W(t) {
            z(t);
        }
        function P(t) {
            var e = a(":interface:" + t, at);
            return e.Name = t, e;
        }
        function E(t) {
            return s(":interface:" + t);
        }
        function F(t, e) {
            function n(t) {
                return t.split(".").map(function(t) {
                    return t ? parseInt(t, 10) : 0;
                });
            }
            var i, o = n(t), r = n(e), a = Math.min(o.length, r.length);
            for (i = 0; i < a; i++) if (o[i] != r[i]) return o[i] - r[i];
            return o.length - r.length;
        }
        var $ = this, R = {};
        X.manifests.network && X.manifests.network.hacks && (R = X.manifests.network.hacks);
        var U = {};
        R.with_networkmanager_needs_root && (U.superuser = "try");
        var j = X.dbus("org.freedesktop.NetworkManager", U);
        $.client = j;
        var H, L = {}, B = 0, Y = {}, q = 0;
        j.call("/org/freedesktop/NetworkManager", "org.freedesktop.DBus.Properties", "Get", [ "org.freedesktop.NetworkManager", "State" ], {
            flags: ""
        }).fail(t).done(function(t, e) {
            e.flags && (e.flags.indexOf(">") !== -1 ? Q.set_byteorder("be") : e.flags.indexOf("<") !== -1 && Q.set_byteorder("le"));
        });
        var G = j.subscribe({}, g), V = j.watch({});
        J(j).on("notify", function(t, e) {
            J.each(e, function(t, e) {
                J.each(e, function(e, n) {
                    n ? m(t, e, n) : v(t, e);
                });
            });
        }), $.close = function() {
            G.remove(), V.remove(), J(j).off("notify"), j.close("unused");
        };
        var K, Z = {}, tt = {
            interfaces: [ "org.freedesktop.NetworkManager.IP4Config" ],
            props: {
                Addresses: {
                    conv: n(x),
                    def: []
                }
            }
        }, nt = {
            interfaces: [ "org.freedesktop.NetworkManager.IP6Config" ],
            props: {
                Addresses: {
                    conv: n(y),
                    def: []
                }
            }
        }, it = {
            interfaces: [ "org.freedesktop.NetworkManager.Settings.Connection" ],
            props: {
                Unsaved: {}
            },
            signals: {
                Updated: W
            },
            refresh: z,
            drop: function(t) {
                D(t, null);
            },
            prototype: {
                copy_settings: function() {
                    return J.extend(!0, {}, this.Settings);
                },
                apply_settings: function(t) {
                    try {
                        return D(this, t), p(this, "org.freedesktop.NetworkManager.Settings.Connection", "Update", I(t, i(this).orig));
                    } catch (t) {
                        return X.reject(t);
                    }
                },
                activate: function(t, e) {
                    return p(a("/org/freedesktop/NetworkManager", K), "org.freedesktop.NetworkManager", "ActivateConnection", f(this), f(t), f(e));
                },
                delete_: function() {
                    return p(this, "org.freedesktop.NetworkManager.Settings.Connection", "Delete");
                }
            },
            exporters: [ function(t) {
                t.Masters = [], t.Slaves = [], t.Interfaces = [];
            }, null, function(t) {
                function e(e) {
                    var n = c(e), i = c(t);
                    n.type == i.slave_type && (t.Masters.push(e), e.Slaves.push(t));
                }
                var n, i, o = c(t);
                o.slave_type && (n = Z[o.master], n ? (t.Masters.push(n), n.Slaves.push(t)) : (i = E(o.master), 
                i && (i.Device ? i.Device.AvailableConnections.forEach(e) : i.Connections.forEach(e))));
            } ]
        }, ot = {
            interfaces: [ "org.freedesktop.NetworkManager.Connection.Active" ],
            props: {
                Connection: {
                    conv: e(it)
                },
                Ip4Config: {
                    conv: e(tt)
                },
                Ip6Config: {
                    conv: e(nt)
                }
            },
            prototype: {
                deactivate: function() {
                    return p(a("/org/freedesktop/NetworkManager", K), "org.freedesktop.NetworkManager", "DeactivateConnection", f(this));
                }
            }
        }, rt = {
            interfaces: [ "org.freedesktop.NetworkManager.Device", "org.freedesktop.NetworkManager.Device.Wired", "org.freedesktop.NetworkManager.Device.Bond", "org.freedesktop.NetworkManager.Device.Team", "org.freedesktop.NetworkManager.Device.Bridge", "org.freedesktop.NetworkManager.Device.Vlan" ],
            props: {
                DeviceType: {
                    conv: N
                },
                Interface: {},
                StateText: {
                    prop: "State",
                    conv: A,
                    def: et("Unknown")
                },
                State: {},
                HwAddress: {},
                AvailableConnections: {
                    conv: n(e(it)),
                    def: []
                },
                ActiveConnection: {
                    conv: e(ot)
                },
                Ip4Config: {
                    conv: e(tt)
                },
                Ip6Config: {
                    conv: e(nt)
                },
                Udi: {
                    trigger: O
                },
                IdVendor: {
                    def: ""
                },
                IdModel: {
                    def: ""
                },
                Driver: {
                    def: ""
                },
                Carrier: {
                    def: !0
                },
                Speed: {},
                Managed: {
                    def: !1
                }
            },
            prototype: {
                activate: function(t, e) {
                    return p(a("/org/freedesktop/NetworkManager", K), "org.freedesktop.NetworkManager", "ActivateConnection", f(t), f(this), f(e));
                },
                activate_with_settings: function(t, e) {
                    try {
                        return p(a("/org/freedesktop/NetworkManager", K), "org.freedesktop.NetworkManager", "AddAndActivateConnection", I(t), f(this), f(e));
                    } catch (t) {
                        return X.reject(t);
                    }
                },
                disconnect: function() {
                    return p(this, "org.freedesktop.NetworkManager.Device", "Disconnect");
                }
            }
        }, at = {
            interfaces: [],
            exporters: [ function(t) {
                t.Device = null, t.Connections = [], t.MainConnection = null;
            }, null, function(t) {
                function e(e) {
                    (!t.MainConnection || c(t.MainConnection).timestamp < c(e).timestamp) && (t.MainConnection = e);
                }
                return t.Device || 0 !== t.Connections.length ? void (t.Device ? t.Device.AvailableConnections.forEach(function(n) {
                    e(n), n.Interfaces.push(t);
                }) : t.Connections.forEach(function(n) {
                    e(n), n.Interfaces.push(t);
                })) : void l(i(t).path);
            } ]
        }, st = {
            interfaces: [ "org.freedesktop.NetworkManager.Settings" ],
            props: {
                Connections: {
                    conv: n(e(it)),
                    def: []
                }
            },
            prototype: {
                add_connection: function(t) {
                    var e = J.Deferred();
                    try {
                        p(this, "org.freedesktop.NetworkManager.Settings", "AddConnection", I(t, {})).done(function(t) {
                            e.resolve(a(t, it));
                        }).fail(function(t) {
                            e.reject(t);
                        });
                    } catch (t) {
                        e.reject(t);
                    }
                    return e.promise();
                }
            },
            exporters: [ null, function(t) {
                t.Connections && t.Connections.forEach(function(t) {
                    function e(e) {
                        e && P(e).Connections.push(t);
                    }
                    t.Settings && (t.Settings.bond && e(t.Settings.bond.interface_name), t.Settings.team && e(t.Settings.team.interface_name), 
                    t.Settings.bridge && e(t.Settings.bridge.interface_name), t.Settings.vlan && e(t.Settings.vlan.interface_name));
                });
            } ]
        };
        return K = {
            interfaces: [ "org.freedesktop.NetworkManager" ],
            props: {
                Version: {},
                Devices: {
                    conv: n(e(rt)),
                    def: []
                },
                ActiveConnections: {
                    conv: n(e(ot)),
                    def: []
                }
            },
            prototype: {
                checkpoint_create: function(t) {
                    var e = J.Deferred();
                    return p(this, "org.freedesktop.NetworkManager", "CheckpointCreate", [], t, 0).done(function(t) {
                        e.resolve(t);
                    }).fail(function(t) {
                        "org.freedesktop.DBus.Error.UnknownMethod" != t.name && console.warn(t.message || t), 
                        e.resolve(null);
                    }), e.promise();
                },
                checkpoint_destroy: function(t) {
                    return t ? p(this, "org.freedesktop.NetworkManager", "CheckpointDestroy", t) : J.when();
                },
                checkpoint_rollback: function(t) {
                    return t ? p(this, "org.freedesktop.NetworkManager", "CheckpointRollback", t) : J.when();
                }
            },
            exporters: [ null, function(t) {
                t.Devices.forEach(function(t) {
                    if (t.Interface) {
                        var e = P(t.Interface);
                        e.Device = t;
                    }
                });
            } ]
        }, ot.props.Master = {
            conv: e(rt)
        }, rt.props.Slaves = {
            conv: n(e(rt)),
            def: []
        }, $.list_interfaces = function() {
            var t, e, n = [];
            for (t in L) e = L[t], i(e).type === at && n.push(e);
            return n.sort(function(t, e) {
                return t.Name.localeCompare(e.Name);
            });
        }, $.find_interface = E, $.get_manager = function() {
            return a("/org/freedesktop/NetworkManager", K);
        }, $.get_settings = function() {
            return a("/org/freedesktop/NetworkManager/Settings", st);
        }, $.at_least_version = function(t) {
            return F($.get_manager().Version, t) >= 0;
        }, h([ K, st, rt, tt, nt, it, ot ]), a("/org/freedesktop/NetworkManager", K), a("/org/freedesktop/NetworkManager/Settings", st), 
        $;
    }
    function d(t) {
        return J("<a>").text(t).click(function() {
            X.location.go([ t ]);
        });
    }
    function u(t) {
        return t ? 100 == t.State && t.Carrier === !1 ? et("No carrier") : t.Managed || t.ActiveConnection || t.Ip4Config && 0 !== t.Ip4Config.Addresses.length || t.Ip6Config && 0 !== t.Ip6Config.Addresses.length ? t.StateText : et("Inactive") : et("Inactive");
    }
    function f(t) {
        var e = J("<span>").append(p(t.Interfaces.map(function(t) {
            return J("<a>").text(t.Name).click(function() {
                X.location.go([ t.Name ]);
            });
        }), ", "));
        return e;
    }
    function p(t, e) {
        for (var n = [], i = 0; i < t.length; i++) n.push(t[i]), i < t.length - 1 && n.push(e);
        return n;
    }
    function h(t, e, n) {
        function i(t) {
            return 0 === t.indexOf("fe8") || 0 === t.indexOf("fe9") || 0 === t.indexOf("fea") || 0 === t.indexOf("feb");
        }
        var o, r = [];
        if (!t) return "";
        if (o = t.ActiveConnection, o && o.Master) return J("<span>").append(J("<span>").text(et("Part of ")), e ? d(o.Master.Interface) : o.Master.Interface);
        var a = o ? o.Ip4Config : t.Ip4Config;
        a && a.Addresses.forEach(function(t) {
            r.push(t[0] + "/" + t[1]);
        });
        var s = o ? o.Ip6Config : t.Ip6Config;
        return s && s.Addresses.forEach(function(t) {
            n && i(t[0]) || r.push(t[0] + "/" + t[1]);
        }), J("<span>").text(r.join(", "));
    }
    function g(t) {
        return function(e) {
            var n = e.getAxes();
            n.yaxis.datamax < 1e5 ? n.yaxis.options.max = 1e5 : n.yaxis.options.max = null, 
            n.yaxis.options.min = 0, J(t).text(Z.bits_per_sec_tick_unit(n.yaxis));
        };
    }
    function m() {
        J(".network-privileged").update_privileged(it, X.format(et("The user <b>$0</b> is not permitted to modify network settings"), it.user ? it.user.name : ""));
    }
    function v() {
        ot || (rt = {}, ot = X.metrics(1e3, [ {
            source: "direct",
            metrics: [ {
                name: "network.interface.in.bytes",
                units: "bytes",
                derive: "rate"
            }, {
                name: "network.interface.out.bytes",
                units: "bytes",
                derive: "rate"
            } ],
            metrics_path_names: [ "rx", "tx" ]
        }, {
            source: "internal",
            metrics: [ {
                name: "network.interface.rx",
                units: "bytes",
                derive: "rate"
            }, {
                name: "network.interface.tx",
                units: "bytes",
                derive: "rate"
            } ],
            metrics_path_names: [ "rx", "tx" ]
        } ]), at = X.grid(1e3, -1, -0), ot.follow(), at.walk());
    }
    function _(t) {
        rt[t] = [ at.add(ot, [ "rx", t ]), at.add(ot, [ "tx", t ]) ];
    }
    function x(t, e, n) {
        return function(i) {
            return n ? n.apply_settings(i) : i.connection.type ? t.get_settings().add_connection(i) : e ? e.activate_with_settings(i) : (X.warn("No way to apply settings", n, i), 
            X.resolve());
        };
    }
    function b(t) {
        this._init(t);
    }
    function k(t, e, n) {
        for (var i = 0; i < t.length; i++) if (t[i].choice == e) return t[i].title;
        return n;
    }
    function w(t, e, n, i, o) {
        function r() {
            X.hint("ignore_transport_health_check", {
                data: !0
            }), s = window.setTimeout(function() {
                s = null, u.show(), f.hide(), d.show();
            }, 1e3 * ht), c = window.setTimeout(function() {
                c = null, u.hide(), f.show();
            }, 1e3 * mt);
        }
        function a() {
            s && window.clearTimeout(s), s = null, c && window.clearTimeout(c), d.hide(), X.hint("ignore_transport_health_check", {
                data: !1
            });
        }
        var s, c, l = t.get_manager(), d = J("#testing-connection-curtain"), u = J("#testing-connection-curtain-testing"), f = J("#testing-connection-curtain-restoring"), p = J("#confirm-breaking-change-popup");
        return o && !t.at_least_version("1.6") ? void e() : void l.checkpoint_create(mt).done(function(t) {
            return t ? (r(), void e().done(function() {
                window.setTimeout(function() {
                    l.checkpoint_destroy(t).always(a).fail(function(t) {
                        p.find("#confirm-breaking-change-text").html(n), p.find(".modal-footer .btn-danger").off("click").text(i).click(function() {
                            p.modal("hide"), e();
                        }), p.modal("show");
                    });
                }, 1e3 * gt);
            }).fail(function() {
                a(), l.checkpoint_rollback(t);
            })) : void e();
        });
    }
    function y(t) {
        this._init(t);
    }
    function M(t, e) {
        var n = J('<div class="btn-onoff-ct">').onoff();
        return n.onoff("value", t), n.on("change", function() {
            e(n.onoff("value"));
        }), n;
    }
    function C(t, e, n) {
        w(t, e, et("Changing the settings will break the connection to the server, and will make the administration UI unavailable."), et("Change the settings"), n);
    }
    function S(t, e) {
        var n = e.message || e.toString();
        console.warn(n), J(t).show().find("span").text(n);
    }
    function T() {
        this._init();
    }
    function I(t, e) {
        return e && e.Interfaces.indexOf(t) != -1;
    }
    function N(t) {
        return !t.Device || t.Device.Managed;
    }
    function A(t, e) {
        if (null === t || void 0 === t) throw new TypeError("Array.prototype.find called on null or undefined");
        if ("function" != typeof e) throw new TypeError("predicate must be a function");
        for (var n, i = Object(t), o = i.length >>> 0, r = arguments[1], a = 0; a < o; a++) if (a in i && (n = i[a], 
        e.call(r, n, a, i))) return n;
    }
    function D(t, e) {
        return t && A(t.Slaves, function(t) {
            return I(e, t);
        });
    }
    function z(t, e) {
        return t.list_interfaces().filter(function(t) {
            return !I(t, e) && N(t);
        });
    }
    function O(t, e) {
        return J('<ul class="list-group available-interfaces-group dialog-list-ct">').append(z(t, e).map(function(t) {
            return J('<li class="list-group-item">').append(J('<div class="checkbox">').css("margin", "0px").append(J("<label>").append(J("<input>", {
                type: "checkbox",
                "data-iface": t.Name
            }).prop("checked", !!D(e, t)), J("<span>").text(t.Name))));
        }));
    }
    function W(t, e) {
        var n = [ {
            title: "-",
            choice: "",
            is_default: !0
        } ];
        return e.find("input[data-iface]").each(function(t, e) {
            var i = J(e).attr("data-iface");
            J(e).prop("checked") && n.push({
                title: i,
                choice: i
            });
        }), r(t, n, "form-control");
    }
    function P(t) {
        var e = c(t);
        if (e.slave_type) return delete e.slave_type, delete e.master, delete t.Settings.team_port, 
        delete t.Settings.bridge_port, t.apply_settings(t.Settings);
    }
    function E(t, e, n, i, o, r) {
        var a, s;
        if (a = t.find_interface(o), !a) return !1;
        s = a.MainConnection;
        var l = c(s);
        if (r) {
            if (!s) return !!a.Device && a.Device.activate_with_settings({
                connection: {
                    autoconnect: !0,
                    interface_name: a.Name,
                    slave_type: i,
                    master: n.connection.uuid
                }
            });
            if (l.master != n.connection.uuid) return l.slave_type = i, l.master = n.connection.uuid, 
            delete s.Settings.ipv4, delete s.Settings.ipv6, delete s.Settings.team_port, delete s.Settings.bridge_port, 
            s.apply_settings(s.Settings).then(function() {
                var t = a.Device;
                if (t && t.ActiveConnection && t.ActiveConnection.Connection === s) return s.activate(t, null);
            });
        } else s && l.master == n.connection.uuid && P(s);
        return !0;
    }
    function F(t, e, n, i, o, r) {
        function a() {
            var n = t.find("input[data-iface]").map(function(t, n) {
                return E(e, i, o, r, J(n).attr("data-iface"), J(n).prop("checked"));
            });
            return X.all(n.get());
        }
        var s, c = [];
        return i || (o.bond && o.bond.options && o.bond.options.primary ? (s = e.find_interface(o.bond.options.primary), 
        s && s.MainConnection && c.push(s.MainConnection.Settings)) : t.find("input[data-iface]").map(function(t, n) {
            var i;
            J(n).prop("checked") && (i = e.find_interface(J(n).attr("data-iface")), i.Device && i.Device.ActiveConnection && i.Device.ActiveConnection.Connection && c.push(i.Device.ActiveConnection.Connection.Settings));
        }), 1 == c.length && (o.ipv4 = J.extend(!0, {}, c[0].ipv4), o.ipv6 = J.extend(!0, {}, c[0].ipv6))), 
        n(o).then(a);
    }
    function $() {
        this._init();
    }
    function R() {
        this._init();
    }
    function U() {
        this._init();
    }
    function j() {
        this._init();
    }
    function H() {
        this._init();
    }
    function L() {
        this._init();
    }
    function B() {
        this._init();
    }
    function Y(t) {
        t.setup(), J("#" + t.id).on("show.bs.modal", function() {
            t.enter();
        }).on("shown.bs.modal", function() {
            t.show();
        }).on("hidden.bs.modal", function() {
            t.leave();
        });
    }
    function q(t, e) {
        t._entered_ && t.leave(), t.enter(e), t._entered_ = !0, J("#" + t.id).show(), t.show();
    }
    function G(t) {
        J("#" + t.id).hide(), t._entered_ && (t.leave(), t._entered_ = !1);
    }
    function V() {
        function t() {
            var t = X.location.path;
            0 === t.length ? (G(i), q(n)) : 1 === t.length ? (G(n), q(i, t[0])) : (console.warn("not a networking location: " + t), 
            X.location = ""), J("body").show();
        }
        var e, n, i;
        X.translate(), e = new l(), n = new b(e), n.setup(), i = new y(e), i.setup(), Y(new T()), 
        Y(new $()), Y(new R()), Y(new U()), Y(new j()), Y(new H()), Y(new L()), Y(new B()), 
        J(X).on("locationchanged", t), t();
    }
    var J = n(2), X = n(3), Q = n(4), K = n(5), Z = n(7), tt = n(11);
    n(15), n(16), n(20), n(22), n(24), n(26);
    var et = X.gettext, nt = X.gettext, it = X.permission({
        admin: !0
    });
    J(it).on("changed", m);
    var ot, rt, at;
    b.prototype = {
        _init: function(t) {
            this.id = "networking", this.model = t;
        },
        getTitle: function() {
            return nt("page-title", "Networking");
        },
        setup: function() {
            function t(t, e) {
                J("#networking-interfaces tr").removeClass("highlight-ct"), e && J('#networking-interfaces tr[data-interface="' + encodeURIComponent(e) + '"]').addClass("highlight-ct");
            }
            function e() {
                for (var t in rt) {
                    var e = rt[t], n = e[0][0], i = e[1][0], o = J('#networking-interfaces tr[data-sample-id="' + encodeURIComponent(t) + '"]');
                    void 0 !== n && void 0 !== i && o.length > 0 && (o.find("td:nth-child(3)").text(X.format_bits_per_sec(8 * i)), 
                    o.find("td:nth-child(4)").text(X.format_bits_per_sec(8 * n)));
                }
            }
            var n = this;
            m(), J("#networking-add-bond").click(J.proxy(this, "add_bond")), J("#networking-add-team").click(J.proxy(this, "add_team")), 
            J("#networking-add-bridge").click(J.proxy(this, "add_bridge")), J("#networking-add-vlan").click(J.proxy(this, "add_vlan")), 
            J("#networking-add-team").hide(), X.script("test -f /usr/bin/teamd && ( test -f /usr/lib64/NetworkManager/libnm-device-plugin-team.so ||   test -f /usr/lib/x86_64-linux-gnu/NetworkManager/libnm-device-plugin-team.so)", {
                err: "ignore"
            }).done(function() {
                J("#networking-add-team").show();
            }).always(function() {
                J("#networking-add-team").attr("data-test-stable", "yes");
            });
            var i = {
                direct: "network.interface.in.bytes",
                internal: "network.interface.rx",
                units: "bytes",
                derive: "rate",
                threshold: 200
            }, o = Z.plot_simple_template();
            J.extend(o.yaxis, {
                tickFormatter: Z.format_bits_per_sec_tick_no_unit
            }), J.extend(o.grid, {
                hoverable: !0,
                autoHighlight: !1
            }), o.setup_hook = g("#networking-rx-unit"), this.rx_plot = Z.plot(J("#networking-rx-graph"), 300), 
            this.rx_plot.set_options(o), this.rx_series = this.rx_plot.add_metrics_stacked_instances_series(i, {}), 
            this.rx_plot.start_walking(), J(this.rx_series).on("hover", t);
            var r = {
                direct: "network.interface.out.bytes",
                internal: "network.interface.tx",
                units: "bytes",
                derive: "rate",
                threshold: 200
            }, a = Z.plot_simple_template();
            J.extend(a.yaxis, {
                tickFormatter: Z.format_bits_per_sec_tick_no_unit
            }), J.extend(a.grid, {
                hoverable: !0,
                autoHighlight: !1
            }), a.setup_hook = g("#networking-tx-unit"), this.tx_plot = Z.plot(J("#networking-tx-graph"), 300), 
            this.tx_plot.set_options(a), this.tx_series = this.tx_plot.add_metrics_stacked_instances_series(r, {}), 
            this.tx_plot.start_walking(), J(this.tx_series).on("hover", t), J(X).on("resize", function() {
                n.rx_plot.resize(), n.tx_plot.resize();
            });
            var s = Z.setup_plot_controls(J("#networking"), J("#networking-graph-toolbar"));
            s.reset([ this.rx_plot, this.tx_plot ]), v(), J(at).on("notify", function(t, n, i) {
                e();
            }), J(window).on("resize", function() {
                n.rx_plot.resize(), n.tx_plot.resize();
            });
        },
        enter: function() {
            this.log_box = tt.logbox([ "_SYSTEMD_UNIT=NetworkManager.service", "_SYSTEMD_UNIT=firewalld.service" ], 10), 
            J("#networking-log").empty().append(this.log_box), J(this.model).on("changed.networking", J.proxy(this, "update_devices")), 
            this.update_devices();
        },
        show: function() {
            this.rx_plot.resize(), this.tx_plot.resize();
        },
        leave: function() {
            this.log_box && this.log_box.stop(), J(this.model).off(".networking");
        },
        update_devices: function() {
            var t, e, n = this;
            t = J("#networking-interfaces tbody"), t.empty(), e = J("#networking-unmanaged-interfaces tbody"), 
            e.empty(), J("#networking-unmanaged-interfaces").hide(), n.model.list_interfaces().forEach(function(i) {
                function o(t) {
                    var e = t.Device ? t.Device.AvailableConnections : t.Connections;
                    return e.some(function(t) {
                        return t.Masters && t.Masters.length > 0;
                    });
                }
                if (!(i.Device && "loopback" == i.Device.DeviceType || o(i))) {
                    var r = i.Device, a = r && (100 == r.State || 10 == r.State) && r.Carrier === !0;
                    n.rx_series.add_instance(i.Name), n.tx_series.add_instance(i.Name), _(i.Name);
                    var s = J("<tr>", {
                        "data-interface": encodeURIComponent(i.Name),
                        "data-sample-id": a ? encodeURIComponent(i.Name) : null
                    }).append(J("<td>").text(i.Name), J("<td>").html(h(r, !1, !0)), a ? [ J("<td>").text(""), J("<td>").text("") ] : J('<td colspan="2">').text(u(r)));
                    !r || r.Managed ? t.append(s.click(function() {
                        X.location.go([ i.Name ]);
                    })) : (e.append(s), J("#networking-unmanaged-interfaces").show());
                }
            });
        },
        add_bond: function() {
            var t, e, n;
            for (n = i(), e = 0; e < 100 && (t = "bond" + e, this.model.find_interface(t)); e++) ;
            $.model = this.model, $.done = null, $.connection = null, $.apply_settings = x(this.model), 
            $.ghost_settings = {
                connection: {
                    id: t,
                    autoconnect: !1,
                    type: "bond",
                    uuid: n,
                    interface_name: t
                },
                bond: {
                    options: {
                        mode: "active-backup"
                    },
                    interface_name: t
                }
            }, J("#network-bond-settings-dialog").modal("show");
        },
        add_team: function() {
            var t, e, n;
            for (n = i(), e = 0; e < 100 && (t = "team" + e, this.model.find_interface(t)); e++) ;
            R.model = this.model, R.done = null, R.connection = null, R.apply_settings = x(this.model), 
            R.ghost_settings = {
                connection: {
                    id: t,
                    autoconnect: !1,
                    type: "team",
                    uuid: n,
                    interface_name: t
                },
                team: {
                    config: {},
                    interface_name: t
                }
            }, J("#network-team-settings-dialog").modal("show");
        },
        add_bridge: function() {
            var t, e, n;
            for (n = i(), e = 0; e < 100 && (t = "bridge" + e, this.model.find_interface(t)); e++) ;
            j.model = this.model, j.done = null, j.connection = null, j.apply_settings = x(this.model), 
            j.ghost_settings = {
                connection: {
                    id: t,
                    autoconnect: !1,
                    type: "bridge",
                    uuid: n,
                    interface_name: t
                },
                bridge: {
                    interface_name: t,
                    stp: !1,
                    priority: 32768,
                    forward_delay: 15,
                    hello_time: 2,
                    max_age: 20,
                    ageing_time: 300
                }
            }, J("#network-bridge-settings-dialog").modal("show");
        },
        add_vlan: function() {
            var t;
            t = i(), L.model = this.model, L.done = null, L.connection = null, L.apply_settings = x(this.model), 
            L.ghost_settings = {
                connection: {
                    id: "",
                    autoconnect: !1,
                    type: "vlan",
                    uuid: t,
                    interface_name: ""
                },
                vlan: {
                    interface_name: "",
                    parent: ""
                }
            }, J("#network-vlan-settings-dialog").modal("show");
        }
    };
    var st = [ {
        choice: "auto",
        title: et("Automatic (DHCP)")
    }, {
        choice: "link-local",
        title: et("Link local")
    }, {
        choice: "manual",
        title: et("Manual")
    }, {
        choice: "shared",
        title: et("Shared")
    }, {
        choice: "disabled",
        title: et("Disabled")
    } ], ct = [ {
        choice: "auto",
        title: et("Automatic")
    }, {
        choice: "dhcp",
        title: et("Automatic (DHCP only)")
    }, {
        choice: "link-local",
        title: et("Link local")
    }, {
        choice: "manual",
        title: et("Manual")
    }, {
        choice: "ignore",
        title: et("Ignore")
    } ], lt = [ {
        choice: "balance-rr",
        title: et("Round Robin")
    }, {
        choice: "active-backup",
        title: et("Active Backup")
    }, {
        choice: "balance-xor",
        title: et("XOR")
    }, {
        choice: "broadcast",
        title: et("Broadcast")
    }, {
        choice: "802.3ad",
        title: et("802.3ad")
    }, {
        choice: "balance-tlb",
        title: et("Adaptive transmit load balancing")
    }, {
        choice: "balance-alb",
        title: et("Adaptive load balancing")
    } ], dt = [ {
        choice: "mii",
        title: et("MII (Recommended)")
    }, {
        choice: "arp",
        title: et("ARP")
    } ], ut = [ {
        choice: "roundrobin",
        title: et("Round Robin")
    }, {
        choice: "activebackup",
        title: et("Active Backup")
    }, {
        choice: "loadbalance",
        title: et("Load Balancing")
    }, {
        choice: "broadcast",
        title: et("Broadcast")
    }, {
        choice: "lacp",
        title: et("802.3ad LACP")
    } ], ft = [ {
        choice: "none",
        title: et("Passive")
    }, {
        choice: "basic",
        title: et("Active")
    } ], pt = [ {
        choice: "ethtool",
        title: et("Ethtool")
    }, {
        choice: "arp-ping",
        title: et("ARP Ping")
    }, {
        choice: "nsna-ping",
        title: et("NSNA Ping")
    } ], ht = .5, gt = .3, mt = 15;
    y.prototype = {
        _init: function(t) {
            this.id = "network-interface", this.model = t;
        },
        getTitle: function() {
            return nt("page-title", "Networking");
        },
        setup: function() {
            function t(t, e) {
                J("#network-interface-slaves tr").removeClass("highlight-ct"), e && J('#network-interface-slaves tr[data-interface="' + encodeURIComponent(e) + '"]').addClass("highlight-ct");
            }
            function e() {
                for (var t in rt) {
                    var e = rt[t], n = e[0][0], i = e[1][0], o = J('#network-interface-slaves tr[data-sample-id="' + encodeURIComponent(t) + '"]');
                    o.length > 0 && (o.find("td:nth-child(2)").text(X.format_bits_per_sec(8 * i)), o.find("td:nth-child(3)").text(X.format_bits_per_sec(8 * n)));
                }
            }
            var n = this;
            J("#network-interface .breadcrumb a").on("click", function() {
                X.location.go("/");
            }), J("#network-interface-delete").click(J.proxy(this, "delete_connections")), this.device_onoff = J("#network-interface-delete-switch").onoff().on("change", function() {
                var t = J(this).onoff("value");
                t ? n.connect() : n.disconnect();
            });
            var i = {
                direct: "network.interface.in.bytes",
                internal: "network.interface.rx",
                units: "bytes",
                derive: "rate"
            }, o = Z.plot_simple_template();
            J.extend(o.yaxis, {
                tickFormatter: Z.format_bits_per_sec_tick_no_unit
            }), J.extend(o.grid, {
                hoverable: !0,
                autoHighlight: !1
            }), o.setup_hook = g("#network-interface-rx-unit"), this.rx_plot = Z.plot(J("#network-interface-rx-graph"), 300), 
            this.rx_plot.set_options(o), this.rx_series = this.rx_plot.add_metrics_stacked_instances_series(i, {}), 
            this.rx_plot.start_walking(), J(this.rx_series).on("hover", t);
            var r = {
                direct: "network.interface.out.bytes",
                internal: "network.interface.tx",
                units: "bytes",
                derive: "rate"
            }, a = Z.plot_simple_template();
            J.extend(a.yaxis, {
                tickFormatter: Z.format_bits_per_sec_tick_no_unit
            }), J.extend(a.grid, {
                hoverable: !0,
                autoHighlight: !1
            }), a.setup_hook = g("#network-interface-tx-unit"), this.tx_plot = Z.plot(J("#network-interface-tx-graph"), 300), 
            this.tx_plot.set_options(a), this.tx_series = this.tx_plot.add_metrics_stacked_instances_series(r, {}), 
            this.tx_plot.start_walking(), J(this.tx_series).on("hover", t), J(X).on("resize", function() {
                n.rx_plot.resize(), n.tx_plot.resize();
            });
            var s = Z.setup_plot_controls(J("#network-interface"), J("#network-interface-graph-toolbar"));
            s.reset([ this.rx_plot, this.tx_plot ]), v(), J(at).on("notify", function(t, n, i) {
                e();
            }), J(window).on("resize", function() {
                n.rx_plot.resize(), n.tx_plot.resize();
            });
        },
        enter: function(t) {
            var e = this;
            J(e.model).on("changed.network-interface", J.proxy(e, "update")), e.dev_name = t, 
            J("#network-interface .breadcrumb .active").text(e.dev_name), e.rx_series.clear_instances(), 
            e.tx_series.clear_instances(), J("#network-interface-delete").hide(), e.dev = null, 
            e.update();
        },
        show: function() {
            this.rx_plot.resize(), this.tx_plot.resize();
        },
        leave: function() {
            J(this.model).off(".network-interface"), this.dev = null;
        },
        delete_connections: function() {
            function t(t) {
                return X.all(t.delete_(), X.all(t.Slaves.map(function(t) {
                    return P(t);
                })));
            }
            function e(e) {
                return X.all(e.map(t));
            }
            function n(t) {
                return e(t.Device ? t.Device.AvailableConnections : t.Connections);
            }
            function i() {
                return n(r.iface).done(function() {
                    a.go("/");
                }).fail(o);
            }
            var r = this, a = X.location;
            r.iface && w(r.model, i, X.format(et("Deleting <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), r.dev_name), X.format(et("Delete $0"), r.dev_name), !0);
        },
        connect: function() {
            function t(t) {
                o(t), n.update();
            }
            function e() {
                return n.main_connection ? n.main_connection.activate(n.dev, null).fail(t) : n.dev.activate_with_settings(n.ghost_settings, null).fail(t);
            }
            var n = this;
            return n.main_connection || n.dev && n.ghost_settings ? void w(n.model, e, X.format(et("Switching on <b>$0</b>  will break the connection to the server, and will make the administration UI unavailable."), n.dev_name), X.format(et("Switch on $0"), n.dev_name)) : void n.update();
        },
        disconnect: function() {
            function t() {
                return e.dev.disconnect().fail(function(t) {
                    o(t), e.update();
                });
            }
            var e = this;
            return e.dev ? void w(e.model, t, X.format(et("Switching off <b>$0</b>  will break the connection to the server, and will make the administration UI unavailable."), e.dev_name), X.format(et("Switch off $0"), e.dev_name)) : (console.log("Trying to switch off without a device?"), 
            void e.update());
        },
        update: function() {
            function t() {
                return l && void 0 !== l.Carrier ? J("<tr>").append(J("<td>").text(et("Carrier")), J("<td>").append(l.Carrier ? l.Speed ? X.format_bits_per_sec(1e6 * l.Speed) : et("Yes") : et("No"))) : null;
            }
            function e() {
                var t;
                return a.main_connection && a.main_connection.Masters.length > 0 ? null : (t = l ? d && 100 != l.State ? l.StateText : null : et("Inactive"), 
                J("<tr>").append(J("<td>").text(et("Status")), J("<td>").append(h(l, !0, !1), " ", t ? J("<span>").text(t) : null)));
            }
            function n(t, e) {
                function n() {
                    if (t && l && l.ActiveConnection && l.ActiveConnection.Connection === t) return t.Settings.connection.interface_name && t.Settings.connection.interface_name != l.Interface ? l.disconnect().then(function() {
                        return t.activate(null, null);
                    }).fail(o) : t.activate(l, null).fail(o);
                }
                function i(t) {
                    var n = e[t], i = [];
                    "manual" != n.method && i.push(k("ipv4" == t ? st : ct, n.method, et("Unknown configuration")));
                    var o = "manual" != n.method, r = [];
                    n.addresses.forEach(function(t) {
                        var e = t[0] + "/" + t[1];
                        t[2] && "0.0.0.0" != t[2] && "0:0:0:0:0:0:0:0" != t[2] && (e += " via " + t[2]), 
                        r.push(e);
                    }), r.length > 0 && i.push(X.format(et(o ? "Additional address $val" : "Address $val"), {
                        val: r.join(", ")
                    }));
                    var a = !n["ignore-auto-dns"] && "manual" != n.method;
                    return n.dns.length > 0 && i.push(X.format(et(a ? "Additional DNS $val" : "DNS $val"), {
                        val: n.dns.join(", ")
                    })), n.dns_search.length > 0 && i.push(X.format(et(a ? "Additional DNS Search Domains $val" : "DNS Search Domains $val"), {
                        val: n.dns_search.join(", ")
                    })), i;
                }
                function r(e, i) {
                    e.model = a.model, e.connection = a.main_connection, e.ghost_settings = a.ghost_settings, 
                    e.apply_settings = x(a.model, a.dev, t), e.done = n, J(i).modal("show");
                }
                function s(t) {
                    T.topic = t, r(T, "#network-ip-settings-dialog");
                }
                function c() {
                    r($, "#network-bond-settings-dialog");
                }
                function u() {
                    r(R, "#network-team-settings-dialog");
                }
                function h() {
                    U.master_settings = z, r(U, "#network-teamport-settings-dialog");
                }
                function g() {
                    r(j, "#network-bridge-settings-dialog");
                }
                function m() {
                    r(H, "#network-bridgeport-settings-dialog");
                }
                function v() {
                    r(L, "#network-vlan-settings-dialog");
                }
                function _() {
                    r(B, "#network-ethernet-settings-dialog");
                }
                function b(t, e, n) {
                    for (var i = [], o = 0; o < e.length; o++) i.push(e[o]), o < e.length - 1 && i.push(J("<br>"));
                    return 0 === i.length && i.push(et("Configure")), J("<tr>").append(J("<td>").text(t).css("vertical-align", e.length > 1 ? "top" : "center"), J("<td>").append(J('<a class="network-privileged">').append(i).click(function() {
                        n();
                    })));
                }
                function w(t, n) {
                    return e[t] ? b(n, i(t), function() {
                        s(t);
                    }) : null;
                }
                function y() {
                    function t(t, e) {
                        n.push(X.format(t, e));
                    }
                    var n = [], i = e.ethernet;
                    return i ? (i.mtu ? t(et("$mtu"), i) : t(et("Automatic"), i), b(et("MTU"), n, _)) : null;
                }
                function M() {
                    return t && t.Masters.length > 0 ? J("<tr>").append(J("<td>").text(et("Master")), J("<td>").append(p(t.Masters.map(f), ", "))) : null;
                }
                function C() {
                    var t, n = [], i = [];
                    return e.bond ? (t = e.bond.options, n.push(k(lt, t.mode, t.mode)), t.arp_interval && n.push(et("ARP Monitoring")), 
                    n.length > 0 && i.push(n.join(", ")), b(et("Bond"), i, c)) : null;
                }
                function S() {
                    var t = [], n = [];
                    if (!e.team) return null;
                    var i = e.team.config;
                    return null === i ? t.push(et("Broken configuration")) : (i.runner && t.push(k(ut, i.runner.name, i.runner.name)), 
                    i.link_watch && "ethtool" != i.link_watch.name && t.push(k(pt, i.link_watch.name, i.link_watch.name))), 
                    t.length > 0 && n.push(t.join(", ")), b(et("Team"), n, u);
                }
                function I() {
                    var t = [], n = [];
                    if (!e.team_port) return null;
                    if (!z || !z.team || !z.team.config || !z.team.config.runner || "activebackup" != z.team.config.runner.name && "lacp" != z.team.config.runner.name) return null;
                    var i = e.team_port.config;
                    return null === i && t.push(et("Broken configuration")), t.length > 0 && n.push(t.join(", ")), 
                    b(et("Team Port"), n, h);
                }
                function N() {
                    function t(t, e) {
                        n.push(X.format(t, e));
                    }
                    var n = [], i = e.bridge;
                    return i ? (i.stp && (t(et("Spanning Tree Protocol")), 32768 != i.priority && t(et("Priority $priority"), i), 
                    15 != i.forward_delay && t(et("Forward delay $forward_delay"), i), 2 != i.hello_time && t(et("Hello time $hello_time"), i), 
                    20 != i.max_age && t(et("Maximum message age $max_age"), i)), b(et("Bridge"), n, g)) : null;
                }
                function A() {
                    function t(t, e) {
                        n.push(X.format(t, e));
                    }
                    var n = [], i = e.bridge_port;
                    return i ? (32 != i.priority && t(et("Priority $priority"), i), 100 != i.path_cost && t(et("Path cost $path_cost"), i), 
                    i.hairpin_mode && t(et("Hairpin mode")), b(et("Bridge port"), n, m)) : null;
                }
                function D() {
                    function t(t, e) {
                        n.push(X.format(t, e));
                    }
                    var n = [], i = e.vlan;
                    return i ? (t(et("Parent $parent"), i), t(et("Id $id"), i), b(et("VLAN"), n, v)) : null;
                }
                if (!d) return J("<tr>").append(J("<td>"), J("<td>").text(et("This device cannot be managed here.")));
                if (!e) return [];
                var z = null;
                return t && t.Masters.length > 0 && (z = t.Masters[0].Settings), [ M(), J("<tr>").append(J("<td>").text(et("General")), J('<td class="networking-controls">').append(J("<label>").append(J('<input type="checkbox">').prop("checked", e.connection.autoconnect).change(function() {
                    e.connection.autoconnect = J(this).prop("checked"), x(a.model, a.dev, t)(e);
                }), J("<span>").text(et("Connect automatically"))))), w("ipv4", et("IPv4")), w("ipv6", et("IPv6")), y(), D(), N(), A(), C(), S(), I() ];
            }
            function i() {
                return {
                    connection: {
                        autoconnect: !1,
                        interface_name: s.Name
                    },
                    ipv4: {
                        method: "auto",
                        addresses: [],
                        dns: [],
                        dns_search: [],
                        routes: []
                    },
                    ipv6: {
                        method: "auto",
                        addresses: [],
                        dns: [],
                        dns_search: [],
                        routes: []
                    }
                };
            }
            function r(t) {
                var e = J("#network-interface-slaves tbody"), n = {}, i = {};
                e.empty(), a.rx_series.clear_instances(), a.tx_series.clear_instances();
                var r = c(t);
                if (!t || "bond" != r.type && "team" != r.type && "bridge" != r.type) return a.rx_series.add_instance(a.dev_name), 
                a.tx_series.add_instance(a.dev_name), void J("#network-interface-slaves").hide();
                J("#network-interface-slaves thead th:first-child").text(et("bond" == r.type ? "Members" : "Ports")), 
                t.Slaves.forEach(function(t) {
                    t.Interfaces.forEach(function(e) {
                        var r = e.Device, s = r && 100 == r.State && r.Carrier === !0;
                        r && !r.Managed || (a.rx_series.add_instance(e.Name), a.tx_series.add_instance(e.Name), 
                        _(e.Name), i[e.Name] = !0, n[e.Name] = J("<tr>", {
                            "data-interface": encodeURIComponent(e.Name),
                            "data-sample-id": s ? encodeURIComponent(e.Name) : null
                        }).append(J("<td>").text(e.Name), s ? [ J("<td>").text(""), J("<td>").text("") ] : J('<td colspan="2">').text(u(r)), J('<td class="networking-row-configure">').append(M(!(!r || !r.ActiveConnection), function(n) {
                            n ? w(a.model, function() {
                                return t.activate(e.Device).fail(o);
                            }, X.format(et("Switching on <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), e.Name), X.format(et("Switch on $0"), e.Name)) : r && w(a.model, function() {
                                return r.disconnect().fail(o);
                            }, X.format(et("Switching off <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), e.Name), X.format(et("Switch off $0"), e.Name));
                        }, "network-privileged")), J('<td width="28px">').append(J('<button class="btn btn-default btn-control-ct network-privileged fa fa-minus">').click(function() {
                            return w(a.model, function() {
                                return t.delete_().fail(o);
                            }, X.format(et("Removing <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), e.Name), X.format(et("Remove $0"), e.Name), !0), 
                            !1;
                        }))).click(function(t) {
                            J(t.target).hasClass("btn") || X.location.go([ e.Name ]);
                        }));
                    });
                }), Object.keys(n).sort().forEach(function(t) {
                    e.append(n[t]);
                });
                var s = J("<div>", {
                    class: "dropdown"
                }).append(J("<button>", {
                    class: "network-privileged btn btn-default btn-control-ct dropdown-toggle fa fa-plus",
                    "data-toggle": "dropdown"
                }), J("<ul>", {
                    class: "dropdown-menu add-button",
                    role: "menu"
                }).append(a.model.list_interfaces().map(function(e) {
                    return N(e) && !i[e.Name] && e != a.iface ? J('<li role="presentation">').append(J('<a role="menuitem" class="network-privileged">').text(e.Name).click(function() {
                        w(a.model, function() {
                            var n = c(t);
                            return E(a.model, t, t.Settings, n.type, e.Name, !0).fail(o);
                        }, X.format(et("Adding <b>$0</b> will break the connection to the server, and will make the administration UI unavailable."), e.Name), X.format(et("Add $0"), e.Name), !0);
                    })) : null;
                })));
                J("#network-interface-slaves thead th:nth-child(5)").html(s), J("#network-interface-slaves").show(), 
                m();
            }
            var a = this, s = a.model.find_interface(a.dev_name), l = s && s.Device, d = s && (!l || l.Managed);
            a.iface = s, a.dev = l;
            var g, v;
            l ? g = "ethernet" == l.DeviceType || l.IdVendor || l.IdModel ? X.format("$IdVendor $IdModel $Driver", l) : "bond" == l.DeviceType ? et("Bond") : "team" == l.DeviceType ? et("Team") : "vlan" == l.DeviceType ? et("VLAN") : "bridge" == l.DeviceType ? et("Bridge") : X.format(et('Unknown "$0"'), l.DeviceType) : s ? (v = c(s.Connections[0]), 
            g = "bond" == v.type ? et("Bond") : "team" == v.type ? et("Team") : "vlan" == v.type ? et("VLAN") : "bridge" == v.type ? et("Bridge") : v.type ? X.format(et('Unknown "$0"'), v.type) : et("Unknown")) : g = et("Unknown"), 
            J("#network-interface-name").text(a.dev_name), J("#network-interface-hw").text(g), 
            J("#network-interface-mac").text(l ? l.HwAddress : ""), this.device_onoff.onoff("disabled", !s), 
            this.device_onoff.onoff("value", !(!l || !l.ActiveConnection)), this.device_onoff.toggle(d);
            var b = s && !l || l && ("bond" == l.DeviceType || "team" == l.DeviceType || "vlan" == l.DeviceType || "bridge" == l.DeviceType);
            J("#network-interface-delete").toggle(b && d), a.ghost_settings = null, a.main_connection = null, 
            a.connection_settings = null, s && (a.main_connection = s.MainConnection, a.main_connection ? a.connection_settings = a.main_connection.Settings : (a.ghost_settings = i(), 
            a.connection_settings = a.ghost_settings)), J("#network-interface-settings").empty().append(e()).append(t()).append(n(a.main_connection, a.connection_settings)), 
            m(), r(a.main_connection);
        }
    }, T.prototype = {
        _init: function() {
            this.id = "network-ip-settings-dialog";
        },
        setup: function() {
            J("#network-ip-settings-cancel").click(J.proxy(this, "cancel")), J("#network-ip-settings-apply").click(J.proxy(this, "apply"));
        },
        enter: function() {
            J("#network-ip-settings-error").hide(), this.settings = T.ghost_settings || T.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            function t(t, e) {
                var n = r(function(e) {
                    m[t] = e, h.update();
                }, e);
                return n.addClass("col-left"), a(n, m[t]), n;
            }
            function e(t, e) {
                var n, i = J("<span>").append(J('<span class="inverted-switchbox">').text(t), n = M(!m[e], function(t) {
                    m[e] = !t, h.update();
                }));
                return i.enable = function(t) {
                    n.onoff("disabled", !t);
                }, i;
            }
            function n(t, e, n, i, o) {
                function r(t, n) {
                    return d ? m[e][t] : m[e][t][n];
                }
                function a(t, n, i) {
                    d ? m[e][t] = i : m[e][t][n] = i;
                }
                function s() {
                    return function() {
                        m[e].push(i), h.update();
                    };
                }
                function c(t) {
                    return function() {
                        m[e].splice(t, 1), h.update();
                    };
                }
                var l, d = !1;
                "string" == typeof n && (d = !0, n = [ n ]);
                var u = J('<div class="network-ip-settings-row">').append(J("<div>").append(J("<strong>").text(t), J('<div class="pull-right">').append(o, l = J('<button class="btn btn-default fa fa-plus">').css("margin-left", "10px").click(s()))), J('<table width="100%">').append(m[e].map(function(t, e) {
                    return J("<tr>").append(n.map(function(t, n) {
                        return J("<td>").append(J('<input class="form-control">').val(r(e, n)).attr("placeholder", t).change(function(t) {
                            a(e, n, J(t.target).val());
                        }));
                    }), J("<td>").append(J('<button class="btn btn-default fa fa-minus">').click(c(e))));
                })));
                return u.attr("data-field", e), u.enable_add = function(t) {
                    l.prop("disabled", !t);
                }, u;
            }
            function i() {
                var i = et("ipv4" == g ? "Prefix length or Netmask" : "Prefix length"), r = J("<div>").append(s = n(et("Addresses"), "addresses", [ "Address", i, "Gateway" ], [ "", "", "" ], o = t("method", "ipv4" == g ? st : ct).css("display", "inline-block")), J("<br>"), l = n(et("DNS"), "dns", "Server", "", c = e(et("Automatic"), "ignore_auto_dns")), J("<br>"), u = n(et("DNS Search Domains"), "dns_search", "Search Domain", "", d = e(et("Automatic"), "ignore_auto_dns")), J("<br>"), p = n(et("Routes"), "routes", [ "Address", i, "Gateway", "Metric" ], [ "", "", "", "" ], f = e(et("Automatic"), "ignore_auto_routes")));
                return r;
            }
            var o, s, c, l, d, u, f, p, h = this, g = T.topic, m = h.settings[g];
            "manual" == m.method && 0 === m.addresses.length && (m.addresses = [ [ "", "", "" ] ]);
            var v = "disabled" == m.method || "ignore" == m.method, _ = !("link-local" == m.method || "shared" == m.method || v);
            _ || (m.addresses = [], m.dns = [], m.dns_search = []), v && (m.routes = []), J("#network-ip-settings-dialog .modal-title").text(et("ipv4" == g ? "IPv4 Settings" : "IPv6 Settings")), 
            J("#network-ip-settings-body").html(i());
            var x = "auto" == m.method || "dhcp" == m.method;
            c.enable(x), d.enable(x), f.enable(x), s.enable_add(_), l.enable_add(_), u.enable_add(_), 
            p.enable_add(!v);
        },
        cancel: function() {
            J("#network-ip-settings-dialog").modal("hide");
        },
        apply: function() {
            function t() {
                return T.apply_settings(e.settings).then(function() {
                    if (J("#network-ip-settings-dialog").modal("hide"), T.done) return T.done();
                }).fail(function(t) {
                    S("#network-ip-settings-error", t);
                });
            }
            var e = this;
            C(T.model, t);
        }
    }, $.prototype = {
        _init: function() {
            this.id = "network-bond-settings-dialog", this.bond_settings_template = J("#network-bond-settings-template").html(), 
            K.parse(this.bond_settings_template);
        },
        setup: function() {
            J("#network-bond-settings-cancel").click(J.proxy(this, "cancel")), J("#network-bond-settings-apply").click(J.proxy(this, "apply"));
        },
        enter: function() {
            J("#network-bond-settings-error").hide(), this.settings = $.ghost_settings || $.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        find_slave_con: function(t) {
            return $.connection ? A($.connection.Slaves, function(e) {
                return e.Interfaces.indexOf(t) >= 0;
            }) || null : null;
        },
        update: function() {
            function t() {
                var t = W(e, i);
                c.replaceWith(t), c = t, a(c, v.primary), e();
            }
            function e() {
                v.mode = s(o), c.parents("tr").toggle("active-backup" == v.mode), "active-backup" == v.mode ? v.primary = s(c) : delete v.primary;
            }
            function n() {
                var t = "mii" == s(l);
                u.parents("tr").toggle(!t), f.parents("tr").toggle(t), p.parents("tr").toggle(t), 
                t ? (v.miimon = d.val(), v.updelay = f.val(), v.downdelay = p.val(), delete v.arp_interval, 
                delete v.arp_ip_target) : (delete v.miimon, delete v.updelay, delete v.downdelay, 
                v.arp_interval = d.val(), v.arp_ip_target = u.val());
            }
            var i, o, c, l, d, u, f, p, h = this, g = $.model, m = $.connection, v = h.settings.bond.options, _ = J(K.render(h.bond_settings_template, {
                interface_name: h.settings.bond.interface_name,
                monitoring_interval: v.miimon || v.arp_interval || "100",
                monitoring_targets: v.arp_ip_targets,
                link_up_delay: v.updelay || "0",
                link_down_delay: v.downdelay || "0"
            }));
            _.find("#network-bond-settings-interface-name-input").change(function(t) {
                var e = J(t.target).val();
                h.settings.bond.interface_name = e, h.settings.connection.id = e, h.settings.connection.interface_name = e;
            }), _.find("#network-bond-settings-members").append(i = O(g, m).change(t)), _.find("#network-bond-settings-mode-select").append(o = r(e, lt, "form-control")), 
            _.find("#network-bond-settings-primary-select").append(c = W(e, i, "form-control")), 
            _.find("#network-bond-settings-link-monitoring-select").append(l = r(n, dt, "form-control")), 
            d = _.find("#network-bond-settings-monitoring-interval-input"), d.change(n), u = _.find("#network-bond-settings-monitoring-targets-input"), 
            u.change(n), f = _.find("#network-bond-settings-link-up-delay-input"), f.change(n), 
            p = _.find("#network-bond-settings-link-down-delay-input"), p.change(n), a(o, v.mode), 
            a(l, 0 !== v.miimon ? "mii" : "arp"), t(), e(), n(), J("#network-bond-settings-body").html(_);
        },
        cancel: function() {
            J("#network-bond-settings-dialog").modal("hide");
        },
        apply: function() {
            function t() {
                return F(J("#network-bond-settings-body"), $.model, $.apply_settings, $.connection, e.settings, "bond").then(function() {
                    if (J("#network-bond-settings-dialog").modal("hide"), $.connection && X.location.go([ e.settings.connection.interface_name ]), 
                    $.done) return $.done();
                }).fail(function(t) {
                    S("#network-bond-settings-error", t);
                });
            }
            var e = this;
            $.connection ? C($.model, t, !0) : w($.model, t, et("Creating this bond will break the connection to the server, and will make the administration UI unavailable."), et("Create it"), !0);
        }
    }, R.prototype = {
        _init: function() {
            this.id = "network-team-settings-dialog", this.team_settings_template = J("#network-team-settings-template").html(), 
            K.parse(this.team_settings_template);
        },
        setup: function() {
            J("#network-team-settings-cancel").click(J.proxy(this, "cancel")), J("#network-team-settings-apply").click(J.proxy(this, "apply"));
        },
        enter: function() {
            J("#network-team-settings-error").hide(), this.settings = R.ghost_settings || R.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        find_slave_con: function(t) {
            return R.connection ? A(R.connection.Slaves, function(e) {
                return e.Interfaces.indexOf(t) >= 0;
            }) || null : null;
        },
        update: function() {
            function t() {
                m.runner.name = s(i), o.parents("tr").toggle("loadbalance" == m.runner.name || "lacp" == m.runner.name);
            }
            function e() {
                var t = s(o);
                "none" == t ? m.runner.tx_balancer && delete m.runner.tx_balancer.name : (m.runner.tx_balancer || (m.runner.tx_balancer = {}), 
                m.runner.tx_balancer.name = t);
            }
            function n() {
                var t = s(c);
                l.parents("tr").toggle("ethtool" != t), d.parents("tr").toggle("ethtool" != t), 
                u.parents("tr").toggle("ethtool" == t), f.parents("tr").toggle("ethtool" == t), 
                m.link_watch = {
                    name: t
                }, "ethtool" == t ? (m.link_watch.delay_up = u.val(), m.link_watch.delay_down = f.val()) : (m.link_watch.interval = l.val(), 
                m.link_watch.target_host = d.val());
            }
            var i, o, c, l, d, u, f, p = this, h = R.model, g = R.connection, m = p.settings.team.config;
            m || (p.settings.team.config = m = {}), m.runner || (m.runner = {}), m.runner.name || (m.runner.name = "activebackup"), 
            m.link_watch || (m.link_watch = {}), m.link_watch.name || (m.link_watch.name = "ethtool"), 
            void 0 === m.link_watch.interval && (m.link_watch.interval = 100), void 0 === m.link_watch.delay_up && (m.link_watch.delay_up = 0), 
            void 0 === m.link_watch.delay_down && (m.link_watch.delay_down = 0);
            var v = J(K.render(p.team_settings_template, {
                interface_name: p.settings.team.interface_name,
                config: m
            }));
            v.find("#network-team-settings-interface-name-input").change(function(t) {
                var e = J(t.target).val();
                p.settings.team.interface_name = e, p.settings.connection.id = e, p.settings.connection.interface_name = e;
            }), v.find("#network-team-settings-members").append(O(h, g)), v.find("#network-team-settings-runner-select").append(i = r(t, ut, "form-control")), 
            v.find("#network-team-settings-balancer-select").append(o = r(e, ft, "form-control")), 
            v.find("#network-team-settings-link-watch-select").append(c = r(n, pt, "form-control")), 
            l = v.find("#network-team-settings-ping-interval-input"), l.change(n), d = v.find("#network-team-settings-ping-target-input"), 
            d.change(n), u = v.find("#network-team-settings-link-up-delay-input"), u.change(n), 
            f = v.find("#network-team-settings-link-down-delay-input"), f.change(n), a(i, m.runner.name), 
            a(o, m.runner.tx_balancer && m.runner.tx_balancer.name || "none"), a(c, m.link_watch.name), 
            t(), n(), J("#network-team-settings-body").html(v);
        },
        cancel: function() {
            J("#network-team-settings-dialog").modal("hide");
        },
        apply: function() {
            function t() {
                return F(J("#network-team-settings-body"), R.model, R.apply_settings, R.connection, e.settings, "team").then(function() {
                    if (J("#network-team-settings-dialog").modal("hide"), R.connection && X.location.go([ e.settings.connection.interface_name ]), 
                    R.done) return R.done();
                }).fail(function(t) {
                    S("#network-team-settings-error", t);
                });
            }
            var e = this;
            R.connection ? C(R.model, t, !0) : w(R.model, t, et("Creating this team will break the connection to the server, and will make the administration UI unavailable."), et("Create it"), !0);
        }
    }, U.prototype = {
        _init: function() {
            this.id = "network-teamport-settings-dialog", this.team_port_settings_template = J("#network-team-port-settings-template").html(), 
            K.parse(this.team_port_settings_template);
        },
        setup: function() {
            J("#network-teamport-settings-cancel").click(J.proxy(this, "cancel")), J("#network-teamport-settings-apply").click(J.proxy(this, "apply"));
        },
        enter: function() {
            J("#network-teamport-settings-error").hide(), this.settings = U.ghost_settings || U.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            function t() {
                "activebackup" == a.runner.name ? (s.prio = parseInt(e.val(), 10), s.sticky = n.prop("checked")) : "lacp" == a.runner.name && (s.lacp_prio = parseInt(i.val(), 10), 
                s.lacp_key = parseInt(o.val(), 10));
            }
            var e, n, i, o, r = this, a = U.master_settings.team.config, s = r.settings.team_port.config;
            s || (r.settings.team_port.config = s = {});
            var c = J(K.render(r.team_port_settings_template, s));
            e = c.find("#network-team-port-settings-ab-prio-input"), e.change(t), n = c.find("#network-team-port-settings-ab-sticky-input"), 
            n.change(t), i = c.find("#network-team-port-settings-lacp-prio-input"), i.change(t), 
            o = c.find("#network-team-port-settings-lacp-key-input"), o.change(t), e.parents("tr").toggle("activebackup" == a.runner.name), 
            n.parents("tr").toggle("activebackup" == a.runner.name), i.parents("tr").toggle("lacp" == a.runner.name), 
            o.parents("tr").toggle("lacp" == a.runner.name), J("#network-teamport-settings-body").html(c);
        },
        cancel: function() {
            J("#network-teamport-settings-dialog").modal("hide");
        },
        apply: function() {
            function t() {
                return U.apply_settings(e.settings).then(function() {
                    if (J("#network-teamport-settings-dialog").modal("hide"), U.done) return U.done();
                }).fail(function(t) {
                    S("#network-teamport-settings-error", t);
                });
            }
            var e = this, n = U.model;
            C(n, t);
        }
    }, j.prototype = {
        _init: function() {
            this.id = "network-bridge-settings-dialog", this.bridge_settings_template = J("#network-bridge-settings-template").html(), 
            K.parse(this.bridge_settings_template);
        },
        setup: function() {
            J("#network-bridge-settings-cancel").click(J.proxy(this, "cancel")), J("#network-bridge-settings-apply").click(J.proxy(this, "apply"));
        },
        enter: function() {
            J("#network-bridge-settings-error").hide(), this.settings = j.ghost_settings || j.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        find_slave_con: function(t) {
            return j.connection ? A(j.connection.Slaves, function(e) {
                return e.Interfaces.indexOf(t) >= 0;
            }) || null : null;
        },
        update: function() {
            function t() {
                l.stp = e.prop("checked"), l.priority = parseInt(n.val(), 10), l.forward_delay = parseInt(i.val(), 10), 
                l.hello_time = parseInt(o.val(), 10), l.max_age = parseInt(r.val(), 10), n.parents("tr").toggle(l.stp), 
                i.parents("tr").toggle(l.stp), o.parents("tr").toggle(l.stp), r.parents("tr").toggle(l.stp);
            }
            var e, n, i, o, r, a = this, s = j.model, c = j.connection, l = a.settings.bridge, d = J(K.render(a.bridge_settings_template, {
                bridge_name: l.interface_name,
                stp_checked: l.stp,
                stp_priority: l.priority,
                stp_forward_delay: l.forward_delay,
                stp_hello_time: l.hello_time,
                stp_max_age: l.max_age
            }));
            d.find("#network-bridge-settings-name-input").change(function(t) {
                var e = J(t.target).val();
                l.interface_name = e, a.settings.connection.id = e, a.settings.connection.interface_name = e;
            }), d.find("#network-bridge-settings-slave-interfaces").append(O(s, c)).parent().toggle(!c), 
            e = d.find("#network-bridge-settings-stp-enabled-input"), e.change(t), n = d.find("#network-bridge-settings-stp-priority-input"), 
            n.change(t), i = d.find("#network-bridge-settings-stp-forward-delay-input"), i.change(t), 
            o = d.find("#network-bridge-settings-stp-hello-time-input"), o.change(t), r = d.find("#network-bridge-settings-stp-max-age-input"), 
            r.change(t), t(), J("#network-bridge-settings-body").html(d);
        },
        cancel: function() {
            J("#network-bridge-settings-dialog").modal("hide");
        },
        apply: function() {
            function t() {
                return F(J("#network-bridge-settings-body"), j.model, j.apply_settings, j.connection, e.settings, "bridge").then(function() {
                    if (J("#network-bridge-settings-dialog").modal("hide"), j.connection && X.location.go([ e.settings.connection.interface_name ]), 
                    j.done) return j.done();
                }).fail(function(t) {
                    J("#network-bridge-settings-error").show().find("span").text(t.message || t.toString());
                });
            }
            var e = this;
            j.connection ? C(j.model, t, !0) : w(j.model, t, et("Creating this bridge will break the connection to the server, and will make the administration UI unavailable."), et("Create it"), !0);
        }
    }, H.prototype = {
        _init: function() {
            this.id = "network-bridgeport-settings-dialog", this.bridge_port_settings_template = J("#network-bridge-port-settings-template").html(), 
            K.parse(this.bridge_port_settings_template);
        },
        setup: function() {
            J("#network-bridgeport-settings-cancel").click(J.proxy(this, "cancel")), J("#network-bridgeport-settings-apply").click(J.proxy(this, "apply"));
        },
        enter: function() {
            J("#network-bridgeport-settings-error").hide(), this.settings = H.ghost_settings || H.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            function t() {
                r.priority = parseInt(e.val(), 10), r.path_cost = parseInt(n.val(), 10), r.hairpin_mode = i.prop("checked");
            }
            var e, n, i, o = this, r = o.settings.bridge_port, a = J(K.render(o.bridge_port_settings_template, {
                priority: r.priority,
                path_cost: r.path_cost,
                hairpin_mode_checked: r.hairpin_mode
            }));
            e = a.find("#network-bridge-port-settings-priority-input"), e.change(t), n = a.find("#network-bridge-port-settings-path-cost-input"), 
            n.change(t), i = a.find("#network-bridge-port-settings-hairpin-mode-input"), i.change(t), 
            J("#network-bridgeport-settings-body").html(a);
        },
        cancel: function() {
            J("#network-bridgeport-settings-dialog").modal("hide");
        },
        apply: function() {
            function t() {
                return H.apply_settings(e.settings).then(function() {
                    if (J("#network-bridgeport-settings-dialog").modal("hide"), H.done) return H.done();
                }).fail(function(t) {
                    S("#network-bridgeport-settings-error", t);
                });
            }
            var e = this, n = H.model;
            C(n, t);
        }
    }, L.prototype = {
        _init: function() {
            this.id = "network-vlan-settings-dialog", this.vlan_settings_template = J("#network-vlan-settings-template").html(), 
            K.parse(this.vlan_settings_template);
        },
        setup: function() {
            J("#network-vlan-settings-cancel").click(J.proxy(this, "cancel")), J("#network-vlan-settings-apply").click(J.proxy(this, "apply"));
        },
        enter: function() {
            J("#network-vlan-settings-error").hide(), this.settings = L.ghost_settings || L.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            function t() {
                d.parent = s(n), J("#network-vlan-settings-apply").toggleClass("disabled", !d.parent), 
                d.id = parseInt(i.val(), 10), u && d.parent && d.id && o.val(d.parent + "." + d.id), 
                d.interface_name = o.val(), c.settings.connection.id = d.interface_name, c.settings.connection.interface_name = d.interface_name;
            }
            function e() {
                u = !1, t();
            }
            var n, i, o, c = this, l = L.model, d = c.settings.vlan, u = !0, f = [];
            l.list_interfaces().forEach(function(t) {
                !I(t, L.connection) && N(t) && f.push({
                    title: t.Name,
                    choice: t.Name
                });
            });
            var p = J(K.render(c.vlan_settings_template, {
                vlan_id: d.id || "1",
                interface_name: d.interface_name
            }));
            n = r(t, f, "form-control"), p.find("#network-vlan-settings-parent-select").html(n), 
            i = p.find("#network-vlan-settings-vlan-id-input").change(t).on("input", t), o = p.find("#network-vlan-settings-interface-name-input").change(e).on("input", e), 
            a(n, d.parent || (f[0] ? f[0].choice : "")), t(), J("#network-vlan-settings-body").html(p);
        },
        cancel: function() {
            J("#network-vlan-settings-dialog").modal("hide");
        },
        apply: function() {
            function t() {
                return L.apply_settings(e.settings).then(function() {
                    if (J("#network-vlan-settings-dialog").modal("hide"), L.connection && X.location.go([ e.settings.connection.interface_name ]), 
                    L.done) return L.done();
                }).fail(function(t) {
                    S("#network-vlan-settings-error", t);
                });
            }
            var e = this, n = L.model;
            L.connection ? C(n, t, !0) : w(L.model, t, et("Creating this VLAN will break the connection to the server, and will make the administration UI unavailable."), et("Create it"), !0);
        }
    }, B.prototype = {
        _init: function() {
            this.id = "network-ethernet-settings-dialog", this.ethernet_settings_template = J("#network-ethernet-settings-template").html(), 
            K.parse(this.ethernet_settings_template);
        },
        setup: function() {
            J("#network-ethernet-settings-cancel").click(J.proxy(this, "cancel")), J("#network-ethernet-settings-apply").click(J.proxy(this, "apply"));
        },
        enter: function() {
            J("#network-ethernet-settings-error").hide(), this.settings = B.ghost_settings || B.connection.copy_settings(), 
            this.update();
        },
        show: function() {},
        leave: function() {},
        update: function() {
            var t = this, e = t.settings.ethernet, n = J(K.render(t.ethernet_settings_template, e));
            J("#network-ethernet-settings-body").html(n), J("#network-ethernet-settings-mtu-input").focus(function() {
                J("#network-ethernet-settings-mtu-custom").prop("checked", !0);
            });
        },
        cancel: function() {
            J("#network-ethernet-settings-dialog").modal("hide");
        },
        apply: function() {
            function t(t) {
                S("#network-ethernet-settings-error", t);
            }
            function e() {
                return B.apply_settings(n.settings).then(function() {
                    if (J("#network-ethernet-settings-dialog").modal("hide"), B.done) return B.done();
                }).fail(t);
            }
            var n = this, i = B.model;
            if (J("#network-ethernet-settings-mtu-auto").prop("checked")) n.settings.ethernet.mtu = 0; else {
                var o = J("#network-ethernet-settings-mtu-input").val();
                if (!/^[0-9]+$/.test(o)) return void t(et("MTU must be a positive number"));
                n.settings.ethernet.mtu = parseInt(o, 10);
            }
            C(i, e);
        }
    }, J(V);
}, function(t, e) {
    t.exports = jQuery;
}, function(t, e) {
    t.exports = cockpit;
}, function(t, e, n) {
    "use strict";
    !function() {
        function e(t) {
            h = t;
        }
        function i(t) {
            return t.toString();
        }
        function o(t) {
            if (/^[0-9]+$/.test(t.trim())) return parseInt(t, 10);
            throw g.format(m("Invalid prefix $0"), t);
        }
        function r(t) {
            return t.toString();
        }
        function a(t) {
            if ("" === t) return 0;
            if (/^[0-9]+$/.test(t.trim())) return parseInt(t, 10);
            throw g.format(m("Invalid metric $0"), t);
        }
        function s(t) {
            return t.toString(10);
        }
        function c(t) {
            var e, n = [];
            if ("be" == h) for (e = 3; e >= 0; e--) n[e] = 255 & t, t >>>= 8; else for (e = 0; e < 4; e++) n[e] = 255 & t, 
            t >>>= 8;
            return n;
        }
        function l(t, e) {
            return 0 === t && e ? "" : c(t).map(s).join(".");
        }
        function d(t, e) {
            function n() {
                throw g.format(m("Invalid address $0"), t);
            }
            function i(t) {
                (isNaN(t) || t < 0 || t > 255) && n(), s = 256 * s + t;
            }
            if ("" === t && e) return 0;
            var o = t.split(".");
            4 != o.length && n();
            var r, a = o.map(function(t) {
                return /^[0-9]+$/.test(t.trim()) ? parseInt(t, 10) : void n();
            }), s = 0;
            if ("be" == h) for (r = 0; r < 4; r++) i(a[r]); else for (r = 3; r >= 0; r--) i(a[r]);
            return s;
        }
        function u(t) {
            function e() {
                throw g.format(m("Invalid prefix or netmask $0"), t);
            }
            if (/^[0-9]+$/.test(t.trim())) return parseInt(t, 10);
            var n = t.split(".");
            4 != n.length && e();
            var i, o = 0;
            for (i = 0; i < 4; i++) {
                var r = v[n[i].trim()];
                if (void 0 !== r) {
                    if (o += r, r < 8) break;
                } else e();
            }
            for (i += 1; i < 4; i++) /^0+$/.test(n[i].trim()) === !1 && e();
            return o;
        }
        function f(t, e) {
            for (var n = [], i = g.base64_decode(t), o = 0; o < 8; o++) n[o] = ((i[2 * o] << 8) + i[2 * o + 1]).toString(16);
            var r = n.join(":");
            return "0:0:0:0:0:0:0:0" == r && e ? "" : r;
        }
        function p(t, e) {
            function n() {
                throw g.format(m("Invalid address $0"), t);
            }
            if ("" === t && e) return g.base64_encode([ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]);
            var i = t.split(":");
            (i.length < 1 || i.length > 8) && n(), "" === i[0] && (i[0] = "0"), "" === i[i.length - 1] && (i[i.length - 1] = "0");
            var o, r, a, s = [], c = !1;
            for (r = 0, a = 0; r < i.length; r++, a++) if ("" === i[r]) for (c && n(), c = !0; a < r + (8 - i.length); ) s[2 * a] = s[2 * a + 1] = 0, 
            a++; else /^[0-9a-fA-F]+$/.test(i[r].trim()) || n(), o = parseInt(i[r], 16), (isNaN(o) || o < 0 || o > 65535) && n(), 
            s[2 * a] = o >> 8, s[2 * a + 1] = 255 & o;
            return 8 != a && n(), g.base64_encode(s);
        }
        var h, g = n(3), m = g.gettext, v = {
            "255": 8,
            "254": 7,
            "252": 6,
            "248": 5,
            "240": 4,
            "224": 3,
            "192": 2,
            "128": 1,
            "0": 0
        };
        t.exports = {
            set_byteorder: e,
            ip_prefix_to_text: i,
            ip_prefix_from_text: o,
            ip_metric_to_text: r,
            ip_metric_from_text: a,
            ip4_to_text: l,
            ip4_from_text: d,
            ip4_prefix_from_text: u,
            ip6_to_text: f,
            ip6_from_text: p
        };
    }();
}, function(t, e, n) {
    "use strict";
    function i(t) {
        if (t in a) return a[t];
        var e = document.createElement("div");
        e.innerHTML = t, o.translate(e);
        var n = e.innerHTML;
        return a[t] = n, n;
    }
    var o = n(3), r = n(6), a = {};
    t.exports = o.extend({}, r, {
        render: function(t, e, n) {
            return i(r.render(t, e, n));
        },
        to_html: function(t, e, n, o) {
            return i(r.to_html(t, e, n, o));
        },
        clearCache: function() {
            return a = {}, r.clearCache();
        }
    });
}, function(t, e, n) {
    var i, o;
    /*!
	 * mustache.js - Logic-less {{mustache}} templates with JavaScript
	 * http://github.com/janl/mustache.js
	 */
    !function(r, a) {
        if ("object" == typeof e && e) a(e); else {
            var s = {};
            a(s), i = s, o = "function" == typeof i ? i.call(e, n, e, t) : i, !(void 0 !== o && (t.exports = o));
        }
    }(this, function(t) {
        function e(t, e) {
            return x.call(t, e);
        }
        function n(t) {
            return !e(g, t);
        }
        function i(t) {
            return "function" == typeof t;
        }
        function o(t) {
            return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        }
        function r(t) {
            return String(t).replace(/[&<>"'\/]/g, function(t) {
                return w[t];
            });
        }
        function a(t) {
            if (!k(t) || 2 !== t.length) throw new Error("Invalid tags: " + t);
            return [ new RegExp(o(t[0]) + "\\s*"), new RegExp("\\s*" + o(t[1])) ];
        }
        function s(e, i) {
            function r() {
                if (S && !T) for (;C.length; ) delete M[C.pop()]; else C = [];
                S = !1, T = !1;
            }
            i = i || t.tags, e = e || "", "string" == typeof i && (i = i.split(h));
            for (var s, u, f, g, x, b, k = a(i), w = new d(e), y = [], M = [], C = [], S = !1, T = !1; !w.eos(); ) {
                if (s = w.pos, f = w.scanUntil(k[0])) for (var I = 0, N = f.length; I < N; ++I) g = f.charAt(I), 
                n(g) ? C.push(M.length) : T = !0, M.push([ "text", g, s, s + 1 ]), s += 1, "\n" === g && r();
                if (!w.scan(k[0])) break;
                if (S = !0, u = w.scan(_) || "name", w.scan(p), "=" === u ? (f = w.scanUntil(m), 
                w.scan(m), w.scanUntil(k[1])) : "{" === u ? (f = w.scanUntil(new RegExp("\\s*" + o("}" + i[1]))), 
                w.scan(v), w.scanUntil(k[1]), u = "&") : f = w.scanUntil(k[1]), !w.scan(k[1])) throw new Error("Unclosed tag at " + w.pos);
                if (x = [ u, f, s, w.pos ], M.push(x), "#" === u || "^" === u) y.push(x); else if ("/" === u) {
                    if (b = y.pop(), !b) throw new Error('Unopened section "' + f + '" at ' + s);
                    if (b[1] !== f) throw new Error('Unclosed section "' + b[1] + '" at ' + s);
                } else "name" === u || "{" === u || "&" === u ? T = !0 : "=" === u && (k = a(i = f.split(h)));
            }
            if (b = y.pop()) throw new Error('Unclosed section "' + b[1] + '" at ' + w.pos);
            return l(c(M));
        }
        function c(t) {
            for (var e, n, i = [], o = 0, r = t.length; o < r; ++o) e = t[o], e && ("text" === e[0] && n && "text" === n[0] ? (n[1] += e[1], 
            n[3] = e[3]) : (i.push(e), n = e));
            return i;
        }
        function l(t) {
            for (var e, n, i = [], o = i, r = [], a = 0, s = t.length; a < s; ++a) switch (e = t[a], 
            e[0]) {
              case "#":
              case "^":
                o.push(e), r.push(e), o = e[4] = [];
                break;

              case "/":
                n = r.pop(), n[5] = e[2], o = r.length > 0 ? r[r.length - 1][4] : i;
                break;

              default:
                o.push(e);
            }
            return i;
        }
        function d(t) {
            this.string = t, this.tail = t, this.pos = 0;
        }
        function u(t, e) {
            this.view = null == t ? {} : t, this.cache = {
                ".": this.view
            }, this.parent = e;
        }
        function f() {
            this.cache = {};
        }
        var p = /\s*/, h = /\s+/, g = /\S/, m = /\s*=/, v = /\s*\}/, _ = /#|\^|\/|>|\{|&|=|!/, x = RegExp.prototype.test, b = Object.prototype.toString, k = Array.isArray || function(t) {
            return "[object Array]" === b.call(t);
        }, w = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;"
        };
        d.prototype.eos = function() {
            return "" === this.tail;
        }, d.prototype.scan = function(t) {
            var e = this.tail.match(t);
            if (e && 0 === e.index) {
                var n = e[0];
                return this.tail = this.tail.substring(n.length), this.pos += n.length, n;
            }
            return "";
        }, d.prototype.scanUntil = function(t) {
            var e, n = this.tail.search(t);
            switch (n) {
              case -1:
                e = this.tail, this.tail = "";
                break;

              case 0:
                e = "";
                break;

              default:
                e = this.tail.substring(0, n), this.tail = this.tail.substring(n);
            }
            return this.pos += e.length, e;
        }, u.prototype.push = function(t) {
            return new u(t, this);
        }, u.prototype.lookup = function(t) {
            var e;
            if (t in this.cache) e = this.cache[t]; else {
                for (var n = this; n; ) {
                    if (t.indexOf(".") > 0) {
                        e = n.view;
                        for (var o = t.split("."), r = 0; null != e && r < o.length; ) e = e[o[r++]];
                    } else e = n.view[t];
                    if (null != e) break;
                    n = n.parent;
                }
                this.cache[t] = e;
            }
            return i(e) && (e = e.call(this.view)), e;
        }, f.prototype.clearCache = function() {
            this.cache = {};
        }, f.prototype.parse = function(t, e) {
            var n = this.cache, i = n[t];
            return null == i && (i = n[t] = s(t, e)), i;
        }, f.prototype.render = function(t, e, n) {
            var i = this.parse(t), o = e instanceof u ? e : new u(e);
            return this.renderTokens(i, o, n, t);
        }, f.prototype.renderTokens = function(e, n, o, r) {
            function a(t) {
                return d.render(t, n, o);
            }
            for (var s, c, l = "", d = this, u = 0, f = e.length; u < f; ++u) switch (s = e[u], 
            s[0]) {
              case "#":
                if (c = n.lookup(s[1]), !c) continue;
                if (k(c)) for (var p = 0, h = c.length; p < h; ++p) l += this.renderTokens(s[4], n.push(c[p]), o, r); else if ("object" == typeof c || "string" == typeof c) l += this.renderTokens(s[4], n.push(c), o, r); else if (i(c)) {
                    if ("string" != typeof r) throw new Error("Cannot use higher-order sections without the original template");
                    c = c.call(n.view, r.slice(s[3], s[5]), a), null != c && (l += c);
                } else l += this.renderTokens(s[4], n, o, r);
                break;

              case "^":
                c = n.lookup(s[1]), (!c || k(c) && 0 === c.length) && (l += this.renderTokens(s[4], n, o, r));
                break;

              case ">":
                if (!o) continue;
                c = i(o) ? o(s[1]) : o[s[1]], null != c && (l += this.renderTokens(this.parse(c), n, o, c));
                break;

              case "&":
                c = n.lookup(s[1]), null != c && (l += c);
                break;

              case "name":
                c = n.lookup(s[1]), null != c && (l += t.escape(c));
                break;

              case "text":
                l += s[1];
            }
            return l;
        }, t.name = "mustache.js", t.version = "0.8.1", t.tags = [ "{{", "}}" ];
        var y = new f();
        t.clearCache = function() {
            return y.clearCache();
        }, t.parse = function(t, e) {
            return y.parse(t, e);
        }, t.render = function(t, e, n) {
            return y.render(t, e, n);
        }, t.to_html = function(e, n, o, r) {
            var a = t.render(e, n, o);
            return i(r) ? void r(a) : a;
        }, t.escape = r, t.Scanner = d, t.Context = u, t.Writer = f;
    });
}, function(t, e, n) {
    "use strict";
    function i(t, e, n, i) {
        function r() {
            _.width(v.width()), _.height(v.height());
        }
        function a(t) {
            p ? (p.getAxes().yaxis.options.max = t, d()) : g.yaxis.max = t;
        }
        function s() {
            m = !0, c();
        }
        function c() {
            m && 0 !== v.width() && 0 !== v.height() && (p ? u() : (r(), p = o.plot(_, n, g)));
        }
        function l() {
            m = !1;
        }
        function d() {
            p && m && (p.setData(n), i.setup_hook && i.setup_hook(p), p.setupGrid(), p.draw());
        }
        function u() {
            p && m && (r(), _.width() > 0 && _.height() > 0 && p.resize(), d());
        }
        function f() {
            o(h).trigger("destroyed"), o(window).off("resize", u), o(v).empty(), p = null;
        }
        var p, h, g = {
            colors: [ "#0099d3" ],
            legend: {
                show: !1
            },
            series: {
                shadowSize: 0,
                lines: {
                    lineWidth: 0,
                    fill: 1
                }
            },
            xaxis: {
                tickFormatter: function() {
                    return "";
                }
            },
            yaxis: {
                tickFormatter: function() {
                    return "";
                }
            },
            points: {
                radius: 0
            },
            grid: {
                borderWidth: 1,
                aboveData: !0,
                color: "black",
                borderColor: o.color.parse("black").scale("a", .22).toString(),
                labelMargin: 0
            }
        }, m = !1;
        o.extend(!0, g, i);
        var v = o(t), _ = o("<div/>");
        return v.empty(), v.append(_), o(e).on("notify", d), o(window).on("resize", u), 
        c(), h = {
            start: s,
            stop: l,
            resize: u,
            element: _[0],
            set_yaxis_max: a,
            destroy: f
        };
    }
    var o = n(2), r = n(3);
    n(8), n(9), n(10);
    var a = {}, s = r.gettext;
    a.plot = function(t, e, n) {
        function i() {
            if (0 !== t.height() && 0 !== t.width()) {
                null === I && (I = o.plot(t, T, M)), I.setData(T);
                var e = I.getAxes();
                e.xaxis.options.min = y.beg * w, e.xaxis.options.max = (y.end - 2) * w, M.setup_hook && M.setup_hook(I), 
                e.xaxis.show = !0, e.xaxis.used = !0, e.yaxis.show = !0, e.yaxis.used = !0, I.setupGrid(), 
                I.draw();
            }
        }
        function a() {
            N || (N = !0, window.setTimeout(function() {
                N = !1, i();
            }, 0));
        }
        function s() {
            y.walk();
        }
        function c() {
            y.move(y.beg, y.end);
        }
        function l(t, e) {
            I && I.clearSelection(!0), w = 1e3 * Math.ceil(t / 1e3);
            var n;
            n = void 0 !== e ? new Date().getTime() - 1e3 * e : 0;
            var i = -Math.ceil((1e3 * t + n) / w), s = -Math.floor(n / w);
            if (y && y.interval == w) y.move(i, s); else {
                y && y.close(), y = r.grid(w, i, s), A++;
                for (var c = 0; c < S.length; c++) S[c].reset();
                A--, d(), o(y).on("notify", function(t, e, n) {
                    a();
                });
            }
        }
        function d() {
            0 === A && y.sync();
        }
        function u() {
            y.close();
            for (var e = 0; e < S.length; e++) S[e].stop();
            M = {}, S = [], T = [], I = null, o(t).empty(), o(t).data("flot_data", null);
        }
        function f() {
            0 !== t.height() && 0 !== t.width() && (I && I.resize(), a());
        }
        function p(t) {
            M = t, I = null;
        }
        function h() {
            return M;
        }
        function g(t, e) {
            function n() {
                m && m.close();
            }
            function i() {
                T.push(e);
            }
            function s() {
                var t = T.indexOf(e);
                t >= 0 && T.splice(t, 1);
            }
            function c() {
                var t = T.indexOf(e);
                t >= 0 && (T.splice(t, 1), T.push(e));
            }
            function l() {
                n(), s(), a();
            }
            function u(e) {
                return {
                    name: e,
                    units: t.units,
                    derive: t.derive
                };
            }
            function f(t) {
                var e, n;
                if (!t) return 0;
                if (void 0 !== t.length) {
                    for (n = 0, e = 0; e < t.length; e++) n += f(t[e]);
                    return n;
                }
                return t;
            }
            function p() {
                function n() {
                    m.archives && !C.archives && (C.archives = !0, o(C).triggerHandler("changed"));
                }
                m && m.close(), m = r.metrics(w, _);
                var i = y.add(m, []), a = t.factor || 1;
                e.data = y.add(function(t, e, n) {
                    for (var o = 0; o < n; o++) t[e + o] = [ (y.beg + e + o) * w, f(i[e + o]) * a ];
                }), o(m).on("changed", n), n(), d();
            }
            function h(t, n) {
                return !(!n || n.series.data != e.data);
            }
            function g(t) {
                o(v).triggerHandler("hover", [ t ]);
            }
            var m = null, v = {
                options: e,
                move_to_front: c,
                remove: l
            };
            S.push({
                stop: n,
                reset: p,
                hover_hit: h,
                hover: g
            });
            var _ = [];
            return t.direct && _.push({
                source: "direct",
                archive_source: "pcp-archive",
                metrics: t.direct.map(u),
                instances: t.instances,
                "omit-instances": t["omit-instances"],
                host: t.host
            }), t.internal && _.push({
                source: "internal",
                metrics: t.internal.map(u),
                instances: t.instances,
                "omit-instances": t["omit-instances"],
                host: t.host
            }), p(), i(), v;
        }
        function m(t, e) {
            function n() {
                f && f.close();
            }
            function i(e) {
                return {
                    name: e,
                    units: t.units,
                    derive: t.derive
                };
            }
            function a() {
                function t() {
                    f.archives && !C.archives && (C.archives = !0, o(C).triggerHandler("changed"));
                }
                f && f.close(), f = r.metrics(w, h), o(f).on("changed", t), t(), A++;
                for (var e in g) g[e].reset();
                A--, d();
            }
            function s(n, i) {
                function r() {
                    s = y.add(f, [ "a", n ]), c.data = y.add(function(t, e, n) {
                        for (var i = 0; i < n; i++) {
                            var o = (s[e + i] || 0) * l, r = (y.beg + e + i) * w, a = 0;
                            p && (a = p.data[e + i][1] ? p.data[e + i][1] : p.data[e + i][2]), Math.abs(o) > u ? (t[e + i] = [ r, a + o, a ], 
                            t[e + i - 1] && null === t[e + i - 1][1] && (t[e + i - 1][1] = t[e + i - 1][2])) : (t[e + i] = [ r, null, a ], 
                            t[e + i - 1] && null !== t[e + i - 1][1] && (t[e + i - 1][1] = t[e + i - 1][2]));
                        }
                    }), d();
                }
                function a() {
                    y.remove(s), y.remove(c.data);
                    var t = T.indexOf(c);
                    t >= 0 && T.splice(t, 1);
                }
                if (!g[n]) {
                    var s, c = o.extend({
                        selector: i
                    }, e), l = t.factor || 1, u = t.threshold || 0, p = m;
                    m = c, g[n] = c, c.reset = r, c.remove = a, r(), T.push(c);
                }
            }
            function c() {
                for (var t in g) g[t].remove();
                g = {}, m = null;
            }
            function l(t, e) {
                var n, i;
                if (!y) return !1;
                i = Math.round(t.x / w) - y.beg, i < 0 && (i = 0);
                for (n in g) {
                    var o = g[n].data;
                    if (o[i] && o[i][1] && o[i][2] <= t.y && t.y <= o[i][1]) return g[n].selector || n;
                }
                return !1;
            }
            function u(t) {
                o(p).triggerHandler("hover", [ t ]);
            }
            var f = null, p = {
                add_instance: s,
                clear_instances: c
            };
            S.push({
                stop: n,
                reset: a,
                hover_hit: l,
                hover: u
            });
            var h = [];
            t.direct && h.push({
                source: "direct",
                archive_source: "pcp-archive",
                metrics: [ i(t.direct) ],
                metrics_path_names: [ "a" ],
                instances: t.instances,
                "omit-instances": t["omit-instances"],
                host: t.host
            }), t.internal && h.push({
                source: "internal",
                metrics: [ i(t.internal) ],
                metrics_path_names: [ "a" ],
                instances: t.instances,
                "omit-instances": t["omit-instances"],
                host: t.host
            });
            var g = {}, m = null;
            return a(), p;
        }
        function v(t, e) {
            D != t ? (D && D.hover(!1), D = t, z = e, D && D.hover(z)) : z != e && (z = e, D && D.hover(z));
        }
        function _(t, e, n) {
            for (var i = null, o = !1, r = 0; r < S.length; r++) if (o = S[r].hover_hit(e, n)) {
                i = S[r];
                break;
            }
            v(i, o);
        }
        function x(t) {
            v(null, !1);
        }
        function b(t, e) {
            e && o(C).triggerHandler("zoomstart", []);
        }
        function k(t, e) {
            I.clearSelection(!0), o(C).triggerHandler("zoom", [ (e.xaxis.to - e.xaxis.from) / 1e3, e.xaxis.to / 1e3 ]);
        }
        var w, y, M = {}, C = {}, S = [], T = [], I = null, N = !1, A = 0, D = null, z = !1;
        return o(t).on("plothover", _), o(t).on("mouseleave", x), o(t).on("plotselecting", b), 
        o(t).on("plotselected", k), o(t).data("flot_data", T), l(e, n), o.extend(C, {
            archives: !1,
            start_walking: s,
            stop_walking: c,
            refresh: a,
            reset: l,
            destroy: u,
            resize: f,
            set_options: p,
            get_options: h,
            add_metrics_sum_series: g,
            add_metrics_stacked_instances_series: m
        }), C;
    };
    var c = [ "#006bb4", "#008ff0", "#2daaff", "#69c2ff", "#a5daff", "#e1f3ff", "#00243c", "#004778" ];
    a.plot_simple_template = function() {
        return {
            colors: c,
            legend: {
                show: !1
            },
            series: {
                shadowSize: 0,
                lines: {
                    lineWidth: 2,
                    fill: .4
                }
            },
            xaxis: {
                tickLength: 0,
                mode: "time",
                tickFormatter: a.format_date_tick,
                minTickSize: [ 1, "minute" ],
                reserveSpace: !1
            },
            yaxis: {
                tickColor: "#d1d1d1",
                min: 0
            },
            points: {
                radius: 0
            },
            grid: {
                borderWidth: 1,
                aboveData: !1,
                color: "black",
                borderColor: o.color.parse("black").scale("a", .22).toString(),
                labelMargin: 0
            }
        };
    }, a.memory_ticks = function(t) {
        for (var e = Math.pow(2, Math.ceil(Math.log(t.max / 5) / Math.LN2)), n = [], i = 0; i < t.max; i += e) n.push(i);
        return n;
    };
    var l = [ s("month-name", "Jan"), s("month-name", "Feb"), s("month-name", "Mar"), s("month-name", "Apr"), s("month-name", "May"), s("month-name", "Jun"), s("month-name", "Jul"), s("month-name", "Aug"), s("month-name", "Sep"), s("month-name", "Oct"), s("month-name", "Nov"), s("month-name", "Dec") ];
    a.format_date_tick = function(t, e) {
        function n(t) {
            var e = t.toFixed();
            return 1 == e.length && (e = "0" + e), e;
        }
        var i, o, r = 0, a = 1, s = 2, c = 3, d = e.tickSize[1];
        o = "minute" == d || "hour" == d ? c : "day" == d ? s : "month" == d ? a : r;
        var u = new Date(), f = new Date(e.min);
        i = r, f.getFullYear() == u.getFullYear() && (i = a, f.getMonth() == u.getMonth() && (i = s, 
        f.getDate() == u.getDate() && (i = c))), i > o && (i = o), i == s && (i = a);
        var p = new Date(t), h = " ";
        return r >= i && r <= o && (h += p.getFullYear().toFixed() + " "), a >= i && a <= o && (h += l[p.getMonth()] + " "), 
        s >= i && s <= o && (h += p.getDate().toFixed() + " "), c >= i && c <= o && (h += n(p.getHours()) + ":" + n(p.getMinutes()) + " "), 
        h.substr(0, h.length - 1);
    }, a.bytes_tick_unit = function(t) {
        return r.format_bytes(t.max, 1024, !0)[1];
    }, a.format_bytes_tick_no_unit = function(t, e) {
        return r.format_bytes(t, a.bytes_tick_unit(e), !0)[0];
    }, a.format_bytes_tick = function(t, e) {
        return r.format_bytes(t, 1024);
    }, a.bytes_per_sec_tick_unit = function(t) {
        return r.format_bytes_per_sec(t.max, 1024, !0)[1];
    }, a.format_bytes_per_sec_tick_no_unit = function(t, e) {
        return r.format_bytes_per_sec(t, a.bytes_per_sec_tick_unit(e), !0)[0];
    }, a.format_bytes_per_sec_tick = function(t, e) {
        return r.format_bytes_per_sec(t, 1024);
    }, a.bits_per_sec_tick_unit = function(t) {
        return r.format_bits_per_sec(8 * t.max, 1e3, !0)[1];
    }, a.format_bits_per_sec_tick_no_unit = function(t, e) {
        return r.format_bits_per_sec(8 * t, a.bits_per_sec_tick_unit(e), !0)[0];
    }, a.format_bits_per_sec_tick = function(t, e) {
        return r.format_bits_per_sec(8 * t, 1e3);
    }, a.setup_plot_controls = function(t, e, n) {
        function i() {
            void 0 === p && (n.forEach(function(t) {
                t.stop_walking();
            }), p = new Date().getTime() / 1e3, l());
        }
        function a(t, e) {
            v.push(m), m = t, p = e, u();
        }
        function s() {
            var t = v.pop();
            if (void 0 === t) {
                var e;
                for (e = 0; e < g.length - 1 && !(g[e] > m); e++) ;
                t = g[e];
            }
            void 0 !== p && (p += (t - m) / 2), m = t, u();
        }
        function c(t) {
            var e;
            return t >= 31536e3 ? (e = Math.ceil(t / 31536e3), r.format(r.ngettext("$0 year", "$0 years", e), e)) : t >= 2592e3 ? (e = Math.ceil(t / 2592e3), 
            r.format(r.ngettext("$0 month", "$0 months", e), e)) : t >= 604800 ? (e = Math.ceil(t / 604800), 
            r.format(r.ngettext("$0 week", "$0 weeks", e), e)) : t >= 86400 ? (e = Math.ceil(t / 86400), 
            r.format(r.ngettext("$0 day", "$0 days", e), e)) : t >= 3600 ? (e = Math.ceil(t / 3600), 
            r.format(r.ngettext("$0 hour", "$0 hours", e), e)) : (e = Math.ceil(t / 60), r.format(r.ngettext("$0 minute", "$0 minutes", e), e));
        }
        function l() {
            e.find('[data-action="scroll-right"]').attr("disabled", void 0 === p), e.find('[data-action="zoom-out"]').attr("disabled", m >= g[g.length - 1]);
        }
        function d() {
            var e;
            t.hasClass("show-zoom-controls") && m > h ? (t.addClass("show-zoom-cursor"), e = "x") : (t.removeClass("show-zoom-cursor"), 
            e = null), n.forEach(function(t) {
                var n = t.get_options();
                n.selection && n.selection.mode == e || (n.selection = {
                    mode: e,
                    color: "#d4edfa"
                }, t.set_options(n), t.refresh());
            });
        }
        function u() {
            m < h && (p += (h - m) / 2, m = h), p >= new Date().getTime() / 1e3 - 10 && (p = void 0), 
            e.find(".dropdown-toggle span:first-child").text(c(m)), n.forEach(function(e) {
                function n() {
                    e.archives && (t.addClass("show-zoom-controls"), d());
                }
                e.stop_walking(), e.reset(m, p), e.refresh(), void 0 === p && e.start_walking(), 
                o(e).on("changed", n), n();
            }), l(), d();
        }
        function f(t) {
            void 0 === t && (t = []), n = t, n.forEach(function(t) {
                o(t).on("zoomstart", function(t) {
                    i();
                }), o(t).on("zoom", function(t, e, n) {
                    a(e, n);
                });
            }), u();
        }
        var p, h = 300, g = [ 300, 3600, 21600, 86400, 604800, 2592e3, 31536e3 ], m = 300, v = [];
        return e.find("[data-range]").click(function() {
            v = [], m = parseInt(o(this).attr("data-range"), 10), u();
        }), e.find('[data-action="goto-now"]').click(function() {
            p = void 0, u();
        }), e.find('[data-action="scroll-left"]').click(function() {
            var t = m / 10;
            void 0 === p && (p = new Date().getTime() / 1e3), p -= t, u();
        }), e.find('[data-action="scroll-right"]').click(function() {
            var t = m / 10;
            void 0 !== p && (p += t, u());
        }), e.find('[data-action="zoom-out"]').click(function() {
            s();
        }), f(n), {
            reset: f
        };
    }, a.setup_complicated_plot = function(t, e, n, o) {
        function r(t, e) {
            return t.add(function(t, n, i) {
                for (var o = 0; o < i; o++) t[n + o] = [ o, e[n + o] || 0 ];
            });
        }
        function a(t, e, n) {
            return t.add(function(t, i, o) {
                var r, a, s, c;
                for (r = 0; r < o; r++) s = 0, n && (a = n[i + r], s = a ? a[1] : 0), c = e[i + r] || 0, 
                t[i + r] = [ r, c + s, s ];
            });
        }
        var s = null;
        return n.forEach(function(t, n) {
            o.x_rh_stack_graphs ? t.data = a(e, t.row, s) : t.data = r(e, t.row), s = t.data;
        }), i(t, e, n, o);
    }, t.exports = a;
}, function(t, e) {
    !function(t) {
        t.color = {}, t.color.make = function(e, n, i, o) {
            var r = {};
            return r.r = e || 0, r.g = n || 0, r.b = i || 0, r.a = null != o ? o : 1, r.add = function(t, e) {
                for (var n = 0; n < t.length; ++n) r[t.charAt(n)] += e;
                return r.normalize();
            }, r.scale = function(t, e) {
                for (var n = 0; n < t.length; ++n) r[t.charAt(n)] *= e;
                return r.normalize();
            }, r.toString = function() {
                return r.a >= 1 ? "rgb(" + [ r.r, r.g, r.b ].join(",") + ")" : "rgba(" + [ r.r, r.g, r.b, r.a ].join(",") + ")";
            }, r.normalize = function() {
                function t(t, e, n) {
                    return e < t ? t : e > n ? n : e;
                }
                return r.r = t(0, parseInt(r.r), 255), r.g = t(0, parseInt(r.g), 255), r.b = t(0, parseInt(r.b), 255), 
                r.a = t(0, r.a, 1), r;
            }, r.clone = function() {
                return t.color.make(r.r, r.b, r.g, r.a);
            }, r.normalize();
        }, t.color.extract = function(e, n) {
            var i;
            do {
                if (i = e.css(n).toLowerCase(), "" != i && "transparent" != i) break;
                e = e.parent();
            } while (e.length && !t.nodeName(e.get(0), "body"));
            return "rgba(0, 0, 0, 0)" == i && (i = "transparent"), t.color.parse(i);
        }, t.color.parse = function(n) {
            var i, o = t.color.make;
            if (i = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(n)) return o(parseInt(i[1], 10), parseInt(i[2], 10), parseInt(i[3], 10));
            if (i = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n)) return o(parseInt(i[1], 10), parseInt(i[2], 10), parseInt(i[3], 10), parseFloat(i[4]));
            if (i = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(n)) return o(2.55 * parseFloat(i[1]), 2.55 * parseFloat(i[2]), 2.55 * parseFloat(i[3]));
            if (i = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n)) return o(2.55 * parseFloat(i[1]), 2.55 * parseFloat(i[2]), 2.55 * parseFloat(i[3]), parseFloat(i[4]));
            if (i = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(n)) return o(parseInt(i[1], 16), parseInt(i[2], 16), parseInt(i[3], 16));
            if (i = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(n)) return o(parseInt(i[1] + i[1], 16), parseInt(i[2] + i[2], 16), parseInt(i[3] + i[3], 16));
            var r = t.trim(n).toLowerCase();
            return "transparent" == r ? o(255, 255, 255, 0) : (i = e[r] || [ 0, 0, 0 ], o(i[0], i[1], i[2]));
        };
        var e = {
            aqua: [ 0, 255, 255 ],
            azure: [ 240, 255, 255 ],
            beige: [ 245, 245, 220 ],
            black: [ 0, 0, 0 ],
            blue: [ 0, 0, 255 ],
            brown: [ 165, 42, 42 ],
            cyan: [ 0, 255, 255 ],
            darkblue: [ 0, 0, 139 ],
            darkcyan: [ 0, 139, 139 ],
            darkgrey: [ 169, 169, 169 ],
            darkgreen: [ 0, 100, 0 ],
            darkkhaki: [ 189, 183, 107 ],
            darkmagenta: [ 139, 0, 139 ],
            darkolivegreen: [ 85, 107, 47 ],
            darkorange: [ 255, 140, 0 ],
            darkorchid: [ 153, 50, 204 ],
            darkred: [ 139, 0, 0 ],
            darksalmon: [ 233, 150, 122 ],
            darkviolet: [ 148, 0, 211 ],
            fuchsia: [ 255, 0, 255 ],
            gold: [ 255, 215, 0 ],
            green: [ 0, 128, 0 ],
            indigo: [ 75, 0, 130 ],
            khaki: [ 240, 230, 140 ],
            lightblue: [ 173, 216, 230 ],
            lightcyan: [ 224, 255, 255 ],
            lightgreen: [ 144, 238, 144 ],
            lightgrey: [ 211, 211, 211 ],
            lightpink: [ 255, 182, 193 ],
            lightyellow: [ 255, 255, 224 ],
            lime: [ 0, 255, 0 ],
            magenta: [ 255, 0, 255 ],
            maroon: [ 128, 0, 0 ],
            navy: [ 0, 0, 128 ],
            olive: [ 128, 128, 0 ],
            orange: [ 255, 165, 0 ],
            pink: [ 255, 192, 203 ],
            purple: [ 128, 0, 128 ],
            violet: [ 128, 0, 128 ],
            red: [ 255, 0, 0 ],
            silver: [ 192, 192, 192 ],
            white: [ 255, 255, 255 ],
            yellow: [ 255, 255, 0 ]
        };
    }(jQuery), function(t) {
        function e(e, n) {
            var i = n.children("." + e)[0];
            if (null == i && (i = document.createElement("canvas"), i.className = e, t(i).css({
                direction: "ltr",
                position: "absolute",
                left: 0,
                top: 0
            }).appendTo(n), !i.getContext)) {
                if (!window.G_vmlCanvasManager) throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.");
                i = window.G_vmlCanvasManager.initElement(i);
            }
            this.element = i;
            var o = this.context = i.getContext("2d"), r = window.devicePixelRatio || 1, a = o.webkitBackingStorePixelRatio || o.mozBackingStorePixelRatio || o.msBackingStorePixelRatio || o.oBackingStorePixelRatio || o.backingStorePixelRatio || 1;
            this.pixelRatio = r / a, this.resize(n.width(), n.height()), this.textContainer = null, 
            this.text = {}, this._textCache = {};
        }
        function n(n, o, r, a) {
            function s(t, e) {
                e = [ mt ].concat(e);
                for (var n = 0; n < t.length; ++n) t[n].apply(this, e);
            }
            function c() {
                for (var n = {
                    Canvas: e
                }, i = 0; i < a.length; ++i) {
                    var o = a[i];
                    o.init(mt, n), o.options && t.extend(!0, ot, o.options);
                }
            }
            function l(e) {
                t.extend(!0, ot, e), e && e.colors && (ot.colors = e.colors), null == ot.xaxis.color && (ot.xaxis.color = t.color.parse(ot.grid.color).scale("a", .22).toString()), 
                null == ot.yaxis.color && (ot.yaxis.color = t.color.parse(ot.grid.color).scale("a", .22).toString()), 
                null == ot.xaxis.tickColor && (ot.xaxis.tickColor = ot.grid.tickColor || ot.xaxis.color), 
                null == ot.yaxis.tickColor && (ot.yaxis.tickColor = ot.grid.tickColor || ot.yaxis.color), 
                null == ot.grid.borderColor && (ot.grid.borderColor = ot.grid.color), null == ot.grid.tickColor && (ot.grid.tickColor = t.color.parse(ot.grid.color).scale("a", .22).toString());
                var i, o, r, a = n.css("font-size"), c = a ? +a.replace("px", "") : 13, l = {
                    style: n.css("font-style"),
                    size: Math.round(.8 * c),
                    variant: n.css("font-variant"),
                    weight: n.css("font-weight"),
                    family: n.css("font-family")
                };
                for (r = ot.xaxes.length || 1, i = 0; i < r; ++i) o = ot.xaxes[i], o && !o.tickColor && (o.tickColor = o.color), 
                o = t.extend(!0, {}, ot.xaxis, o), ot.xaxes[i] = o, o.font && (o.font = t.extend({}, l, o.font), 
                o.font.color || (o.font.color = o.color), o.font.lineHeight || (o.font.lineHeight = Math.round(1.15 * o.font.size)));
                for (r = ot.yaxes.length || 1, i = 0; i < r; ++i) o = ot.yaxes[i], o && !o.tickColor && (o.tickColor = o.color), 
                o = t.extend(!0, {}, ot.yaxis, o), ot.yaxes[i] = o, o.font && (o.font = t.extend({}, l, o.font), 
                o.font.color || (o.font.color = o.color), o.font.lineHeight || (o.font.lineHeight = Math.round(1.15 * o.font.size)));
                for (ot.xaxis.noTicks && null == ot.xaxis.ticks && (ot.xaxis.ticks = ot.xaxis.noTicks), 
                ot.yaxis.noTicks && null == ot.yaxis.ticks && (ot.yaxis.ticks = ot.yaxis.noTicks), 
                ot.x2axis && (ot.xaxes[1] = t.extend(!0, {}, ot.xaxis, ot.x2axis), ot.xaxes[1].position = "top", 
                null == ot.x2axis.min && (ot.xaxes[1].min = null), null == ot.x2axis.max && (ot.xaxes[1].max = null)), 
                ot.y2axis && (ot.yaxes[1] = t.extend(!0, {}, ot.yaxis, ot.y2axis), ot.yaxes[1].position = "right", 
                null == ot.y2axis.min && (ot.yaxes[1].min = null), null == ot.y2axis.max && (ot.yaxes[1].max = null)), 
                ot.grid.coloredAreas && (ot.grid.markings = ot.grid.coloredAreas), ot.grid.coloredAreasColor && (ot.grid.markingsColor = ot.grid.coloredAreasColor), 
                ot.lines && t.extend(!0, ot.series.lines, ot.lines), ot.points && t.extend(!0, ot.series.points, ot.points), 
                ot.bars && t.extend(!0, ot.series.bars, ot.bars), null != ot.shadowSize && (ot.series.shadowSize = ot.shadowSize), 
                null != ot.highlightColor && (ot.series.highlightColor = ot.highlightColor), i = 0; i < ot.xaxes.length; ++i) m(dt, i + 1).options = ot.xaxes[i];
                for (i = 0; i < ot.yaxes.length; ++i) m(ut, i + 1).options = ot.yaxes[i];
                for (var d in gt) ot.hooks[d] && ot.hooks[d].length && (gt[d] = gt[d].concat(ot.hooks[d]));
                s(gt.processOptions, [ ot ]);
            }
            function d(t) {
                it = u(t), v(), _();
            }
            function u(e) {
                for (var n = [], i = 0; i < e.length; ++i) {
                    var o = t.extend(!0, {}, ot.series);
                    null != e[i].data ? (o.data = e[i].data, delete e[i].data, t.extend(!0, o, e[i]), 
                    e[i].data = o.data) : o.data = e[i], n.push(o);
                }
                return n;
            }
            function f(t, e) {
                var n = t[e + "axis"];
                return "object" == typeof n && (n = n.n), "number" != typeof n && (n = 1), n;
            }
            function p() {
                return t.grep(dt.concat(ut), function(t) {
                    return t;
                });
            }
            function h(t) {
                var e, n, i = {};
                for (e = 0; e < dt.length; ++e) n = dt[e], n && n.used && (i["x" + n.n] = n.c2p(t.left));
                for (e = 0; e < ut.length; ++e) n = ut[e], n && n.used && (i["y" + n.n] = n.c2p(t.top));
                return void 0 !== i.x1 && (i.x = i.x1), void 0 !== i.y1 && (i.y = i.y1), i;
            }
            function g(t) {
                var e, n, i, o = {};
                for (e = 0; e < dt.length; ++e) if (n = dt[e], n && n.used && (i = "x" + n.n, null == t[i] && 1 == n.n && (i = "x"), 
                null != t[i])) {
                    o.left = n.p2c(t[i]);
                    break;
                }
                for (e = 0; e < ut.length; ++e) if (n = ut[e], n && n.used && (i = "y" + n.n, null == t[i] && 1 == n.n && (i = "y"), 
                null != t[i])) {
                    o.top = n.p2c(t[i]);
                    break;
                }
                return o;
            }
            function m(e, n) {
                return e[n - 1] || (e[n - 1] = {
                    n: n,
                    direction: e == dt ? "x" : "y",
                    options: t.extend(!0, {}, e == dt ? ot.xaxis : ot.yaxis)
                }), e[n - 1];
            }
            function v() {
                var e, n = it.length, i = -1;
                for (e = 0; e < it.length; ++e) {
                    var o = it[e].color;
                    null != o && (n--, "number" == typeof o && o > i && (i = o));
                }
                n <= i && (n = i + 1);
                var r, a = [], s = ot.colors, c = s.length, l = 0;
                for (e = 0; e < n; e++) r = t.color.parse(s[e % c] || "#666"), e % c == 0 && e && (l = l >= 0 ? l < .5 ? -l - .2 : 0 : -l), 
                a[e] = r.scale("rgb", 1 + l);
                var d, u = 0;
                for (e = 0; e < it.length; ++e) {
                    if (d = it[e], null == d.color ? (d.color = a[u].toString(), ++u) : "number" == typeof d.color && (d.color = a[d.color].toString()), 
                    null == d.lines.show) {
                        var p, h = !0;
                        for (p in d) if (d[p] && d[p].show) {
                            h = !1;
                            break;
                        }
                        h && (d.lines.show = !0);
                    }
                    null == d.lines.zero && (d.lines.zero = !!d.lines.fill), d.xaxis = m(dt, f(d, "x")), 
                    d.yaxis = m(ut, f(d, "y"));
                }
            }
            function _() {
                function e(t, e, n) {
                    e < t.datamin && e != -_ && (t.datamin = e), n > t.datamax && n != _ && (t.datamax = n);
                }
                var n, i, o, r, a, c, l, d, u, f, h, g, m = Number.POSITIVE_INFINITY, v = Number.NEGATIVE_INFINITY, _ = Number.MAX_VALUE;
                for (t.each(p(), function(t, e) {
                    e.datamin = m, e.datamax = v, e.used = !1;
                }), n = 0; n < it.length; ++n) a = it[n], a.datapoints = {
                    points: []
                }, s(gt.processRawData, [ a, a.data, a.datapoints ]);
                for (n = 0; n < it.length; ++n) {
                    if (a = it[n], h = a.data, g = a.datapoints.format, !g) {
                        if (g = [], g.push({
                            x: !0,
                            number: !0,
                            required: !0
                        }), g.push({
                            y: !0,
                            number: !0,
                            required: !0
                        }), a.bars.show || a.lines.show && a.lines.fill) {
                            var x = !!(a.bars.show && a.bars.zero || a.lines.show && a.lines.zero);
                            g.push({
                                y: !0,
                                number: !0,
                                required: !1,
                                defaultValue: 0,
                                autoscale: x
                            }), a.bars.horizontal && (delete g[g.length - 1].y, g[g.length - 1].x = !0);
                        }
                        a.datapoints.format = g;
                    }
                    if (null == a.datapoints.pointsize) {
                        a.datapoints.pointsize = g.length, l = a.datapoints.pointsize, c = a.datapoints.points;
                        var b = a.lines.show && a.lines.steps;
                        for (a.xaxis.used = a.yaxis.used = !0, i = o = 0; i < h.length; ++i, o += l) {
                            f = h[i];
                            var k = null == f;
                            if (!k) for (r = 0; r < l; ++r) d = f[r], u = g[r], u && (u.number && null != d && (d = +d, 
                            isNaN(d) ? d = null : d == 1 / 0 ? d = _ : d == -(1 / 0) && (d = -_)), null == d && (u.required && (k = !0), 
                            null != u.defaultValue && (d = u.defaultValue))), c[o + r] = d;
                            if (k) for (r = 0; r < l; ++r) d = c[o + r], null != d && (u = g[r], u.autoscale !== !1 && (u.x && e(a.xaxis, d, d), 
                            u.y && e(a.yaxis, d, d))), c[o + r] = null; else if (b && o > 0 && null != c[o - l] && c[o - l] != c[o] && c[o - l + 1] != c[o + 1]) {
                                for (r = 0; r < l; ++r) c[o + l + r] = c[o + r];
                                c[o + 1] = c[o - l + 1], o += l;
                            }
                        }
                    }
                }
                for (n = 0; n < it.length; ++n) a = it[n], s(gt.processDatapoints, [ a, a.datapoints ]);
                for (n = 0; n < it.length; ++n) {
                    a = it[n], c = a.datapoints.points, l = a.datapoints.pointsize, g = a.datapoints.format;
                    var w = m, y = m, M = v, C = v;
                    for (i = 0; i < c.length; i += l) if (null != c[i]) for (r = 0; r < l; ++r) d = c[i + r], 
                    u = g[r], u && u.autoscale !== !1 && d != _ && d != -_ && (u.x && (d < w && (w = d), 
                    d > M && (M = d)), u.y && (d < y && (y = d), d > C && (C = d)));
                    if (a.bars.show) {
                        var S;
                        switch (a.bars.align) {
                          case "left":
                            S = 0;
                            break;

                          case "right":
                            S = -a.bars.barWidth;
                            break;

                          default:
                            S = -a.bars.barWidth / 2;
                        }
                        a.bars.horizontal ? (y += S, C += S + a.bars.barWidth) : (w += S, M += S + a.bars.barWidth);
                    }
                    e(a.xaxis, w, M), e(a.yaxis, y, C);
                }
                t.each(p(), function(t, e) {
                    e.datamin == m && (e.datamin = null), e.datamax == v && (e.datamax = null);
                });
            }
            function x() {
                n.css("padding", 0).children().filter(function() {
                    return !t(this).hasClass("flot-overlay") && !t(this).hasClass("flot-base");
                }).remove(), "static" == n.css("position") && n.css("position", "relative"), rt = new e("flot-base", n), 
                at = new e("flot-overlay", n), ct = rt.context, lt = at.context, st = t(at.element).unbind();
                var i = n.data("plot");
                i && (i.shutdown(), at.clear()), n.data("plot", mt);
            }
            function b() {
                ot.grid.hoverable && (st.mousemove(Y), st.bind("mouseleave", q)), ot.grid.clickable && st.click(G), 
                s(gt.bindEvents, [ st ]);
            }
            function k() {
                _t && clearTimeout(_t), st.unbind("mousemove", Y), st.unbind("mouseleave", q), st.unbind("click", G), 
                s(gt.shutdown, [ st ]);
            }
            function w(t) {
                function e(t) {
                    return t;
                }
                var n, i, o = t.options.transform || e, r = t.options.inverseTransform;
                "x" == t.direction ? (n = t.scale = pt / Math.abs(o(t.max) - o(t.min)), i = Math.min(o(t.max), o(t.min))) : (n = t.scale = ht / Math.abs(o(t.max) - o(t.min)), 
                n = -n, i = Math.max(o(t.max), o(t.min))), o == e ? t.p2c = function(t) {
                    return (t - i) * n;
                } : t.p2c = function(t) {
                    return (o(t) - i) * n;
                }, r ? t.c2p = function(t) {
                    return r(i + t / n);
                } : t.c2p = function(t) {
                    return i + t / n;
                };
            }
            function y(t) {
                for (var e = t.options, n = t.ticks || [], i = e.labelWidth || 0, o = e.labelHeight || 0, r = i || ("x" == t.direction ? Math.floor(rt.width / (n.length || 1)) : null), a = t.direction + "Axis " + t.direction + t.n + "Axis", s = "flot-" + t.direction + "-axis flot-" + t.direction + t.n + "-axis " + a, c = e.font || "flot-tick-label tickLabel", l = 0; l < n.length; ++l) {
                    var d = n[l];
                    if (d.label) {
                        var u = rt.getTextInfo(s, d.label, c, null, r);
                        i = Math.max(i, u.width), o = Math.max(o, u.height);
                    }
                }
                t.labelWidth = e.labelWidth || i, t.labelHeight = e.labelHeight || o;
            }
            function M(e) {
                var n = e.labelWidth, i = e.labelHeight, o = e.options.position, r = "x" === e.direction, a = e.options.tickLength, s = ot.grid.axisMargin, c = ot.grid.labelMargin, l = !0, d = !0, u = !0, f = !1;
                t.each(r ? dt : ut, function(t, n) {
                    n && (n.show || n.reserveSpace) && (n === e ? f = !0 : n.options.position === o && (f ? d = !1 : l = !1), 
                    f || (u = !1));
                }), d && (s = 0), null == a && (a = u ? "full" : 5), isNaN(+a) || (c += +a), r ? (i += c, 
                "bottom" == o ? (ft.bottom += i + s, e.box = {
                    top: rt.height - ft.bottom,
                    height: i
                }) : (e.box = {
                    top: ft.top + s,
                    height: i
                }, ft.top += i + s)) : (n += c, "left" == o ? (e.box = {
                    left: ft.left + s,
                    width: n
                }, ft.left += n + s) : (ft.right += n + s, e.box = {
                    left: rt.width - ft.right,
                    width: n
                })), e.position = o, e.tickLength = a, e.box.padding = c, e.innermost = l;
            }
            function C(t) {
                "x" == t.direction ? (t.box.left = ft.left - t.labelWidth / 2, t.box.width = rt.width - ft.left - ft.right + t.labelWidth) : (t.box.top = ft.top - t.labelHeight / 2, 
                t.box.height = rt.height - ft.bottom - ft.top + t.labelHeight);
            }
            function S() {
                var e, n = ot.grid.minBorderMargin;
                if (null == n) for (n = 0, e = 0; e < it.length; ++e) n = Math.max(n, 2 * (it[e].points.radius + it[e].points.lineWidth / 2));
                var i = {
                    left: n,
                    right: n,
                    top: n,
                    bottom: n
                };
                t.each(p(), function(t, e) {
                    e.reserveSpace && e.ticks && e.ticks.length && ("x" === e.direction ? (i.left = Math.max(i.left, e.labelWidth / 2), 
                    i.right = Math.max(i.right, e.labelWidth / 2)) : (i.bottom = Math.max(i.bottom, e.labelHeight / 2), 
                    i.top = Math.max(i.top, e.labelHeight / 2)));
                }), ft.left = Math.ceil(Math.max(i.left, ft.left)), ft.right = Math.ceil(Math.max(i.right, ft.right)), 
                ft.top = Math.ceil(Math.max(i.top, ft.top)), ft.bottom = Math.ceil(Math.max(i.bottom, ft.bottom));
            }
            function T() {
                var e, n = p(), i = ot.grid.show;
                for (var o in ft) {
                    var r = ot.grid.margin || 0;
                    ft[o] = "number" == typeof r ? r : r[o] || 0;
                }
                s(gt.processOffset, [ ft ]);
                for (var o in ft) "object" == typeof ot.grid.borderWidth ? ft[o] += i ? ot.grid.borderWidth[o] : 0 : ft[o] += i ? ot.grid.borderWidth : 0;
                if (t.each(n, function(t, e) {
                    var n = e.options;
                    e.show = null == n.show ? e.used : n.show, e.reserveSpace = null == n.reserveSpace ? e.show : n.reserveSpace, 
                    I(e);
                }), i) {
                    var a = t.grep(n, function(t) {
                        return t.show || t.reserveSpace;
                    });
                    for (t.each(a, function(t, e) {
                        N(e), A(e), D(e, e.ticks), y(e);
                    }), e = a.length - 1; e >= 0; --e) M(a[e]);
                    S(), t.each(a, function(t, e) {
                        C(e);
                    });
                }
                pt = rt.width - ft.left - ft.right, ht = rt.height - ft.bottom - ft.top, t.each(n, function(t, e) {
                    w(e);
                }), i && E(), L();
            }
            function I(t) {
                var e = t.options, n = +(null != e.min ? e.min : t.datamin), i = +(null != e.max ? e.max : t.datamax), o = i - n;
                if (0 == o) {
                    var r = 0 == i ? 1 : .01;
                    null == e.min && (n -= r), null != e.max && null == e.min || (i += r);
                } else {
                    var a = e.autoscaleMargin;
                    null != a && (null == e.min && (n -= o * a, n < 0 && null != t.datamin && t.datamin >= 0 && (n = 0)), 
                    null == e.max && (i += o * a, i > 0 && null != t.datamax && t.datamax <= 0 && (i = 0)));
                }
                t.min = n, t.max = i;
            }
            function N(e) {
                var n, o = e.options;
                n = "number" == typeof o.ticks && o.ticks > 0 ? o.ticks : .3 * Math.sqrt("x" == e.direction ? rt.width : rt.height);
                var r = (e.max - e.min) / n, a = -Math.floor(Math.log(r) / Math.LN10), s = o.tickDecimals;
                null != s && a > s && (a = s);
                var c, l = Math.pow(10, -a), d = r / l;
                if (d < 1.5 ? c = 1 : d < 3 ? (c = 2, d > 2.25 && (null == s || a + 1 <= s) && (c = 2.5, 
                ++a)) : c = d < 7.5 ? 5 : 10, c *= l, null != o.minTickSize && c < o.minTickSize && (c = o.minTickSize), 
                e.delta = r, e.tickDecimals = Math.max(0, null != s ? s : a), e.tickSize = o.tickSize || c, 
                "time" == o.mode && !e.tickGenerator) throw new Error("Time mode requires the flot.time plugin.");
                if (e.tickGenerator || (e.tickGenerator = function(t) {
                    var e, n = [], o = i(t.min, t.tickSize), r = 0, a = Number.NaN;
                    do e = a, a = o + r * t.tickSize, n.push(a), ++r; while (a < t.max && a != e);
                    return n;
                }, e.tickFormatter = function(t, e) {
                    var n = e.tickDecimals ? Math.pow(10, e.tickDecimals) : 1, i = "" + Math.round(t * n) / n;
                    if (null != e.tickDecimals) {
                        var o = i.indexOf("."), r = o == -1 ? 0 : i.length - o - 1;
                        if (r < e.tickDecimals) return (r ? i : i + ".") + ("" + n).substr(1, e.tickDecimals - r);
                    }
                    return i;
                }), t.isFunction(o.tickFormatter) && (e.tickFormatter = function(t, e) {
                    return "" + o.tickFormatter(t, e);
                }), null != o.alignTicksWithAxis) {
                    var u = ("x" == e.direction ? dt : ut)[o.alignTicksWithAxis - 1];
                    if (u && u.used && u != e) {
                        var f = e.tickGenerator(e);
                        if (f.length > 0 && (null == o.min && (e.min = Math.min(e.min, f[0])), null == o.max && f.length > 1 && (e.max = Math.max(e.max, f[f.length - 1]))), 
                        e.tickGenerator = function(t) {
                            var e, n, i = [];
                            for (n = 0; n < u.ticks.length; ++n) e = (u.ticks[n].v - u.min) / (u.max - u.min), 
                            e = t.min + e * (t.max - t.min), i.push(e);
                            return i;
                        }, !e.mode && null == o.tickDecimals) {
                            var p = Math.max(0, -Math.floor(Math.log(e.delta) / Math.LN10) + 1), h = e.tickGenerator(e);
                            h.length > 1 && /\..*0$/.test((h[1] - h[0]).toFixed(p)) || (e.tickDecimals = p);
                        }
                    }
                }
            }
            function A(e) {
                var n = e.options.ticks, i = [];
                null == n || "number" == typeof n && n > 0 ? i = e.tickGenerator(e) : n && (i = t.isFunction(n) ? n(e) : n);
                var o, r;
                for (e.ticks = [], o = 0; o < i.length; ++o) {
                    var a = null, s = i[o];
                    "object" == typeof s ? (r = +s[0], s.length > 1 && (a = s[1])) : r = +s, null == a && (a = e.tickFormatter(r, e)), 
                    isNaN(r) || e.ticks.push({
                        v: r,
                        label: a
                    });
                }
            }
            function D(t, e) {
                t.options.autoscaleMargin && e.length > 0 && (null == t.options.min && (t.min = Math.min(t.min, e[0].v)), 
                null == t.options.max && e.length > 1 && (t.max = Math.max(t.max, e[e.length - 1].v)));
            }
            function z() {
                rt.clear(), s(gt.drawBackground, [ ct ]);
                var t = ot.grid;
                t.show && t.backgroundColor && W(), t.show && !t.aboveData && P();
                for (var e = 0; e < it.length; ++e) s(gt.drawSeries, [ ct, it[e] ]), F(it[e]);
                s(gt.draw, [ ct ]), t.show && t.aboveData && P(), rt.render(), J();
            }
            function O(t, e) {
                for (var n, i, o, r, a = p(), s = 0; s < a.length; ++s) if (n = a[s], n.direction == e && (r = e + n.n + "axis", 
                t[r] || 1 != n.n || (r = e + "axis"), t[r])) {
                    i = t[r].from, o = t[r].to;
                    break;
                }
                if (t[r] || (n = "x" == e ? dt[0] : ut[0], i = t[e + "1"], o = t[e + "2"]), null != i && null != o && i > o) {
                    var c = i;
                    i = o, o = c;
                }
                return {
                    from: i,
                    to: o,
                    axis: n
                };
            }
            function W() {
                ct.save(), ct.translate(ft.left, ft.top), ct.fillStyle = nt(ot.grid.backgroundColor, ht, 0, "rgba(255, 255, 255, 0)"), 
                ct.fillRect(0, 0, pt, ht), ct.restore();
            }
            function P() {
                var e, n, i, o;
                ct.save(), ct.translate(ft.left, ft.top);
                var r = ot.grid.markings;
                if (r) for (t.isFunction(r) && (n = mt.getAxes(), n.xmin = n.xaxis.min, n.xmax = n.xaxis.max, 
                n.ymin = n.yaxis.min, n.ymax = n.yaxis.max, r = r(n)), e = 0; e < r.length; ++e) {
                    var a = r[e], s = O(a, "x"), c = O(a, "y");
                    if (null == s.from && (s.from = s.axis.min), null == s.to && (s.to = s.axis.max), 
                    null == c.from && (c.from = c.axis.min), null == c.to && (c.to = c.axis.max), !(s.to < s.axis.min || s.from > s.axis.max || c.to < c.axis.min || c.from > c.axis.max)) {
                        s.from = Math.max(s.from, s.axis.min), s.to = Math.min(s.to, s.axis.max), c.from = Math.max(c.from, c.axis.min), 
                        c.to = Math.min(c.to, c.axis.max);
                        var l = s.from === s.to, d = c.from === c.to;
                        if (!l || !d) if (s.from = Math.floor(s.axis.p2c(s.from)), s.to = Math.floor(s.axis.p2c(s.to)), 
                        c.from = Math.floor(c.axis.p2c(c.from)), c.to = Math.floor(c.axis.p2c(c.to)), l || d) {
                            var u = a.lineWidth || ot.grid.markingsLineWidth, f = u % 2 ? .5 : 0;
                            ct.beginPath(), ct.strokeStyle = a.color || ot.grid.markingsColor, ct.lineWidth = u, 
                            l ? (ct.moveTo(s.to + f, c.from), ct.lineTo(s.to + f, c.to)) : (ct.moveTo(s.from, c.to + f), 
                            ct.lineTo(s.to, c.to + f)), ct.stroke();
                        } else ct.fillStyle = a.color || ot.grid.markingsColor, ct.fillRect(s.from, c.to, s.to - s.from, c.from - c.to);
                    }
                }
                n = p(), i = ot.grid.borderWidth;
                for (var h = 0; h < n.length; ++h) {
                    var g, m, v, _, x = n[h], b = x.box, k = x.tickLength;
                    if (x.show && 0 != x.ticks.length) {
                        for (ct.lineWidth = 1, "x" == x.direction ? (g = 0, m = "full" == k ? "top" == x.position ? 0 : ht : b.top - ft.top + ("top" == x.position ? b.height : 0)) : (m = 0, 
                        g = "full" == k ? "left" == x.position ? 0 : pt : b.left - ft.left + ("left" == x.position ? b.width : 0)), 
                        x.innermost || (ct.strokeStyle = x.options.color, ct.beginPath(), v = _ = 0, "x" == x.direction ? v = pt + 1 : _ = ht + 1, 
                        1 == ct.lineWidth && ("x" == x.direction ? m = Math.floor(m) + .5 : g = Math.floor(g) + .5), 
                        ct.moveTo(g, m), ct.lineTo(g + v, m + _), ct.stroke()), ct.strokeStyle = x.options.tickColor, 
                        ct.beginPath(), e = 0; e < x.ticks.length; ++e) {
                            var w = x.ticks[e].v;
                            v = _ = 0, isNaN(w) || w < x.min || w > x.max || "full" == k && ("object" == typeof i && i[x.position] > 0 || i > 0) && (w == x.min || w == x.max) || ("x" == x.direction ? (g = x.p2c(w), 
                            _ = "full" == k ? -ht : k, "top" == x.position && (_ = -_)) : (m = x.p2c(w), v = "full" == k ? -pt : k, 
                            "left" == x.position && (v = -v)), 1 == ct.lineWidth && ("x" == x.direction ? g = Math.floor(g) + .5 : m = Math.floor(m) + .5), 
                            ct.moveTo(g, m), ct.lineTo(g + v, m + _));
                        }
                        ct.stroke();
                    }
                }
                i && (o = ot.grid.borderColor, "object" == typeof i || "object" == typeof o ? ("object" != typeof i && (i = {
                    top: i,
                    right: i,
                    bottom: i,
                    left: i
                }), "object" != typeof o && (o = {
                    top: o,
                    right: o,
                    bottom: o,
                    left: o
                }), i.top > 0 && (ct.strokeStyle = o.top, ct.lineWidth = i.top, ct.beginPath(), 
                ct.moveTo(0 - i.left, 0 - i.top / 2), ct.lineTo(pt, 0 - i.top / 2), ct.stroke()), 
                i.right > 0 && (ct.strokeStyle = o.right, ct.lineWidth = i.right, ct.beginPath(), 
                ct.moveTo(pt + i.right / 2, 0 - i.top), ct.lineTo(pt + i.right / 2, ht), ct.stroke()), 
                i.bottom > 0 && (ct.strokeStyle = o.bottom, ct.lineWidth = i.bottom, ct.beginPath(), 
                ct.moveTo(pt + i.right, ht + i.bottom / 2), ct.lineTo(0, ht + i.bottom / 2), ct.stroke()), 
                i.left > 0 && (ct.strokeStyle = o.left, ct.lineWidth = i.left, ct.beginPath(), ct.moveTo(0 - i.left / 2, ht + i.bottom), 
                ct.lineTo(0 - i.left / 2, 0), ct.stroke())) : (ct.lineWidth = i, ct.strokeStyle = ot.grid.borderColor, 
                ct.strokeRect(-i / 2, -i / 2, pt + i, ht + i))), ct.restore();
            }
            function E() {
                t.each(p(), function(t, e) {
                    var n, i, o, r, a, s = e.box, c = e.direction + "Axis " + e.direction + e.n + "Axis", l = "flot-" + e.direction + "-axis flot-" + e.direction + e.n + "-axis " + c, d = e.options.font || "flot-tick-label tickLabel";
                    if (rt.removeText(l), e.show && 0 != e.ticks.length) for (var u = 0; u < e.ticks.length; ++u) n = e.ticks[u], 
                    !n.label || n.v < e.min || n.v > e.max || ("x" == e.direction ? (r = "center", i = ft.left + e.p2c(n.v), 
                    "bottom" == e.position ? o = s.top + s.padding : (o = s.top + s.height - s.padding, 
                    a = "bottom")) : (a = "middle", o = ft.top + e.p2c(n.v), "left" == e.position ? (i = s.left + s.width - s.padding, 
                    r = "right") : i = s.left + s.padding), rt.addText(l, i, o, n.label, d, null, null, r, a));
                });
            }
            function F(t) {
                t.lines.show && $(t), t.bars.show && j(t), t.points.show && R(t);
            }
            function $(t) {
                function e(t, e, n, i, o) {
                    var r = t.points, a = t.pointsize, s = null, c = null;
                    ct.beginPath();
                    for (var l = a; l < r.length; l += a) {
                        var d = r[l - a], u = r[l - a + 1], f = r[l], p = r[l + 1];
                        if (null != d && null != f) {
                            if (u <= p && u < o.min) {
                                if (p < o.min) continue;
                                d = (o.min - u) / (p - u) * (f - d) + d, u = o.min;
                            } else if (p <= u && p < o.min) {
                                if (u < o.min) continue;
                                f = (o.min - u) / (p - u) * (f - d) + d, p = o.min;
                            }
                            if (u >= p && u > o.max) {
                                if (p > o.max) continue;
                                d = (o.max - u) / (p - u) * (f - d) + d, u = o.max;
                            } else if (p >= u && p > o.max) {
                                if (u > o.max) continue;
                                f = (o.max - u) / (p - u) * (f - d) + d, p = o.max;
                            }
                            if (d <= f && d < i.min) {
                                if (f < i.min) continue;
                                u = (i.min - d) / (f - d) * (p - u) + u, d = i.min;
                            } else if (f <= d && f < i.min) {
                                if (d < i.min) continue;
                                p = (i.min - d) / (f - d) * (p - u) + u, f = i.min;
                            }
                            if (d >= f && d > i.max) {
                                if (f > i.max) continue;
                                u = (i.max - d) / (f - d) * (p - u) + u, d = i.max;
                            } else if (f >= d && f > i.max) {
                                if (d > i.max) continue;
                                p = (i.max - d) / (f - d) * (p - u) + u, f = i.max;
                            }
                            d == s && u == c || ct.moveTo(i.p2c(d) + e, o.p2c(u) + n), s = f, c = p, ct.lineTo(i.p2c(f) + e, o.p2c(p) + n);
                        }
                    }
                    ct.stroke();
                }
                function n(t, e, n) {
                    for (var i = t.points, o = t.pointsize, r = Math.min(Math.max(0, n.min), n.max), a = 0, s = !1, c = 1, l = 0, d = 0; ;) {
                        if (o > 0 && a > i.length + o) break;
                        a += o;
                        var u = i[a - o], f = i[a - o + c], p = i[a], h = i[a + c];
                        if (s) {
                            if (o > 0 && null != u && null == p) {
                                d = a, o = -o, c = 2;
                                continue;
                            }
                            if (o < 0 && a == l + o) {
                                ct.fill(), s = !1, o = -o, c = 1, a = l = d + o;
                                continue;
                            }
                        }
                        if (null != u && null != p) {
                            if (u <= p && u < e.min) {
                                if (p < e.min) continue;
                                f = (e.min - u) / (p - u) * (h - f) + f, u = e.min;
                            } else if (p <= u && p < e.min) {
                                if (u < e.min) continue;
                                h = (e.min - u) / (p - u) * (h - f) + f, p = e.min;
                            }
                            if (u >= p && u > e.max) {
                                if (p > e.max) continue;
                                f = (e.max - u) / (p - u) * (h - f) + f, u = e.max;
                            } else if (p >= u && p > e.max) {
                                if (u > e.max) continue;
                                h = (e.max - u) / (p - u) * (h - f) + f, p = e.max;
                            }
                            if (s || (ct.beginPath(), ct.moveTo(e.p2c(u), n.p2c(r)), s = !0), f >= n.max && h >= n.max) ct.lineTo(e.p2c(u), n.p2c(n.max)), 
                            ct.lineTo(e.p2c(p), n.p2c(n.max)); else if (f <= n.min && h <= n.min) ct.lineTo(e.p2c(u), n.p2c(n.min)), 
                            ct.lineTo(e.p2c(p), n.p2c(n.min)); else {
                                var g = u, m = p;
                                f <= h && f < n.min && h >= n.min ? (u = (n.min - f) / (h - f) * (p - u) + u, f = n.min) : h <= f && h < n.min && f >= n.min && (p = (n.min - f) / (h - f) * (p - u) + u, 
                                h = n.min), f >= h && f > n.max && h <= n.max ? (u = (n.max - f) / (h - f) * (p - u) + u, 
                                f = n.max) : h >= f && h > n.max && f <= n.max && (p = (n.max - f) / (h - f) * (p - u) + u, 
                                h = n.max), u != g && ct.lineTo(e.p2c(g), n.p2c(f)), ct.lineTo(e.p2c(u), n.p2c(f)), 
                                ct.lineTo(e.p2c(p), n.p2c(h)), p != m && (ct.lineTo(e.p2c(p), n.p2c(h)), ct.lineTo(e.p2c(m), n.p2c(h)));
                            }
                        }
                    }
                }
                ct.save(), ct.translate(ft.left, ft.top), ct.lineJoin = "round";
                var i = t.lines.lineWidth, o = t.shadowSize;
                if (i > 0 && o > 0) {
                    ct.lineWidth = o, ct.strokeStyle = "rgba(0,0,0,0.1)";
                    var r = Math.PI / 18;
                    e(t.datapoints, Math.sin(r) * (i / 2 + o / 2), Math.cos(r) * (i / 2 + o / 2), t.xaxis, t.yaxis), 
                    ct.lineWidth = o / 2, e(t.datapoints, Math.sin(r) * (i / 2 + o / 4), Math.cos(r) * (i / 2 + o / 4), t.xaxis, t.yaxis);
                }
                ct.lineWidth = i, ct.strokeStyle = t.color;
                var a = H(t.lines, t.color, 0, ht);
                a && (ct.fillStyle = a, n(t.datapoints, t.xaxis, t.yaxis)), i > 0 && e(t.datapoints, 0, 0, t.xaxis, t.yaxis), 
                ct.restore();
            }
            function R(t) {
                function e(t, e, n, i, o, r, a, s) {
                    for (var c = t.points, l = t.pointsize, d = 0; d < c.length; d += l) {
                        var u = c[d], f = c[d + 1];
                        null == u || u < r.min || u > r.max || f < a.min || f > a.max || (ct.beginPath(), 
                        u = r.p2c(u), f = a.p2c(f) + i, "circle" == s ? ct.arc(u, f, e, 0, o ? Math.PI : 2 * Math.PI, !1) : s(ct, u, f, e, o), 
                        ct.closePath(), n && (ct.fillStyle = n, ct.fill()), ct.stroke());
                    }
                }
                ct.save(), ct.translate(ft.left, ft.top);
                var n = t.points.lineWidth, i = t.shadowSize, o = t.points.radius, r = t.points.symbol;
                if (0 == n && (n = 1e-4), n > 0 && i > 0) {
                    var a = i / 2;
                    ct.lineWidth = a, ct.strokeStyle = "rgba(0,0,0,0.1)", e(t.datapoints, o, null, a + a / 2, !0, t.xaxis, t.yaxis, r), 
                    ct.strokeStyle = "rgba(0,0,0,0.2)", e(t.datapoints, o, null, a / 2, !0, t.xaxis, t.yaxis, r);
                }
                ct.lineWidth = n, ct.strokeStyle = t.color, e(t.datapoints, o, H(t.points, t.color), 0, !1, t.xaxis, t.yaxis, r), 
                ct.restore();
            }
            function U(t, e, n, i, o, r, a, s, c, l, d) {
                var u, f, p, h, g, m, v, _, x;
                l ? (_ = m = v = !0, g = !1, u = n, f = t, h = e + i, p = e + o, f < u && (x = f, 
                f = u, u = x, g = !0, m = !1)) : (g = m = v = !0, _ = !1, u = t + i, f = t + o, 
                p = n, h = e, h < p && (x = h, h = p, p = x, _ = !0, v = !1)), f < a.min || u > a.max || h < s.min || p > s.max || (u < a.min && (u = a.min, 
                g = !1), f > a.max && (f = a.max, m = !1), p < s.min && (p = s.min, _ = !1), h > s.max && (h = s.max, 
                v = !1), u = a.p2c(u), p = s.p2c(p), f = a.p2c(f), h = s.p2c(h), r && (c.fillStyle = r(p, h), 
                c.fillRect(u, h, f - u, p - h)), d > 0 && (g || m || v || _) && (c.beginPath(), 
                c.moveTo(u, p), g ? c.lineTo(u, h) : c.moveTo(u, h), v ? c.lineTo(f, h) : c.moveTo(f, h), 
                m ? c.lineTo(f, p) : c.moveTo(f, p), _ ? c.lineTo(u, p) : c.moveTo(u, p), c.stroke()));
            }
            function j(t) {
                function e(e, n, i, o, r, a) {
                    for (var s = e.points, c = e.pointsize, l = 0; l < s.length; l += c) null != s[l] && U(s[l], s[l + 1], s[l + 2], n, i, o, r, a, ct, t.bars.horizontal, t.bars.lineWidth);
                }
                ct.save(), ct.translate(ft.left, ft.top), ct.lineWidth = t.bars.lineWidth, ct.strokeStyle = t.color;
                var n;
                switch (t.bars.align) {
                  case "left":
                    n = 0;
                    break;

                  case "right":
                    n = -t.bars.barWidth;
                    break;

                  default:
                    n = -t.bars.barWidth / 2;
                }
                var i = t.bars.fill ? function(e, n) {
                    return H(t.bars, t.color, e, n);
                } : null;
                e(t.datapoints, n, n + t.bars.barWidth, i, t.xaxis, t.yaxis), ct.restore();
            }
            function H(e, n, i, o) {
                var r = e.fill;
                if (!r) return null;
                if (e.fillColor) return nt(e.fillColor, i, o, n);
                var a = t.color.parse(n);
                return a.a = "number" == typeof r ? r : .4, a.normalize(), a.toString();
            }
            function L() {
                if (null != ot.legend.container ? t(ot.legend.container).html("") : n.find(".legend").remove(), 
                ot.legend.show) {
                    for (var e, i, o = [], r = [], a = !1, s = ot.legend.labelFormatter, c = 0; c < it.length; ++c) e = it[c], 
                    e.label && (i = s ? s(e.label, e) : e.label, i && r.push({
                        label: i,
                        color: e.color
                    }));
                    if (ot.legend.sorted) if (t.isFunction(ot.legend.sorted)) r.sort(ot.legend.sorted); else if ("reverse" == ot.legend.sorted) r.reverse(); else {
                        var l = "descending" != ot.legend.sorted;
                        r.sort(function(t, e) {
                            return t.label == e.label ? 0 : t.label < e.label != l ? 1 : -1;
                        });
                    }
                    for (var c = 0; c < r.length; ++c) {
                        var d = r[c];
                        c % ot.legend.noColumns == 0 && (a && o.push("</tr>"), o.push("<tr>"), a = !0), 
                        o.push('<td class="legendColorBox"><div style="border:1px solid ' + ot.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + d.color + ';overflow:hidden"></div></div></td><td class="legendLabel">' + d.label + "</td>");
                    }
                    if (a && o.push("</tr>"), 0 != o.length) {
                        var u = '<table style="font-size:smaller;color:' + ot.grid.color + '">' + o.join("") + "</table>";
                        if (null != ot.legend.container) t(ot.legend.container).html(u); else {
                            var f = "", p = ot.legend.position, h = ot.legend.margin;
                            null == h[0] && (h = [ h, h ]), "n" == p.charAt(0) ? f += "top:" + (h[1] + ft.top) + "px;" : "s" == p.charAt(0) && (f += "bottom:" + (h[1] + ft.bottom) + "px;"), 
                            "e" == p.charAt(1) ? f += "right:" + (h[0] + ft.right) + "px;" : "w" == p.charAt(1) && (f += "left:" + (h[0] + ft.left) + "px;");
                            var g = t('<div class="legend">' + u.replace('style="', 'style="position:absolute;' + f + ";") + "</div>").appendTo(n);
                            if (0 != ot.legend.backgroundOpacity) {
                                var m = ot.legend.backgroundColor;
                                null == m && (m = ot.grid.backgroundColor, m = m && "string" == typeof m ? t.color.parse(m) : t.color.extract(g, "background-color"), 
                                m.a = 1, m = m.toString());
                                var v = g.children();
                                t('<div style="position:absolute;width:' + v.width() + "px;height:" + v.height() + "px;" + f + "background-color:" + m + ';"> </div>').prependTo(g).css("opacity", ot.legend.backgroundOpacity);
                            }
                        }
                    }
                }
            }
            function B(t, e, n) {
                var i, o, r, a = ot.grid.mouseActiveRadius, s = a * a + 1, c = null;
                for (i = it.length - 1; i >= 0; --i) if (n(it[i])) {
                    var l = it[i], d = l.xaxis, u = l.yaxis, f = l.datapoints.points, p = d.c2p(t), h = u.c2p(e), g = a / d.scale, m = a / u.scale;
                    if (r = l.datapoints.pointsize, d.options.inverseTransform && (g = Number.MAX_VALUE), 
                    u.options.inverseTransform && (m = Number.MAX_VALUE), l.lines.show || l.points.show) for (o = 0; o < f.length; o += r) {
                        var v = f[o], _ = f[o + 1];
                        if (null != v && !(v - p > g || v - p < -g || _ - h > m || _ - h < -m)) {
                            var x = Math.abs(d.p2c(v) - t), b = Math.abs(u.p2c(_) - e), k = x * x + b * b;
                            k < s && (s = k, c = [ i, o / r ]);
                        }
                    }
                    if (l.bars.show && !c) {
                        var w, y;
                        switch (l.bars.align) {
                          case "left":
                            w = 0;
                            break;

                          case "right":
                            w = -l.bars.barWidth;
                            break;

                          default:
                            w = -l.bars.barWidth / 2;
                        }
                        for (y = w + l.bars.barWidth, o = 0; o < f.length; o += r) {
                            var v = f[o], _ = f[o + 1], M = f[o + 2];
                            null != v && (it[i].bars.horizontal ? p <= Math.max(M, v) && p >= Math.min(M, v) && h >= _ + w && h <= _ + y : p >= v + w && p <= v + y && h >= Math.min(M, _) && h <= Math.max(M, _)) && (c = [ i, o / r ]);
                        }
                    }
                }
                return c ? (i = c[0], o = c[1], r = it[i].datapoints.pointsize, {
                    datapoint: it[i].datapoints.points.slice(o * r, (o + 1) * r),
                    dataIndex: o,
                    series: it[i],
                    seriesIndex: i
                }) : null;
            }
            function Y(t) {
                ot.grid.hoverable && V("plothover", t, function(t) {
                    return 0 != t.hoverable;
                });
            }
            function q(t) {
                ot.grid.hoverable && V("plothover", t, function(t) {
                    return !1;
                });
            }
            function G(t) {
                V("plotclick", t, function(t) {
                    return 0 != t.clickable;
                });
            }
            function V(t, e, i) {
                var o = st.offset(), r = e.pageX - o.left - ft.left, a = e.pageY - o.top - ft.top, s = h({
                    left: r,
                    top: a
                });
                s.pageX = e.pageX, s.pageY = e.pageY;
                var c = B(r, a, i);
                if (c && (c.pageX = parseInt(c.series.xaxis.p2c(c.datapoint[0]) + o.left + ft.left, 10), 
                c.pageY = parseInt(c.series.yaxis.p2c(c.datapoint[1]) + o.top + ft.top, 10)), ot.grid.autoHighlight) {
                    for (var l = 0; l < vt.length; ++l) {
                        var d = vt[l];
                        d.auto != t || c && d.series == c.series && d.point[0] == c.datapoint[0] && d.point[1] == c.datapoint[1] || K(d.series, d.point);
                    }
                    c && Q(c.series, c.datapoint, t);
                }
                n.trigger(t, [ s, c ]);
            }
            function J() {
                var t = ot.interaction.redrawOverlayInterval;
                return t == -1 ? void X() : void (_t || (_t = setTimeout(X, t)));
            }
            function X() {
                _t = null, lt.save(), at.clear(), lt.translate(ft.left, ft.top);
                var t, e;
                for (t = 0; t < vt.length; ++t) e = vt[t], e.series.bars.show ? et(e.series, e.point) : tt(e.series, e.point);
                lt.restore(), s(gt.drawOverlay, [ lt ]);
            }
            function Q(t, e, n) {
                if ("number" == typeof t && (t = it[t]), "number" == typeof e) {
                    var i = t.datapoints.pointsize;
                    e = t.datapoints.points.slice(i * e, i * (e + 1));
                }
                var o = Z(t, e);
                o == -1 ? (vt.push({
                    series: t,
                    point: e,
                    auto: n
                }), J()) : n || (vt[o].auto = !1);
            }
            function K(t, e) {
                if (null == t && null == e) return vt = [], void J();
                if ("number" == typeof t && (t = it[t]), "number" == typeof e) {
                    var n = t.datapoints.pointsize;
                    e = t.datapoints.points.slice(n * e, n * (e + 1));
                }
                var i = Z(t, e);
                i != -1 && (vt.splice(i, 1), J());
            }
            function Z(t, e) {
                for (var n = 0; n < vt.length; ++n) {
                    var i = vt[n];
                    if (i.series == t && i.point[0] == e[0] && i.point[1] == e[1]) return n;
                }
                return -1;
            }
            function tt(e, n) {
                var i = n[0], o = n[1], r = e.xaxis, a = e.yaxis, s = "string" == typeof e.highlightColor ? e.highlightColor : t.color.parse(e.color).scale("a", .5).toString();
                if (!(i < r.min || i > r.max || o < a.min || o > a.max)) {
                    var c = e.points.radius + e.points.lineWidth / 2;
                    lt.lineWidth = c, lt.strokeStyle = s;
                    var l = 1.5 * c;
                    i = r.p2c(i), o = a.p2c(o), lt.beginPath(), "circle" == e.points.symbol ? lt.arc(i, o, l, 0, 2 * Math.PI, !1) : e.points.symbol(lt, i, o, l, !1), 
                    lt.closePath(), lt.stroke();
                }
            }
            function et(e, n) {
                var i, o = "string" == typeof e.highlightColor ? e.highlightColor : t.color.parse(e.color).scale("a", .5).toString(), r = o;
                switch (e.bars.align) {
                  case "left":
                    i = 0;
                    break;

                  case "right":
                    i = -e.bars.barWidth;
                    break;

                  default:
                    i = -e.bars.barWidth / 2;
                }
                lt.lineWidth = e.bars.lineWidth, lt.strokeStyle = o, U(n[0], n[1], n[2] || 0, i, i + e.bars.barWidth, function() {
                    return r;
                }, e.xaxis, e.yaxis, lt, e.bars.horizontal, e.bars.lineWidth);
            }
            function nt(e, n, i, o) {
                if ("string" == typeof e) return e;
                for (var r = ct.createLinearGradient(0, i, 0, n), a = 0, s = e.colors.length; a < s; ++a) {
                    var c = e.colors[a];
                    if ("string" != typeof c) {
                        var l = t.color.parse(o);
                        null != c.brightness && (l = l.scale("rgb", c.brightness)), null != c.opacity && (l.a *= c.opacity), 
                        c = l.toString();
                    }
                    r.addColorStop(a / (s - 1), c);
                }
                return r;
            }
            var it = [], ot = {
                colors: [ "#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed" ],
                legend: {
                    show: !0,
                    noColumns: 1,
                    labelFormatter: null,
                    labelBoxBorderColor: "#ccc",
                    container: null,
                    position: "ne",
                    margin: 5,
                    backgroundColor: null,
                    backgroundOpacity: .85,
                    sorted: null
                },
                xaxis: {
                    show: null,
                    position: "bottom",
                    mode: null,
                    font: null,
                    color: null,
                    tickColor: null,
                    transform: null,
                    inverseTransform: null,
                    min: null,
                    max: null,
                    autoscaleMargin: null,
                    ticks: null,
                    tickFormatter: null,
                    labelWidth: null,
                    labelHeight: null,
                    reserveSpace: null,
                    tickLength: null,
                    alignTicksWithAxis: null,
                    tickDecimals: null,
                    tickSize: null,
                    minTickSize: null
                },
                yaxis: {
                    autoscaleMargin: .02,
                    position: "left"
                },
                xaxes: [],
                yaxes: [],
                series: {
                    points: {
                        show: !1,
                        radius: 3,
                        lineWidth: 2,
                        fill: !0,
                        fillColor: "#ffffff",
                        symbol: "circle"
                    },
                    lines: {
                        lineWidth: 2,
                        fill: !1,
                        fillColor: null,
                        steps: !1
                    },
                    bars: {
                        show: !1,
                        lineWidth: 2,
                        barWidth: 1,
                        fill: !0,
                        fillColor: null,
                        align: "left",
                        horizontal: !1,
                        zero: !0
                    },
                    shadowSize: 3,
                    highlightColor: null
                },
                grid: {
                    show: !0,
                    aboveData: !1,
                    color: "#545454",
                    backgroundColor: null,
                    borderColor: null,
                    tickColor: null,
                    margin: 0,
                    labelMargin: 5,
                    axisMargin: 8,
                    borderWidth: 2,
                    minBorderMargin: null,
                    markings: null,
                    markingsColor: "#f4f4f4",
                    markingsLineWidth: 2,
                    clickable: !1,
                    hoverable: !1,
                    autoHighlight: !0,
                    mouseActiveRadius: 10
                },
                interaction: {
                    redrawOverlayInterval: 1e3 / 60
                },
                hooks: {}
            }, rt = null, at = null, st = null, ct = null, lt = null, dt = [], ut = [], ft = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            }, pt = 0, ht = 0, gt = {
                processOptions: [],
                processRawData: [],
                processDatapoints: [],
                processOffset: [],
                drawBackground: [],
                drawSeries: [],
                draw: [],
                bindEvents: [],
                drawOverlay: [],
                shutdown: []
            }, mt = this;
            mt.setData = d, mt.setupGrid = T, mt.draw = z, mt.getPlaceholder = function() {
                return n;
            }, mt.getCanvas = function() {
                return rt.element;
            }, mt.getPlotOffset = function() {
                return ft;
            }, mt.width = function() {
                return pt;
            }, mt.height = function() {
                return ht;
            }, mt.offset = function() {
                var t = st.offset();
                return t.left += ft.left, t.top += ft.top, t;
            }, mt.getData = function() {
                return it;
            }, mt.getAxes = function() {
                var e = {};
                return t.each(dt.concat(ut), function(t, n) {
                    n && (e[n.direction + (1 != n.n ? n.n : "") + "axis"] = n);
                }), e;
            }, mt.getXAxes = function() {
                return dt;
            }, mt.getYAxes = function() {
                return ut;
            }, mt.c2p = h, mt.p2c = g, mt.getOptions = function() {
                return ot;
            }, mt.highlight = Q, mt.unhighlight = K, mt.triggerRedrawOverlay = J, mt.pointOffset = function(t) {
                return {
                    left: parseInt(dt[f(t, "x") - 1].p2c(+t.x) + ft.left, 10),
                    top: parseInt(ut[f(t, "y") - 1].p2c(+t.y) + ft.top, 10)
                };
            }, mt.shutdown = k, mt.destroy = function() {
                k(), n.removeData("plot").empty(), it = [], ot = null, rt = null, at = null, st = null, 
                ct = null, lt = null, dt = [], ut = [], gt = null, vt = [], mt = null;
            }, mt.resize = function() {
                var t = n.width(), e = n.height();
                rt.resize(t, e), at.resize(t, e);
            }, mt.hooks = gt, c(mt), l(r), x(), d(o), T(), z(), b();
            var vt = [], _t = null;
        }
        function i(t, e) {
            return e * Math.floor(t / e);
        }
        var o = Object.prototype.hasOwnProperty;
        t.fn.detach || (t.fn.detach = function() {
            return this.each(function() {
                this.parentNode && this.parentNode.removeChild(this);
            });
        }), e.prototype.resize = function(t, e) {
            if (t <= 0 || e <= 0) throw new Error("Invalid dimensions for plot, width = " + t + ", height = " + e);
            var n = this.element, i = this.context, o = this.pixelRatio;
            this.width != t && (n.width = t * o, n.style.width = t + "px", this.width = t), 
            this.height != e && (n.height = e * o, n.style.height = e + "px", this.height = e), 
            i.restore(), i.save(), i.scale(o, o);
        }, e.prototype.clear = function() {
            this.context.clearRect(0, 0, this.width, this.height);
        }, e.prototype.render = function() {
            var t = this._textCache;
            for (var e in t) if (o.call(t, e)) {
                var n = this.getTextLayer(e), i = t[e];
                n.hide();
                for (var r in i) if (o.call(i, r)) {
                    var a = i[r];
                    for (var s in a) if (o.call(a, s)) {
                        for (var c, l = a[s].positions, d = 0; c = l[d]; d++) c.active ? c.rendered || (n.append(c.element), 
                        c.rendered = !0) : (l.splice(d--, 1), c.rendered && c.element.detach());
                        0 == l.length && delete a[s];
                    }
                }
                n.show();
            }
        }, e.prototype.getTextLayer = function(e) {
            var n = this.text[e];
            return null == n && (null == this.textContainer && (this.textContainer = t("<div class='flot-text'></div>").css({
                position: "absolute",
                top: 0,
                left: 0,
                bottom: 0,
                right: 0,
                "font-size": "smaller",
                color: "#545454"
            }).insertAfter(this.element)), n = this.text[e] = t("<div></div>").addClass(e).css({
                position: "absolute",
                top: 0,
                left: 0,
                bottom: 0,
                right: 0
            }).appendTo(this.textContainer)), n;
        }, e.prototype.getTextInfo = function(e, n, i, o, r) {
            var a, s, c, l;
            if (n = "" + n, a = "object" == typeof i ? i.style + " " + i.variant + " " + i.weight + " " + i.size + "px/" + i.lineHeight + "px " + i.family : i, 
            s = this._textCache[e], null == s && (s = this._textCache[e] = {}), c = s[a], null == c && (c = s[a] = {}), 
            l = c[n], null == l) {
                var d = t("<div></div>").html(n).css({
                    position: "absolute",
                    "max-width": r,
                    top: -9999
                }).appendTo(this.getTextLayer(e));
                "object" == typeof i ? d.css({
                    font: a,
                    color: i.color
                }) : "string" == typeof i && d.addClass(i), l = c[n] = {
                    width: d.outerWidth(!0),
                    height: d.outerHeight(!0),
                    element: d,
                    positions: []
                }, d.detach();
            }
            return l;
        }, e.prototype.addText = function(t, e, n, i, o, r, a, s, c) {
            var l = this.getTextInfo(t, i, o, r, a), d = l.positions;
            "center" == s ? e -= l.width / 2 : "right" == s && (e -= l.width), "middle" == c ? n -= l.height / 2 : "bottom" == c && (n -= l.height);
            for (var u, f = 0; u = d[f]; f++) if (u.x == e && u.y == n) return void (u.active = !0);
            u = {
                active: !0,
                rendered: !1,
                element: d.length ? l.element.clone() : l.element,
                x: e,
                y: n
            }, d.push(u), u.element.css({
                top: Math.round(n),
                left: Math.round(e),
                "text-align": s
            });
        }, e.prototype.removeText = function(t, e, n, i, r, a) {
            if (null == i) {
                var s = this._textCache[t];
                if (null != s) for (var c in s) if (o.call(s, c)) {
                    var l = s[c];
                    for (var d in l) if (o.call(l, d)) for (var u, f = l[d].positions, p = 0; u = f[p]; p++) u.active = !1;
                }
            } else for (var u, f = this.getTextInfo(t, i, r, a).positions, p = 0; u = f[p]; p++) u.x == e && u.y == n && (u.active = !1);
        }, t.plot = function(e, i, o) {
            var r = new n(t(e), i, o, t.plot.plugins);
            return r;
        }, t.plot.version = "0.8.3", t.plot.plugins = [], t.fn.plot = function(e, n) {
            return this.each(function() {
                t.plot(this, e, n);
            });
        };
    }(jQuery);
}, function(t, e) {
    !function(t) {
        function e(e) {
            function n(t) {
                h.active && (l(t), e.getPlaceholder().trigger("plotselecting", [ r() ]));
            }
            function i(e) {
                1 == e.which && (document.body.focus(), void 0 !== document.onselectstart && null == g.onselectstart && (g.onselectstart = document.onselectstart, 
                document.onselectstart = function() {
                    return !1;
                }), void 0 !== document.ondrag && null == g.ondrag && (g.ondrag = document.ondrag, 
                document.ondrag = function() {
                    return !1;
                }), c(h.first, e), h.active = !0, m = function(t) {
                    o(t);
                }, t(document).one("mouseup", m));
            }
            function o(t) {
                return m = null, void 0 !== document.onselectstart && (document.onselectstart = g.onselectstart), 
                void 0 !== document.ondrag && (document.ondrag = g.ondrag), h.active = !1, l(t), 
                p() ? a() : (e.getPlaceholder().trigger("plotunselected", []), e.getPlaceholder().trigger("plotselecting", [ null ])), 
                !1;
            }
            function r() {
                if (!p()) return null;
                if (!h.show) return null;
                var n = {}, i = h.first, o = h.second;
                return t.each(e.getAxes(), function(t, e) {
                    if (e.used) {
                        var r = e.c2p(i[e.direction]), a = e.c2p(o[e.direction]);
                        n[t] = {
                            from: Math.min(r, a),
                            to: Math.max(r, a)
                        };
                    }
                }), n;
            }
            function a() {
                var t = r();
                e.getPlaceholder().trigger("plotselected", [ t ]), t.xaxis && t.yaxis && e.getPlaceholder().trigger("selected", [ {
                    x1: t.xaxis.from,
                    y1: t.yaxis.from,
                    x2: t.xaxis.to,
                    y2: t.yaxis.to
                } ]);
            }
            function s(t, e, n) {
                return e < t ? t : e > n ? n : e;
            }
            function c(t, n) {
                var i = e.getOptions(), o = e.getPlaceholder().offset(), r = e.getPlotOffset();
                t.x = s(0, n.pageX - o.left - r.left, e.width()), t.y = s(0, n.pageY - o.top - r.top, e.height()), 
                "y" == i.selection.mode && (t.x = t == h.first ? 0 : e.width()), "x" == i.selection.mode && (t.y = t == h.first ? 0 : e.height());
            }
            function l(t) {
                null != t.pageX && (c(h.second, t), p() ? (h.show = !0, e.triggerRedrawOverlay()) : d(!0));
            }
            function d(t) {
                h.show && (h.show = !1, e.triggerRedrawOverlay(), t || e.getPlaceholder().trigger("plotunselected", []));
            }
            function u(t, n) {
                var i, o, r, a, s = e.getAxes();
                for (var c in s) if (i = s[c], i.direction == n && (a = n + i.n + "axis", t[a] || 1 != i.n || (a = n + "axis"), 
                t[a])) {
                    o = t[a].from, r = t[a].to;
                    break;
                }
                if (t[a] || (i = "x" == n ? e.getXAxes()[0] : e.getYAxes()[0], o = t[n + "1"], r = t[n + "2"]), 
                null != o && null != r && o > r) {
                    var l = o;
                    o = r, r = l;
                }
                return {
                    from: o,
                    to: r,
                    axis: i
                };
            }
            function f(t, n) {
                var i, o = e.getOptions();
                "y" == o.selection.mode ? (h.first.x = 0, h.second.x = e.width()) : (i = u(t, "x"), 
                h.first.x = i.axis.p2c(i.from), h.second.x = i.axis.p2c(i.to)), "x" == o.selection.mode ? (h.first.y = 0, 
                h.second.y = e.height()) : (i = u(t, "y"), h.first.y = i.axis.p2c(i.from), h.second.y = i.axis.p2c(i.to)), 
                h.show = !0, e.triggerRedrawOverlay(), !n && p() && a();
            }
            function p() {
                var t = e.getOptions().selection.minSize;
                return Math.abs(h.second.x - h.first.x) >= t && Math.abs(h.second.y - h.first.y) >= t;
            }
            var h = {
                first: {
                    x: -1,
                    y: -1
                },
                second: {
                    x: -1,
                    y: -1
                },
                show: !1,
                active: !1
            }, g = {}, m = null;
            e.clearSelection = d, e.setSelection = f, e.getSelection = r, e.hooks.bindEvents.push(function(t, e) {
                var o = t.getOptions();
                null != o.selection.mode && (e.mousemove(n), e.mousedown(i));
            }), e.hooks.drawOverlay.push(function(e, n) {
                if (h.show && p()) {
                    var i = e.getPlotOffset(), o = e.getOptions();
                    n.save(), n.translate(i.left, i.top);
                    var r = t.color.parse(o.selection.color);
                    n.strokeStyle = r.scale("a", .8).toString(), n.lineWidth = 1, n.lineJoin = o.selection.shape, 
                    n.fillStyle = r.scale("a", .4).toString();
                    var a = Math.min(h.first.x, h.second.x) + .5, s = Math.min(h.first.y, h.second.y) + .5, c = Math.abs(h.second.x - h.first.x) - 1, l = Math.abs(h.second.y - h.first.y) - 1;
                    n.fillRect(a, s, c, l), n.strokeRect(a, s, c, l), n.restore();
                }
            }), e.hooks.shutdown.push(function(e, o) {
                o.unbind("mousemove", n), o.unbind("mousedown", i), m && t(document).unbind("mouseup", m);
            });
        }
        t.plot.plugins.push({
            init: e,
            options: {
                selection: {
                    mode: null,
                    color: "#e8cfac",
                    shape: "round",
                    minSize: 5
                }
            },
            name: "selection",
            version: "1.1"
        });
    }(jQuery);
}, function(t, e) {
    !function(t) {
        function e(t, e) {
            return e * Math.floor(t / e);
        }
        function n(t, e, n, i) {
            if ("function" == typeof t.strftime) return t.strftime(e);
            var o = function(t, e) {
                return t = "" + t, e = "" + (null == e ? "0" : e), 1 == t.length ? e + t : t;
            }, r = [], a = !1, s = t.getHours(), c = s < 12;
            null == n && (n = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]), 
            null == i && (i = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ]);
            var l;
            l = s > 12 ? s - 12 : 0 == s ? 12 : s;
            for (var d = 0; d < e.length; ++d) {
                var u = e.charAt(d);
                if (a) {
                    switch (u) {
                      case "a":
                        u = "" + i[t.getDay()];
                        break;

                      case "b":
                        u = "" + n[t.getMonth()];
                        break;

                      case "d":
                        u = o(t.getDate());
                        break;

                      case "e":
                        u = o(t.getDate(), " ");
                        break;

                      case "h":
                      case "H":
                        u = o(s);
                        break;

                      case "I":
                        u = o(l);
                        break;

                      case "l":
                        u = o(l, " ");
                        break;

                      case "m":
                        u = o(t.getMonth() + 1);
                        break;

                      case "M":
                        u = o(t.getMinutes());
                        break;

                      case "q":
                        u = "" + (Math.floor(t.getMonth() / 3) + 1);
                        break;

                      case "S":
                        u = o(t.getSeconds());
                        break;

                      case "y":
                        u = o(t.getFullYear() % 100);
                        break;

                      case "Y":
                        u = "" + t.getFullYear();
                        break;

                      case "p":
                        u = c ? "am" : "pm";
                        break;

                      case "P":
                        u = c ? "AM" : "PM";
                        break;

                      case "w":
                        u = "" + t.getDay();
                    }
                    r.push(u), a = !1;
                } else "%" == u ? a = !0 : r.push(u);
            }
            return r.join("");
        }
        function i(t) {
            function e(t, e, n, i) {
                t[e] = function() {
                    return n[i].apply(n, arguments);
                };
            }
            var n = {
                date: t
            };
            void 0 != t.strftime && e(n, "strftime", t, "strftime"), e(n, "getTime", t, "getTime"), 
            e(n, "setTime", t, "setTime");
            for (var i = [ "Date", "Day", "FullYear", "Hours", "Milliseconds", "Minutes", "Month", "Seconds" ], o = 0; o < i.length; o++) e(n, "get" + i[o], t, "getUTC" + i[o]), 
            e(n, "set" + i[o], t, "setUTC" + i[o]);
            return n;
        }
        function o(t, e) {
            if ("browser" == e.timezone) return new Date(t);
            if (e.timezone && "utc" != e.timezone) {
                if ("undefined" != typeof timezoneJS && "undefined" != typeof timezoneJS.Date) {
                    var n = new timezoneJS.Date();
                    return n.setTimezone(e.timezone), n.setTime(t), n;
                }
                return i(new Date(t));
            }
            return i(new Date(t));
        }
        function r(i) {
            i.hooks.processOptions.push(function(i, r) {
                t.each(i.getAxes(), function(t, i) {
                    var r = i.options;
                    "time" == r.mode && (i.tickGenerator = function(t) {
                        var n = [], i = o(t.min, r), a = 0, c = r.tickSize && "quarter" === r.tickSize[1] || r.minTickSize && "quarter" === r.minTickSize[1] ? d : l;
                        null != r.minTickSize && (a = "number" == typeof r.tickSize ? r.tickSize : r.minTickSize[0] * s[r.minTickSize[1]]);
                        for (var u = 0; u < c.length - 1 && !(t.delta < (c[u][0] * s[c[u][1]] + c[u + 1][0] * s[c[u + 1][1]]) / 2 && c[u][0] * s[c[u][1]] >= a); ++u) ;
                        var f = c[u][0], p = c[u][1];
                        if ("year" == p) {
                            if (null != r.minTickSize && "year" == r.minTickSize[1]) f = Math.floor(r.minTickSize[0]); else {
                                var h = Math.pow(10, Math.floor(Math.log(t.delta / s.year) / Math.LN10)), g = t.delta / s.year / h;
                                f = g < 1.5 ? 1 : g < 3 ? 2 : g < 7.5 ? 5 : 10, f *= h;
                            }
                            f < 1 && (f = 1);
                        }
                        t.tickSize = r.tickSize || [ f, p ];
                        var m = t.tickSize[0];
                        p = t.tickSize[1];
                        var v = m * s[p];
                        "second" == p ? i.setSeconds(e(i.getSeconds(), m)) : "minute" == p ? i.setMinutes(e(i.getMinutes(), m)) : "hour" == p ? i.setHours(e(i.getHours(), m)) : "month" == p ? i.setMonth(e(i.getMonth(), m)) : "quarter" == p ? i.setMonth(3 * e(i.getMonth() / 3, m)) : "year" == p && i.setFullYear(e(i.getFullYear(), m)), 
                        i.setMilliseconds(0), v >= s.minute && i.setSeconds(0), v >= s.hour && i.setMinutes(0), 
                        v >= s.day && i.setHours(0), v >= 4 * s.day && i.setDate(1), v >= 2 * s.month && i.setMonth(e(i.getMonth(), 3)), 
                        v >= 2 * s.quarter && i.setMonth(e(i.getMonth(), 6)), v >= s.year && i.setMonth(0);
                        var _, x = 0, b = Number.NaN;
                        do if (_ = b, b = i.getTime(), n.push(b), "month" == p || "quarter" == p) if (m < 1) {
                            i.setDate(1);
                            var k = i.getTime();
                            i.setMonth(i.getMonth() + ("quarter" == p ? 3 : 1));
                            var w = i.getTime();
                            i.setTime(b + x * s.hour + (w - k) * m), x = i.getHours(), i.setHours(0);
                        } else i.setMonth(i.getMonth() + m * ("quarter" == p ? 3 : 1)); else "year" == p ? i.setFullYear(i.getFullYear() + m) : i.setTime(b + v); while (b < t.max && b != _);
                        return n;
                    }, i.tickFormatter = function(t, e) {
                        var i = o(t, e.options);
                        if (null != r.timeformat) return n(i, r.timeformat, r.monthNames, r.dayNames);
                        var a, c = e.options.tickSize && "quarter" == e.options.tickSize[1] || e.options.minTickSize && "quarter" == e.options.minTickSize[1], l = e.tickSize[0] * s[e.tickSize[1]], d = e.max - e.min, u = r.twelveHourClock ? " %p" : "", f = r.twelveHourClock ? "%I" : "%H";
                        a = l < s.minute ? f + ":%M:%S" + u : l < s.day ? d < 2 * s.day ? f + ":%M" + u : "%b %d " + f + ":%M" + u : l < s.month ? "%b %d" : c && l < s.quarter || !c && l < s.year ? d < s.year ? "%b" : "%b %Y" : c && l < s.year ? d < s.year ? "Q%q" : "Q%q %Y" : "%Y";
                        var p = n(i, a, r.monthNames, r.dayNames);
                        return p;
                    });
                });
            });
        }
        var a = {
            xaxis: {
                timezone: null,
                timeformat: null,
                twelveHourClock: !1,
                monthNames: null
            }
        }, s = {
            second: 1e3,
            minute: 6e4,
            hour: 36e5,
            day: 864e5,
            month: 2592e6,
            quarter: 7776e6,
            year: 525949.2 * 60 * 1e3
        }, c = [ [ 1, "second" ], [ 2, "second" ], [ 5, "second" ], [ 10, "second" ], [ 30, "second" ], [ 1, "minute" ], [ 2, "minute" ], [ 5, "minute" ], [ 10, "minute" ], [ 30, "minute" ], [ 1, "hour" ], [ 2, "hour" ], [ 4, "hour" ], [ 8, "hour" ], [ 12, "hour" ], [ 1, "day" ], [ 2, "day" ], [ 3, "day" ], [ .25, "month" ], [ .5, "month" ], [ 1, "month" ], [ 2, "month" ] ], l = c.concat([ [ 3, "month" ], [ 6, "month" ], [ 1, "year" ] ]), d = c.concat([ [ 1, "quarter" ], [ 2, "quarter" ], [ 1, "year" ] ]);
        t.plot.plugins.push({
            init: r,
            options: a,
            name: "time",
            version: "1.0"
        }), t.plot.formatDate = n, t.plot.dateGenerator = o;
    }(jQuery);
}, function(t, e, n) {
    "use strict";
    !function() {
        function e(t) {
            function e(t, e, n, i, r, s) {
                var c = {
                    cursor: s.__CURSOR,
                    time: r,
                    message: n,
                    service: t
                };
                return i > 1 && (c.count = i), e < 4 && (c.warning = !0), o.render(a, c);
            }
            function n() {
                return u;
            }
            function i(t) {
                return o.render(r, {
                    day: t
                });
            }
            function l(t) {
                var e = document.createElement("div");
                return e.innerHTML = t.trim(), e.children[0];
            }
            t.jquery && (t = t[0]), o.parse(r), o.parse(a), o.parse(s);
            var d = c("Reboot"), u = o.render(s, {
                message: d
            });
            return {
                render_line: e,
                render_day_header: i,
                render_reboot_separator: n,
                append: function(e) {
                    "string" == typeof e && (e = l(e)), t.appendChild(e);
                },
                prepend: function(e) {
                    "string" == typeof e && (e = l(e)), t.firstChild ? t.insertBefore(e, t.firstChild) : t.appendChild(e);
                },
                remove_last: function() {
                    t.lastChild && t.removeChild(t.lastChild);
                },
                remove_first: function() {
                    t.firstChild && t.removeChild(t.firstChild);
                }
            };
        }
        var i = n(3), o = n(5), r = n(12), a = n(13), s = n(14), c = i.gettext, l = i.gettext, d = {};
        d.journalctl = function() {
            function t() {
                var t, e;
                if (u.length && d.length > 0) for (t = d, d = [], e = 0; e < u.length; e++) u[e].apply(s, [ t ]); else window.clearInterval(f), 
                f = null;
            }
            var e, n, o = [], r = {
                follow: !0
            };
            for (e = 0; e < arguments.length; e++) if (n = arguments[e], "string" == typeof n) o.push(n); else if ("object" == typeof n) {
                if (!(n instanceof Array)) {
                    i.extend(r, n);
                    break;
                }
                o.push.apply(o, n);
            } else console.warn("journal.journalctl called with invalid argument:", n);
            void 0 === r.count && (r.follow ? r.count = 10 : r.count = null);
            var a = [ "journalctl", "-q", "--output=json" ];
            r.count ? a.push("--lines=" + r.count) : a.push("--no-tail"), r.directory && a.push("--directory=" + r.directory), 
            r.boot ? a.push("--boot=" + r.boot) : void 0 !== r.boot && a.push("--boot"), r.since && a.push("--since=" + r.since), 
            r.until && a.push("--until=" + r.until), r.cursor && a.push("--cursor=" + r.cursor), 
            r.after && a.push("--after=" + r.after), r.reverse ? a.push("--reverse") : r.follow && a.push("--follow"), 
            a.push("--"), a.push.apply(a, o);
            var s, c = new i.defer(), l = "", d = [], u = [], f = null, p = i.spawn(a, {
                host: r.host,
                batch: 8192,
                latency: 300,
                superuser: "try"
            }).stream(function(e) {
                l && (e = l + e), l = "";
                var n = e.split("\n"), i = n.length - 1;
                n.forEach(function(t, e) {
                    if (e == i) l = t; else if (t && 0 !== t.indexOf("-- ")) try {
                        d.push(JSON.parse(t));
                    } catch (e) {
                        console.warn(e, t);
                    }
                }), u.length && null === f && (f = window.setInterval(t, 300));
            }).done(function() {
                t(), c.resolve(d);
            }).fail(function(e) {
                "cancelled" == e.problem || 1 === e.exit_status ? (t(), c.resolve(d)) : c.reject(e);
            }).always(function() {
                window.clearInterval(f);
            });
            return s = c.promise(), s.stream = function(t) {
                return u.push(t), this;
            }, s.stop = function() {
                p.close("cancelled");
            }, s;
        }, d.printable = function(t) {
            return void 0 === t ? c("[no data]") : "string" == typeof t ? t : void 0 !== t.length ? i.format(c("[$0 bytes of binary data]"), t.length) : c("[binary data]");
        };
        var u = [ l("month-name", "January"), l("month-name", "February"), l("month-name", "March"), l("month-name", "April"), l("month-name", "May"), l("month-name", "June"), l("month-name", "July"), l("month-name", "August"), l("month-name", "September"), l("month-name", "October"), l("month-name", "November"), l("month-name", "December") ];
        d.renderer = function(t) {
            function n(t) {
                var e = {};
                for (var n in t) e[n] = t[n];
                return e;
            }
            function i(t) {
                function e(t) {
                    var e = t.toFixed();
                    return 1 == e.length && (e = "0" + e), e;
                }
                var n = new Date(t.__REALTIME_TIMESTAMP / 1e3);
                return {
                    cursor: t.__CURSOR,
                    full: t,
                    day: u[n.getMonth()] + " " + n.getDate().toFixed() + ", " + n.getFullYear().toFixed(),
                    time: e(n.getHours()) + ":" + e(n.getMinutes()),
                    bootid: t._BOOT_ID,
                    ident: t.SYSLOG_IDENTIFIER || t._COMM,
                    prio: t.PRIORITY,
                    message: d.printable(t.MESSAGE)
                };
            }
            function o(t, e) {
                return t && e && t.day == e.day && t.bootid == e.bootid && t.ident == e.ident && t.prio == e.prio && t.message == e.message;
            }
            function r(t) {
                return g.render_line(t.entry.ident, t.entry.prio, t.entry.message, t.count, t.last_time, t.entry.full);
            }
            function a() {
                m === v && m.entry && (m = n(v));
            }
            function s() {
                m.header_present && (g.remove_first(), m.header_present = !1), m.line_present && (g.remove_first(), 
                m.line_present = !1), m.entry && (g.prepend(r(m)), m.line_present = !0);
            }
            function c(t) {
                var e = i(t);
                o(m.entry, e) ? (m.count += 1, m.first_time = e.time) : (s(), m.entry && (e.bootid != m.entry.bootid && g.prepend(g.render_reboot_separator()), 
                e.day != m.entry.day && g.prepend(g.render_day_header(m.entry.day))), a(), m.entry = e, 
                m.count = 1, m.first_time = m.last_time = e.time, m.line_present = !1);
            }
            function l() {
                s(), m.entry && (g.prepend(g.render_day_header(m.entry.day)), m.header_present = !0);
            }
            function f() {
                v.line_present && (g.remove_last(), v.line_present = !1), v.entry && (g.append(r(v)), 
                v.line_present = !0);
            }
            function p(t) {
                var e = i(t);
                o(v.entry, e) ? (v.count += 1, v.last_time = e.time) : (f(), v.entry && e.day == v.entry.day || (g.append(g.render_day_header(e.day)), 
                v.header_present = !0), v.entry && e.bootid != v.entry.bootid && g.append(g.render_reboot_separator()), 
                a(), v.entry = e, v.count = 1, v.first_time = v.last_time = e.time, v.line_present = !1);
            }
            function h() {
                f();
            }
            var g;
            g = t.render_line ? t : e(t);
            var m, v;
            return m = v = {}, {
                prepend: c,
                prepend_flush: l,
                append: p,
                append_flush: h
            };
        }, d.logbox = function(t, e) {
            function n() {
                for (var t = d.renderer(o); o.firstChild; ) o.removeChild(o.firstChild);
                for (var e = 0; e < i.length; e++) t.prepend(i[e]);
                t.prepend_flush(), i.length > 0 ? o.removeAttribute("hidden") : o.setAttribute("hidden", "hidden");
            }
            var i = [], o = document.createElement("div");
            n();
            var r = d.journalctl(t, {
                count: e
            }).stream(function(t) {
                i = i.concat(t), i.length > e && (i = i.slice(-e)), n();
            }).fail(function(t) {
                o.appendChild(document.createTextNode(t.message)), o.removeAttribute("hidden");
            });
            return r.promise(o);
        }, t.exports = d;
    }();
}, function(t, e) {
    t.exports = '<div class="panel-heading">{{day}}</div>\n';
}, function(t, e) {
    t.exports = '<div class="cockpit-logline" data-cursor="{{cursor}}">\n  <div class="cockpit-log-warning">{{#warning}}\n    <i class="fa fa-exclamation-triangle"></i>\n  {{/warning}}</div>\n  <div class="cockpit-log-time">{{time}}</div>\n  <span class="cockpit-log-message">{{message}}</span>\n  {{! if we have count (repeated messages), show service name and badge - otherwise just the service }}\n  {{#count}}\n  <div class="cockpit-log-service-container">\n    <div class="cockpit-log-service-reduced">{{service}}</div>\n    <span class="badge">{{count}}&#160;<i class="fa fa-caret-right"></i></span>\n  </div>\n  {{/count}}{{^count}}\n  <div class="cockpit-log-service">{{service}}</div>\n  {{/count}}\n</div>\n';
}, function(t, e) {
    t.exports = '<div class="cockpit-logline">\n  {{! placeholders for correct message alignment }}\n  <div class="cockpit-log-warning"></div>\n  <span class="cockpit-log-message cockpit-logmsg-reboot">{{message}}</span>\n</div>\n';
}, function(t, e, n) {
    "use strict";
    !function() {
        function t() {
            return x += 1, "unique" + -new Date() + -x;
        }
        function e(t) {
            t.find(".dialog-error").remove(), t.find(".has-error").removeClass("has-error"), 
            t.find(".dialog-wrapper").off(".dialog-error"), t.off(".dialog-error");
        }
        function i(t, e) {
            var n, i, o = t.parent();
            o.is(".dialog-wrapper") || (o = v("<div class='dialog-wrapper'>").insertBefore(t), 
            n = t.next(), n.is(".bootstrap-select") && n.selectpicker && (n.remove(), i = n.selectpicker), 
            t.remove().appendTo(o), i && i.call(t));
            var r;
            e.message && (r = v("<div class='dialog-error help-block'>").text(e.message)), o.addClass("has-error").append(r), 
            o.hasClass("error-keep") || o.on("keypress.dialog-error change.dialog-error", function() {
                o.removeClass("has-error").find(".dialog-error.help-block").css("visibility", "hidden");
            });
        }
        function o(t, e) {
            var n = v("<div class='alert alert-danger dialog-error'>"), i = e.message || e.toString();
            n.text(i), v("<span class='fa fa-exclamation-triangle'>").prependTo(n), console.warn(i);
            var o = t.find(".modal-footer");
            o.length ? n.prependTo(o) : n.appendTo(t);
        }
        function r(t, n) {
            e(t), 1 == n.length && v.isArray(n[0]) && (n = n[0]);
            var r = !1;
            n.forEach(function(e) {
                var n;
                e && (n = t.find(e.target), n && n.length ? i(n, e) : o(t, e), r = !0);
            }), r && t.on("show.bs.modal.dialog-error", function() {
                e(t);
            });
        }
        function a(t, e) {
            this.promise = t, this.disabled = [], this.handle = e;
        }
        function s(t) {
            var e = t.data("dialog-wait");
            t.data("dialog-wait", null), t.find(".dialog-wait-ct").remove(), t.find(".btn").off(".dialog-wait"), 
            t.off(".dialog-wait"), e && e.disabled.forEach(function(t) {
                t.removeAttr("disabled");
            });
        }
        function c(t, e, n) {
            function i() {
                var n, i = t.data("dialog-wait");
                i && i.promise === e && (s(t), n = e.state(), f || "resolved" == n && i.handle ? t.modal("hide") : "rejected" == n && i.handle && r(t, [ arguments[0] ]));
            }
            function o(n) {
                var i = t.data("dialog-wait");
                i && i.promise === e && ("string" != typeof n && (n = ""), l.text(n));
            }
            if (s(t), !e) return n && t.modal("hide"), t;
            n && r(t, []);
            var c = v("<div class='dialog-wait-ct pull-left'>");
            v("<div class='spinner spinner-sm'>").appendTo(c);
            var l = v("<span>").appendTo(c);
            t.find(".modal-footer button").first().before(c);
            var d = new a(e, n);
            t.data("dialog-wait", d);
            var u = e.cancel || e.close, f = !1, p = t.find(".form-control").add(".btn", t);
            return u && (p = p.not("[data-dismiss]").not(".btn-cancel")), p.each(function() {
                var t = v(this);
                t.attr("disabled") || (d.disabled.push(t), t.attr("disabled", "disabled"));
            }), t.find(".btn[data-dismiss], .btn-cancel").on("click.dialog-wait", function() {
                return f = !0, u && u.apply(e), !1;
            }), t.on("hide.bs.modal.dialog-wait", function() {
                s(t);
            }), e.always(i).progress(o), t;
        }
        function l(e) {
            var n = _.gettext || function(t) {
                return t;
            };
            return e = e.find(".btn-onoff-ct").andSelf().filter(".btn-onoff-ct"), e.each(function(e, i) {
                var o, r, a, s = v(i).attr("data-toggle", "buttons").addClass("btn-group"), c = s.onoff("value"), l = s.find(".btn"), d = s.find("input").first().attr("name") || t();
                for (o = l.length; o < 2; o++) r = v('<input type="radio" autocomplete="off">'), 
                a = document.createTextNode(n(0 === o ? "On" : "Off")), s.append(v('<label class="btn">').append(r, a)), 
                l = null;
                l = l || s.find(".btn"), l.find("input").attr("name", d), u(s, !!c);
            }), e;
        }
        function d(t) {
            return t.find(".btn").first().hasClass("active");
        }
        function u(t, e) {
            return t.each(function(t, n) {
                var i = v(n).find(".btn");
                i.first().toggleClass("active", !!e).find("input").prop("checked", !!e), i.last().toggleClass("active", !e).find("input").prop("checked", !e);
            });
        }
        function f(t, e, n, i) {
            var o = 0;
            i > n ? o = 1 : i < 0 || isNaN(i) ? o = 0 : !isNaN(n) && n > 0 && i >= 0 && (o = i / n), 
            v(e).css("width", 100 * o + "%").next("div").css("margin-left", v(e).css("width")), 
            t.value = o;
        }
        function p(t) {
            f(t, v(t).children("div.slider-bar").first()[0], 1, t.value);
        }
        function h(t) {
            v(t).toggleClass("slider-warning", t.offsetWidth < t.scrollWidth);
        }
        function g(t) {
            v(t).attr("unselectable", "on"), Object.defineProperty(t, "value", {
                get: function() {
                    return parseFloat(this.getAttribute("value"));
                },
                set: function(t) {
                    var e = String(t);
                    e != this.getAttribute("value") && this.setAttribute("value", t);
                }
            }), Object.defineProperty(t, "disabled", {
                get: function() {
                    return !!this.hasAttribute("disabled") && "false" != this.getAttribute("disabled").toLowerCase();
                },
                set: function(t) {
                    this.setAttribute("disabled", t ? "true" : "false");
                }
            }), p(t), h(t), v(t).on("change", function() {
                p(t), v(t).toggleClass("slider-disabled", t.disabled);
            }), t.disabled && v(t).addClass("slider-disabled"), v(t).on("mousedown", function(e) {
                if (t.disabled) return !0;
                var n, i = v(t).offset().left;
                if (v(e.target).hasClass("slider-thumb")) {
                    var o = e.offsetX || e.clientX - v(e.target).offset().left;
                    i += o - v(e.target).outerWidth() / 2, n = v(e.target).parent()[0];
                } else n = v(t).children("div.slider-bar").first()[0], f(t, n, v(t).width(), e.pageX - i), 
                v(t).trigger("change", [ t.value ]), h(t);
                return v(document).on("mousemove.slider", function(e) {
                    return f(t, n, v(t).width(), e.pageX - i), v(t).trigger("change", [ t.value ]), 
                    h(t), !1;
                }).on("mouseup.slider", function(t) {
                    return v(document).off("mousemove.slider").off("mouseup.slider"), !1;
                }), !1;
            });
        }
        function m() {
            v("div.slider").each(function() {
                g(this);
            });
        }
        var v = n(2), _ = n(3), x = 0;
        v.fn.dialog = function(t) {
            return "failure" === t ? r(this, Array.prototype.slice.call(arguments, 1)) : "wait" === t ? c(this, arguments[1]) : "promise" === t ? c(this, arguments[1], !0) : void console.warn("unknown dialog action: " + t);
        }, window.addEventListener("hashchange", function() {
            v(".modal").modal("hide");
        }), v.fn.onoff = function(t) {
            return 0 === arguments.length || "refresh" == t ? l(this) : "value" === t ? 1 === arguments.length ? d(this) : u(this, arguments[1]) : "disabled" == t ? this.find(".btn").toggleClass("disabled", arguments[1]) : void console.warn("unknown switch action: " + t);
        }, v.fn.slider = function(t) {
            var e = this;
            return 0 === arguments.length || "refresh" == t ? (e.each(function() {
                g(this);
            }), e) : void console.warn("unknown slider action: " + t);
        }, v(document).ready(m), v.fn.update_privileged = function(t, e, n) {
            var i = t.allowed !== !1, o = this;
            return o.each(function() {
                var t = "allowed-title";
                "undefined" != typeof v(this).data(t) && v(this).data(t) !== !1 || v(this).data(t, v(this).attr("title") || "");
                var o = {
                    html: !0
                };
                n && (o.placement = n), v(this).tooltip(o), v(this).hasClass("disabled") === i && (v(this).toggleClass("disabled", !i).attr("data-original-title", null), 
                i ? v(this).attr("title", v(this).data(t)) : v(this).attr("title", e), v(this).tooltip("fixTitle"));
            }), o;
        };
    }();
}, function(t, e) {}, , , , function(t, e) {}, , function(t, e) {}, , function(t, e) {}, , function(t, e) {} ]);
//# sourceMappingURL=network.min.js.map